(function(global) {

global.__DEV__ = true;

global.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

'use strict';

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

global.require = _require;
global.__d = define;

var modules = Object.create(null);
if (__DEV__) {
  var verboseNamesToModuleIds = Object.create(null);
}

function define(factory, moduleId, dependencyMap) {
  if (moduleId in modules) {
    return;
  }
  modules[moduleId] = {
    dependencyMap: dependencyMap,
    exports: undefined,
    factory: factory,
    hasError: false,
    isInitialized: false };

  if (__DEV__) {
    modules[moduleId].hot = createHotReloadingObject();

    var verboseName = arguments[3];
    if (verboseName) {
      modules[moduleId].verboseName = verboseName;
      verboseNamesToModuleIds[verboseName] = moduleId;
    }
  }
}

function _require(moduleId) {
  if (__DEV__ && typeof moduleId === 'string') {
    var verboseName = moduleId;
    moduleId = verboseNamesToModuleIds[verboseName];
    if (moduleId == null) {
      throw new Error('Unknown named module: \'' + verboseName + '\'');
    } else {
      console.warn('Requiring module \'' + verboseName + '\' by name is only supported for ' + 'debugging purposes and will BREAK IN PRODUCTION!');
    }
  }

  var moduleIdReallyIsNumber = moduleId;
  var module = modules[moduleIdReallyIsNumber];
  return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
}

_require.async = function (moduleId) {
  return Promise.resolve().then(function () {
    return _require(moduleId);
  });
};

var inGuard = false;
function guardedLoadModule(moduleId, module) {
  if (!inGuard && global.ErrorUtils) {
    inGuard = true;
    var returnValue = void 0;
    try {
      returnValue = loadModuleImplementation(moduleId, module);
    } catch (e) {
      global.ErrorUtils.reportFatalError(e);
    }
    inGuard = false;
    return returnValue;
  } else {
    return loadModuleImplementation(moduleId, module);
  }
}

var ID_MASK_SHIFT = 16;
var LOCAL_ID_MASK = ~0 >>> ID_MASK_SHIFT;

function loadModuleImplementation(moduleId, module) {
  var nativeRequire = global.nativeRequire;
  if (!module && nativeRequire) {
    var bundleId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    nativeRequire(localId, bundleId);
    module = modules[moduleId];
  }

  if (!module) {
    throw unknownModuleError(moduleId);
  }

  if (module.hasError) {
    throw moduleThrewError(moduleId, module.error);
  }

  if (__DEV__) {
    var Systrace = _require.Systrace;
  }

  module.isInitialized = true;
  var exports = module.exports = {};var _module = module;var factory = _module.factory,
      dependencyMap = _module.dependencyMap;
  try {
    if (__DEV__) {
      Systrace.beginEvent('JS_require_' + (module.verboseName || moduleId));
    }

    var moduleObject = { exports: exports };
    if (__DEV__ && module.hot) {
      moduleObject.hot = module.hot;
    }

    factory(global, _require, moduleObject, exports, dependencyMap);

    if (!__DEV__) {
      module.factory = undefined;
      module.dependencyMap = undefined;
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return module.exports = moduleObject.exports;
  } catch (e) {
    module.hasError = true;
    module.error = e;
    module.isInitialized = false;
    module.exports = undefined;
    throw e;
  }
}

function unknownModuleError(id) {
  var message = 'Requiring unknown module "' + id + '".';
  if (__DEV__) {
    message += 'If you are sure the module is there, try restarting Metro Bundler. ' + 'You may also want to run `yarn`, or `npm install` (depending on your environment).';
  }
  return Error(message);
}

function moduleThrewError(id, error) {
  var displayName = __DEV__ && modules[id] && modules[id].verboseName || id;
  return Error('Requiring module "' + displayName + '", which threw an exception: ' + error);
}

if (__DEV__) {
  _require.Systrace = { beginEvent: function beginEvent() {}, endEvent: function endEvent() {} };

  _require.getModules = function () {
    return modules;
  };

  var createHotReloadingObject = function createHotReloadingObject() {
    var hot = {
      acceptCallback: null,
      accept: function accept(callback) {
        hot.acceptCallback = callback;
      } };

    return hot;
  };

  var acceptAll = function acceptAll(dependentModules, inverseDependencies) {
    if (!dependentModules || dependentModules.length === 0) {
      return true;
    }

    var notAccepted = dependentModules.filter(function (module) {
      return !accept(module, undefined, inverseDependencies);
    });

    var parents = [];
    for (var i = 0; i < notAccepted.length; i++) {
      if (inverseDependencies[notAccepted[i]].length === 0) {
        return false;
      }

      parents.push.apply(parents, _toConsumableArray(inverseDependencies[notAccepted[i]]));
    }

    return acceptAll(parents, inverseDependencies);
  };

  var accept = function accept(id, factory, inverseDependencies) {
    var mod = modules[id];

    if (!mod && factory) {
      define(factory, id);
      return true;
    }var hot = mod.hot;
    if (!hot) {
      console.warn('Cannot accept module because Hot Module Replacement ' + 'API was not installed.');

      return false;
    }

    if (factory) {
      mod.factory = factory;
    }
    mod.hasError = false;
    mod.isInitialized = false;
    _require(id);

    if (hot.acceptCallback) {
      hot.acceptCallback();
      return true;
    } else {
      if (!inverseDependencies) {
        throw new Error('Undefined `inverseDependencies`');
      }

      return acceptAll(inverseDependencies[id], inverseDependencies);
    }
  };

  global.__accept = accept;
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

Object.assign = function (target, sources) {
  if (__DEV__) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    if (typeof target !== 'object' && typeof target !== 'function') {
      throw new TypeError('In this environment the target of assign MUST be an object. ' + 'This error is a performance optimization and not spec compliant.');
    }
  }

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    if (__DEV__) {
      if (typeof nextSource !== 'object' && typeof nextSource !== 'function') {
        throw new TypeError('In this environment the sources for assign MUST be an object. ' + 'This error is a performance optimization and not spec compliant.');
      }
    }

    for (var key in nextSource) {
      if (__DEV__) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        if (!hasOwnProperty.call(nextSource, key)) {
          throw new TypeError('One of the sources for assign has an enumerable key on the ' + 'prototype chain. Are you trying to assign a prototype property? ' + 'We don\'t allow it, as this is an edge case that we do not support. ' + 'This error is a performance optimization and not spec compliant.');
        }
      }
      target[key] = nextSource[key];
    }
  }

  return target;
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
var inspect = function () {

  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    return formatValue(ctx, obj, opts.depth);
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');

    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  function isArray(ar) {
    return Array.isArray(ar);
  }

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }

  function isNull(arg) {
    return arg === null;
  }

  function isNullOrUndefined(arg) {
    return arg == null;
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isString(arg) {
    return typeof arg === 'string';
  }

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }

  function isUndefined(arg) {
    return arg === void 0;
  }

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  return inspect;
}();

var OBJECT_COLUMN_NAME = '(index)';
var LOG_LEVELS = {
  trace: 0,
  info: 1,
  warn: 2,
  error: 3
};
var INSPECTOR_LEVELS = [];
INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';

var INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;

if (global.nativeLoggingHook) {
  function getNativeLogFunction(level) {
    return function () {
      var str = void 0;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, { depth: 10 });
        }).join(', ');
      }

      var logLevel = level;
      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }
      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  }

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];

    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    }

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var originalConsole = global.console;
  global.console = {
    error: getNativeLogFunction(LOG_LEVELS.error),
    info: getNativeLogFunction(LOG_LEVELS.info),
    log: getNativeLogFunction(LOG_LEVELS.info),
    warn: getNativeLogFunction(LOG_LEVELS.warn),
    trace: getNativeLogFunction(LOG_LEVELS.trace),
    debug: getNativeLogFunction(LOG_LEVELS.trace),
    table: consoleTablePolyfill
  };

  if (__DEV__ && originalConsole) {
    var descriptor = Object.getOwnPropertyDescriptor(global, 'console');
    if (descriptor) {
      Object.defineProperty(global, 'originalConsole', descriptor);
    }

    Object.keys(console).forEach(function (methodName) {
      var reactNativeMethod = console[methodName];
      if (originalConsole[methodName]) {
        console[methodName] = function () {
          originalConsole[methodName].apply(originalConsole, arguments);
          reactNativeMethod.apply(console, arguments);
        };
      }
    });
  }
} else if (!global.console) {
  var log = global.print || function consoleLoggingStub() {};
  global.console = {
    error: log,
    info: log,
    log: log,
    warn: log,
    trace: log,
    debug: log,
    table: log
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var _inGuard = 0;

var _globalHandler = function onError(e) {
  throw e;
};

var ErrorUtils = {
  setGlobalHandler: function setGlobalHandler(fun) {
    _globalHandler = fun;
  },
  getGlobalHandler: function getGlobalHandler() {
    return _globalHandler;
  },
  reportError: function reportError(error) {
    _globalHandler && _globalHandler(error);
  },
  reportFatalError: function reportFatalError(error) {
    _globalHandler && _globalHandler(error, true);
  },
  applyWithGuard: function applyWithGuard(fun, context, args) {
    try {
      _inGuard++;
      return fun.apply(context, args);
    } catch (e) {
      ErrorUtils.reportError(e);
    } finally {
      _inGuard--;
    }
    return null;
  },
  applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
    if (ErrorUtils.inGuard()) {
      return fun.apply(context, args);
    } else {
      ErrorUtils.applyWithGuard(fun, context, args);
    }
    return null;
  },
  inGuard: function inGuard() {
    return _inGuard;
  },
  guard: function guard(fun, name, context) {
    if (typeof fun !== 'function') {
      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
      return null;
    }
    name = name || fun.name || '<generated guard>';
    function guarded() {
      return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
    }

    return guarded;
  }
};

global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (Number.EPSILON === undefined) {
  Object.defineProperty(Number, 'EPSILON', {
    value: Math.pow(2, -52)
  });
}
if (Number.MAX_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
    value: Math.pow(2, 53) - 1
  });
}
if (Number.MIN_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
    value: -(Math.pow(2, 53) - 1)
  });
}
if (!Number.isNaN) {
  var globalIsNaN = global.isNaN;
  Object.defineProperty(Number, 'isNaN', {
    configurable: true,
    enumerable: false,
    value: function isNaN(value) {
      return typeof value === 'number' && globalIsNaN(value);
    },
    writable: true
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
    var start = Math.min(Math.max(pos, 0), string.length);
    return string.indexOf(String(search), pos) === start;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var stringLength = string.length;
    var searchString = String(search);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
    var end = Math.min(Math.max(pos, 0), stringLength);
    var start = end - searchString.length;
    if (start < 0) {
      return false;
    }
    return string.lastIndexOf(searchString, start) === start;
  };
}

if (!String.prototype.repeat) {
  String.prototype.repeat = function (count) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    count = Number(count) || 0;
    if (count < 0 || count === Infinity) {
      throw RangeError();
    }
    if (count === 1) {
      return string;
    }
    var result = '';
    while (count) {
      if (count & 1) {
        result += string;
      }
      if (count >>= 1) {
        string += string;
      }
    }
    return result;
  };
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}

if (!String.prototype.codePointAt) {
  String.prototype.codePointAt = function (position) {
    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var size = string.length;

    var index = position ? Number(position) : 0;
    if (Number.isNaN(index)) {
      index = 0;
    }

    if (index < 0 || index >= size) {
      return undefined;
    }

    var first = string.charCodeAt(index);
    var second;
    if (first >= 0xd800 && first <= 0xdbff && size > index + 1) {
        second = string.charCodeAt(index + 1);
        if (second >= 0xdc00 && second <= 0xdfff) {
          return (first - 0xd800) * 0x400 + second - 0xdc00 + 0x10000;
        }
      }
    return first;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
function findIndex(predicate, context) {
  if (this == null) {
    throw new TypeError('Array.prototype.findIndex called on null or undefined');
  }
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate must be a function');
  }
  var list = Object(this);
  var length = list.length >>> 0;
  for (var i = 0; i < length; i++) {
    if (predicate.call(context, list[i], i, list)) {
      return i;
    }
  }
  return -1;
}

if (!Array.prototype.findIndex) {
  Object.defineProperty(Array.prototype, 'findIndex', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: findIndex
  });
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(predicate, context) {
      if (this == null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      var index = findIndex.call(this, predicate, context);
      return index === -1 ? undefined : this[index];
    }
  });
}

if (!Array.prototype.includes) {
  Object.defineProperty(Array.prototype, 'includes', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(searchElement) {
      var O = Object(this);
      var len = parseInt(O.length) || 0;
      if (len === 0) {
        return false;
      }
      var n = parseInt(arguments[1]) || 0;
      var k;
      if (n >= 0) {
        k = n;
      } else {
        k = len + n;
        if (k < 0) {
          k = 0;
        }
      }
      var currentElement;
      while (k < len) {
        currentElement = O[k];
        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
          return true;
        }
        k++;
      }
      return false;
    }
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
if (!Array.from) {
  Array.from = function (arrayLike) {
    if (arrayLike == null) {
      throw new TypeError('Object is null or undefined');
    }

    var mapFn = arguments[1];
    var thisArg = arguments[2];

    var C = this;
    var items = Object(arrayLike);
    var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
    var mapping = typeof mapFn === 'function';
    var usingIterator = typeof items[symbolIterator] === 'function';
    var key = 0;
    var ret;
    var value;

    if (usingIterator) {
      ret = typeof C === 'function' ? new C() : [];
      var it = items[symbolIterator]();
      var next;

      while (!(next = it.next()).done) {
        value = next.value;

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    }

    var len = items.length;
    if (isNaN(len) || len < 0) {
      len = 0;
    }

    ret = typeof C === 'function' ? new C(len) : new Array(len);

    while (key < len) {
      value = items[key];

      if (mapping) {
        value = mapFn.call(thisArg, value, key);
      }

      ret[key] = value;

      key += 1;
    }

    ret.length = key;
    return ret;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var babelHelpers = global.babelHelpers = {};

babelHelpers.typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

babelHelpers.createRawReactElement = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 0xeac7;
  return function createRawReactElement(type, key, props) {
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

babelHelpers.createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

babelHelpers.defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ('value' in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }
  return obj;
};

babelHelpers.defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

babelHelpers._extends = babelHelpers.extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

babelHelpers.get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

babelHelpers.interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

babelHelpers.objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

babelHelpers.possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

babelHelpers.slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

babelHelpers.taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

babelHelpers.toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

babelHelpers.toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
__d(/* TalkPresidential/index.js */function(global, require, module, exports) {var _reactNative = require(12            ); // 12 = react-native

var _App = require(341          ); // 341 = ./build/App

var _App2 = babelHelpers.interopRequireDefault(_App);

_reactNative.AppRegistry.registerComponent('TalkPresidential', function () {
  return _App2.default;
});
}, 0, null, "TalkPresidential/index.js");
__d(/* react-native-implementation */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ReactNative = {
  get AccessibilityInfo() {
    return require(14                 ); // 14 = AccessibilityInfo
  },
  get ActivityIndicator() {
    return require(129                ); // 129 = ActivityIndicator
  },
  get ART() {
    return require(181             ); // 181 = ReactNativeART
  },
  get Button() {
    return require(187     ); // 187 = Button
  },
  get CheckBox() {
    return require(242       ); // 242 = CheckBox
  },
  get DatePickerIOS() {
    return require(243            ); // 243 = DatePickerIOS
  },
  get DrawerLayoutAndroid() {
    return require(244                  ); // 244 = DrawerLayoutAndroid
  },
  get FlatList() {
    return require(245       ); // 245 = FlatList
  },
  get Image() {
    return require(226    ); // 226 = Image
  },
  get ImageBackground() {
    return require(258              ); // 258 = ImageBackground
  },
  get ImageEditor() {
    return require(260          ); // 260 = ImageEditor
  },
  get ImageStore() {
    return require(261         ); // 261 = ImageStore
  },
  get KeyboardAvoidingView() {
    return require(262                   ); // 262 = KeyboardAvoidingView
  },
  get ListView() {
    return require(247       ); // 247 = ListView
  },
  get MaskedViewIOS() {
    return require(264            ); // 264 = MaskedViewIOS
  },
  get Modal() {
    return require(265    ); // 265 = Modal
  },
  get NavigatorIOS() {
    return require(287           ); // 287 = NavigatorIOS
  },
  get Picker() {
    return require(289     ); // 289 = Picker
  },
  get PickerIOS() {
    return require(290        ); // 290 = PickerIOS
  },
  get ProgressBarAndroid() {
    return require(132                 ); // 132 = ProgressBarAndroid
  },
  get ProgressViewIOS() {
    return require(292              ); // 292 = ProgressViewIOS
  },
  get SafeAreaView() {
    return require(285           ); // 285 = SafeAreaView
  },
  get ScrollView() {
    return require(228         ); // 228 = ScrollView
  },
  get SectionList() {
    return require(293          ); // 293 = SectionList
  },
  get SegmentedControlIOS() {
    return require(295                  ); // 295 = SegmentedControlIOS
  },
  get Slider() {
    return require(296     ); // 296 = Slider
  },
  get SnapshotViewIOS() {
    return require(297              ); // 297 = SnapshotViewIOS
  },
  get Switch() {
    return require(298     ); // 298 = Switch
  },
  get RefreshControl() {
    return require(252             ); // 252 = RefreshControl
  },
  get StatusBar() {
    return require(299        ); // 299 = StatusBar
  },
  get SwipeableFlatList() {
    return require(300                ); // 300 = SwipeableFlatList
  },
  get SwipeableListView() {
    return require(304                ); // 304 = SwipeableListView
  },
  get TabBarIOS() {
    return require(306        ); // 306 = TabBarIOS
  },
  get Text() {
    return require(188   ); // 188 = Text
  },
  get TextInput() {
    return require(308        ); // 308 = TextInput
  },
  get ToastAndroid() {
    return require(314           ); // 314 = ToastAndroid
  },
  get ToolbarAndroid() {
    return require(315             ); // 315 = ToolbarAndroid
  },
  get Touchable() {
    return require(189        ); // 189 = Touchable
  },
  get TouchableHighlight() {
    return require(276                 ); // 276 = TouchableHighlight
  },
  get TouchableNativeFeedback() {
    return require(196                      ); // 196 = TouchableNativeFeedback
  },
  get TouchableOpacity() {
    return require(197               ); // 197 = TouchableOpacity
  },
  get TouchableWithoutFeedback() {
    return require(240                       ); // 240 = TouchableWithoutFeedback
  },
  get View() {
    return require(156   ); // 156 = View
  },
  get ViewPagerAndroid() {
    return require(316               ); // 316 = ViewPagerAndroid
  },
  get VirtualizedList() {
    return require(253              ); // 253 = VirtualizedList
  },
  get WebView() {
    return require(317      ); // 317 = WebView
  },

  get ActionSheetIOS() {
    return require(318             ); // 318 = ActionSheetIOS
  },
  get Alert() {
    return require(105    ); // 105 = Alert
  },
  get AlertIOS() {
    return require(106       ); // 106 = AlertIOS
  },
  get Animated() {
    return require(198       ); // 198 = Animated
  },
  get AppRegistry() {
    return require(319          ); // 319 = AppRegistry
  },
  get AppState() {
    return require(121       ); // 121 = AppState
  },
  get AsyncStorage() {
    return require(325           ); // 325 = AsyncStorage
  },
  get BackAndroid() {
    return require(326          ); // 326 = BackAndroid
  },
  get BackHandler() {
    return require(324          ); // 324 = BackHandler
  },
  get CameraRoll() {
    return require(327         ); // 327 = CameraRoll
  },
  get Clipboard() {
    return require(328        ); // 328 = Clipboard
  },
  get DatePickerAndroid() {
    return require(329                ); // 329 = DatePickerAndroid
  },
  get DeviceInfo() {
    return require(138         ); // 138 = DeviceInfo
  },
  get Dimensions() {
    return require(137         ); // 137 = Dimensions
  },
  get Easing() {
    return require(223     ); // 223 = Easing
  },
  get findNodeHandle() {
    return require(21           ).findNodeHandle; // 21 = ReactNative
  },
  get I18nManager() {
    return require(286          ); // 286 = I18nManager
  },
  get ImagePickerIOS() {
    return require(330             ); // 330 = ImagePickerIOS
  },
  get InteractionManager() {
    return require(206                 ); // 206 = InteractionManager
  },
  get Keyboard() {
    return require(232       ); // 232 = Keyboard
  },
  get LayoutAnimation() {
    return require(263              ); // 263 = LayoutAnimation
  },
  get Linking() {
    return require(331      ); // 331 = Linking
  },
  get NativeEventEmitter() {
    return require(90                  ); // 90 = NativeEventEmitter
  },
  get NetInfo() {
    return require(332      ); // 332 = NetInfo
  },
  get PanResponder() {
    return require(302           ); // 302 = PanResponder
  },
  get PermissionsAndroid() {
    return require(109                 ); // 109 = PermissionsAndroid
  },
  get PixelRatio() {
    return require(136         ); // 136 = PixelRatio
  },
  get PushNotificationIOS() {
    return require(333                  ); // 333 = PushNotificationIOS
  },
  get Settings() {
    return require(334       ); // 334 = Settings
  },
  get Share() {
    return require(335    ); // 335 = Share
  },
  get StatusBarIOS() {
    return require(336           ); // 336 = StatusBarIOS
  },
  get StyleSheet() {
    return require(135         ); // 135 = StyleSheet
  },
  get Systrace() {
    return require(19        ); // 19 = Systrace
  },
  get TimePickerAndroid() {
    return require(337                ); // 337 = TimePickerAndroid
  },
  get TVEventHandler() {
    return require(193             ); // 193 = TVEventHandler
  },
  get UIManager() {
    return require(54         ); // 54 = UIManager
  },
  get unstable_batchedUpdates() {
    return require(21           ).unstable_batchedUpdates; // 21 = ReactNative
  },
  get Vibration() {
    return require(338        ); // 338 = Vibration
  },
  get VibrationIOS() {
    return require(339           ); // 339 = VibrationIOS
  },

  get DeviceEventEmitter() {
    return require(91                     ); // 91 = RCTDeviceEventEmitter
  },
  get NativeAppEventEmitter() {
    return require(113                       ); // 113 = RCTNativeAppEventEmitter
  },
  get NativeModules() {
    return require(15             ); // 15 = NativeModules
  },
  get Platform() {
    return require(53        ); // 53 = Platform
  },
  get processColor() {
    return require(118           ); // 118 = processColor
  },
  get requireNativeComponent() {
    return require(170                     ); // 170 = requireNativeComponent
  },
  get takeSnapshot() {
    return require(340           ); // 340 = takeSnapshot
  },

  get ColorPropType() {
    return require(130            ); // 130 = ColorPropType
  },
  get EdgeInsetsPropType() {
    return require(159                 ); // 159 = EdgeInsetsPropType
  },
  get PointPropType() {
    return require(229            ); // 229 = PointPropType
  },
  get ViewPropTypes() {
    return require(158            ); // 158 = ViewPropTypes
  },

  get Navigator() {
    invariant(false, 'Navigator is deprecated and has been removed from this package. It can now be installed ' + 'and imported from `react-native-deprecated-custom-components` instead of `react-native`. ' + 'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');
  }
};

module.exports = ReactNative;
}, 12, null, "react-native-implementation");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 13, null, "fbjs/lib/invariant.js");
__d(/* AccessibilityInfo */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules
var Promise = require(66       ); // 66 = Promise
var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter

var AccessibilityManager = NativeModules.AccessibilityManager;

var VOICE_OVER_EVENT = 'voiceOverDidChange';
var ANNOUNCEMENT_DID_FINISH_EVENT = 'announcementDidFinish';

var _subscriptions = new Map();

var AccessibilityInfo = {
  fetch: function fetch() {
    return new Promise(function (resolve, reject) {
      AccessibilityManager.getCurrentVoiceOverState(resolve, reject);
    });
  },

  addEventListener: function addEventListener(eventName, handler) {
    var listener;

    if (eventName === 'change') {
      listener = RCTDeviceEventEmitter.addListener(VOICE_OVER_EVENT, handler);
    } else if (eventName === 'announcementFinished') {
      listener = RCTDeviceEventEmitter.addListener(ANNOUNCEMENT_DID_FINISH_EVENT, handler);
    }

    _subscriptions.set(handler, listener);
    return {
      remove: AccessibilityInfo.removeEventListener.bind(null, eventName, handler)
    };
  },

  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {
    AccessibilityManager.setAccessibilityFocus(reactTag);
  },

  announceForAccessibility: function announceForAccessibility(announcement) {
    AccessibilityManager.announceForAccessibility(announcement);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  }

};

module.exports = AccessibilityInfo;
}, 14, null, "AccessibilityInfo");
__d(/* NativeModules */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function genModule(config, moduleID) {
  if (!config) {
    return null;
  }

  var _config = babelHelpers.slicedToArray(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];

  invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), 'Module name prefixes should\'ve been stripped by the native side ' + 'but wasn\'t for ' + moduleName);

  if (!constants && !methods) {
    return { name: moduleName };
  }

  var module = {};
  methods && methods.forEach(function (methodName, methodID) {
    var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
    var isSync = syncMethods && arrayContains(syncMethods, methodID);
    invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
    var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
    module[methodName] = genMethod(moduleID, methodID, methodType);
  });
  babelHelpers.extends(module, constants);

  if (__DEV__) {
    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);
  }

  return { name: moduleName, module: module };
}

global.__fbGenNativeModule = genModule;

function loadModule(name, moduleID) {
  invariant(global.nativeRequireModuleConfig, 'Can\'t lazily create module without nativeRequireModuleConfig');
  var config = global.nativeRequireModuleConfig(name);
  var info = genModule(config, moduleID);
  return info && info.module;
}

function genMethod(moduleID, methodID, type) {
  var fn = null;
  if (type === 'promise') {
    fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return new Promise(function (resolve, reject) {
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
          return resolve(data);
        }, function (errorData) {
          return reject(createErrorFromErrorData(errorData));
        });
      });
    };
  } else if (type === 'sync') {
    fn = function fn() {
      if (__DEV__) {
        invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\n\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');
      }

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return global.nativeCallSyncHook(moduleID, methodID, args);
    };
  } else {
    fn = function fn() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastArg = args.length > 0 ? args[args.length - 1] : null;
      var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
      var hasSuccessCallback = typeof lastArg === 'function';
      var hasErrorCallback = typeof secondLastArg === 'function';
      hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
      var onSuccess = hasSuccessCallback ? lastArg : null;
      var onFail = hasErrorCallback ? secondLastArg : null;
      var callbackCount = hasSuccessCallback + hasErrorCallback;
      args = args.slice(0, args.length - callbackCount);
      BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
    };
  }
  fn.type = type;
  return fn;
}

function arrayContains(array, value) {
  return array.indexOf(value) !== -1;
}

function createErrorFromErrorData(errorData) {
  var _ref = errorData || {},
      message = _ref.message,
      extraErrorInfo = babelHelpers.objectWithoutProperties(_ref, ['message']);

  var error = new Error(message);
  error.framesToPop = 1;
  return babelHelpers.extends(error, extraErrorInfo);
}

var NativeModules = {};
if (global.nativeModuleProxy) {
  NativeModules = global.nativeModuleProxy;
} else {
  var bridgeConfig = global.__fbBatchedBridgeConfig;
  invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

  var defineLazyObjectProperty = require(55                        ); // 55 = defineLazyObjectProperty
  (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
    var info = genModule(config, moduleID);
    if (!info) {
      return;
    }

    if (info.module) {
      NativeModules[info.name] = info.module;
    } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
  });
}

module.exports = NativeModules;
}, 15, null, "NativeModules");
__d(/* BatchedBridge */function(global, require, module, exports) {
'use strict';

var MessageQueue = require(17            ); // 17 = MessageQueue
var BatchedBridge = new MessageQueue();

Object.defineProperty(global, '__fbBatchedBridge', {
  configurable: true,
  value: BatchedBridge
});

module.exports = BatchedBridge;
}, 16, null, "BatchedBridge");
__d(/* MessageQueue */function(global, require, module, exports) {

'use strict';

var ErrorUtils = require(18          ); // 18 = ErrorUtils
var Systrace = require(19        ); // 19 = Systrace

var deepFreezeAndThrowOnMutationInDev = require(56                                 ); // 56 = deepFreezeAndThrowOnMutationInDev
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var stringifySafe = require(33             ); // 33 = stringifySafe

var TO_JS = 0;
var TO_NATIVE = 1;

var MODULE_IDS = 0;
var METHOD_IDS = 1;
var PARAMS = 2;
var MIN_TIME_BETWEEN_FLUSHES_MS = 5;

var TRACE_TAG_REACT_APPS = 1 << 17;

var DEBUG_INFO_LIMIT = 32;

var JSTimers = null;

var MessageQueue = function () {
  function MessageQueue() {
    babelHelpers.classCallCheck(this, MessageQueue);

    this._lazyCallableModules = {};
    this._queue = [[], [], [], 0];
    this._successCallbacks = [];
    this._failureCallbacks = [];
    this._callID = 0;
    this._lastFlush = 0;
    this._eventLoopStartTime = new Date().getTime();

    if (__DEV__) {
      this._debugInfo = {};
      this._remoteModuleTable = {};
      this._remoteMethodTable = {};
    }

    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
    this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
    this.flushedQueue = this.flushedQueue.bind(this);
    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
  }

  babelHelpers.createClass(MessageQueue, [{
    key: 'callFunctionReturnFlushedQueue',
    value: function callFunctionReturnFlushedQueue(module, method, args) {
      var _this = this;

      this.__guard(function () {
        _this.__callFunction(module, method, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'callFunctionReturnResultAndFlushedQueue',
    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
      var _this2 = this;

      var result = void 0;
      this.__guard(function () {
        result = _this2.__callFunction(module, method, args);
      });

      return [result, this.flushedQueue()];
    }
  }, {
    key: 'invokeCallbackAndReturnFlushedQueue',
    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
      var _this3 = this;

      this.__guard(function () {
        _this3.__invokeCallback(cbID, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'flushedQueue',
    value: function flushedQueue() {
      var _this4 = this;

      this.__guard(function () {
        _this4.__callImmediates();
      });

      var queue = this._queue;
      this._queue = [[], [], [], this._callID];
      return queue[0].length ? queue : null;
    }
  }, {
    key: 'getEventLoopRunningTime',
    value: function getEventLoopRunningTime() {
      return new Date().getTime() - this._eventLoopStartTime;
    }
  }, {
    key: 'registerCallableModule',
    value: function registerCallableModule(name, module) {
      this._lazyCallableModules[name] = function () {
        return module;
      };
    }
  }, {
    key: 'registerLazyCallableModule',
    value: function registerLazyCallableModule(name, factory) {
      var module = void 0;
      var getValue = factory;
      this._lazyCallableModules[name] = function () {
        if (getValue) {
          module = getValue();
          getValue = null;
        }
        return module;
      };
    }
  }, {
    key: 'getCallableModule',
    value: function getCallableModule(name) {
      var getValue = this._lazyCallableModules[name];
      return getValue ? getValue() : null;
    }
  }, {
    key: 'enqueueNativeCall',
    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
      if (onFail || onSucc) {
        if (__DEV__) {
          this._debugInfo[this._callID] = [moduleID, methodID];
          if (this._callID > DEBUG_INFO_LIMIT) {
            delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];
          }
        }

        onFail && params.push(this._callID << 1);

        onSucc && params.push(this._callID << 1 | 1);
        this._successCallbacks[this._callID] = onSucc;
        this._failureCallbacks[this._callID] = onFail;
      }

      if (__DEV__) {
        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);
      }
      this._callID++;

      this._queue[MODULE_IDS].push(moduleID);
      this._queue[METHOD_IDS].push(methodID);

      if (__DEV__) {
        JSON.stringify(params);

        deepFreezeAndThrowOnMutationInDev(params);
      }
      this._queue[PARAMS].push(params);

      var now = new Date().getTime();
      if (global.nativeFlushQueueImmediate && (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS || this._inCall === 0)) {
        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        this._lastFlush = now;
        global.nativeFlushQueueImmediate(queue);
      }
      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);
      if (__DEV__ && this.__spy && isFinite(moduleID)) {
        this.__spy({
          type: TO_NATIVE,
          module: this._remoteModuleTable[moduleID],
          method: this._remoteMethodTable[moduleID][methodID],
          args: params
        });
      } else if (this.__spy) {
        this.__spy({
          type: TO_NATIVE,
          module: moduleID + '',
          method: methodID,
          args: params
        });
      }
    }
  }, {
    key: 'createDebugLookup',
    value: function createDebugLookup(moduleID, name, methods) {
      if (__DEV__) {
        this._remoteModuleTable[moduleID] = name;
        this._remoteMethodTable[moduleID] = methods;
      }
    }
  }, {
    key: '__guard',
    value: function __guard(fn) {
      this._inCall++;
      try {
        fn();
      } catch (error) {
        ErrorUtils.reportFatalError(error);
      } finally {
        this._inCall--;
      }
    }
  }, {
    key: '__callImmediates',
    value: function __callImmediates() {
      Systrace.beginEvent('JSTimers.callImmediates()');
      if (!JSTimers) {
        JSTimers = require(75        ); // 75 = JSTimers
      }
      JSTimers.callImmediates();
      Systrace.endEvent();
    }
  }, {
    key: '__callFunction',
    value: function __callFunction(module, method, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      Systrace.beginEvent(module + '.' + method + '()');
      if (this.__spy) {
        this.__spy({ type: TO_JS, module: module, method: method, args: args });
      }
      var moduleMethods = this.getCallableModule(module);
      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
      var result = moduleMethods[method].apply(moduleMethods, args);
      Systrace.endEvent();
      return result;
    }
  }, {
    key: '__invokeCallback',
    value: function __invokeCallback(cbID, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;

      var callID = cbID >>> 1;

      var isSuccess = cbID & 1;
      var callback = isSuccess ? this._successCallbacks[callID] : this._failureCallbacks[callID];

      if (__DEV__) {
        var debug = this._debugInfo[callID];
        var _module = debug && this._remoteModuleTable[debug[0]];
        var _method = debug && this._remoteMethodTable[debug[0]][debug[1]];
        if (!callback) {
          var errorMessage = 'Callback with id ' + cbID + ': ' + _module + '.' + _method + '() not found';
          if (_method) {
            errorMessage = 'The callback ' + _method + '() exists in module ' + _module + ', ' + 'but only one callback may be registered to a function in a native module.';
          }
          invariant(callback, errorMessage);
        }
        var profileName = debug ? '<callback for ' + _module + '.' + _method + '>' : cbID;
        if (callback && this.__spy) {
          this.__spy({ type: TO_JS, module: null, method: profileName, args: args });
        }
        Systrace.beginEvent('MessageQueue.invokeCallback(' + profileName + ', ' + stringifySafe(args) + ')');
      }

      if (!callback) {
        return;
      }

      this._successCallbacks[callID] = this._failureCallbacks[callID] = null;
      callback.apply(undefined, babelHelpers.toConsumableArray(args));

      if (__DEV__) {
        Systrace.endEvent();
      }
    }
  }], [{
    key: 'spy',
    value: function spy(spyOrToggle) {
      if (spyOrToggle === true) {
        MessageQueue.prototype.__spy = function (info) {
          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + ' : ' + ('' + (info.module ? info.module + '.' : '') + info.method) + ('(' + JSON.stringify(info.args) + ')'));
        };
      } else if (spyOrToggle === false) {
        MessageQueue.prototype.__spy = null;
      } else {
        MessageQueue.prototype.__spy = spyOrToggle;
      }
    }
  }]);
  return MessageQueue;
}();

module.exports = MessageQueue;
}, 17, null, "MessageQueue");
__d(/* ErrorUtils */function(global, require, module, exports) {
module.exports = global.ErrorUtils;
}, 18, null, "ErrorUtils");
__d(/* Systrace */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var TRACE_TAG_REACT_APPS = 1 << 17;
var TRACE_TAG_JSC_CALLS = 1 << 27;

var _enabled = false;
var _asyncCookie = 0;
var _markStack = [];
var _markStackIndex = -1;
var _canInstallReactHook = false;
var _useFiber = false;

var REACT_MARKER = '\u269B';
var userTimingPolyfill = __DEV__ ? {
  mark: function mark(markName) {
    if (_enabled) {
      _markStackIndex++;
      _markStack[_markStackIndex] = markName;
      var systraceLabel = markName;

      if (markName[0] === REACT_MARKER) {
        var indexOfId = markName.lastIndexOf(' (#');
        var cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;

        systraceLabel = markName.slice(2, cutoffIndex);
      }
      Systrace.beginEvent(systraceLabel);
    }
  },
  measure: function measure(measureName, startMark, endMark) {
    if (_enabled) {
      invariant(typeof measureName === 'string' && typeof startMark === 'string' && typeof endMark === 'undefined', 'Only performance.measure(string, string) overload is supported.');
      var topMark = _markStack[_markStackIndex];
      invariant(startMark === topMark, 'There was a mismatching performance.measure() call. ' + 'Expected "%s" but got "%s."', topMark, startMark);
      _markStackIndex--;

      Systrace.endEvent();
    }
  },
  clearMarks: function clearMarks(markName) {
    if (_enabled) {
      if (_markStackIndex === -1) {
        return;
      }
      if (markName === _markStack[_markStackIndex]) {
        if (userTimingPolyfill != null) {
          userTimingPolyfill.measure(markName, markName);
        }
      }
    }
  },
  clearMeasures: function clearMeasures() {}
} : null;

var reactDebugToolHook = __DEV__ ? {
  onBeforeMountComponent: function onBeforeMountComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.mountComponent(' + displayName + ')');
  },
  onMountComponent: function onMountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.updateComponent(' + displayName + ')');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.unmountComponent(' + displayName + ')');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent(displayName + '.' + timerType + '()');
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    Systrace.endEvent();
  }
} : null;

var Systrace = {
  installReactHook: function installReactHook(useFiber) {
    if (_enabled) {
      if (__DEV__) {
        if (useFiber) {
          global.performance = userTimingPolyfill;
        } else {
          require(128             ).addHook(reactDebugToolHook); // 128 = ReactDebugTool
        }
      }
    }
    _useFiber = useFiber;
    _canInstallReactHook = true;
  },
  setEnabled: function setEnabled(enabled) {
    if (_enabled !== enabled) {
      if (__DEV__) {
        if (enabled) {
          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);
        } else {
          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);
        }
        if (_canInstallReactHook) {
          if (_useFiber) {
            global.performance = enabled ? userTimingPolyfill : undefined;
          } else {
            var ReactDebugTool = require(128             ); // 128 = ReactDebugTool
            if (enabled) {
              ReactDebugTool.addHook(reactDebugToolHook);
            } else {
              ReactDebugTool.removeHook(reactDebugToolHook);
            }
          }
        }
      }
      _enabled = enabled;
    }
  },
  isEnabled: function isEnabled() {
    return _enabled;
  },
  beginEvent: function beginEvent(profileName, args) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
    }
  },
  endEvent: function endEvent() {
    if (_enabled) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
    }
  },
  beginAsyncEvent: function beginAsyncEvent(profileName) {
    var cookie = _asyncCookie;
    if (_enabled) {
      _asyncCookie++;
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
    return cookie;
  },
  endAsyncEvent: function endAsyncEvent(profileName, cookie) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
  },
  counterEvent: function counterEvent(profileName, value) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
    }
  },
  attachToRelayProfiler: function attachToRelayProfiler(relayProfiler) {
    relayProfiler.attachProfileHandler('*', function (name) {
      var cookie = Systrace.beginAsyncEvent(name);
      return function () {
        Systrace.endAsyncEvent(name, cookie);
      };
    });

    relayProfiler.attachAggregateHandler('*', function (name, callback) {
      Systrace.beginEvent(name);
      callback();
      Systrace.endEvent();
    });
  },
  swizzleJSON: function swizzleJSON() {
    Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);
  },
  measureMethods: function measureMethods(object, objectName, methodNames) {
    if (!__DEV__) {
      return;
    }

    methodNames.forEach(function (methodName) {
      object[methodName] = Systrace.measure(objectName, methodName, object[methodName]);
    });
  },
  measure: function measure(objName, fnName, func) {
    if (!__DEV__) {
      return func;
    }

    var profileName = objName + '.' + fnName;
    return function () {
      if (!_enabled) {
        return func.apply(this, arguments);
      }

      Systrace.beginEvent(profileName);
      var ret = func.apply(this, arguments);
      Systrace.endEvent();
      return ret;
    };
  }
};

if (__DEV__) {
  require.Systrace = Systrace;
}

module.exports = Systrace;
}, 19, null, "Systrace");
__d(/* ReactGlobalSharedState */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactGlobalSharedState;
}, 20, null, "ReactGlobalSharedState");
__d(/* ReactNative */function(global, require, module, exports) {
'use strict';

var ReactNative = void 0;

if (__DEV__) {
  ReactNative = require(22                    ); // 22 = ReactNativeFiber-dev
} else {
  ReactNative = require(127                    ); // 127 = ReactNativeFiber-prod
}

module.exports = ReactNative;
}, 21, null, "ReactNative");
__d(/* ReactNativeFiber-dev */function(global, require, module, exports) {
"use strict";

__DEV__ && function () {
    var invariant = require(13                  ), // 13 = fbjs/lib/invariant
        require$$0 = require(23                ), // 23 = fbjs/lib/warning
        ExceptionsManager = require(25                 ), // 25 = ExceptionsManager
        emptyObject = require(34                    ), // 34 = fbjs/lib/emptyObject
        react = require(35     ), // 35 = react
        checkPropTypes = require(43                         ), // 43 = prop-types/checkPropTypes
        shallowEqual = require(48                     ), // 48 = fbjs/lib/shallowEqual
        deepDiffer = require(49          ), // 49 = deepDiffer
        flattenStyle = require(50            ), // 50 = flattenStyle
        TextInputState = require(52              ), // 52 = TextInputState
        UIManager = require(54         ), // 54 = UIManager
        deepFreezeAndThrowOnMutationInDev = require(56                                 ); // 56 = deepFreezeAndThrowOnMutationInDev
    require(57              ); // 57 = InitializeCore
    var RCTEventEmitter = require(126              ), // 126 = RCTEventEmitter
        emptyFunction = require(24                      ), // 24 = fbjs/lib/emptyFunction
        defaultShowDialog = function defaultShowDialog(capturedError) {
        return !0;
    },
        showDialog = defaultShowDialog;
    function logCapturedError(capturedError) {
        if (!1 !== showDialog(capturedError)) {
            var componentName = (capturedError.error, capturedError.componentName),
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry,
                componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:",
                errorBoundaryMessage = void 0;
            errorBoundaryMessage = errorBoundaryFound && errorBoundaryName ? willRetry ? "React will try to recreate this component tree from scratch " + "using the error boundary you provided, " + errorBoundaryName + "." : "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree." : "Consider adding an error boundary to your tree to customize error handling behavior.\n" + "You can learn more about error boundaries at https://fb.me/react-error-boundaries.";
            var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + errorBoundaryMessage;
            console.error(combinedMessage);
        }
    }
    var injection = {
        injectDialog: function injectDialog(fn) {
            invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
        }
    },
        logCapturedError_1 = logCapturedError,
        ReactFiberErrorLogger = {
        injection: injection,
        logCapturedError: logCapturedError_1
    },
        ReactErrorUtils = {
        _caughtError: null,
        _hasCaughtError: !1,
        _rethrowError: null,
        _hasRethrowError: !1,
        injection: {
            injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
                invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
            }
        },
        invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
            _invokeGuardedCallback.apply(ReactErrorUtils, arguments);
        },
        invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
            if (ReactErrorUtils.invokeGuardedCallback.apply(this, arguments), ReactErrorUtils.hasCaughtError()) {
                var error = ReactErrorUtils.clearCaughtError();
                ReactErrorUtils._hasRethrowError || (ReactErrorUtils._hasRethrowError = !0, ReactErrorUtils._rethrowError = error);
            }
        },
        rethrowCaughtError: function rethrowCaughtError() {
            return _rethrowCaughtError.apply(ReactErrorUtils, arguments);
        },
        hasCaughtError: function hasCaughtError() {
            return ReactErrorUtils._hasCaughtError;
        },
        clearCaughtError: function clearCaughtError() {
            if (ReactErrorUtils._hasCaughtError) {
                var error = ReactErrorUtils._caughtError;
                return ReactErrorUtils._caughtError = null, ReactErrorUtils._hasCaughtError = !1, error;
            }
            invariant(!1, "clearCaughtError was called but no error was captured. This error " + "is likely caused by a bug in React. Please file an issue.");
        }
    },
        _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null;
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            ReactErrorUtils._caughtError = error, ReactErrorUtils._hasCaughtError = !0;
        }
    };
    if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
        var fakeNode = document.createElement("react");
        _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
            var didError = !0,
                funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                fakeNode.removeEventListener(evtType, callCallback, !1), func.apply(context, funcArgs), didError = !1;
            }
            var error = void 0,
                didSetError = !1,
                isCrossOriginError = !1;
            function onError(event) {
                error = event.error, didSetError = !0, null === error && 0 === event.colno && 0 === event.lineno && (isCrossOriginError = !0);
            }
            var evtType = "react-" + (name || "invokeguardedcallback");
            window.addEventListener("error", onError), fakeNode.addEventListener(evtType, callCallback, !1);
            var evt = document.createEvent("Event");
            evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), didError ? (didSetError ? isCrossOriginError && (error = new Error("A cross-origin error was thrown. React doesn't have access to " + "the actual error object in development. " + "See https://fb.me/react-crossorigin-error for more information.")) : error = new Error("An error was thrown inside one of your components, but React " + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + "your browser. Try triggering the error in production mode, " + "or switching to a modern browser. If you suspect that this is " + "actually an issue with React, please file an issue."), ReactErrorUtils._hasCaughtError = !0, ReactErrorUtils._caughtError = error) : (ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null), window.removeEventListener("error", onError);
        };
    }
    var ComponentTree,
        _rethrowCaughtError = function _rethrowCaughtError() {
        if (ReactErrorUtils._hasRethrowError) {
            var error = ReactErrorUtils._rethrowError;
            throw ReactErrorUtils._rethrowError = null, ReactErrorUtils._hasRethrowError = !1, error;
        }
    },
        ReactErrorUtils_1 = ReactErrorUtils,
        warning = require$$0,
        injection$1 = {
        injectComponentTree: function injectComponentTree(Injected) {
            ComponentTree = Injected, warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected " + "module is missing getNodeFromInstance or getInstanceFromNode.");
        }
    };
    function isEndish(topLevelType) {
        return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
    }
    function isMoveish(topLevelType) {
        return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
    }
    function isStartish(topLevelType) {
        return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
    }
    var validateEventDispatches;
    validateEventDispatches = function validateEventDispatches(event) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances,
            listenersIsArr = Array.isArray(dispatchListeners),
            listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0,
            instancesIsArr = Array.isArray(dispatchInstances),
            instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, "EventPluginUtils: Invalid `event`.");
    };
    function executeDispatch(event, simulated, listener, inst) {
        var type = event.type || "unknown-event";
        event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances;
        if (validateEventDispatches(event), Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
        } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
        event._dispatchListeners = null, event._dispatchInstances = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances;
        if (validateEventDispatches(event), Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
                if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
            }
        } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
        return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
        var ret = executeDispatchesInOrderStopAtTrueImpl(event);
        return event._dispatchInstances = null, event._dispatchListeners = null, ret;
    }
    function executeDirectDispatch(event) {
        validateEventDispatches(event);
        var dispatchListener = event._dispatchListeners,
            dispatchInstance = event._dispatchInstances;
        invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
        var res = dispatchListener ? dispatchListener(event) : null;
        return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
    }
    function hasDispatches(event) {
        return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
        isEndish: isEndish,
        isMoveish: isMoveish,
        isStartish: isStartish,
        executeDirectDispatch: executeDirectDispatch,
        executeDispatchesInOrder: executeDispatchesInOrder,
        executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
        hasDispatches: hasDispatches,
        getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
            return ComponentTree.getFiberCurrentPropsFromNode(node);
        },
        getInstanceFromNode: function getInstanceFromNode(node) {
            return ComponentTree.getInstanceFromNode(node);
        },
        getNodeFromInstance: function getNodeFromInstance(node) {
            return ComponentTree.getNodeFromInstance(node);
        },
        injection: injection$1
    },
        EventPluginUtils_1 = EventPluginUtils,
        fiberHostComponent = null,
        ReactControlledComponentInjection = {
        injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
            fiberHostComponent = hostComponentImpl;
        }
    },
        restoreTarget = null,
        restoreQueue = null;
    function restoreStateOfTarget(target) {
        var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
        if (internalInstance) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events. This error is likely caused by a bug in React. Please file an issue.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
    }
    var ReactControlledComponent = {
        injection: ReactControlledComponentInjection,
        enqueueStateRestore: function enqueueStateRestore(target) {
            restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
        },
        restoreStateIfNeeded: function restoreStateIfNeeded() {
            if (restoreTarget) {
                var target = restoreTarget,
                    queuedTargets = restoreQueue;
                if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                    restoreStateOfTarget(queuedTargets[i]);
                }
            }
        }
    },
        ReactControlledComponent_1 = ReactControlledComponent,
        fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    function batchedUpdates(fn, bookkeeping) {
        return fiberBatchedUpdates(fn, bookkeeping);
    }
    var isNestingBatched = !1;
    function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
        if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
        isNestingBatched = !0;
        try {
            return batchedUpdates(fn, bookkeeping);
        } finally {
            isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
        }
    }
    var ReactGenericBatchingInjection = {
        injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
            fiberBatchedUpdates = _batchedUpdates;
        }
    },
        ReactGenericBatching = {
        batchedUpdates: batchedUpdatesWithControlledComponents,
        injection: ReactGenericBatchingInjection
    },
        ReactGenericBatching_1 = ReactGenericBatching;
    function ReactNativeFiberErrorDialog(capturedError) {
        var componentStack = capturedError.componentStack,
            error = capturedError.error,
            errorToHandle = void 0;
        if (error instanceof Error) {
            var message = error.message,
                name = error.name,
                summary = message ? name + ": " + message : name;
            errorToHandle = error;
            try {
                errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
            } catch (e) {}
        } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
        return ExceptionsManager.handleException(errorToHandle, !1), !1;
    }
    var showDialog$1 = ReactNativeFiberErrorDialog,
        ReactNativeFiberErrorDialog_1 = {
        showDialog: showDialog$1
    },
        REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
        createPortal = function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    },
        isPortal = function isPortal(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
    },
        REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
        ReactPortal = {
        createPortal: createPortal,
        isPortal: isPortal,
        REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
    },
        instanceCache = {},
        instanceProps = {};
    function precacheFiberNode(hostInst, tag) {
        instanceCache[tag] = hostInst;
    }
    function uncacheFiberNode(tag) {
        delete instanceCache[tag], delete instanceProps[tag];
    }
    function getInstanceFromTag(tag) {
        return instanceCache[tag] || null;
    }
    function getTagFromInstance(inst) {
        var tag = inst.stateNode._nativeTag;
        return invariant(tag, "All native instances should have a tag."), tag;
    }
    function getFiberCurrentPropsFromNode(stateNode) {
        return instanceProps[stateNode._nativeTag] || null;
    }
    function updateFiberProps(tag, props) {
        instanceProps[tag] = props;
    }
    var ReactNativeComponentTree = {
        getClosestInstanceFromNode: getInstanceFromTag,
        getInstanceFromNode: getInstanceFromTag,
        getNodeFromInstance: getTagFromInstance,
        precacheFiberNode: precacheFiberNode,
        uncacheFiberNode: uncacheFiberNode,
        getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
        updateFiberProps: updateFiberProps
    },
        ReactNativeComponentTree_1 = ReactNativeComponentTree,
        commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
        ReactFeatureFlags = {
        enableAsyncSubtreeAPI: !0
    },
        ReactFeatureFlags_1 = ReactFeatureFlags,
        ReactTypeOfSideEffect = {
        NoEffect: 0,
        PerformedWork: 1,
        Placement: 2,
        Update: 4,
        PlacementAndUpdate: 6,
        Deletion: 8,
        ContentReset: 16,
        Callback: 32,
        Err: 64,
        Ref: 128
    },
        ReactPriorityLevel = {
        NoWork: 0,
        SynchronousPriority: 1,
        TaskPriority: 2,
        HighPriority: 3,
        LowPriority: 4,
        OffscreenPriority: 5
    },
        ReactTypeOfWork = {
        IndeterminateComponent: 0,
        FunctionalComponent: 1,
        ClassComponent: 2,
        HostRoot: 3,
        HostPortal: 4,
        HostComponent: 5,
        HostText: 6,
        CoroutineComponent: 7,
        CoroutineHandlerPhase: 8,
        YieldComponent: 9,
        Fragment: 10
    },
        CallbackEffect = ReactTypeOfSideEffect.Callback,
        NoWork = ReactPriorityLevel.NoWork,
        SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
        TaskPriority = ReactPriorityLevel.TaskPriority,
        ClassComponent = ReactTypeOfWork.ClassComponent,
        HostRoot = ReactTypeOfWork.HostRoot,
        warning$2 = require$$0,
        _queue1 = void 0,
        _queue2 = void 0;
    function comparePriority(a, b) {
        return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
    }
    function createUpdateQueue() {
        var queue = {
            first: null,
            last: null,
            hasForceUpdate: !1,
            callbackList: null
        };
        return queue.isProcessing = !1, queue;
    }
    function cloneUpdate(update) {
        return {
            priorityLevel: update.priorityLevel,
            partialState: update.partialState,
            callback: update.callback,
            isReplace: update.isReplace,
            isForced: update.isForced,
            isTopLevelUnmount: update.isTopLevelUnmount,
            next: null
        };
    }
    function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
        null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
    }
    function findInsertionPosition(queue, update) {
        var priorityLevel = update.priorityLevel,
            insertAfter = null,
            insertBefore = null;
        if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
            insertAfter = insertBefore, insertBefore = insertBefore.next;
        }return insertAfter;
    }
    function ensureUpdateQueues(fiber) {
        var alternateFiber = fiber.alternate,
            queue1 = fiber.updateQueue;
        null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
        var queue2 = void 0;
        null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, _queue1 = queue1, _queue2 = queue2 !== queue1 ? queue2 : null;
    }
    function insertUpdate(fiber, update) {
        ensureUpdateQueues(fiber);
        var queue1 = _queue1,
            queue2 = _queue2;
        (queue1.isProcessing || null !== queue2 && queue2.isProcessing) && warning$2(!1, "An update (setState, replaceState, or forceUpdate) was scheduled " + "from inside an update function. Update functions should be pure, " + "with zero side-effects. Consider using componentDidUpdate or a " + "callback.");
        var insertAfter1 = findInsertionPosition(queue1, update),
            insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
        if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
        var insertAfter2 = findInsertionPosition(queue2, update),
            insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
        if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
        var update2 = cloneUpdate(update);
        return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
    }
    function addUpdate(fiber, partialState, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: !1,
            isForced: !1,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addUpdate_1 = addUpdate;
    function addReplaceUpdate(fiber, state, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: state,
            callback: callback,
            isReplace: !0,
            isForced: !1,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addReplaceUpdate_1 = addReplaceUpdate;
    function addForceUpdate(fiber, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: null,
            callback: callback,
            isReplace: !1,
            isForced: !0,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addForceUpdate_1 = addForceUpdate;
    function getUpdatePriority(fiber) {
        var updateQueue = fiber.updateQueue;
        return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
    }
    var getUpdatePriority_1 = getUpdatePriority;
    function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
        var isTopLevelUnmount = null === partialState.element,
            update = {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: !1,
            isForced: !1,
            isTopLevelUnmount: isTopLevelUnmount,
            next: null
        },
            update2 = insertUpdate(fiber, update);
        if (isTopLevelUnmount) {
            var queue1 = _queue1,
                queue2 = _queue2;
            null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
        }
    }
    var addTopLevelUpdate_1 = addTopLevelUpdate$1;
    function getStateFromUpdate(update, instance, prevState, props) {
        var partialState = update.partialState;
        if ("function" == typeof partialState) {
            return partialState.call(instance, prevState, props);
        }
        return partialState;
    }
    function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
        if (null !== current && current.updateQueue === queue) {
            var currentQueue = queue;
            queue = workInProgress.updateQueue = {
                first: currentQueue.first,
                last: currentQueue.last,
                callbackList: null,
                hasForceUpdate: !1
            };
        }
        queue.isProcessing = !0;
        for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
            queue.first = update.next, null === queue.first && (queue.last = null);
            var _partialState = void 0;
            update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
        }
        return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), queue.isProcessing = !1, state;
    }
    var beginUpdateQueue_1 = beginUpdateQueue;
    function commitCallbacks(finishedWork, queue, context) {
        var callbackList = queue.callbackList;
        if (null !== callbackList) {
            queue.callbackList = null;
            for (var i = 0; i < callbackList.length; i++) {
                var _callback = callbackList[i];
                invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
            }
        }
    }
    var commitCallbacks_1 = commitCallbacks,
        ReactFiberUpdateQueue = {
        addUpdate: addUpdate_1,
        addReplaceUpdate: addReplaceUpdate_1,
        addForceUpdate: addForceUpdate_1,
        getUpdatePriority: getUpdatePriority_1,
        addTopLevelUpdate: addTopLevelUpdate_1,
        beginUpdateQueue: beginUpdateQueue_1,
        commitCallbacks: commitCallbacks_1
    };
    function getComponentName$1(fiber) {
        var type = fiber.type;
        return "string" == typeof type ? type : "function" == typeof type ? type.displayName || type.name : null;
    }
    var getComponentName_1 = getComponentName$1,
        ReactInstanceMap = {
        remove: function remove(key) {
            key._reactInternalFiber = void 0;
        },
        get: function get(key) {
            return key._reactInternalFiber;
        },
        has: function has(key) {
            return void 0 !== key._reactInternalFiber;
        },
        set: function set(key, value) {
            key._reactInternalFiber = value;
        }
    },
        ReactInstanceMap_1 = ReactInstanceMap,
        ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        ReactGlobalSharedState = {
        ReactCurrentOwner: ReactInternals.ReactCurrentOwner
    };
    babelHelpers.extends(ReactGlobalSharedState, {
        ReactDebugCurrentFrame: ReactInternals.ReactDebugCurrentFrame
    });
    var ReactGlobalSharedState_1 = ReactGlobalSharedState,
        ReactCurrentOwner = ReactGlobalSharedState_1.ReactCurrentOwner,
        warning$4 = require$$0,
        ClassComponent$2 = ReactTypeOfWork.ClassComponent,
        HostComponent$1 = ReactTypeOfWork.HostComponent,
        HostRoot$2 = ReactTypeOfWork.HostRoot,
        HostPortal = ReactTypeOfWork.HostPortal,
        HostText = ReactTypeOfWork.HostText,
        NoEffect = ReactTypeOfSideEffect.NoEffect,
        Placement = ReactTypeOfSideEffect.Placement,
        MOUNTING = 1,
        MOUNTED = 2,
        UNMOUNTED = 3;
    function isFiberMountedImpl(fiber) {
        var node = fiber;
        if (fiber.alternate) for (; node.return;) {
            node = node.return;
        } else {
            if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
            for (; node.return;) {
                if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
            }
        }
        return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
    }
    var isFiberMounted$1 = function isFiberMounted$1(fiber) {
        return isFiberMountedImpl(fiber) === MOUNTED;
    },
        isMounted = function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (null !== owner && owner.tag === ClassComponent$2) {
            var ownerFiber = owner,
                instance = ownerFiber.stateNode;
            warning$4(instance._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", getComponentName_1(ownerFiber) || "A component"), instance._warnedAboutRefsInRender = !0;
        }
        var fiber = ReactInstanceMap_1.get(component);
        return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
    };
    function assertIsMounted(fiber) {
        invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            var state = isFiberMountedImpl(fiber);
            return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
        }
        for (var a = fiber, b = alternate; !0;) {
            var parentA = a.return,
                parentB = parentA ? parentA.alternate : null;
            if (!parentA || !parentB) break;
            if (parentA.child === parentB.child) {
                for (var child = parentA.child; child;) {
                    if (child === a) return assertIsMounted(parentA), fiber;
                    if (child === b) return assertIsMounted(parentA), alternate;
                    child = child.sibling;
                }
                invariant(!1, "Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;else {
                for (var didFindChild = !1, _child = parentA.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentA, b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentA, a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for (_child = parentB.child; _child;) {
                        if (_child === a) {
                            didFindChild = !0, a = parentB, b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0, b = parentB, a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "in React related to the return pointer. Please file an issue.");
                }
            }
            invariant(a.alternate === b, "Return fibers should always be each others' alternates. " + "This error is likely caused by a bug in React. Please file an issue.");
        }
        return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
    }
    var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
        findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
        for (var node = currentParent; !0;) {
            if (node.tag === HostComponent$1 || node.tag === HostText) return node;
            if (node.child) node.child.return = node, node = node.child;else {
                if (node === currentParent) return null;
                for (; !node.sibling;) {
                    if (!node.return || node.return === currentParent) return null;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        return null;
    },
        findCurrentHostFiberWithNoPortals$1 = function findCurrentHostFiberWithNoPortals$1(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
        for (var node = currentParent; !0;) {
            if (node.tag === HostComponent$1 || node.tag === HostText) return node;
            if (node.child && node.tag !== HostPortal) node.child.return = node, node = node.child;else {
                if (node === currentParent) return null;
                for (; !node.sibling;) {
                    if (!node.return || node.return === currentParent) return null;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        return null;
    },
        ReactFiberTreeReflection = {
        isFiberMounted: isFiberMounted$1,
        isMounted: isMounted,
        findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
        findCurrentHostFiber: findCurrentHostFiber$1,
        findCurrentHostFiberWithNoPortals: findCurrentHostFiberWithNoPortals$1
    },
        warning$5 = require$$0,
        valueStack = [],
        fiberStack = [],
        index = -1,
        createCursor$1 = function createCursor$1(defaultValue) {
        return {
            current: defaultValue
        };
    },
        isEmpty = function isEmpty() {
        return -1 === index;
    },
        pop$1 = function pop$1(cursor, fiber) {
        if (index < 0) return void warning$5(!1, "Unexpected pop.");
        fiber !== fiberStack[index] && warning$5(!1, "Unexpected Fiber popped."), cursor.current = valueStack[index], valueStack[index] = null, fiberStack[index] = null, index--;
    },
        push$1 = function push$1(cursor, value, fiber) {
        index++, valueStack[index] = cursor.current, fiberStack[index] = fiber, cursor.current = value;
    },
        reset = function reset() {
        for (; index > -1;) {
            valueStack[index] = null, fiberStack[index] = null, index--;
        }
    },
        ReactFiberStack = {
        createCursor: createCursor$1,
        isEmpty: isEmpty,
        pop: pop$1,
        push: push$1,
        reset: reset
    },
        describeComponentFrame = function describeComponentFrame(name, source, ownerName) {
        return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
    },
        IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$3 = ReactTypeOfWork.ClassComponent,
        HostComponent$2 = ReactTypeOfWork.HostComponent;
    function describeFiber(fiber) {
        switch (fiber.tag) {
            case IndeterminateComponent:
            case FunctionalComponent:
            case ClassComponent$3:
            case HostComponent$2:
                var owner = fiber._debugOwner,
                    source = fiber._debugSource,
                    name = getComponentName_1(fiber),
                    ownerName = null;
                return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

            default:
                return "";
        }
    }
    function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
        var info = "",
            node = workInProgress;
        do {
            info += describeFiber(node), node = node.return;
        } while (node);
        return info;
    }
    var ReactFiberComponentTreeHook = {
        getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1
    },
        ReactDebugCurrentFrame = ReactGlobalSharedState_1.ReactDebugCurrentFrame,
        getComponentName$3 = getComponentName_1,
        _require2$1 = ReactFiberComponentTreeHook,
        getStackAddendumByWorkInProgressFiber = _require2$1.getStackAddendumByWorkInProgressFiber;
    function getCurrentFiberOwnerName() {
        var fiber = ReactDebugCurrentFiber$2.current;
        if (null === fiber) return null;
        var owner = fiber._debugOwner;
        return null !== owner && void 0 !== owner ? getComponentName$3(owner) : null;
    }
    function getCurrentFiberStackAddendum() {
        var fiber = ReactDebugCurrentFiber$2.current;
        return null === fiber ? null : getStackAddendumByWorkInProgressFiber(fiber);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null, ReactDebugCurrentFiber$2.current = null, ReactDebugCurrentFiber$2.phase = null;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum, ReactDebugCurrentFiber$2.current = fiber, ReactDebugCurrentFiber$2.phase = null;
    }
    function setCurrentPhase(phase) {
        ReactDebugCurrentFiber$2.phase = phase;
    }
    var ReactDebugCurrentFiber$2 = {
        current: null,
        phase: null,
        resetCurrentFiber: resetCurrentFiber,
        setCurrentFiber: setCurrentFiber,
        setCurrentPhase: setCurrentPhase,
        getCurrentFiberOwnerName: getCurrentFiberOwnerName,
        getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
    },
        ReactDebugCurrentFiber_1 = ReactDebugCurrentFiber$2,
        ReactDebugFiberPerf = null,
        _require$2 = ReactTypeOfWork,
        HostRoot$3 = _require$2.HostRoot,
        HostComponent$3 = _require$2.HostComponent,
        HostText$1 = _require$2.HostText,
        HostPortal$1 = _require$2.HostPortal,
        YieldComponent = _require$2.YieldComponent,
        Fragment = _require$2.Fragment,
        getComponentName$4 = getComponentName_1,
        reactEmoji = "⚛",
        warningEmoji = "⛔",
        supportsUserTiming = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
        currentFiber = null,
        currentPhase = null,
        currentPhaseFiber = null,
        isCommitting = !1,
        hasScheduledUpdateInCurrentCommit = !1,
        hasScheduledUpdateInCurrentPhase = !1,
        commitCountInCurrentWorkLoop = 0,
        effectCountInCurrentCommit = 0,
        labelsInCurrentCommit = new Set(),
        formatMarkName = function formatMarkName(markName) {
        return reactEmoji + " " + markName;
    },
        formatLabel = function formatLabel(label, warning) {
        return (warning ? warningEmoji + " " : reactEmoji + " ") + label + (warning ? " Warning: " + warning : "");
    },
        beginMark = function beginMark(markName) {
        performance.mark(formatMarkName(markName));
    },
        clearMark = function clearMark(markName) {
        performance.clearMarks(formatMarkName(markName));
    },
        endMark = function endMark(label, markName, warning) {
        var formattedMarkName = formatMarkName(markName),
            formattedLabel = formatLabel(label, warning);
        try {
            performance.measure(formattedLabel, formattedMarkName);
        } catch (err) {}
        performance.clearMarks(formattedMarkName), performance.clearMeasures(formattedLabel);
    },
        getFiberMarkName = function getFiberMarkName(label, debugID) {
        return label + " (#" + debugID + ")";
    },
        getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {
        return null === phase ? componentName + " [" + (isMounted ? "update" : "mount") + "]" : componentName + "." + phase;
    },
        beginFiberMark = function beginFiberMark(fiber, phase) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase);
        if (isCommitting && labelsInCurrentCommit.has(label)) return !1;
        labelsInCurrentCommit.add(label);
        var markName = getFiberMarkName(label, debugID);
        return beginMark(markName), !0;
    },
        clearFiberMark = function clearFiberMark(fiber, phase) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase),
            markName = getFiberMarkName(label, debugID);
        clearMark(markName);
    },
        endFiberMark = function endFiberMark(fiber, phase, warning) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase),
            markName = getFiberMarkName(label, debugID);
        endMark(label, markName, warning);
    },
        shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {
        switch (fiber.tag) {
            case HostRoot$3:
            case HostComponent$3:
            case HostText$1:
            case HostPortal$1:
            case YieldComponent:
            case Fragment:
                return !0;

            default:
                return !1;
        }
    },
        clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {
        null !== currentPhase && null !== currentPhaseFiber && clearFiberMark(currentPhaseFiber, currentPhase), currentPhaseFiber = null, currentPhase = null, hasScheduledUpdateInCurrentPhase = !1;
    },
        pauseTimers = function pauseTimers() {
        for (var fiber = currentFiber; fiber;) {
            fiber._debugIsCurrentlyTiming && endFiberMark(fiber, null, null), fiber = fiber.return;
        }
    },
        resumeTimersRecursively = function resumeTimersRecursively(fiber) {
        null !== fiber.return && resumeTimersRecursively(fiber.return), fiber._debugIsCurrentlyTiming && beginFiberMark(fiber, null);
    },
        resumeTimers = function resumeTimers() {
        null !== currentFiber && resumeTimersRecursively(currentFiber);
    };
    ReactDebugFiberPerf = {
        recordEffect: function recordEffect() {
            effectCountInCurrentCommit++;
        },
        recordScheduleUpdate: function recordScheduleUpdate() {
            isCommitting && (hasScheduledUpdateInCurrentCommit = !0), null !== currentPhase && "componentWillMount" !== currentPhase && "componentWillReceiveProps" !== currentPhase && (hasScheduledUpdateInCurrentPhase = !0);
        },
        startWorkTimer: function startWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber, beginFiberMark(fiber, null) && (fiber._debugIsCurrentlyTiming = !0));
        },
        cancelWorkTimer: function cancelWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (fiber._debugIsCurrentlyTiming = !1, clearFiberMark(fiber, null));
        },
        stopWorkTimer: function stopWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber.return, fiber._debugIsCurrentlyTiming && (fiber._debugIsCurrentlyTiming = !1, endFiberMark(fiber, null, null)));
        },
        stopFailedWorkTimer: function stopFailedWorkTimer(fiber) {
            if (supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber.return, fiber._debugIsCurrentlyTiming)) {
                fiber._debugIsCurrentlyTiming = !1;
                endFiberMark(fiber, null, "An error was thrown inside this error boundary");
            }
        },
        startPhaseTimer: function startPhaseTimer(fiber, phase) {
            supportsUserTiming && (clearPendingPhaseMeasurement(), beginFiberMark(fiber, phase) && (currentPhaseFiber = fiber, currentPhase = phase));
        },
        stopPhaseTimer: function stopPhaseTimer() {
            if (supportsUserTiming) {
                if (null !== currentPhase && null !== currentPhaseFiber) {
                    endFiberMark(currentPhaseFiber, currentPhase, hasScheduledUpdateInCurrentPhase ? "Scheduled a cascading update" : null);
                }
                currentPhase = null, currentPhaseFiber = null;
            }
        },
        startWorkLoopTimer: function startWorkLoopTimer() {
            supportsUserTiming && (commitCountInCurrentWorkLoop = 0, beginMark("(React Tree Reconciliation)"), resumeTimers());
        },
        stopWorkLoopTimer: function stopWorkLoopTimer() {
            if (supportsUserTiming) {
                var warning = commitCountInCurrentWorkLoop > 1 ? "There were cascading updates" : null;
                commitCountInCurrentWorkLoop = 0, pauseTimers(), endMark("(React Tree Reconciliation)", "(React Tree Reconciliation)", warning);
            }
        },
        startCommitTimer: function startCommitTimer() {
            supportsUserTiming && (isCommitting = !0, hasScheduledUpdateInCurrentCommit = !1, labelsInCurrentCommit.clear(), beginMark("(Committing Changes)"));
        },
        stopCommitTimer: function stopCommitTimer() {
            if (supportsUserTiming) {
                var warning = null;
                hasScheduledUpdateInCurrentCommit ? warning = "Lifecycle hook scheduled a cascading update" : commitCountInCurrentWorkLoop > 0 && (warning = "Caused by a cascading update in earlier commit"), hasScheduledUpdateInCurrentCommit = !1, commitCountInCurrentWorkLoop++, isCommitting = !1, labelsInCurrentCommit.clear(), endMark("(Committing Changes)", "(Committing Changes)", warning);
            }
        },
        startCommitHostEffectsTimer: function startCommitHostEffectsTimer() {
            supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Committing Host Effects)"));
        },
        stopCommitHostEffectsTimer: function stopCommitHostEffectsTimer() {
            if (supportsUserTiming) {
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0, endMark("(Committing Host Effects: " + count + " Total)", "(Committing Host Effects)", null);
            }
        },
        startCommitLifeCyclesTimer: function startCommitLifeCyclesTimer() {
            supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Calling Lifecycle Methods)"));
        },
        stopCommitLifeCyclesTimer: function stopCommitLifeCyclesTimer() {
            if (supportsUserTiming) {
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0, endMark("(Calling Lifecycle Methods: " + count + " Total)", "(Calling Lifecycle Methods)", null);
            }
        }
    };
    var ReactDebugFiberPerf_1 = ReactDebugFiberPerf,
        isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
        ClassComponent$1 = ReactTypeOfWork.ClassComponent,
        HostRoot$1 = ReactTypeOfWork.HostRoot,
        createCursor = ReactFiberStack.createCursor,
        pop = ReactFiberStack.pop,
        push = ReactFiberStack.push,
        warning$3 = require$$0,
        checkPropTypes$1 = checkPropTypes,
        ReactDebugCurrentFiber$1 = ReactDebugCurrentFiber_1,
        _require4 = ReactDebugFiberPerf_1,
        startPhaseTimer = _require4.startPhaseTimer,
        stopPhaseTimer = _require4.stopPhaseTimer,
        warnedAboutMissingGetChildContext = {},
        contextStackCursor = createCursor(emptyObject),
        didPerformWorkStackCursor = createCursor(!1),
        previousContext = emptyObject;
    function getUnmaskedContext(workInProgress) {
        return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
    }
    var getUnmaskedContext_1 = getUnmaskedContext;
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    var cacheContext_1 = cacheContext,
        getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type,
            contextTypes = type.contextTypes;
        if (!contextTypes) return emptyObject;
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for (var key in contextTypes) {
            context[key] = unmaskedContext[key];
        }var name = getComponentName_1(workInProgress) || "Unknown";
        return checkPropTypes$1(contextTypes, context, "context", name, ReactDebugCurrentFiber$1.getCurrentFiberStackAddendum), instance && cacheContext(workInProgress, unmaskedContext, context), context;
    },
        hasContextChanged = function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    };
    function isContextConsumer(fiber) {
        return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
    }
    var isContextConsumer_1 = isContextConsumer;
    function isContextProvider$1(fiber) {
        return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
    }
    var isContextProvider_1 = isContextProvider$1;
    function popContextProvider(fiber) {
        isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
    }
    var popContextProvider_1 = popContextProvider,
        popTopLevelContextObject = function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
    },
        pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
        invariant(null == contextStackCursor.cursor, "Unexpected context found on stack. " + "This error is likely caused by a bug in React. Please file an issue."), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
    };
    function processChildContext$1(fiber, parentContext) {
        var instance = fiber.stateNode,
            childContextTypes = fiber.type.childContextTypes;
        if ("function" != typeof instance.getChildContext) {
            var componentName = getComponentName_1(fiber) || "Unknown";
            return warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, warning$3(!1, "%s.childContextTypes is specified but there is no getChildContext() method " + "on the instance. You can either define getChildContext() on %s or remove " + "childContextTypes from it.", componentName, componentName)), parentContext;
        }
        var childContext = void 0;
        ReactDebugCurrentFiber$1.setCurrentPhase("getChildContext"), startPhaseTimer(fiber, "getChildContext"), childContext = instance.getChildContext(), stopPhaseTimer(), ReactDebugCurrentFiber$1.setCurrentPhase(null);
        for (var contextKey in childContext) {
            invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
        }var name = getComponentName_1(fiber) || "Unknown";
        return checkPropTypes$1(childContextTypes, childContext, "child context", name, ReactDebugCurrentFiber$1.getCurrentFiberStackAddendum), babelHelpers.extends({}, parentContext, childContext);
    }
    var processChildContext_1 = processChildContext$1,
        pushContextProvider = function pushContextProvider(workInProgress) {
        if (!isContextProvider$1(workInProgress)) return !1;
        var instance = workInProgress.stateNode,
            memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
        return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress), !0;
    },
        invalidateContextProvider = function invalidateContextProvider(workInProgress, didChange) {
        var instance = workInProgress.stateNode;
        if (invariant(instance, "Expected to have an instance by this point. " + "This error is likely caused by a bug in React. Please file an issue."), didChange) {
            var mergedContext = processChildContext$1(workInProgress, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
        } else pop(didPerformWorkStackCursor, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
    },
        resetContext = function resetContext() {
        previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
    },
        findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
        invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component. " + "This error is likely caused by a bug in React. Please file an issue.");
        for (var node = fiber; node.tag !== HostRoot$1;) {
            if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
            var parent = node.return;
            invariant(parent, "Found unexpected detached subtree parent. " + "This error is likely caused by a bug in React. Please file an issue."), node = parent;
        }
        return node.stateNode.context;
    },
        ReactFiberContext = {
        getUnmaskedContext: getUnmaskedContext_1,
        cacheContext: cacheContext_1,
        getMaskedContext: getMaskedContext,
        hasContextChanged: hasContextChanged,
        isContextConsumer: isContextConsumer_1,
        isContextProvider: isContextProvider_1,
        popContextProvider: popContextProvider_1,
        popTopLevelContextObject: popTopLevelContextObject,
        pushTopLevelContextObject: pushTopLevelContextObject,
        processChildContext: processChildContext_1,
        pushContextProvider: pushContextProvider,
        invalidateContextProvider: invalidateContextProvider,
        resetContext: resetContext,
        findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
    },
        ReactTypeOfInternalContext = {
        NoContext: 0,
        AsyncUpdates: 1
    },
        IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
        ClassComponent$4 = ReactTypeOfWork.ClassComponent,
        HostRoot$4 = ReactTypeOfWork.HostRoot,
        HostComponent$4 = ReactTypeOfWork.HostComponent,
        HostText$2 = ReactTypeOfWork.HostText,
        HostPortal$2 = ReactTypeOfWork.HostPortal,
        CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
        YieldComponent$1 = ReactTypeOfWork.YieldComponent,
        Fragment$1 = ReactTypeOfWork.Fragment,
        NoWork$1 = ReactPriorityLevel.NoWork,
        NoContext = ReactTypeOfInternalContext.NoContext,
        NoEffect$1 = ReactTypeOfSideEffect.NoEffect,
        getComponentName$5 = getComponentName_1,
        hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([[nonExtensibleObject, null]]), new Set([nonExtensibleObject]);
    } catch (e) {
        hasBadMapPolyfill = !0;
    }
    var debugCounter = 1;
    function FiberNode(tag, key, internalContextTag) {
        this.tag = tag, this.key = key, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = null, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.internalContextTag = internalContextTag, this.effectTag = NoEffect$1, this.nextEffect = null, this.firstEffect = null, this.lastEffect = null, this.pendingWorkPriority = NoWork$1, this.alternate = null, this._debugID = debugCounter++, this._debugSource = null, this._debugOwner = null, this._debugIsCurrentlyTiming = !1, hasBadMapPolyfill || "function" != typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    var createFiber = function createFiber(tag, key, internalContextTag) {
        return new FiberNode(tag, key, internalContextTag);
    };
    function shouldConstruct(Component) {
        return !(!Component.prototype || !Component.prototype.isReactComponent);
    }
    var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
        var workInProgress = current.alternate;
        return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugID = current._debugID, workInProgress._debugSource = current._debugSource, workInProgress._debugOwner = current._debugOwner, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoEffect$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
    },
        createHostRootFiber$1 = function createHostRootFiber$1() {
        return createFiber(HostRoot$4, null, NoContext);
    },
        createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
        var owner = null;
        owner = element._owner;
        var fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
        return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber._debugSource = element._source, fiber._debugOwner = element._owner, fiber;
    },
        createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
        var fiber = createFiber(Fragment$1, null, internalContextTag);
        return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
    },
        createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
        var fiber = createFiber(HostText$2, null, internalContextTag);
        return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
    };
    function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
        var fiber = void 0;
        if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$4, key, internalContextTag) : createFiber(IndeterminateComponent$1, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$4, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
            var info = "";
            (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file " + "it's defined in.");
            var ownerName = debugOwner ? getComponentName$5(debugOwner) : null;
            ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`."), invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
        }
        return fiber;
    }
    var REACT_COROUTINE_TYPE$1,
        REACT_YIELD_TYPE$1,
        createFiberFromElementType_1 = createFiberFromElementType,
        createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent$4, null, NoContext);
        return fiber.type = "DELETED", fiber;
    },
        createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
        var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
        return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
    },
        createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
        return createFiber(YieldComponent$1, null, internalContextTag);
    },
        createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
        var fiber = createFiber(HostPortal$2, portal.key, internalContextTag);
        return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
            containerInfo: portal.containerInfo,
            implementation: portal.implementation
        }, fiber;
    },
        largerPriority = function largerPriority(p1, p2) {
        return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
    },
        ReactFiber = {
        createWorkInProgress: createWorkInProgress,
        createHostRootFiber: createHostRootFiber$1,
        createFiberFromElement: createFiberFromElement,
        createFiberFromFragment: createFiberFromFragment,
        createFiberFromText: createFiberFromText,
        createFiberFromElementType: createFiberFromElementType_1,
        createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
        createFiberFromCoroutine: createFiberFromCoroutine,
        createFiberFromYield: createFiberFromYield,
        createFiberFromPortal: createFiberFromPortal,
        largerPriority: largerPriority
    },
        createHostRootFiber = ReactFiber.createHostRootFiber,
        createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
        var uninitializedFiber = createHostRootFiber(),
            root = {
            current: uninitializedFiber,
            containerInfo: containerInfo,
            isScheduled: !1,
            nextScheduledRoot: null,
            context: null,
            pendingContext: null
        };
        return uninitializedFiber.stateNode = root, root;
    },
        ReactFiberRoot = {
        createFiberRoot: createFiberRoot$1
    };
    "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);
    var createCoroutine = function createCoroutine(children, handler, props) {
        var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
            coroutine = {
            $$typeof: REACT_COROUTINE_TYPE$1,
            key: null == key ? null : "" + key,
            children: children,
            handler: handler,
            props: props
        };
        return Object.freeze && (Object.freeze(coroutine.props), Object.freeze(coroutine)), coroutine;
    },
        createYield = function createYield(value) {
        var yieldNode = {
            $$typeof: REACT_YIELD_TYPE$1,
            value: value
        };
        return Object.freeze && Object.freeze(yieldNode), yieldNode;
    },
        isCoroutine = function isCoroutine(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
    },
        isYield = function isYield(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
    },
        REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
        REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
        ReactCoroutine = {
        createCoroutine: createCoroutine,
        createYield: createYield,
        isCoroutine: isCoroutine,
        isYield: isYield,
        REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
        REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
    },
        REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
        REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
        REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
        _require3$2 = ReactDebugCurrentFiber_1,
        getCurrentFiberStackAddendum$1 = _require3$2.getCurrentFiberStackAddendum,
        warning$8 = require$$0,
        didWarnAboutMaps = !1,
        ownerHasKeyUseWarning = {},
        warnForMissingKey = function warnForMissingKey(child) {
        if (null !== child && "object" == typeof child && child._store && !child._store.validated && null == child.key) {
            invariant("object" == typeof child._store, "React Component in warnForMissingKey should have a _store. " + "This error is likely caused by a bug in React. Please file an issue."), child._store.validated = !0;
            var currentComponentErrorInfo = "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information." + (getCurrentFiberStackAddendum$1() || "");
            ownerHasKeyUseWarning[currentComponentErrorInfo] || (ownerHasKeyUseWarning[currentComponentErrorInfo] = !0, warning$8(!1, "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information.%s", getCurrentFiberStackAddendum$1()));
        }
    },
        createWorkInProgress$2 = ReactFiber.createWorkInProgress,
        createFiberFromElement$1 = ReactFiber.createFiberFromElement,
        createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
        createFiberFromText$1 = ReactFiber.createFiberFromText,
        createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
        createFiberFromYield$1 = ReactFiber.createFiberFromYield,
        createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
        isArray = Array.isArray,
        FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$7 = ReactTypeOfWork.ClassComponent,
        HostText$4 = ReactTypeOfWork.HostText,
        HostPortal$5 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
        YieldComponent$3 = ReactTypeOfWork.YieldComponent,
        Fragment$3 = ReactTypeOfWork.Fragment,
        NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
        Placement$3 = ReactTypeOfSideEffect.Placement,
        Deletion$1 = ReactTypeOfSideEffect.Deletion,
        ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
        REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || void 0 === maybeIterable) return null;
        var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" == typeof iteratorFn ? iteratorFn : null;
    }
    function coerceRef(current, element) {
        var mixedRef = element.ref;
        if (null !== mixedRef && "function" != typeof mixedRef) {
            if (element._owner) {
                var owner = element._owner,
                    inst = void 0;
                if (owner) {
                    var ownerFiber = owner;
                    invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
                }
                invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
                var stringRef = "" + mixedRef;
                if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
                var ref = function ref(value) {
                    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
                    null === value ? delete refs[stringRef] : refs[stringRef] = value;
                };
                return ref._stringRef = stringRef, ref;
            }
            invariant("string" == typeof mixedRef, "Expected ref to be a function or a string."), invariant(element._owner, "Element ref was specified as a string (%s) but no owner was " + "set. You may have multiple copies of React loaded. " + "(details: https://fb.me/react-refs-must-have-owner).", mixedRef);
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if ("textarea" !== returnFiber.type) {
            var addendum = "";
            addendum = " If you meant to render a collection of children, use an array " + "instead." + (getCurrentFiberStackAddendum$1() || ""), invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, addendum);
        }
    }
    function warnOnFunctionType() {
        warning$8(!1, "Functions are not valid as a React child. This may happen if " + "you return a Component instead of <Component /> from render. " + "Or maybe you meant to call this function rather than return it.%s", getCurrentFiberStackAddendum$1() || "");
    }
    function ChildReconciler(shouldClone, shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                if (!shouldClone) {
                    if (null === childToDelete.alternate) return;
                    childToDelete = childToDelete.alternate;
                }
                var last = returnFiber.lastEffect;
                null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for (var childToDelete = currentFirstChild; null !== childToDelete;) {
                deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
            }return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
                null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
            }return existingChildren;
        }
        function useFiber(fiber, priority) {
            if (shouldClone) {
                var clone = createWorkInProgress$2(fiber, priority);
                return clone.index = 0, clone.sibling = null, clone;
            }
            return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
            var current = newFiber.alternate;
            if (null !== current) {
                var oldIndex = current.index;
                return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
            }
            return newFiber.effectTag = Placement$3, lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, priority) {
            if (null === current || current.tag !== HostText$4) {
                var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        function updateElement(returnFiber, current, element, priority) {
            if (null === current || current.type !== element.type) {
                var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
                return created.ref = coerceRef(current, element), created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
        }
        function updateCoroutine(returnFiber, current, coroutine, priority) {
            if (null === current || current.tag !== CoroutineComponent$2) {
                var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
        }
        function updateYield(returnFiber, current, yieldNode, priority) {
            if (null === current || current.tag !== YieldComponent$3) {
                var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
                return created.type = yieldNode.value, created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.type = yieldNode.value, existing.return = returnFiber, existing;
        }
        function updatePortal(returnFiber, current, portal, priority) {
            if (null === current || current.tag !== HostPortal$5 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
        }
        function updateFragment(returnFiber, current, fragment, priority) {
            if (null === current || current.tag !== Fragment$3) {
                var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = fragment, existing.return = returnFiber, existing;
        }
        function createChild(returnFiber, newChild, priority) {
            if ("string" == typeof newChild || "number" == typeof newChild) {
                var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                        return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                    case REACT_COROUTINE_TYPE:
                        var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                        return _created2.return = returnFiber, _created2;

                    case REACT_YIELD_TYPE:
                        var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                        return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                    case REACT_PORTAL_TYPE$1:
                        var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                        return _created4.return = returnFiber, _created4;
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                    return _created5.return = returnFiber, _created5;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, priority) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_COROUTINE_TYPE:
                        return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_YIELD_TYPE:
                        return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_PORTAL_TYPE$1:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
                }
                if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
            if ("string" == typeof newChild || "number" == typeof newChild) {
                return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
            }
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                    case REACT_COROUTINE_TYPE:
                        return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                    case REACT_YIELD_TYPE:
                        return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                    case REACT_PORTAL_TYPE$1:
                        return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function warnOnInvalidKey(child, knownKeys) {
            if ("object" != typeof child || null === child) return knownKeys;
            switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_COROUTINE_TYPE:
                case REACT_PORTAL_TYPE$1:
                    warnForMissingKey(child);
                    var key = child.key;
                    if ("string" != typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set(), knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    warning$8(!1, "Encountered two children with the same key, `%s`. " + "Keys should be unique so that components maintain their identity " + "across updates. Non-unique keys may cause children to be " + "duplicated and/or omitted — the behavior is unsupported and " + "could change in a future version.%s", key, getCurrentFiberStackAddendum$1());
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
            for (var knownKeys = null, i = 0; i < newChildren.length; i++) {
                knownKeys = warnOnInvalidKey(newChildren[i], knownKeys);
            }
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
            if (null === oldFiber) {
                for (; newIdx < newChildren.length; newIdx++) {
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                    _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
                }
                return resultingFirstChild;
            }
            for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
                _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
            }
            return shouldTrackSideEffects && existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
            }), resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue."), "function" == typeof newChildrenIterable.entries) {
                newChildrenIterable.entries === iteratorFn && (warning$8(didWarnAboutMaps, "Using Maps as children is unsupported and will likely yield " + "unexpected results. Convert it to a sequence/iterable of keyed " + "ReactElements instead.%s", getCurrentFiberStackAddendum$1()), didWarnAboutMaps = !0);
            }
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) for (var knownKeys = null, _step = _newChildren.next(); !_step.done; _step = _newChildren.next()) {
                var child = _step.value;
                knownKeys = warnOnInvalidKey(child, knownKeys);
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            invariant(null != newChildren, "An iterable object provided no iterator.");
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
                if (null === newFiber) {
                    oldFiber || (oldFiber = nextOldFiber);
                    break;
                }
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
            if (null === oldFiber) {
                for (; !step.done; newIdx++, step = newChildren.next()) {
                    var _newFiber3 = createChild(returnFiber, step.value, priority);
                    null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
                }
                return resultingFirstChild;
            }
            for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
                null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
            }
            return shouldTrackSideEffects && existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
            }), resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
            if (null !== currentFirstChild && currentFirstChild.tag === HostText$4) {
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, priority);
                return existing.pendingProps = textContent, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
            for (var key = element.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.type === element.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
        }
        function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
            for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.tag === CoroutineComponent$2) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
            var child = currentFirstChild;
            if (null !== child) {
                if (child.tag === YieldComponent$3) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.type = yieldNode.value, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
            }
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
            for (var key = portal.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.tag === HostPortal$5 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
            var isObject = "object" == typeof newChild && null !== newChild;
            if (isObject) switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

                case REACT_COROUTINE_TYPE:
                    return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

                case REACT_YIELD_TYPE:
                    return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

                case REACT_PORTAL_TYPE$1:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
            }
            if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
            if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
            if (isObject && throwOnInvalidObjectType(returnFiber, newChild), "function" == typeof newChild && warnOnFunctionType(), void 0 === newChild) switch (returnFiber.tag) {
                case ClassComponent$7:
                    if (returnFiber.stateNode.render._isMockFunction) break;

                case FunctionalComponent$2:
                    var Component = returnFiber.type;
                    invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", Component.displayName || Component.name || "Component");
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers$1 = ChildReconciler(!0, !0),
        reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
        mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
        cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
        if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
            var currentChild = workInProgress.child,
                newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
            for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
                currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
            }newChild.sibling = null;
        }
    },
        ReactChildFiber = {
        reconcileChildFibers: reconcileChildFibers$1,
        reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
        mountChildFibersInPlace: mountChildFibersInPlace$1,
        cloneChildFibers: cloneChildFibers$1
    },
        Update$1 = ReactTypeOfSideEffect.Update,
        AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
        cacheContext$1 = ReactFiberContext.cacheContext,
        getMaskedContext$2 = ReactFiberContext.getMaskedContext,
        getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
        isContextConsumer$1 = ReactFiberContext.isContextConsumer,
        addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
        addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
        addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
        beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
        _require5 = ReactFiberContext,
        hasContextChanged$2 = _require5.hasContextChanged,
        isMounted$1 = ReactFiberTreeReflection.isMounted,
        fakeInternalInstance = {},
        isArray$1 = Array.isArray,
        _require7$1 = ReactDebugFiberPerf_1,
        startPhaseTimer$1 = _require7$1.startPhaseTimer,
        stopPhaseTimer$1 = _require7$1.stopPhaseTimer,
        warning$9 = require$$0,
        warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
        warning$9(null === callback || "function" == typeof callback, "%s(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callerName, callback);
    };
    Object.defineProperty(fakeInternalInstance, "_processChildContext", {
        enumerable: !1,
        value: function value() {
            invariant(!1, "_processChildContext is not available in React 16+. This likely " + "means you have multiple copies of React and are attempting to nest " + "a React 15 tree inside a React 16 tree using " + "unstable_renderSubtreeIntoContainer, which isn't supported. Try " + "to make sure you have only one copy of React (and ideally, switch " + "to ReactDOM.createPortal).");
        }
    }), Object.freeze(fakeInternalInstance);
    var ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
        var updater = {
            isMounted: isMounted$1,
            enqueueSetState: function enqueueSetState(instance, partialState, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "setState"), addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            },
            enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "replaceState"), addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            },
            enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "forceUpdate"), addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            }
        };
        function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
            if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
            var instance = workInProgress.stateNode,
                type = workInProgress.type;
            if ("function" == typeof instance.shouldComponentUpdate) {
                startPhaseTimer$1(workInProgress, "shouldComponentUpdate");
                var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
                return stopPhaseTimer$1(), warning$9(void 0 !== shouldUpdate, "%s.shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.", getComponentName_1(workInProgress) || "Unknown"), shouldUpdate;
            }
            return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        }
        function checkClassInstance(workInProgress) {
            var instance = workInProgress.stateNode,
                type = workInProgress.type,
                name = getComponentName_1(workInProgress),
                renderPresent = instance.render;
            warning$9(renderPresent, "%s(...): No `render` method found on the returned component " + "instance: you may have forgotten to define `render`.", name);
            var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
            warning$9(noGetInitialStateOnES6, "getInitialState was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Did you mean to define a state property instead?", name);
            var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
            warning$9(noGetDefaultPropsOnES6, "getDefaultProps was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Use a static property to define defaultProps instead.", name);
            var noInstancePropTypes = !instance.propTypes;
            warning$9(noInstancePropTypes, "propTypes was defined as an instance property on %s. Use a static " + "property to define propTypes instead.", name);
            var noInstanceContextTypes = !instance.contextTypes;
            warning$9(noInstanceContextTypes, "contextTypes was defined as an instance property on %s. Use a static " + "property to define contextTypes instead.", name);
            var noComponentShouldUpdate = "function" != typeof instance.componentShouldUpdate;
            warning$9(noComponentShouldUpdate, "%s has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.", name), type.prototype && type.prototype.isPureReactComponent && void 0 !== instance.shouldComponentUpdate && warning$9(!1, "%s has a method called shouldComponentUpdate(). " + "shouldComponentUpdate should not be used when extending React.PureComponent. " + "Please extend React.Component if shouldComponentUpdate is used.", getComponentName_1(workInProgress) || "A pure component");
            var noComponentDidUnmount = "function" != typeof instance.componentDidUnmount;
            warning$9(noComponentDidUnmount, "%s has a method called " + "componentDidUnmount(). But there is no such lifecycle method. " + "Did you mean componentWillUnmount()?", name);
            var noComponentWillRecieveProps = "function" != typeof instance.componentWillRecieveProps;
            warning$9(noComponentWillRecieveProps, "%s has a method called " + "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            var hasMutatedProps = instance.props !== workInProgress.pendingProps;
            warning$9(void 0 === instance.props || !hasMutatedProps, "%s(...): When calling super() in `%s`, make sure to pass " + "up the same props that your component's constructor was passed.", name, name);
            var noInstanceDefaultProps = !instance.defaultProps;
            warning$9(noInstanceDefaultProps, "Setting defaultProps as an instance property on %s is not supported and will be ignored." + " Instead, define defaultProps as a static property on %s.", name, name);
            var state = instance.state;
            state && ("object" != typeof state || isArray$1(state)) && invariant(!1, "%s.state: must be set to an object or null", getComponentName_1(workInProgress)), "function" == typeof instance.getChildContext && invariant("object" == typeof workInProgress.type.childContextTypes, "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", getComponentName_1(workInProgress));
        }
        function resetInputPointers(workInProgress, instance) {
            instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
        }
        function adoptClassInstance(workInProgress, instance) {
            instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress), instance._reactInternalInstance = fakeInternalInstance;
        }
        function constructClassInstance(workInProgress, props) {
            var ctor = workInProgress.type,
                unmaskedContext = getUnmaskedContext$2(workInProgress),
                needsContext = isContextConsumer$1(workInProgress),
                context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
                instance = new ctor(props, context);
            return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
        }
        function callComponentWillMount(workInProgress, instance) {
            startPhaseTimer$1(workInProgress, "componentWillMount");
            var oldState = instance.state;
            instance.componentWillMount(), stopPhaseTimer$1(), oldState !== instance.state && (warning$9(!1, "%s.componentWillMount(): Assigning directly to this.state is " + "deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
        }
        function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
            startPhaseTimer$1(workInProgress, "componentWillReceiveProps");
            var oldState = instance.state;
            instance.componentWillReceiveProps(newProps, newContext), stopPhaseTimer$1(), instance.state !== oldState && (warning$9(!1, "%s.componentWillReceiveProps(): Assigning directly to " + "this.state is deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
        }
        function mountClassInstance(workInProgress, priorityLevel) {
            var current = workInProgress.alternate;
            checkClassInstance(workInProgress);
            var instance = workInProgress.stateNode,
                state = instance.state || null,
                props = workInProgress.pendingProps;
            invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
            var unmaskedContext = getUnmaskedContext$2(workInProgress);
            if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && null != workInProgress.type.prototype && !0 === workInProgress.type.prototype.unstable_isAsyncReactComponent && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
                callComponentWillMount(workInProgress, instance);
                var updateQueue = workInProgress.updateQueue;
                null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
            }
            "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
        }
        function updateClassInstance(current, workInProgress, priorityLevel) {
            var instance = workInProgress.stateNode;
            resetInputPointers(workInProgress, instance);
            var oldProps = workInProgress.memoizedProps,
                newProps = workInProgress.pendingProps;
            newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
            var oldContext = instance.context,
                newUnmaskedContext = getUnmaskedContext$2(workInProgress),
                newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
            "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
            var oldState = workInProgress.memoizedState,
                newState = void 0;
            if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
            var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
            return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && (startPhaseTimer$1(workInProgress, "componentWillUpdate"), instance.componentWillUpdate(newProps, newState, newContext), stopPhaseTimer$1()), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
        }
        return {
            adoptClassInstance: adoptClassInstance,
            constructClassInstance: constructClassInstance,
            mountClassInstance: mountClassInstance,
            updateClassInstance: updateClassInstance
        };
    },
        mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
        reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
        reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
        cloneChildFibers = ReactChildFiber.cloneChildFibers,
        beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
        getMaskedContext$1 = ReactFiberContext.getMaskedContext,
        getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
        hasContextChanged$1 = ReactFiberContext.hasContextChanged,
        pushContextProvider$1 = ReactFiberContext.pushContextProvider,
        pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
        invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
        IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$6 = ReactTypeOfWork.ClassComponent,
        HostRoot$6 = ReactTypeOfWork.HostRoot,
        HostComponent$6 = ReactTypeOfWork.HostComponent,
        HostText$3 = ReactTypeOfWork.HostText,
        HostPortal$4 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
        CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
        YieldComponent$2 = ReactTypeOfWork.YieldComponent,
        Fragment$2 = ReactTypeOfWork.Fragment,
        NoWork$3 = ReactPriorityLevel.NoWork,
        OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
        PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
        Placement$2 = ReactTypeOfSideEffect.Placement,
        ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
        Err$1 = ReactTypeOfSideEffect.Err,
        Ref$1 = ReactTypeOfSideEffect.Ref,
        ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
        ReactDebugCurrentFiber$4 = ReactDebugCurrentFiber_1,
        _require7 = ReactDebugFiberPerf_1,
        cancelWorkTimer = _require7.cancelWorkTimer,
        warning$7 = require$$0,
        warnedAboutStatelessRefs = {},
        ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
        var shouldSetTextContent = config.shouldSetTextContent,
            useSyncScheduling = config.useSyncScheduling,
            shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
            pushHostContext = hostContext.pushHostContext,
            pushHostContainer = hostContext.pushHostContainer,
            enterHydrationState = hydrationContext.enterHydrationState,
            resetHydrationState = hydrationContext.resetHydrationState,
            tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
            _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
            adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
            constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
            mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
            updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
        function reconcileChildren(current, workInProgress, nextChildren) {
            reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
        }
        function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
            null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
        }
        function updateFragment(current, workInProgress) {
            var nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
        }
        function markRef(current, workInProgress) {
            var ref = workInProgress.ref;
            null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
        }
        function updateFunctionalComponent(current, workInProgress) {
            var fn = workInProgress.type,
                nextProps = workInProgress.pendingProps,
                memoizedProps = workInProgress.memoizedProps;
            if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            var nextChildren,
                unmaskedContext = getUnmaskedContext$1(workInProgress),
                context = getMaskedContext$1(workInProgress, unmaskedContext);
            return ReactCurrentOwner$2.current = workInProgress, ReactDebugCurrentFiber$4.setCurrentPhase("render"), nextChildren = fn(nextProps, context), ReactDebugCurrentFiber$4.setCurrentPhase(null), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
        }
        function updateClassComponent(current, workInProgress, priorityLevel) {
            var hasContext = pushContextProvider$1(workInProgress),
                shouldUpdate = void 0;
            return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
        }
        function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
            if (markRef(current, workInProgress), !shouldUpdate) return hasContext && invalidateContextProvider$1(workInProgress, !1), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var instance = workInProgress.stateNode;
            ReactCurrentOwner$2.current = workInProgress;
            var nextChildren = void 0;
            return ReactDebugCurrentFiber$4.setCurrentPhase("render"), nextChildren = instance.render(), ReactDebugCurrentFiber$4.setCurrentPhase(null), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress, !0), workInProgress.child;
        }
        function pushHostRootContext(workInProgress) {
            var root = workInProgress.stateNode;
            root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
        }
        function updateHostRoot(current, workInProgress, priorityLevel) {
            pushHostRootContext(workInProgress);
            var updateQueue = workInProgress.updateQueue;
            if (null !== updateQueue) {
                var prevState = workInProgress.memoizedState,
                    state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
                if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
                var element = state.element;
                return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
            }
            return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
        }
        function updateHostComponent(current, workInProgress, renderPriority) {
            pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
            var type = workInProgress.type,
                memoizedProps = workInProgress.memoizedProps,
                nextProps = workInProgress.pendingProps;
            null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
            var prevProps = null !== current ? current.memoizedProps : null;
            if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            var nextChildren = nextProps.children;
            return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
        }
        function updateHostText(current, workInProgress) {
            null === current && tryToClaimNextHydratableInstance(workInProgress);
            var nextProps = workInProgress.pendingProps;
            return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
        }
        function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
            invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
            var value,
                fn = workInProgress.type,
                props = workInProgress.pendingProps,
                unmaskedContext = getUnmaskedContext$1(workInProgress),
                context = getMaskedContext$1(workInProgress, unmaskedContext);
            if (ReactCurrentOwner$2.current = workInProgress, value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
                workInProgress.tag = ClassComponent$6;
                var hasContext = pushContextProvider$1(workInProgress);
                return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
            }
            workInProgress.tag = FunctionalComponent$1;
            var Component = workInProgress.type;
            if (Component && warning$7(!Component.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", Component.displayName || Component.name || "Component"), null !== workInProgress.ref) {
                var info = "",
                    ownerName = ReactDebugCurrentFiber$4.getCurrentFiberOwnerName();
                ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`.");
                var warningKey = ownerName || workInProgress._debugID || "",
                    debugSource = workInProgress._debugSource;
                debugSource && (warningKey = debugSource.fileName + ":" + debugSource.lineNumber), warnedAboutStatelessRefs[warningKey] || (warnedAboutStatelessRefs[warningKey] = !0, warning$7(!1, "Stateless function components cannot be given refs. " + "Attempts to access this ref will fail.%s%s", info, ReactDebugCurrentFiber$4.getCurrentFiberStackAddendum()));
            }
            return reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
        }
        function updateCoroutineComponent(current, workInProgress) {
            var nextCoroutine = workInProgress.pendingProps;
            hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
            var nextChildren = nextCoroutine.children,
                priorityLevel = workInProgress.pendingWorkPriority;
            return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
        }
        function updatePortalComponent(current, workInProgress) {
            pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
            var priorityLevel = workInProgress.pendingWorkPriority,
                nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
        }
        function bailoutOnAlreadyFinishedWork(current, workInProgress) {
            return cancelWorkTimer(workInProgress), cloneChildFibers(current, workInProgress), workInProgress.child;
        }
        function bailoutOnLowPriority(current, workInProgress) {
            switch (cancelWorkTimer(workInProgress), workInProgress.tag) {
                case HostRoot$6:
                    pushHostRootContext(workInProgress);
                    break;

                case ClassComponent$6:
                    pushContextProvider$1(workInProgress);
                    break;

                case HostPortal$4:
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
            }
            return null;
        }
        function memoizeProps(workInProgress, nextProps) {
            workInProgress.memoizedProps = nextProps;
        }
        function memoizeState(workInProgress, nextState) {
            workInProgress.memoizedState = nextState;
        }
        function beginWork(current, workInProgress, priorityLevel) {
            if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
            switch (workInProgress.tag) {
                case IndeterminateComponent$2:
                    return mountIndeterminateComponent(current, workInProgress, priorityLevel);

                case FunctionalComponent$1:
                    return updateFunctionalComponent(current, workInProgress);

                case ClassComponent$6:
                    return updateClassComponent(current, workInProgress, priorityLevel);

                case HostRoot$6:
                    return updateHostRoot(current, workInProgress, priorityLevel);

                case HostComponent$6:
                    return updateHostComponent(current, workInProgress, priorityLevel);

                case HostText$3:
                    return updateHostText(current, workInProgress);

                case CoroutineHandlerPhase:
                    workInProgress.tag = CoroutineComponent$1;

                case CoroutineComponent$1:
                    return updateCoroutineComponent(current, workInProgress);

                case YieldComponent$2:
                    return null;

                case HostPortal$4:
                    return updatePortalComponent(current, workInProgress);

                case Fragment$2:
                    return updateFragment(current, workInProgress);

                default:
                    invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        function beginFailedWork(current, workInProgress, priorityLevel) {
            switch (workInProgress.tag) {
                case ClassComponent$6:
                    pushContextProvider$1(workInProgress);
                    break;

                case HostRoot$6:
                    pushHostRootContext(workInProgress);
                    break;

                default:
                    invariant(!1, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue.");
            }
            if (workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
            if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
                var instance = workInProgress.stateNode;
                workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
            }
            return workInProgress.child;
        }
        return {
            beginWork: beginWork,
            beginFailedWork: beginFailedWork
        };
    },
        reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
        popContextProvider$2 = ReactFiberContext.popContextProvider,
        popTopLevelContextObject$1 = ReactFiberContext.popTopLevelContextObject,
        IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$8 = ReactTypeOfWork.ClassComponent,
        HostRoot$7 = ReactTypeOfWork.HostRoot,
        HostComponent$7 = ReactTypeOfWork.HostComponent,
        HostText$5 = ReactTypeOfWork.HostText,
        HostPortal$6 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
        CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
        YieldComponent$4 = ReactTypeOfWork.YieldComponent,
        Fragment$4 = ReactTypeOfWork.Fragment,
        Placement$4 = ReactTypeOfSideEffect.Placement,
        Ref$2 = ReactTypeOfSideEffect.Ref,
        Update$2 = ReactTypeOfSideEffect.Update,
        OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
        ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
        var createInstance = config.createInstance,
            createTextInstance = config.createTextInstance,
            appendInitialChild = config.appendInitialChild,
            finalizeInitialChildren = config.finalizeInitialChildren,
            prepareUpdate = config.prepareUpdate,
            getRootHostContainer = hostContext.getRootHostContainer,
            popHostContext = hostContext.popHostContext,
            getHostContext = hostContext.getHostContext,
            popHostContainer = hostContext.popHostContainer,
            prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
            prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
            popHydrationState = hydrationContext.popHydrationState;
        function markUpdate(workInProgress) {
            workInProgress.effectTag |= Update$2;
        }
        function markRef(workInProgress) {
            workInProgress.effectTag |= Ref$2;
        }
        function appendAllYields(yields, workInProgress) {
            var node = workInProgress.stateNode;
            for (node && (node.return = workInProgress); null !== node;) {
                if (node.tag === HostComponent$7 || node.tag === HostText$5 || node.tag === HostPortal$6) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$4) yields.push(node.type);else if (null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === workInProgress) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function moveCoroutineToHandlerPhase(current, workInProgress) {
            var coroutine = workInProgress.memoizedProps;
            invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
            var yields = [];
            appendAllYields(yields, workInProgress);
            var fn = coroutine.handler,
                props = coroutine.props,
                nextChildren = fn(props, yields),
                currentFirstChild = null !== current ? current.child : null,
                priority = workInProgress.pendingWorkPriority;
            return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
        }
        function appendAllChildren(parent, workInProgress) {
            for (var node = workInProgress.child; null !== node;) {
                if (node.tag === HostComponent$7 || node.tag === HostText$5) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$6) ;else if (null !== node.child) {
                    node = node.child;
                    continue;
                }
                if (node === workInProgress) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === workInProgress) return;
                    node = node.return;
                }
                node = node.sibling;
            }
        }
        function completeWork(current, workInProgress, renderPriority) {
            var newProps = workInProgress.pendingProps;
            switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
                case FunctionalComponent$3:
                    return null;

                case ClassComponent$8:
                    return popContextProvider$2(workInProgress), null;

                case HostRoot$7:
                    popHostContainer(workInProgress), popTopLevelContextObject$1(workInProgress);
                    var fiberRoot = workInProgress.stateNode;
                    return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

                case HostComponent$7:
                    popHostContext(workInProgress);
                    var rootContainerInstance = getRootHostContainer(),
                        type = workInProgress.type;
                    if (null !== current && null != workInProgress.stateNode) {
                        var oldProps = current.memoizedProps,
                            instance = workInProgress.stateNode,
                            currentHostContext = getHostContext(),
                            updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                        workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                    } else {
                        if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                        var _currentHostContext = getHostContext();
                        if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext) && markUpdate(workInProgress);else {
                            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                            appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                        }
                        null !== workInProgress.ref && markRef(workInProgress);
                    }
                    return null;

                case HostText$5:
                    var newText = newProps;
                    if (current && null != workInProgress.stateNode) {
                        current.memoizedProps !== newText && markUpdate(workInProgress);
                    } else {
                        if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                        var _rootContainerInstance = getRootHostContainer(),
                            _currentHostContext2 = getHostContext();
                        popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                    }
                    return null;

                case CoroutineComponent$3:
                    return moveCoroutineToHandlerPhase(current, workInProgress);

                case CoroutineHandlerPhase$1:
                    return workInProgress.tag = CoroutineComponent$3, null;

                case YieldComponent$4:
                case Fragment$4:
                    return null;

                case HostPortal$6:
                    return markUpdate(workInProgress), popHostContainer(workInProgress), null;

                case IndeterminateComponent$3:
                    invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

                default:
                    invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        return {
            completeWork: completeWork
        };
    },
        warning$10 = require$$0,
        onCommitFiberRoot = null,
        onCommitFiberUnmount = null,
        hasLoggedError = !1;
    function catchErrors(fn) {
        return function (arg) {
            try {
                return fn(arg);
            } catch (err) {
                0 || hasLoggedError || (hasLoggedError = !0, warning$10(!1, "React DevTools encountered an error: %s", err));
            }
        };
    }
    function injectInternals$1(internals) {
        if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!hook.supportsFiber) return warning$10(!1, "The installed version of React DevTools is too old and will not work " + "with the current version of React. Please update React DevTools. " + "https://fb.me/react-devtools"), !0;
        try {
            var rendererID = hook.inject(internals);
            onCommitFiberRoot = catchErrors(function (root) {
                return hook.onCommitFiberRoot(rendererID, root);
            }), onCommitFiberUnmount = catchErrors(function (fiber) {
                return hook.onCommitFiberUnmount(rendererID, fiber);
            });
        } catch (err) {
            warning$10(!1, "React DevTools encountered an error: %s.", err);
        }
        return !0;
    }
    function onCommitRoot$1(root) {
        "function" == typeof onCommitFiberRoot && onCommitFiberRoot(root);
    }
    function onCommitUnmount$1(fiber) {
        "function" == typeof onCommitFiberUnmount && onCommitFiberUnmount(fiber);
    }
    var injectInternals_1 = injectInternals$1,
        onCommitRoot_1 = onCommitRoot$1,
        onCommitUnmount_1 = onCommitUnmount$1,
        ReactFiberDevToolsHook = {
        injectInternals: injectInternals_1,
        onCommitRoot: onCommitRoot_1,
        onCommitUnmount: onCommitUnmount_1
    },
        ClassComponent$9 = ReactTypeOfWork.ClassComponent,
        HostRoot$8 = ReactTypeOfWork.HostRoot,
        HostComponent$8 = ReactTypeOfWork.HostComponent,
        HostText$6 = ReactTypeOfWork.HostText,
        HostPortal$7 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
        commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
        onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
        invokeGuardedCallback$2 = ReactErrorUtils_1.invokeGuardedCallback,
        hasCaughtError$1 = ReactErrorUtils_1.hasCaughtError,
        clearCaughtError$1 = ReactErrorUtils_1.clearCaughtError,
        Placement$5 = ReactTypeOfSideEffect.Placement,
        Update$3 = ReactTypeOfSideEffect.Update,
        Callback$1 = ReactTypeOfSideEffect.Callback,
        ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
        _require5$1 = ReactDebugFiberPerf_1,
        startPhaseTimer$2 = _require5$1.startPhaseTimer,
        stopPhaseTimer$2 = _require5$1.stopPhaseTimer,
        ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
        var commitMount = config.commitMount,
            commitUpdate = config.commitUpdate,
            resetTextContent = config.resetTextContent,
            commitTextUpdate = config.commitTextUpdate,
            appendChild = config.appendChild,
            appendChildToContainer = config.appendChildToContainer,
            insertBefore = config.insertBefore,
            insertInContainerBefore = config.insertInContainerBefore,
            removeChild = config.removeChild,
            removeChildFromContainer = config.removeChildFromContainer,
            getPublicInstance = config.getPublicInstance,
            callComponentWillUnmountWithTimerInDev = function callComponentWillUnmountWithTimerInDev(current, instance) {
            startPhaseTimer$2(current, "componentWillUnmount"), instance.props = current.memoizedProps, instance.state = current.memoizedState, instance.componentWillUnmount(), stopPhaseTimer$2();
        };
        function safelyCallComponentWillUnmount(current, instance) {
            if (invokeGuardedCallback$2(null, callComponentWillUnmountWithTimerInDev, null, current, instance), hasCaughtError$1()) {
                var unmountError = clearCaughtError$1();
                captureError(current, unmountError);
            }
        }
        function safelyDetachRef(current) {
            var ref = current.ref;
            if (null !== ref && (invokeGuardedCallback$2(null, ref, null, null), hasCaughtError$1())) {
                var refError = clearCaughtError$1();
                captureError(current, refError);
            }
        }
        function getHostParentFiber(fiber) {
            for (var parent = fiber.return; null !== parent;) {
                if (isHostParent(parent)) return parent;
                parent = parent.return;
            }
            invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        function isHostParent(fiber) {
            return fiber.tag === HostComponent$8 || fiber.tag === HostRoot$8 || fiber.tag === HostPortal$7;
        }
        function getHostSibling(fiber) {
            var node = fiber;
            siblings: for (; !0;) {
                for (; null === node.sibling;) {
                    if (null === node.return || isHostParent(node.return)) return null;
                    node = node.return;
                }
                for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$8 && node.tag !== HostText$6;) {
                    if (node.effectTag & Placement$5) continue siblings;
                    if (null === node.child || node.tag === HostPortal$7) continue siblings;
                    node.child.return = node, node = node.child;
                }
                if (!(node.effectTag & Placement$5)) return node.stateNode;
            }
        }
        function commitPlacement(finishedWork) {
            var parentFiber = getHostParentFiber(finishedWork),
                parent = void 0,
                isContainer = void 0;
            switch (parentFiber.tag) {
                case HostComponent$8:
                    parent = parentFiber.stateNode, isContainer = !1;
                    break;

                case HostRoot$8:
                case HostPortal$7:
                    parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                    break;

                default:
                    invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
            }
            parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
            for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
                if (node.tag === HostComponent$8 || node.tag === HostText$6) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$7) ;else if (null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                if (node === finishedWork) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === finishedWork) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function commitNestedUnmounts(root) {
            for (var node = root; !0;) {
                if (commitUnmount(node), null === node.child || node.tag === HostPortal$7) {
                    if (node === root) return;
                    for (; null === node.sibling;) {
                        if (null === node.return || node.return === root) return;
                        node = node.return;
                    }
                    node.sibling.return = node.return, node = node.sibling;
                } else node.child.return = node, node = node.child;
            }
        }
        function unmountHostComponents(current) {
            for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
                if (!currentParentIsValid) {
                    var parent = node.return;
                    findParent: for (; !0;) {
                        switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                            case HostComponent$8:
                                currentParent = parent.stateNode, currentParentIsContainer = !1;
                                break findParent;

                            case HostRoot$8:
                            case HostPortal$7:
                                currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                                break findParent;
                        }
                        parent = parent.return;
                    }
                    currentParentIsValid = !0;
                }
                if (node.tag === HostComponent$8 || node.tag === HostText$6) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$7) {
                    if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                        node.child.return = node, node = node.child;
                        continue;
                    }
                } else if (commitUnmount(node), null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                if (node === current) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === current) return;
                    node = node.return, node.tag === HostPortal$7 && (currentParentIsValid = !1);
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function commitDeletion(current) {
            unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
        }
        function commitUnmount(current) {
            switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
                case ClassComponent$9:
                    safelyDetachRef(current);
                    var instance = current.stateNode;
                    return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

                case HostComponent$8:
                    return void safelyDetachRef(current);

                case CoroutineComponent$4:
                    return void commitNestedUnmounts(current.stateNode);

                case HostPortal$7:
                    return void unmountHostComponents(current);
            }
        }
        function commitWork(current, finishedWork) {
            switch (finishedWork.tag) {
                case ClassComponent$9:
                    return;

                case HostComponent$8:
                    var instance = finishedWork.stateNode;
                    if (null != instance) {
                        var newProps = finishedWork.memoizedProps,
                            oldProps = null !== current ? current.memoizedProps : newProps,
                            type = finishedWork.type,
                            updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                    }
                    return;

                case HostText$6:
                    invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode,
                        newText = finishedWork.memoizedProps,
                        oldText = null !== current ? current.memoizedProps : newText;
                    return void commitTextUpdate(textInstance, oldText, newText);

                case HostRoot$8:
                case HostPortal$7:
                    return;

                default:
                    invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
            }
        }
        function commitLifeCycles(current, finishedWork) {
            switch (finishedWork.tag) {
                case ClassComponent$9:
                    var instance = finishedWork.stateNode;
                    if (finishedWork.effectTag & Update$3) if (null === current) startPhaseTimer$2(finishedWork, "componentDidMount"), instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidMount(), stopPhaseTimer$2();else {
                        var prevProps = current.memoizedProps,
                            prevState = current.memoizedState;
                        startPhaseTimer$2(finishedWork, "componentDidUpdate"), instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidUpdate(prevProps, prevState), stopPhaseTimer$2();
                    }
                    return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

                case HostRoot$8:
                    var updateQueue = finishedWork.updateQueue;
                    if (null !== updateQueue) {
                        var _instance = finishedWork.child && finishedWork.child.stateNode;
                        commitCallbacks$1(finishedWork, updateQueue, _instance);
                    }
                    return;

                case HostComponent$8:
                    var _instance2 = finishedWork.stateNode;
                    if (null === current && finishedWork.effectTag & Update$3) {
                        var type = finishedWork.type,
                            props = finishedWork.memoizedProps;
                        commitMount(_instance2, type, props, finishedWork);
                    }
                    return;

                case HostText$6:
                case HostPortal$7:
                    return;

                default:
                    invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
            }
        }
        function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (null !== ref) {
                var instance = finishedWork.stateNode;
                switch (finishedWork.tag) {
                    case HostComponent$8:
                        ref(getPublicInstance(instance));
                        break;

                    default:
                        ref(instance);
                }
            }
        }
        function commitDetachRef(current) {
            var currentRef = current.ref;
            null !== currentRef && currentRef(null);
        }
        return {
            commitPlacement: commitPlacement,
            commitDeletion: commitDeletion,
            commitWork: commitWork,
            commitLifeCycles: commitLifeCycles,
            commitAttachRef: commitAttachRef,
            commitDetachRef: commitDetachRef
        };
    },
        createCursor$2 = ReactFiberStack.createCursor,
        pop$2 = ReactFiberStack.pop,
        push$2 = ReactFiberStack.push,
        NO_CONTEXT = {},
        ReactFiberHostContext = function ReactFiberHostContext(config) {
        var getChildHostContext = config.getChildHostContext,
            getRootHostContext = config.getRootHostContext,
            contextStackCursor = createCursor$2(NO_CONTEXT),
            contextFiberStackCursor = createCursor$2(NO_CONTEXT),
            rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
        function requiredContext(c) {
            return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
        }
        function getRootHostContainer() {
            return requiredContext(rootInstanceStackCursor.current);
        }
        function pushHostContainer(fiber, nextRootInstance) {
            push$2(rootInstanceStackCursor, nextRootInstance, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
            pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
            return requiredContext(contextStackCursor.current);
        }
        function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current),
                context = requiredContext(contextStackCursor.current),
                nextContext = getChildHostContext(context, fiber.type, rootInstance);
            context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
        }
        function popHostContext(fiber) {
            contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
        }
        function resetHostContainer() {
            contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
        }
        return {
            getHostContext: getHostContext,
            getRootHostContainer: getRootHostContainer,
            popHostContainer: popHostContainer,
            popHostContext: popHostContext,
            pushHostContainer: pushHostContainer,
            pushHostContext: pushHostContext,
            resetHostContainer: resetHostContainer
        };
    },
        HostComponent$9 = ReactTypeOfWork.HostComponent,
        HostText$7 = ReactTypeOfWork.HostText,
        HostRoot$9 = ReactTypeOfWork.HostRoot,
        Deletion$2 = ReactTypeOfSideEffect.Deletion,
        Placement$6 = ReactTypeOfSideEffect.Placement,
        createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
        ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
        var shouldSetTextContent = config.shouldSetTextContent,
            canHydrateInstance = config.canHydrateInstance,
            canHydrateTextInstance = config.canHydrateTextInstance,
            getNextHydratableSibling = config.getNextHydratableSibling,
            getFirstHydratableChild = config.getFirstHydratableChild,
            hydrateInstance = config.hydrateInstance,
            hydrateTextInstance = config.hydrateTextInstance,
            didNotHydrateInstance = config.didNotHydrateInstance,
            didNotFindHydratableInstance = config.didNotFindHydratableInstance,
            didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
        if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
            enterHydrationState: function enterHydrationState() {
                return !1;
            },
            resetHydrationState: function resetHydrationState() {},
            tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
            prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
                invariant(!1, "Expected prepareToHydrateHostInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
            },
            prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
                invariant(!1, "Expected prepareToHydrateHostTextInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
            },
            popHydrationState: function popHydrationState(fiber) {
                return !1;
            }
        };
        var hydrationParentFiber = null,
            nextHydratableInstance = null,
            isHydrating = !1;
        function enterHydrationState(fiber) {
            var parentInstance = fiber.stateNode.containerInfo;
            return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
        }
        function deleteHydratableInstance(returnFiber, instance) {
            switch (returnFiber.tag) {
                case HostRoot$9:
                    didNotHydrateInstance(returnFiber.stateNode.containerInfo, instance);
                    break;

                case HostComponent$9:
                    didNotHydrateInstance(returnFiber.stateNode, instance);
            }
            var childToDelete = createFiberFromHostInstanceForDeletion$1();
            childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.effectTag |= Placement$6;
            var parentInstance;
            switch (returnFiber.tag) {
                case HostComponent$9:
                    parentInstance = returnFiber.stateNode;
                    break;

                default:
                    return;
            }
            switch (fiber.tag) {
                case HostComponent$9:
                    var type = fiber.type,
                        props = fiber.pendingProps;
                    didNotFindHydratableInstance(parentInstance, type, props);
                    break;

                case HostText$7:
                    var text = fiber.pendingProps;
                    didNotFindHydratableTextInstance(parentInstance, text);
            }
        }
        function canHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
                case HostComponent$9:
                    var type = fiber.type,
                        props = fiber.pendingProps;
                    return canHydrateInstance(nextInstance, type, props);

                case HostText$7:
                    var text = fiber.pendingProps;
                    return canHydrateTextInstance(nextInstance, text);

                default:
                    return !1;
            }
        }
        function tryToClaimNextHydratableInstance(fiber) {
            if (isHydrating) {
                var nextInstance = nextHydratableInstance;
                if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                if (!canHydrate(fiber, nextInstance)) {
                    if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                    deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
                }
                fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
            }
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            var instance = fiber.stateNode,
                updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
            return fiber.updateQueue = updatePayload, null !== updatePayload;
        }
        function prepareToHydrateHostTextInstance(fiber) {
            var textInstance = fiber.stateNode;
            return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
        }
        function popToNextHostParent(fiber) {
            for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$9 && parent.tag !== HostRoot$9;) {
                parent = parent.return;
            }hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
            if (fiber !== hydrationParentFiber) return !1;
            if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
            var type = fiber.type;
            if (fiber.tag !== HostComponent$9 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
                deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
            }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
        }
        function resetHydrationState() {
            hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
        }
        return {
            enterHydrationState: enterHydrationState,
            resetHydrationState: resetHydrationState,
            tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
            prepareToHydrateHostInstance: prepareToHydrateHostInstance,
            prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
            popHydrationState: popHydrationState
        };
    },
        ReactFiberInstrumentation$2 = {
        debugTool: null
    },
        ReactFiberInstrumentation_1 = ReactFiberInstrumentation$2,
        popContextProvider$1 = ReactFiberContext.popContextProvider,
        reset$1 = ReactFiberStack.reset,
        getStackAddendumByWorkInProgressFiber$2 = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
        logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
        invokeGuardedCallback$1 = ReactErrorUtils_1.invokeGuardedCallback,
        hasCaughtError = ReactErrorUtils_1.hasCaughtError,
        clearCaughtError = ReactErrorUtils_1.clearCaughtError,
        ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
        createWorkInProgress$1 = ReactFiber.createWorkInProgress,
        largerPriority$1 = ReactFiber.largerPriority,
        onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
        NoWork$2 = ReactPriorityLevel.NoWork,
        SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
        TaskPriority$1 = ReactPriorityLevel.TaskPriority,
        HighPriority = ReactPriorityLevel.HighPriority,
        LowPriority = ReactPriorityLevel.LowPriority,
        OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
        AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
        PerformedWork = ReactTypeOfSideEffect.PerformedWork,
        Placement$1 = ReactTypeOfSideEffect.Placement,
        Update = ReactTypeOfSideEffect.Update,
        PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
        Deletion = ReactTypeOfSideEffect.Deletion,
        ContentReset = ReactTypeOfSideEffect.ContentReset,
        Callback = ReactTypeOfSideEffect.Callback,
        Err = ReactTypeOfSideEffect.Err,
        Ref = ReactTypeOfSideEffect.Ref,
        HostRoot$5 = ReactTypeOfWork.HostRoot,
        HostComponent$5 = ReactTypeOfWork.HostComponent,
        HostPortal$3 = ReactTypeOfWork.HostPortal,
        ClassComponent$5 = ReactTypeOfWork.ClassComponent,
        getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
        _require14 = ReactFiberContext,
        resetContext$1 = _require14.resetContext,
        warning$6 = require$$0,
        ReactFiberInstrumentation$1 = ReactFiberInstrumentation_1,
        ReactDebugCurrentFiber$3 = ReactDebugCurrentFiber_1,
        _require15 = ReactDebugFiberPerf_1,
        recordEffect = _require15.recordEffect,
        recordScheduleUpdate = _require15.recordScheduleUpdate,
        startWorkTimer = _require15.startWorkTimer,
        stopWorkTimer = _require15.stopWorkTimer,
        stopFailedWorkTimer = _require15.stopFailedWorkTimer,
        startWorkLoopTimer = _require15.startWorkLoopTimer,
        stopWorkLoopTimer = _require15.stopWorkLoopTimer,
        startCommitTimer = _require15.startCommitTimer,
        stopCommitTimer = _require15.stopCommitTimer,
        startCommitHostEffectsTimer = _require15.startCommitHostEffectsTimer,
        stopCommitHostEffectsTimer = _require15.stopCommitHostEffectsTimer,
        startCommitLifeCyclesTimer = _require15.startCommitLifeCyclesTimer,
        stopCommitLifeCyclesTimer = _require15.stopCommitLifeCyclesTimer,
        warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(instance) {
        var ctor = instance.constructor;
        warning$6(!1, "Can only update a mounted or mounting component. This usually means " + "you called setState, replaceState, or forceUpdate on an unmounted " + "component. This is a no-op.\n\nPlease check the code for the " + "%s component.", ctor && (ctor.displayName || ctor.name) || "ReactClass");
    },
        warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {
        switch (ReactDebugCurrentFiber$3.phase) {
            case "getChildContext":
                warning$6(!1, "setState(...): Cannot call setState() inside getChildContext()");
                break;

            case "render":
                warning$6(!1, "Cannot update during an existing state transition (such as within " + "`render` or another component's constructor). Render methods should " + "be a pure function of props and state; constructor side-effects are " + "an anti-pattern, but can be moved to `componentWillMount`.");
        }
    },
        timeHeuristicForUnitOfWork = 1,
        ReactFiberScheduler = function ReactFiberScheduler(config) {
        var hostContext = ReactFiberHostContext(config),
            hydrationContext = ReactFiberHydrationContext(config),
            popHostContainer = hostContext.popHostContainer,
            popHostContext = hostContext.popHostContext,
            resetHostContainer = hostContext.resetHostContainer,
            _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
            beginWork = _ReactFiberBeginWork.beginWork,
            beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
            _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
            completeWork = _ReactFiberCompleteWo.completeWork,
            _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
            commitPlacement = _ReactFiberCommitWork.commitPlacement,
            commitDeletion = _ReactFiberCommitWork.commitDeletion,
            commitWork = _ReactFiberCommitWork.commitWork,
            commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
            commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
            commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
            scheduleDeferredCallback = config.scheduleDeferredCallback,
            useSyncScheduling = config.useSyncScheduling,
            prepareForCommit = config.prepareForCommit,
            resetAfterCommit = config.resetAfterCommit,
            priorityContext = NoWork$2,
            isPerformingWork = !1,
            deadlineHasExpired = !1,
            isBatchingUpdates = !1,
            isUnbatchingUpdates = !1,
            nextUnitOfWork = null,
            nextPriorityLevel = NoWork$2,
            nextEffect = null,
            pendingCommit = null,
            nextScheduledRoot = null,
            lastScheduledRoot = null,
            isCallbackScheduled = !1,
            capturedErrors = null,
            failedBoundaries = null,
            commitPhaseBoundaries = null,
            firstUncaughtError = null,
            didFatal = !1,
            isCommitting = !1,
            isUnmounting = !1,
            NESTED_UPDATE_LIMIT = 1e3,
            nestedUpdateCount = 0,
            nextRenderedTree = null;
        function resetContextStack() {
            reset$1(), resetContext$1(), resetHostContainer();
        }
        function resetNextUnitOfWork() {
            for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
                nextScheduledRoot.isScheduled = !1;
                var next = nextScheduledRoot.nextScheduledRoot;
                if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
                nextScheduledRoot = next;
            }
            for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
                root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
            }if (null !== highestPriorityRoot) return nextPriorityLevel = highestPriorityLevel, resetContextStack(), nextUnitOfWork = createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel), void (highestPriorityRoot !== nextRenderedTree && (nestedUpdateCount = 0, nextRenderedTree = highestPriorityRoot));
            nextPriorityLevel = NoWork$2, nextUnitOfWork = null, nextRenderedTree = null;
        }
        function commitAllHostEffects() {
            for (; null !== nextEffect;) {
                ReactDebugCurrentFiber$3.setCurrentFiber(nextEffect), recordEffect();
                var effectTag = nextEffect.effectTag;
                if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                    var current = nextEffect.alternate;
                    null !== current && commitDetachRef(current);
                }
                switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                    case Placement$1:
                        commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                        break;

                    case PlacementAndUpdate:
                        commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                        var _current = nextEffect.alternate;
                        commitWork(_current, nextEffect);
                        break;

                    case Update:
                        var _current2 = nextEffect.alternate;
                        commitWork(_current2, nextEffect);
                        break;

                    case Deletion:
                        isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
                }
                nextEffect = nextEffect.nextEffect;
            }
            ReactDebugCurrentFiber$3.resetCurrentFiber();
        }
        function commitAllLifeCycles() {
            for (; null !== nextEffect;) {
                var effectTag = nextEffect.effectTag;
                if (effectTag & (Update | Callback)) {
                    recordEffect();
                    var current = nextEffect.alternate;
                    commitLifeCycles(current, nextEffect);
                }
                effectTag & Ref && (recordEffect(), commitAttachRef(nextEffect)), effectTag & Err && (recordEffect(), commitErrorHandling(nextEffect));
                var next = nextEffect.nextEffect;
                nextEffect.nextEffect = null, nextEffect = next;
            }
        }
        function commitAllWork(finishedWork) {
            isCommitting = !0, startCommitTimer(), pendingCommit = null;
            var root = finishedWork.stateNode;
            invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), nextPriorityLevel !== SynchronousPriority$1 && nextPriorityLevel !== TaskPriority$1 || nestedUpdateCount++, ReactCurrentOwner$1.current = null;
            var firstEffect = void 0;
            for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect, startCommitHostEffectsTimer(); null !== nextEffect;) {
                var didError = !1,
                    _error = void 0;
                invokeGuardedCallback$1(null, commitAllHostEffects, null), hasCaughtError() && (didError = !0, _error = clearCaughtError()), didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
            }
            for (stopCommitHostEffectsTimer(), resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect, startCommitLifeCyclesTimer(); null !== nextEffect;) {
                var _didError = !1,
                    _error2 = void 0;
                invokeGuardedCallback$1(null, commitAllLifeCycles, null), hasCaughtError() && (_didError = !0, _error2 = clearCaughtError()), _didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
            }
            isCommitting = !1, stopCommitLifeCyclesTimer(), stopCommitTimer(), "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), resetNextUnitOfWork();
        }
        function resetWorkPriority(workInProgress, renderPriority) {
            if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
                for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                    newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
                }workInProgress.pendingWorkPriority = newPriority;
            }
        }
        function completeUnitOfWork(workInProgress) {
            for (; !0;) {
                var current = workInProgress.alternate;
                ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
                var next = completeWork(current, workInProgress, nextPriorityLevel);
                ReactDebugCurrentFiber$3.resetCurrentFiber();
                var returnFiber = workInProgress.return,
                    siblingFiber = workInProgress.sibling;
                if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
                if (null !== returnFiber) {
                    null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                    workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
                }
                if (stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
                if (null === returnFiber) return pendingCommit = workInProgress, null;
                workInProgress = returnFiber;
            }
            return null;
        }
        function performUnitOfWork(workInProgress) {
            var current = workInProgress.alternate;
            startWorkTimer(workInProgress), ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
            var next = beginWork(current, workInProgress, nextPriorityLevel);
            return ReactDebugCurrentFiber$3.resetCurrentFiber(), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
        }
        function performFailedUnitOfWork(workInProgress) {
            var current = workInProgress.alternate;
            startWorkTimer(workInProgress), ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
            var next = beginFailedWork(current, workInProgress, nextPriorityLevel);
            return ReactDebugCurrentFiber$3.resetCurrentFiber(), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
        }
        function performDeferredWork(deadline) {
            performWork(OffscreenPriority, deadline);
        }
        function handleCommitPhaseErrors() {
            if (null !== capturedErrors && capturedErrors.size > 0 && nextPriorityLevel === TaskPriority$1) for (; null !== nextUnitOfWork && (null !== (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) || (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, null !== capturedErrors && 0 !== capturedErrors.size && nextPriorityLevel === TaskPriority$1));) {}
        }
        function workLoop(minPriorityLevel, deadline) {
            if (null !== pendingCommit ? (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), handleCommitPhaseErrors()) : null === nextUnitOfWork && resetNextUnitOfWork(), !(nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel)) {
                priorityContext = nextPriorityLevel;
                loop: do {
                    if (nextPriorityLevel <= TaskPriority$1) for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {} else if (null !== deadline) for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
                        if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                            if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork))) if (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                                if (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                            } else deadlineHasExpired = !0;
                        } else deadlineHasExpired = !0;
                    }switch (nextPriorityLevel) {
                        case SynchronousPriority$1:
                        case TaskPriority$1:
                            if (nextPriorityLevel <= minPriorityLevel) continue loop;
                            break loop;

                        case HighPriority:
                        case LowPriority:
                        case OffscreenPriority:
                            if (null === deadline) break loop;
                            if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue loop;
                            break loop;

                        case NoWork$2:
                            break loop;

                        default:
                            invariant(!1, "Switch statement should be exhuastive. " + "This error is likely caused by a bug in React. Please file an issue.");
                    }
                } while (!0);
            }
        }
        function performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline) {
            unwindContexts(failedWork, boundary), nextUnitOfWork = performFailedUnitOfWork(boundary), workLoop(minPriorityLevel, deadline);
        }
        function performWork(minPriorityLevel, deadline) {
            startWorkLoopTimer(), invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
            var previousPriorityContext = priorityContext,
                didError = !1,
                error = null;
            for (invokeGuardedCallback$1(null, workLoop, null, minPriorityLevel, deadline), hasCaughtError() && (didError = !0, error = clearCaughtError()); didError;) {
                if (didFatal) {
                    firstUncaughtError = error;
                    break;
                }
                var failedWork = nextUnitOfWork;
                if (null !== failedWork) {
                    var boundary = captureError(failedWork, error);
                    if (invariant(null !== boundary, "Should have found an error boundary. This error is likely " + "caused by a bug in React. Please file an issue."), !didFatal) {
                        if (didError = !1, error = null, invokeGuardedCallback$1(null, performWorkCatchBlock, null, failedWork, boundary, minPriorityLevel, deadline), !hasCaughtError()) break;
                        didError = !0, error = clearCaughtError();
                    }
                } else didFatal = !0;
            }
            priorityContext = previousPriorityContext, null !== deadline && (isCallbackScheduled = !1), nextPriorityLevel > TaskPriority$1 && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
            var errorToThrow = firstUncaughtError;
            if (isPerformingWork = !1, deadlineHasExpired = !1, didFatal = !1, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, nextRenderedTree = null, nestedUpdateCount = 0, stopWorkLoopTimer(), null !== errorToThrow) throw errorToThrow;
        }
        function captureError(failedWork, error) {
            ReactCurrentOwner$1.current = null, ReactDebugCurrentFiber$3.resetCurrentFiber();
            var boundary = null,
                errorBoundaryFound = !1,
                willRetry = !1,
                errorBoundaryName = null;
            if (failedWork.tag === HostRoot$5) boundary = failedWork, isFailedBoundary(failedWork) && (didFatal = !0);else for (var node = failedWork.return; null !== node && null === boundary;) {
                if (node.tag === ClassComponent$5) {
                    var instance = node.stateNode;
                    "function" == typeof instance.componentDidCatch && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
                } else node.tag === HostRoot$5 && (boundary = node);
                if (isFailedBoundary(node)) {
                    if (isUnmounting) return null;
                    if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                    boundary = null, willRetry = !1;
                }
                node = node.return;
            }
            if (null !== boundary) {
                null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
                var _componentStack = getStackAddendumByWorkInProgressFiber$2(failedWork),
                    _componentName = getComponentName_1(failedWork);
                null === capturedErrors && (capturedErrors = new Map());
                var capturedError = {
                    componentName: _componentName,
                    componentStack: _componentStack,
                    error: error,
                    errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                    errorBoundaryFound: errorBoundaryFound,
                    errorBoundaryName: errorBoundaryName,
                    willRetry: willRetry
                };
                capturedErrors.set(boundary, capturedError);
                try {
                    logCapturedError$1(capturedError);
                } catch (e) {
                    console.error(e);
                }
                return isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
            }
            return null === firstUncaughtError && (firstUncaughtError = error), null;
        }
        function hasCapturedError(fiber) {
            return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
        }
        function isFailedBoundary(fiber) {
            return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
        }
        function commitErrorHandling(effectfulFiber) {
            var capturedError = void 0;
            switch (null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue."), effectfulFiber.tag) {
                case ClassComponent$5:
                    var instance = effectfulFiber.stateNode,
                        info = {
                        componentStack: capturedError.componentStack
                    };
                    return void instance.componentDidCatch(capturedError.error, info);

                case HostRoot$5:
                    return void (null === firstUncaughtError && (firstUncaughtError = capturedError.error));

                default:
                    invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        function unwindContexts(from, to) {
            for (var node = from; null !== node;) {
                switch (node.tag) {
                    case ClassComponent$5:
                        popContextProvider$1(node);
                        break;

                    case HostComponent$5:
                        popHostContext(node);
                        break;

                    case HostRoot$5:
                    case HostPortal$3:
                        popHostContainer(node);
                }
                if (node === to || node.alternate === to) {
                    stopFailedWorkTimer(node);
                    break;
                }
                stopWorkTimer(node), node = node.return;
            }
        }
        function scheduleRoot(root, priorityLevel) {
            priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
        }
        function scheduleUpdate(fiber, priorityLevel) {
            return scheduleUpdateImpl(fiber, priorityLevel, !1);
        }
        function scheduleUpdateImpl(fiber, priorityLevel, isErrorRecovery) {
            if (recordScheduleUpdate(), nestedUpdateCount > NESTED_UPDATE_LIMIT && (didFatal = !0, invariant(!1, "Maximum update depth exceeded. This can happen when a " + "component repeatedly calls setState inside componentWillUpdate or " + "componentDidUpdate. React limits the number of nested updates to " + "prevent infinite loops.")), !isPerformingWork && priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null), !isErrorRecovery && fiber.tag === ClassComponent$5) {
                var instance = fiber.stateNode;
                warnAboutInvalidUpdates(instance);
            }
            for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
                if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                    if (node.tag !== HostRoot$5) return void (isErrorRecovery || fiber.tag !== ClassComponent$5 || warnAboutUpdateOnUnmounted(fiber.stateNode));
                    if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                        case SynchronousPriority$1:
                            isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                            break;

                        case TaskPriority$1:
                            invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                            break;

                        default:
                            isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                    }
                }
                node = node.return;
            }
        }
        function getPriorityContext(fiber, forceAsync) {
            var priorityLevel = priorityContext;
            return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
        }
        function scheduleErrorRecovery(fiber) {
            scheduleUpdateImpl(fiber, TaskPriority$1, !0);
        }
        function batchedUpdates(fn, a) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = !0;
            try {
                return fn(a);
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
            }
        }
        function unbatchedUpdates(fn) {
            var previousIsUnbatchingUpdates = isUnbatchingUpdates,
                previousIsBatchingUpdates = isBatchingUpdates;
            isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
            try {
                return fn();
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
            }
        }
        function flushSync(batch) {
            var previousIsBatchingUpdates = isBatchingUpdates,
                previousPriorityContext = priorityContext;
            isBatchingUpdates = !0, priorityContext = SynchronousPriority$1;
            try {
                return batch();
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, priorityContext = previousPriorityContext, invariant(!isPerformingWork, "flushSync was called from inside a lifecycle method. It cannot be " + "called when React is already rendering."), performWork(TaskPriority$1, null);
            }
        }
        function deferredUpdates(fn) {
            var previousPriorityContext = priorityContext;
            priorityContext = LowPriority;
            try {
                return fn();
            } finally {
                priorityContext = previousPriorityContext;
            }
        }
        return {
            scheduleUpdate: scheduleUpdate,
            getPriorityContext: getPriorityContext,
            batchedUpdates: batchedUpdates,
            unbatchedUpdates: unbatchedUpdates,
            flushSync: flushSync,
            deferredUpdates: deferredUpdates
        };
    },
        addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
        findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
        isContextProvider = ReactFiberContext.isContextProvider,
        processChildContext = ReactFiberContext.processChildContext,
        createFiberRoot = ReactFiberRoot.createFiberRoot,
        HostComponent = ReactTypeOfWork.HostComponent,
        warning$1 = require$$0,
        ReactFiberInstrumentation = ReactFiberInstrumentation_1,
        ReactDebugCurrentFiber = ReactDebugCurrentFiber_1,
        getComponentName = getComponentName_1,
        findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber,
        findCurrentHostFiberWithNoPortals = ReactFiberTreeReflection.findCurrentHostFiberWithNoPortals;
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyObject;
        var fiber = ReactInstanceMap_1.get(parentComponent),
            parentContext = findCurrentUnmaskedContext(fiber);
        return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
    }
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var objects = {},
        uniqueID = 1,
        emptyObject$3 = {},
        ReactNativePropRegistry = function () {
        function ReactNativePropRegistry() {
            _classCallCheck(this, ReactNativePropRegistry);
        }
        return ReactNativePropRegistry.register = function (object) {
            var id = ++uniqueID;
            return Object.freeze(object), objects[id] = object, id;
        }, ReactNativePropRegistry.getByID = function (id) {
            if (!id) return emptyObject$3;
            var object = objects[id];
            return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
        }, ReactNativePropRegistry;
    }(),
        ReactNativePropRegistry_1 = ReactNativePropRegistry,
        emptyObject$2 = {},
        removedKeys = null,
        removedKeyCount = 0;
    function defaultDiffer(prevProp, nextProp) {
        return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
    }
    function resolveObject(idOrObject) {
        return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
    }
    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
        if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        } else if (node && removedKeyCount > 0) {
            var obj = resolveObject(node);
            for (var propKey in removedKeys) {
                if (removedKeys[propKey]) {
                    var nextProp = obj[propKey];
                    if (void 0 !== nextProp) {
                        var attributeConfig = validAttributes[propKey];
                        if (attributeConfig) {
                            if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                                updatePayload[propKey] = nextValue;
                            }
                            removedKeys[propKey] = !1, removedKeyCount--;
                        }
                    }
                }
            }
        }
    }
    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
        var i,
            minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
        for (i = 0; i < minLength; i++) {
            updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
        }for (; i < prevArray.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
        }for (; i < nextArray.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
        }return updatePayload;
    }
    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
        return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
    }
    function addNestedProperty(updatePayload, nextProp, validAttributes) {
        if (!nextProp) return updatePayload;
        if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
        for (var i = 0; i < nextProp.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
        }return updatePayload;
    }
    function clearNestedProperty(updatePayload, prevProp, validAttributes) {
        if (!prevProp) return updatePayload;
        if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
        for (var i = 0; i < prevProp.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
        }return updatePayload;
    }
    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
        var attributeConfig, nextProp, prevProp;
        for (var propKey in nextProps) {
            if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
                if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                    var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                    updatePayload[propKey] = nextValue;
                }
            } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
                shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
            } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
        }for (propKey in prevProps) {
            void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
        }return updatePayload;
    }
    function addProperties(updatePayload, props, validAttributes) {
        return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
    }
    function clearProperties(updatePayload, prevProps, validAttributes) {
        return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
    }
    var ReactNativeAttributePayload = {
        create: function create(props, validAttributes) {
            return addProperties(null, props, validAttributes);
        },
        diff: function diff(prevProps, nextProps, validAttributes) {
            return diffProperties(null, prevProps, nextProps, validAttributes);
        }
    },
        ReactNativeAttributePayload_1 = ReactNativeAttributePayload;
    function mountSafeCallback$1(context, callback) {
        return function () {
            if (callback) {
                if ("boolean" == typeof context.__isMounted) {
                    if (!context.__isMounted) return;
                } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
                return callback.apply(context, arguments);
            }
        };
    }
    function throwOnStylesProp(component, props) {
        if (void 0 !== props.styles) {
            var owner = component._owner || null,
                name = component.constructor.displayName,
                msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
            throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
        }
    }
    function warnForStyleProps$1(props, validAttributes) {
        for (var key in validAttributes.style) {
            validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
        }
    }
    var NativeMethodsMixinUtils = {
        mountSafeCallback: mountSafeCallback$1,
        throwOnStylesProp: throwOnStylesProp,
        warnForStyleProps: warnForStyleProps$1
    };
    function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
        warnForStyleProps = NativeMethodsMixinUtils.warnForStyleProps,
        ReactNativeFiberHostComponent = function () {
        function ReactNativeFiberHostComponent(tag, viewConfig) {
            _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
        }
        return ReactNativeFiberHostComponent.prototype.blur = function () {
            TextInputState.blurTextInput(this._nativeTag);
        }, ReactNativeFiberHostComponent.prototype.focus = function () {
            TextInputState.focusTextInput(this._nativeTag);
        }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
            UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
        }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
            UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
        }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
        }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
            warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
            var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
        }, ReactNativeFiberHostComponent;
    }(),
        ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
        INITIAL_TAG_COUNT = 1,
        ReactNativeTagHandles = {
        tagsStartAt: INITIAL_TAG_COUNT,
        tagCount: INITIAL_TAG_COUNT,
        allocateTag: function allocateTag() {
            for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
                ReactNativeTagHandles.tagCount++;
            }var tag = ReactNativeTagHandles.tagCount;
            return ReactNativeTagHandles.tagCount++, tag;
        },
        assertRootTag: function assertRootTag(tag) {
            invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
        },
        reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
            return reactTag % 10 == 1;
        }
    },
        ReactNativeTagHandles_1 = ReactNativeTagHandles,
        viewConfigCallbacks = new Map(),
        viewConfigs = new Map(),
        ReactNativeViewConfigRegistry = {
        register: function register(name, callback) {
            return invariant(!viewConfigCallbacks.has(name), "Tried to register two views with the same name %s", name), viewConfigCallbacks.set(name, callback), name;
        },
        get: function get(name) {
            var viewConfig = void 0;
            if (viewConfigs.has(name)) viewConfig = viewConfigs.get(name);else {
                var callback = viewConfigCallbacks.get(name);
                invariant("function" == typeof callback, "View config not found for name %s", name), viewConfigCallbacks.set(name, null), viewConfig = callback(), viewConfigs.set(name, viewConfig);
            }
            return invariant(viewConfig, "View config not found for name %s", name), viewConfig;
        }
    },
        ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
        precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
        uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
        updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;
    function recursivelyUncacheFiberNode(node) {
        "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
    }
    var NativeRenderer = function (config) {
        var getPublicInstance = config.getPublicInstance,
            _ReactFiberScheduler = ReactFiberScheduler(config),
            scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
            getPriorityContext = _ReactFiberScheduler.getPriorityContext,
            batchedUpdates = _ReactFiberScheduler.batchedUpdates,
            unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
            flushSync = _ReactFiberScheduler.flushSync,
            deferredUpdates = _ReactFiberScheduler.deferredUpdates;
        function scheduleTopLevelUpdate(current, element, callback) {
            "render" === ReactDebugCurrentFiber.phase && null !== ReactDebugCurrentFiber.current && warning$1(!1, "Render methods should be a pure function of props and state; " + "triggering nested component updates from render is not allowed. " + "If necessary, trigger nested updates in componentDidUpdate.\n\n" + "Check the render method of %s.", getComponentName(ReactDebugCurrentFiber.current) || "Unknown");
            var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && null != element.type.prototype && !0 === element.type.prototype.unstable_isAsyncReactComponent,
                priorityLevel = getPriorityContext(current, forceAsync),
                nextState = {
                element: element
            };
            callback = void 0 === callback ? null : callback, warning$1(null === callback || "function" == typeof callback, "render(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callback), addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
        }
        return {
            createContainer: function createContainer(containerInfo) {
                return createFiberRoot(containerInfo);
            },
            updateContainer: function updateContainer(element, container, parentComponent, callback) {
                var current = container.current;
                ReactFiberInstrumentation.debugTool && (null === current.alternate ? ReactFiberInstrumentation.debugTool.onMountContainer(container) : null === element ? ReactFiberInstrumentation.debugTool.onUnmountContainer(container) : ReactFiberInstrumentation.debugTool.onUpdateContainer(container));
                var context = getContextForSubtree(parentComponent);
                null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
            },
            batchedUpdates: batchedUpdates,
            unbatchedUpdates: unbatchedUpdates,
            deferredUpdates: deferredUpdates,
            flushSync: flushSync,
            getPublicRootInstance: function getPublicRootInstance(container) {
                var containerFiber = container.current;
                if (!containerFiber.child) return null;
                switch (containerFiber.child.tag) {
                    case HostComponent:
                        return getPublicInstance(containerFiber.child.stateNode);

                    default:
                        return containerFiber.child.stateNode;
                }
            },
            findHostInstance: function findHostInstance(fiber) {
                var hostFiber = findCurrentHostFiber(fiber);
                return null === hostFiber ? null : hostFiber.stateNode;
            },
            findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(fiber) {
                var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
                return null === hostFiber ? null : hostFiber.stateNode;
            }
        };
    }({
        appendChild: function appendChild(parentInstance, child) {
            var childTag = "number" == typeof child ? child : child._nativeTag,
                children = parentInstance._children,
                index = children.indexOf(child);
            index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
        },
        appendChildToContainer: function appendChildToContainer(parentInstance, child) {
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.setChildren(parentInstance, [childTag]);
        },
        appendInitialChild: function appendInitialChild(parentInstance, child) {
            parentInstance._children.push(child);
        },
        commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
            UIManager.updateView(textInstance, "RCTRawText", {
                text: newText
            });
        },
        commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
        commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
            var viewConfig = instance.viewConfig;
            updateFiberProps$1(instance._nativeTag, newProps);
            var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        },
        createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            var tag = ReactNativeTagHandles_1.allocateTag(),
                viewConfig = ReactNativeViewConfigRegistry_1.get(type);
            for (var key in viewConfig.validAttributes) {
                props.hasOwnProperty(key) && deepFreezeAndThrowOnMutationInDev(props[key]);
            }var updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
            UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
            var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
            return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
        },
        createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
            var tag = ReactNativeTagHandles_1.allocateTag();
            return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
                text: text
            }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
        },
        finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
            if (0 === parentInstance._children.length) return !1;
            var nativeTags = parentInstance._children.map(function (child) {
                return "number" == typeof child ? child : child._nativeTag;
            });
            return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
        },
        getRootHostContext: function getRootHostContext() {
            return emptyObject;
        },
        getChildHostContext: function getChildHostContext() {
            return emptyObject;
        },
        getPublicInstance: function getPublicInstance(instance) {
            return instance;
        },
        insertBefore: function insertBefore(parentInstance, child, beforeChild) {
            var children = parentInstance._children,
                index = children.indexOf(child);
            if (index >= 0) {
                children.splice(index, 1);
                var beforeChildIndex = children.indexOf(beforeChild);
                children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
            } else {
                var _beforeChildIndex = children.indexOf(beforeChild);
                children.splice(_beforeChildIndex, 0, child);
                var childTag = "number" == typeof child ? child : child._nativeTag;
                UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
            }
        },
        insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
            invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
        },
        prepareForCommit: function prepareForCommit() {},
        prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
            return emptyObject;
        },
        removeChild: function removeChild(parentInstance, child) {
            recursivelyUncacheFiberNode(child);
            var children = parentInstance._children,
                index = children.indexOf(child);
            children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
        },
        removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
            recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
        },
        resetAfterCommit: function resetAfterCommit() {},
        resetTextContent: function resetTextContent(instance) {},
        shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
            return !1;
        },
        scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
        shouldSetTextContent: function shouldSetTextContent(type, props) {
            return !1;
        },
        useSyncScheduling: !0
    }),
        ReactNativeFiberRenderer = NativeRenderer,
        getClosestInstanceFromNode = ReactNativeComponentTree_1.getClosestInstanceFromNode,
        findCurrentFiberUsingSlowPath$1 = ReactFiberTreeReflection.findCurrentFiberUsingSlowPath,
        HostComponent$10 = ReactTypeOfWork.HostComponent,
        getInspectorDataForViewTag = void 0,
        traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {
        instance && (hierarchy.unshift(instance), traverseOwnerTreeUp(hierarchy, instance._debugOwner));
    },
        getOwnerHierarchy = function getOwnerHierarchy(instance) {
        var hierarchy = [];
        return traverseOwnerTreeUp(hierarchy, instance), hierarchy;
    },
        lastNonHostInstance = function lastNonHostInstance(hierarchy) {
        for (var i = hierarchy.length - 1; i > 1; i--) {
            var instance = hierarchy[i];
            if (instance.tag !== HostComponent$10) return instance;
        }
        return hierarchy[0];
    },
        getHostProps = function getHostProps(fiber) {
        var host = ReactFiberTreeReflection.findCurrentHostFiber(fiber);
        return host ? host.memoizedProps || emptyObject : emptyObject;
    },
        getHostNode = function getHostNode(fiber, findNodeHandle) {
        for (var hostNode = void 0; fiber;) {
            if (null !== fiber.stateNode && fiber.tag === HostComponent$10 && (hostNode = findNodeHandle(fiber.stateNode)), hostNode) return hostNode;
            fiber = fiber.child;
        }
        return null;
    },
        createHierarchy = function createHierarchy(fiberHierarchy) {
        return fiberHierarchy.map(function (fiber) {
            return {
                name: getComponentName_1(fiber),
                getInspectorData: function getInspectorData(findNodeHandle) {
                    return {
                        measure: function measure(callback) {
                            return UIManager.measure(getHostNode(fiber, findNodeHandle), callback);
                        },
                        props: getHostProps(fiber),
                        source: fiber._debugSource
                    };
                }
            };
        });
    };
    getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {
        var closestInstance = getClosestInstanceFromNode(viewTag);
        if (!closestInstance) return {
            hierarchy: [],
            props: emptyObject,
            selection: null,
            source: null
        };
        var fiber = findCurrentFiberUsingSlowPath$1(closestInstance),
            fiberHierarchy = getOwnerHierarchy(fiber),
            instance = lastNonHostInstance(fiberHierarchy),
            hierarchy = createHierarchy(fiberHierarchy),
            props = getHostProps(instance),
            source = instance._debugSource;
        return {
            hierarchy: hierarchy,
            props: props,
            selection: fiberHierarchy.indexOf(instance),
            source: source
        };
    };
    var ReactNativeFiberInspector = {
        getInspectorDataForViewTag: getInspectorDataForViewTag
    },
        ReactVersion = "16.0.0",
        ReactCurrentOwner$3 = ReactGlobalSharedState_1.ReactCurrentOwner,
        warning$11 = require$$0;
    function findNodeHandle(componentOrHandle) {
        var owner = ReactCurrentOwner$3.current;
        if (null !== owner && null !== owner.stateNode && (warning$11(owner.stateNode._warnedAboutRefsInRender, "%s is accessing findNodeHandle inside its render(). " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", getComponentName_1(owner) || "A component"), owner.stateNode._warnedAboutRefsInRender = !0), null == componentOrHandle) return null;
        if ("number" == typeof componentOrHandle) return componentOrHandle;
        var component = componentOrHandle,
            internalInstance = ReactInstanceMap_1.get(component);
        return internalInstance ? ReactNativeFiberRenderer.findHostInstance(internalInstance) : component || (invariant("object" == typeof component && "_nativeTag" in component || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
    }
    var findNodeHandle_1 = findNodeHandle,
        findNumericNodeHandle = function findNumericNodeHandle(componentOrHandle) {
        var instance = findNodeHandle_1(componentOrHandle);
        return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
    },
        eventPluginOrder = null,
        namesToPlugins = {};
    function recomputePluginOrdering() {
        if (eventPluginOrder) for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName],
                pluginIndex = eventPluginOrder.indexOf(pluginName);
            if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
                invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
                var publishedEvents = pluginModule.eventTypes;
                for (var eventName in publishedEvents) {
                    invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
                }
            }
        }
    }
    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
        invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
        var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
        if (phasedRegistrationNames) {
            for (var phaseName in phasedRegistrationNames) {
                if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                    var phasedRegistrationName = phasedRegistrationNames[phaseName];
                    publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
                }
            }return !0;
        }
        return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
    }
    function publishRegistrationName(registrationName, pluginModule, eventName) {
        invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName, "onDoubleClick" === registrationName && (EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName);
    }
    var EventPluginRegistry = {
        plugins: [],
        eventNameDispatchConfigs: {},
        registrationNameModules: {},
        registrationNameDependencies: {},
        possibleRegistrationNames: {},
        injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
            invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
        },
        injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = !1;
            for (var pluginName in injectedNamesToPlugins) {
                if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                    var pluginModule = injectedNamesToPlugins[pluginName];
                    namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
                }
            }isOrderingDirty && recomputePluginOrdering();
        }
    },
        EventPluginRegistry_1 = EventPluginRegistry;
    function accumulateInto(current, next) {
        return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }
    var accumulateInto_1 = accumulateInto;
    function forEachAccumulated(arr, cb, scope) {
        Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
    }
    var forEachAccumulated_1 = forEachAccumulated,
        eventQueue = null,
        executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
        event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
    },
        executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
        return executeDispatchesAndRelease(e, !0);
    },
        executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
        return executeDispatchesAndRelease(e, !1);
    };
    function isInteractive(tag) {
        return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
                return !(!props.disabled || !isInteractive(type));

            default:
                return !1;
        }
    }
    var EventPluginHub = {
        injection: {
            injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
            injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
        },
        getListener: function getListener(inst, registrationName) {
            var listener,
                stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            return props ? (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props) ? null : (invariant(!listener || "function" == typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener), listener)) : null;
        },
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
                var possiblePlugin = plugins[i];
                if (possiblePlugin) {
                    var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                    extractedEvents && (events = accumulateInto_1(events, extractedEvents));
                }
            }
            return events;
        },
        enqueueEvents: function enqueueEvents(events) {
            events && (eventQueue = accumulateInto_1(eventQueue, events));
        },
        processEventQueue: function processEventQueue(simulated) {
            var processingEventQueue = eventQueue;
            eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
        }
    },
        EventPluginHub_1 = EventPluginHub,
        HostComponent$11 = ReactTypeOfWork.HostComponent;
    function getParent(inst) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent$11);
        return inst || null;
    }
    function getLowestCommonAncestor(instA, instB) {
        for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
            depthA++;
        }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
            depthB++;
        }for (; depthA - depthB > 0;) {
            instA = getParent(instA), depthA--;
        }for (; depthB - depthA > 0;) {
            instB = getParent(instB), depthB--;
        }for (var depth = depthA; depth--;) {
            if (instA === instB || instA === instB.alternate) return instA;
            instA = getParent(instA), instB = getParent(instB);
        }
        return null;
    }
    function isAncestor(instA, instB) {
        for (; instB;) {
            if (instA === instB || instA === instB.alternate) return !0;
            instB = getParent(instB);
        }
        return !1;
    }
    function getParentInstance(inst) {
        return getParent(inst);
    }
    function traverseTwoPhase(inst, fn, arg) {
        for (var path = []; inst;) {
            path.push(inst), inst = getParent(inst);
        }var i;
        for (i = path.length; i-- > 0;) {
            fn(path[i], "captured", arg);
        }for (i = 0; i < path.length; i++) {
            fn(path[i], "bubbled", arg);
        }
    }
    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
        for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
            pathFrom.push(from), from = getParent(from);
        }for (var pathTo = []; to && to !== common;) {
            pathTo.push(to), to = getParent(to);
        }var i;
        for (i = 0; i < pathFrom.length; i++) {
            fn(pathFrom[i], "bubbled", argFrom);
        }for (i = pathTo.length; i-- > 0;) {
            fn(pathTo[i], "captured", argTo);
        }
    }
    var ReactTreeTraversal = {
        isAncestor: isAncestor,
        getLowestCommonAncestor: getLowestCommonAncestor,
        getParentInstance: getParentInstance,
        traverseTwoPhase: traverseTwoPhase,
        traverseEnterLeave: traverseEnterLeave
    },
        getListener = EventPluginHub_1.getListener,
        warning$12 = require$$0;
    function listenerAtPhase(inst, event, propagationPhase) {
        var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
        return getListener(inst, registrationName);
    }
    function accumulateDirectionalDispatches(inst, phase, event) {
        warning$12(inst, "Dispatching inst must not be null");
        var listener = listenerAtPhase(inst, event, phase);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
        event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst,
                parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
            ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
        }
    }
    function accumulateDispatches(inst, ignoredDirection, event) {
        if (inst && event && event.dispatchConfig.registrationName) {
            var registrationName = event.dispatchConfig.registrationName,
                listener = getListener(inst, registrationName);
            listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
        }
    }
    function accumulateDirectDispatchesSingle(event) {
        event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
    }
    function accumulateTwoPhaseDispatches(events) {
        forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
        forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
        ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
        forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
        accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
        accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
        accumulateDirectDispatches: accumulateDirectDispatches,
        accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    },
        EventPropagators_1 = EventPropagators,
        didWarnForAddedNewProperty = !1,
        isProxySupported = "function" == typeof Proxy,
        EVENT_POOL_SIZE = 10,
        warning$13 = require$$0,
        shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
        EventInterface = {
        type: null,
        target: null,
        currentTarget: emptyFunction.thatReturnsNull,
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function timeStamp(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
        delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation, this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            if (Interface.hasOwnProperty(propName)) {
                delete this[propName];
                var normalize = Interface[propName];
                normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
            }
        }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
        return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
    }
    babelHelpers.extends(SyntheticEvent.prototype, {
        preventDefault: function preventDefault() {
            this.defaultPrevented = !0;
            var event = this.nativeEvent;
            event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
        },
        stopPropagation: function stopPropagation() {
            var event = this.nativeEvent;
            event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
        },
        persist: function persist() {
            this.isPersistent = emptyFunction.thatReturnsTrue;
        },
        isPersistent: emptyFunction.thatReturnsFalse,
        destructor: function destructor() {
            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
                Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
            }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
                this[shouldBeReleasedProperties[i]] = null;
            }Object.defineProperty(this, "nativeEvent", getPooledWarningPropertyDefinition("nativeEvent", null)), Object.defineProperty(this, "preventDefault", getPooledWarningPropertyDefinition("preventDefault", emptyFunction)), Object.defineProperty(this, "stopPropagation", getPooledWarningPropertyDefinition("stopPropagation", emptyFunction));
        }
    }), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
        var Super = this,
            E = function E() {};
        E.prototype = Super.prototype;
        var prototype = new E();
        babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, addEventPoolingTo(Class);
    }, isProxySupported && (SyntheticEvent = new Proxy(SyntheticEvent, {
        construct: function construct(target, args) {
            return this.apply(target, Object.create(target.prototype), args);
        },
        apply: function apply(constructor, that, args) {
            return new Proxy(constructor.apply(that, args), {
                set: function set(target, prop, value) {
                    return "isPersistent" === prop || target.constructor.Interface.hasOwnProperty(prop) || -1 !== shouldBeReleasedProperties.indexOf(prop) || (warning$13(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + "The property is never released. See " + "https://fb.me/react-event-pooling for more information."), didWarnForAddedNewProperty = !0), target[prop] = value, !0;
                }
            });
        }
    })), addEventPoolingTo(SyntheticEvent);
    var SyntheticEvent_1 = SyntheticEvent;
    function getPooledWarningPropertyDefinition(propName, getVal) {
        var isFunction = "function" == typeof getVal;
        return {
            configurable: !0,
            set: set,
            get: get
        };
        function set(val) {
            return warn(isFunction ? "setting the method" : "setting the property", "This is effectively a no-op"), val;
        }
        function get() {
            return warn(isFunction ? "accessing the method" : "accessing the property", isFunction ? "This is a no-op function" : "This is set to null"), getVal;
        }
        function warn(action, result) {
            warning$13(!1, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + "If you must keep the original synthetic event around, use event.persist(). " + "See https://fb.me/react-event-pooling for more information.", action, propName, result);
        }
    }
    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
        var EventConstructor = this;
        if (EventConstructor.eventPool.length) {
            var instance = EventConstructor.eventPool.pop();
            return EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst), instance;
        }
        return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }
    function releasePooledEvent(event) {
        var EventConstructor = this;
        invariant(event instanceof EventConstructor, "Trying to release an event instance  into a pool of a different type."), event.destructor(), EventConstructor.eventPool.length < EVENT_POOL_SIZE && EventConstructor.eventPool.push(event);
    }
    function addEventPoolingTo(EventConstructor) {
        EventConstructor.eventPool = [], EventConstructor.getPooled = getPooledEvent, EventConstructor.release = releasePooledEvent;
    }
    var customBubblingEventTypes = {},
        customDirectEventTypes = {},
        ReactNativeBridgeEventPlugin = {
        eventTypes: {},
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
                directDispatchConfig = customDirectEventTypes[topLevelType];
            invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
            var event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
            if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
                if (!directDispatchConfig) return null;
                EventPropagators_1.accumulateDirectDispatches(event);
            }
            return event;
        },
        processEventTypes: function processEventTypes(viewConfig) {
            var bubblingEventTypes = viewConfig.bubblingEventTypes,
                directEventTypes = viewConfig.directEventTypes;
            if (null != bubblingEventTypes && null != directEventTypes) for (var topLevelType in directEventTypes) {
                invariant(null == bubblingEventTypes[topLevelType], "Event cannot be both direct and bubbling: %s", topLevelType);
            }if (null != bubblingEventTypes) for (var _topLevelType in bubblingEventTypes) {
                null == customBubblingEventTypes[_topLevelType] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType] = customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType]);
            }if (null != directEventTypes) for (var _topLevelType2 in directEventTypes) {
                null == customDirectEventTypes[_topLevelType2] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType2] = customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2]);
            }
        }
    },
        ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;
    function runEventQueueInBatch(events) {
        EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
    }
    var ReactEventEmitterMixin = {
        handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
        }
    },
        ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
        warning$14 = require$$0,
        EMPTY_NATIVE_EVENT = {},
        touchSubsequence = function touchSubsequence(touches, indices) {
        for (var ret = [], i = 0; i < indices.length; i++) {
            ret.push(touches[indices[i]]);
        }return ret;
    },
        removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
        for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
            var index = indices[i];
            rippedOut.push(touches[index]), temp[index] = null;
        }
        for (var fillAt = 0, j = 0; j < temp.length; j++) {
            var cur = temp[j];
            null !== cur && (temp[fillAt++] = cur);
        }
        return temp.length = fillAt, rippedOut;
    },
        ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin_1, {
        registrationNames: EventPluginRegistry_1.registrationNameModules,
        getListener: EventPluginHub_1.getListener,
        _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
            var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
                inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
            ReactGenericBatching_1.batchedUpdates(function () {
                ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
            });
        },
        receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
            ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
        },
        receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
            for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
                var touch = changedTouches[jj];
                touch.changedTouches = changedTouches, touch.touches = touches;
                var nativeEvent = touch,
                    rootNodeID = null,
                    target = nativeEvent.target;
                null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt ? warning$14(!1, "A view is reporting that a touch occurred on tag zero.") : rootNodeID = target), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
            }
        }
    }),
        ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
        ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
        ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
        ReactNativeGlobalResponderHandler = {
        onChange: function onChange(from, to, blockNativeResponder) {
            if (null !== to) {
                var tag = to.stateNode._nativeTag;
                UIManager.setJSResponder(tag, blockNativeResponder);
            } else UIManager.clearJSResponder();
        }
    },
        ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
        ResponderEventInterface = {
        touchHistory: function touchHistory(nativeEvent) {
            return null;
        }
    };
    function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
    }
    SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);
    var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
        isEndish$2 = EventPluginUtils_1.isEndish,
        isMoveish$2 = EventPluginUtils_1.isMoveish,
        isStartish$2 = EventPluginUtils_1.isStartish,
        warning$15 = require$$0,
        MAX_TOUCH_BANK = 20,
        touchBank = [],
        touchHistory = {
        touchBank: touchBank,
        numberActiveTouches: 0,
        indexOfSingleActiveTouch: -1,
        mostRecentTimeStamp: 0
    };
    function timestampForTouch(touch) {
        return touch.timeStamp || touch.timestamp;
    }
    function createTouchRecord(touch) {
        return {
            touchActive: !0,
            startPageX: touch.pageX,
            startPageY: touch.pageY,
            startTimeStamp: timestampForTouch(touch),
            currentPageX: touch.pageX,
            currentPageY: touch.pageY,
            currentTimeStamp: timestampForTouch(touch),
            previousPageX: touch.pageX,
            previousPageY: touch.pageY,
            previousTimeStamp: timestampForTouch(touch)
        };
    }
    function resetTouchRecord(touchRecord, touch) {
        touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
    }
    function getTouchIdentifier(_ref) {
        var identifier = _ref.identifier;
        return invariant(null != identifier, "Touch object is missing identifier."), warning$15(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
    }
    function recordTouchStart(touch) {
        var identifier = getTouchIdentifier(touch),
            touchRecord = touchBank[identifier];
        touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
    }
    function recordTouchMove(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
    }
    function recordTouchEnd(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
    }
    function printTouch(touch) {
        return JSON.stringify({
            identifier: touch.identifier,
            pageX: touch.pageX,
            pageY: touch.pageY,
            timestamp: timestampForTouch(touch)
        });
    }
    function printTouchBank() {
        var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
        return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
    }
    var ResponderTouchHistoryStore = {
        recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
            if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) {
                for (var i = 0; i < touchBank.length; i++) {
                    var touchTrackToCheck = touchBank[i];
                    if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                        touchHistory.indexOfSingleActiveTouch = i;
                        break;
                    }
                }
                var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
                warning$15(null != activeRecord && activeRecord.touchActive, "Cannot find single active touch.");
            }
        },
        touchHistory: touchHistory
    },
        ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;
    function accumulate(current, next) {
        return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }
    var accumulate_1 = accumulate,
        isStartish$1 = EventPluginUtils_1.isStartish,
        isMoveish$1 = EventPluginUtils_1.isMoveish,
        isEndish$1 = EventPluginUtils_1.isEndish,
        executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
        hasDispatches$1 = EventPluginUtils_1.hasDispatches,
        executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
        responderInst = null,
        trackedTouchCount = 0,
        previousActiveTouches = 0,
        changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
        var oldResponderInst = responderInst;
        responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
    },
        eventTypes = {
        startShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onStartShouldSetResponder",
                captured: "onStartShouldSetResponderCapture"
            }
        },
        scrollShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onScrollShouldSetResponder",
                captured: "onScrollShouldSetResponderCapture"
            }
        },
        selectionChangeShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onSelectionChangeShouldSetResponder",
                captured: "onSelectionChangeShouldSetResponderCapture"
            }
        },
        moveShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onMoveShouldSetResponder",
                captured: "onMoveShouldSetResponderCapture"
            }
        },
        responderStart: {
            registrationName: "onResponderStart"
        },
        responderMove: {
            registrationName: "onResponderMove"
        },
        responderEnd: {
            registrationName: "onResponderEnd"
        },
        responderRelease: {
            registrationName: "onResponderRelease"
        },
        responderTerminationRequest: {
            registrationName: "onResponderTerminationRequest"
        },
        responderGrant: {
            registrationName: "onResponderGrant"
        },
        responderReject: {
            registrationName: "onResponderReject"
        },
        responderTerminate: {
            registrationName: "onResponderTerminate"
        }
    };
    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
            bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
            skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
            shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
        shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
        var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
        if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
        var extracted,
            grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
        grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
        var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
        if (responderInst) {
            var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
            terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
            var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
            if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
                var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
                terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
            } else {
                var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
                rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
            }
        } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
        return extracted;
    }
    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
        return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
    }
    function noResponderTouches(nativeEvent) {
        var touches = nativeEvent.touches;
        if (!touches || 0 === touches.length) return !0;
        for (var i = 0; i < touches.length; i++) {
            var activeTouch = touches[i],
                target = activeTouch.target;
            if (null !== target && void 0 !== target && 0 !== target) {
                var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
                if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
            }
        }
        return !0;
    }
    var ResponderEventPlugin = {
        _getResponder: function _getResponder() {
            return responderInst;
        },
        eventTypes: eventTypes,
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
                if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
                trackedTouchCount -= 1;
            }
            ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
            var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
                isResponderTouchStart = responderInst && isStartish$1(topLevelType),
                isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
                isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
                incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
            if (incrementalTouch) {
                var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
                gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
            }
            var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
                isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
                finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
            if (finalTouch) {
                var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
                finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
            }
            var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
            return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
        },
        GlobalResponderHandler: null,
        GlobalInteractionHandler: null,
        injection: {
            injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
                ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
            },
            injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
                ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
            }
        }
    },
        ResponderEventPlugin_1 = ResponderEventPlugin;
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
    function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _possibleConstructorReturn(self, call) {
        if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !call || "object" != typeof call && "function" != typeof call ? self : call;
    }
    function _inherits(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
    }
    var mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
        ReactNativeComponent = function (_React$Component) {
        _inherits(ReactNativeComponent, _React$Component);
        function ReactNativeComponent() {
            return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
        }
        return ReactNativeComponent.prototype.blur = function () {
            TextInputState.blurTextInput(findNumericNodeHandle(this));
        }, ReactNativeComponent.prototype.focus = function () {
            TextInputState.focusTextInput(findNumericNodeHandle(this));
        }, ReactNativeComponent.prototype.measure = function (callback) {
            UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
        }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
            UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
        }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
        }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
            var maybeInstance = void 0;
            try {
                maybeInstance = findNodeHandle_1(this);
            } catch (error) {}
            if (null != maybeInstance) {
                var viewConfig = maybeInstance.viewConfig,
                    updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
                null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
            }
        }, ReactNativeComponent;
    }(react.Component),
        ReactNativeComponent_1 = ReactNativeComponent,
        mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
        throwOnStylesProp$1 = NativeMethodsMixinUtils.throwOnStylesProp,
        warnForStyleProps$2 = NativeMethodsMixinUtils.warnForStyleProps,
        NativeMethodsMixin = {
        measure: function measure(callback) {
            UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
        },
        measureInWindow: function measureInWindow(callback) {
            UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
        },
        measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
        },
        setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = void 0;
            try {
                maybeInstance = findNodeHandle_1(this);
            } catch (error) {}
            if (null != maybeInstance) {
                var viewConfig = maybeInstance.viewConfig;
                warnForStyleProps$2(nativeProps, viewConfig.validAttributes);
                var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
                null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
            }
        },
        focus: function focus() {
            TextInputState.focusTextInput(findNumericNodeHandle(this));
        },
        blur: function blur() {
            TextInputState.blurTextInput(findNumericNodeHandle(this));
        }
    },
        NativeMethodsMixin_DEV = NativeMethodsMixin;
    invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, "Do not override existing functions."), NativeMethodsMixin_DEV.componentWillMount = function () {
        throwOnStylesProp$1(this, this.props);
    }, NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
        throwOnStylesProp$1(this, newProps);
    };
    var NativeMethodsMixin_1 = NativeMethodsMixin,
        TouchHistoryMath = {
        centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
            var touchBank = touchHistory.touchBank,
                total = 0,
                count = 0,
                oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
            if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
                var touchTrack = touchBank[i];
                if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                    var toAdd;
                    toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
                }
            }
            return count > 0 ? total / count : TouchHistoryMath.noCentroid;
        },
        currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
        },
        currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
        },
        previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
        },
        previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
        },
        currentCentroidX: function currentCentroidX(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
        },
        currentCentroidY: function currentCentroidY(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
        },
        noCentroid: -1
    },
        TouchHistoryMath_1 = TouchHistoryMath,
        createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
        return ReactNativeViewConfigRegistry_1.register(name, callback);
    },
        createReactNativeComponentClass_1 = createReactNativeComponentClass;
    function takeSnapshot(view, options) {
        return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle(view) || "window"), UIManager.__takeSnapshot(view, options);
    }
    var takeSnapshot_1 = takeSnapshot,
        injectInternals = ReactFiberDevToolsHook.injectInternals;
    ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);
    var roots = new Map();
    ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);
    var ReactNativeFiber = {
        NativeComponent: ReactNativeComponent_1,
        findNodeHandle: findNumericNodeHandle,
        render: function render(element, containerTag, callback) {
            var root = roots.get(containerTag);
            return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
        },
        unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
            var root = roots.get(containerTag);
            root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
                roots.delete(containerTag);
            });
        },
        unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
            ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
        },
        createPortal: function createPortal(children, containerTag) {
            var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
            return ReactPortal.createPortal(children, containerTag, null, key);
        },
        unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
        flushSync: ReactNativeFiberRenderer.flushSync,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            NativeMethodsMixin: NativeMethodsMixin_1,
            ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1,
            ReactGlobalSharedState: ReactGlobalSharedState_1,
            ReactNativeComponentTree: ReactNativeComponentTree_1,
            ReactNativePropRegistry: ReactNativePropRegistry_1,
            TouchHistoryMath: TouchHistoryMath_1,
            createReactNativeComponentClass: createReactNativeComponentClass_1,
            takeSnapshot: takeSnapshot_1
        }
    };
    babelHelpers.extends(ReactNativeFiber.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
        ReactDebugTool: {
            addHook: function addHook() {},
            removeHook: function removeHook() {}
        },
        ReactPerf: {
            start: function start() {},
            stop: function stop() {},
            printInclusive: function printInclusive() {},
            printWasted: function printWasted() {}
        }
    }), injectInternals({
        findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
        findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
        getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-native"
    });
    var ReactNativeFiberEntry = ReactNativeFiber;
    module.exports = ReactNativeFiberEntry;
}();
}, 22, null, "ReactNativeFiber-dev");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(24               ); // 24 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return;
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}, 23, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 24, null, "fbjs/lib/emptyFunction.js");
__d(/* ExceptionsManager */function(global, require, module, exports) {
'use strict';

var exceptionID = 0;
function reportException(e, isFatal) {
  var _require = require(15             ), // 15 = NativeModules
      ExceptionsManager = _require.ExceptionsManager;

  if (ExceptionsManager) {
    var parseErrorStack = require(26               ); // 26 = parseErrorStack
    var stack = parseErrorStack(e);
    var currentExceptionID = ++exceptionID;
    if (isFatal) {
      ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);
    } else {
      ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);
    }
    if (__DEV__) {
      var symbolicateStackTrace = require(29                     ); // 29 = symbolicateStackTrace
      symbolicateStackTrace(stack).then(function (prettyStack) {
        if (prettyStack) {
          ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);
        } else {
          throw new Error('The stack is null');
        }
      }).catch(function (error) {
        return console.warn('Unable to symbolicate stack trace: ' + error.message);
      });
    }
  }
}

function handleException(e, isFatal) {
  if (!e.message) {
    e = new Error(e);
  }
  if (console._errorOriginal) {
    console._errorOriginal(e.message);
  } else {
    console.error(e.message);
  }
  reportException(e, isFatal);
}

function reactConsoleErrorHandler() {
  console._errorOriginal.apply(console, arguments);
  if (!console.reportErrorsAsExceptions) {
    return;
  }

  if (arguments[0] && arguments[0].stack) {
    reportException(arguments[0], false);
  } else {
    var stringifySafe = require(33             ); // 33 = stringifySafe
    var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');
    if (str.slice(0, 10) === '"Warning: ') {
      return;
    }
    var error = new Error('console.error: ' + str);
    error.framesToPop = 1;
    reportException(error, false);
  }
}

function installConsoleErrorReporter() {
  if (console._errorOriginal) {
    return;
  }

  console._errorOriginal = console.error.bind(console);
  console.error = reactConsoleErrorHandler;
  if (console.reportErrorsAsExceptions === undefined) {
    console.reportErrorsAsExceptions = true;
  }
}

module.exports = { handleException: handleException, installConsoleErrorReporter: installConsoleErrorReporter };
}, 25, null, "ExceptionsManager");
__d(/* parseErrorStack */function(global, require, module, exports) {
'use strict';

function parseErrorStack(e) {
  if (!e || !e.stack) {
    return [];
  }

  var stacktraceParser = require(27                 ); // 27 = stacktrace-parser
  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);

  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;
  while (framesToPop--) {
    stack.shift();
  }
  return stack;
}

module.exports = parseErrorStack;
}, 26, null, "parseErrorStack");
__d(/* stacktrace-parser/index.js */function(global, require, module, exports) {module.exports = require(28                          ); // 28 = ./lib/stacktrace-parser.js
}, 27, null, "stacktrace-parser/index.js");
__d(/* stacktrace-parser/lib/stacktrace-parser.js */function(global, require, module, exports) {

var UNKNOWN_FUNCTION = '<unknown>';

var StackTraceParser = {
    parse: function parse(stackString) {
        var chrome = /^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            gecko = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
            node = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            lines = stackString.split('\n'),
            stack = [],
            parts,
            element;

        for (var i = 0, j = lines.length; i < j; ++i) {
            if (parts = gecko.exec(lines[i])) {
                element = {
                    'file': parts[3],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[4],
                    'column': parts[5] ? +parts[5] : null
                };
            } else if (parts = chrome.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else if (parts = node.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else {
                continue;
            }

            stack.push(element);
        }

        return stack;
    }
};

module.exports = StackTraceParser;
}, 28, null, "stacktrace-parser/lib/stacktrace-parser.js");
__d(/* symbolicateStackTrace */function(global, require, module, exports) {
'use strict';

var getDevServer = require(30            ); // 30 = getDevServer

var _require = require(15             ), // 15 = NativeModules
    SourceCode = _require.SourceCode;

var fetch = void 0;

function isSourcedFromDisk(sourcePath) {
  return !/^http/.test(sourcePath) && /[\\/]/.test(sourcePath);
}

function symbolicateStackTrace(stack) {
  var devServer, stackCopy, foundInternalSource, response, json;
  return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!fetch) {
            fetch = global.fetch || require(31     ).fetch; // 31 = fetch
          }

          devServer = getDevServer();

          if (devServer.bundleLoadedFromServer) {
            _context.next = 4;
            break;
          }

          throw new Error('Bundle was not loaded from the packager');

        case 4:
          stackCopy = stack;


          if (SourceCode.scriptURL) {
            foundInternalSource = false;

            stackCopy = stack.map(function (frame) {
              if (!foundInternalSource && isSourcedFromDisk(frame.file)) {
                return babelHelpers.extends({}, frame, { file: SourceCode.scriptURL });
              }

              foundInternalSource = true;
              return frame;
            });
          }

          _context.next = 8;
          return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {
            method: 'POST',
            body: JSON.stringify({ stack: stackCopy })
          }));

        case 8:
          response = _context.sent;
          _context.next = 11;
          return regeneratorRuntime.awrap(response.json());

        case 11:
          json = _context.sent;
          return _context.abrupt('return', json.stack);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
}

module.exports = symbolicateStackTrace;
}, 29, null, "symbolicateStackTrace");
__d(/* getDevServer */function(global, require, module, exports) {
'use strict';

var _require = require(15             ), // 15 = NativeModules
    SourceCode = _require.SourceCode;

var _cachedDevServerURL = void 0;
var FALLBACK = 'http://localhost:8081/';

function getDevServer() {
  if (_cachedDevServerURL === undefined) {
    var match = SourceCode.scriptURL && SourceCode.scriptURL.match(/^https?:\/\/.*?\//);
    _cachedDevServerURL = match ? match[0] : null;
  }

  return {
    url: _cachedDevServerURL || FALLBACK,
    bundleLoadedFromServer: _cachedDevServerURL !== null
  };
}

module.exports = getDevServer;
}, 30, null, "getDevServer");
__d(/* fetch */function(global, require, module, exports) {

'use strict';

var _whatwgFetch = require(32            ); // 32 = whatwg-fetch

var _whatwgFetch2 = babelHelpers.interopRequireDefault(_whatwgFetch);

if (_whatwgFetch2.default && _whatwgFetch2.default.fetch) {
  module.exports = _whatwgFetch2.default;
} else {
  module.exports = { fetch: fetch, Headers: Headers, Request: Request, Response: Response };
}
}, 31, null, "fetch");
__d(/* whatwg-fetch/fetch.js */function(global, require, module, exports) {(function (self) {
  'use strict';

  if (self.fetch) {
    return;
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  if (support.arrayBuffer) {
    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

    var isDataView = function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    };

    var isArrayBufferView = ArrayBuffer.isView || function (obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('');
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0);
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer;
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);

        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    this.text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (typeof input === 'string') {
      this.url = input;
    } else {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this, { body: this._bodyInit });
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    rawHeaders.split('\r\n').forEach(function (line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = 'status' in options ? options.status : 200;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function (input, init) {
    return new Promise(function (resolve, reject) {
      var request = new Request(input, init);
      var xhr = new XMLHttpRequest();

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  self.fetch.polyfill = true;
})(typeof self !== 'undefined' ? self : this);
}, 32, null, "whatwg-fetch/fetch.js");
__d(/* stringifySafe */function(global, require, module, exports) {
'use strict';

function stringifySafe(arg) {
  var ret;
  var type = typeof arg;
  if (arg === undefined) {
    ret = 'undefined';
  } else if (arg === null) {
    ret = 'null';
  } else if (type === 'string') {
    ret = '"' + arg + '"';
  } else if (type === 'function') {
    try {
      ret = arg.toString();
    } catch (e) {
      ret = '[function unknown]';
    }
  } else {
    try {
      ret = JSON.stringify(arg);
    } catch (e) {
      if (typeof arg.toString === 'function') {
        try {
          ret = arg.toString();
        } catch (E) {}
      }
    }
  }
  return ret || '["' + type + '" failed to stringify]';
}

module.exports = stringifySafe;
}, 33, null, "stringifySafe");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 34, null, "fbjs/lib/emptyObject.js");
__d(/* react/index.js */function(global, require, module, exports) {'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require(36                             ); // 36 = ./cjs/react.production.min.js
} else {
  module.exports = require(41                          ); // 41 = ./cjs/react.development.js
}
}, 35, null, "react/index.js");
__d(/* react/cjs/react.production.min.js */function(global, require, module, exports) {
'use strict';
var f = require(37             ), // 37 = object-assign
    p = require(38                    );require(39                  );var r = require(40                      ); // 40 = fbjs/lib/emptyFunction // 39 = fbjs/lib/invariant // 38 = fbjs/lib/emptyObject
function t(a) {
  for (var b = arguments.length - 1, d = "Minified React error #" + a + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" + a, e = 0; e < b; e++) {
    d += "\x26args[]\x3d" + encodeURIComponent(arguments[e + 1]);
  }b = Error(d + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name = "Invariant Violation";b.framesToPop = 1;throw b;
}
var u = { isMounted: function isMounted() {
    return !1;
  }, enqueueForceUpdate: function enqueueForceUpdate() {}, enqueueReplaceState: function enqueueReplaceState() {}, enqueueSetState: function enqueueSetState() {} };function v(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}v.prototype.isReactComponent = {};v.prototype.setState = function (a, b) {
  "object" !== typeof a && "function" !== typeof a && null != a ? t("85") : void 0;this.updater.enqueueSetState(this, a, b, "setState");
};v.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function w(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}function x() {}x.prototype = v.prototype;var y = w.prototype = new x();y.constructor = w;f(y, v.prototype);y.isPureReactComponent = !0;function z(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}var A = z.prototype = new x();A.constructor = z;f(A, v.prototype);A.unstable_isAsyncReactComponent = !0;A.render = function () {
  return this.props.children;
};
var B = { Component: v, PureComponent: w, AsyncComponent: z },
    C = { current: null },
    D = Object.prototype.hasOwnProperty,
    E = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103,
    F = { key: !0, ref: !0, __self: !0, __source: !0 };function G(a, b, d, e, c, g, k) {
  return { $$typeof: E, type: a, key: b, ref: d, props: k, _owner: g };
}
G.createElement = function (a, b, d) {
  var e,
      c = {},
      g = null,
      k = null,
      m = null,
      q = null;if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), m = void 0 === b.__self ? null : b.__self, q = void 0 === b.__source ? null : b.__source, b) {
    D.call(b, e) && !F.hasOwnProperty(e) && (c[e] = b[e]);
  }var l = arguments.length - 2;if (1 === l) c.children = d;else if (1 < l) {
    for (var h = Array(l), n = 0; n < l; n++) {
      h[n] = arguments[n + 2];
    }c.children = h;
  }if (a && a.defaultProps) for (e in l = a.defaultProps, l) {
    void 0 === c[e] && (c[e] = l[e]);
  }return G(a, g, k, m, q, C.current, c);
};
G.createFactory = function (a) {
  var b = G.createElement.bind(null, a);b.type = a;return b;
};G.cloneAndReplaceKey = function (a, b) {
  return G(a.type, b, a.ref, a._self, a._source, a._owner, a.props);
};
G.cloneElement = function (a, b, d) {
  var e = f({}, a.props),
      c = a.key,
      g = a.ref,
      k = a._self,
      m = a._source,
      q = a._owner;if (null != b) {
    void 0 !== b.ref && (g = b.ref, q = C.current);void 0 !== b.key && (c = "" + b.key);if (a.type && a.type.defaultProps) var l = a.type.defaultProps;for (h in b) {
      D.call(b, h) && !F.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== l ? l[h] : b[h]);
    }
  }var h = arguments.length - 2;if (1 === h) e.children = d;else if (1 < h) {
    l = Array(h);for (var n = 0; n < h; n++) {
      l[n] = arguments[n + 2];
    }e.children = l;
  }return G(a.type, c, g, k, m, q, e);
};
G.isValidElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === E;
};var H = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    I = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;function escape(a) {
  var b = { "\x3d": "\x3d0", ":": "\x3d2" };return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}var J = /\/+/g,
    K = [];
function L(a, b, d, e) {
  if (K.length) {
    var c = K.pop();c.result = a;c.keyPrefix = b;c.func = d;c.context = e;c.count = 0;return c;
  }return { result: a, keyPrefix: b, func: d, context: e, count: 0 };
}function M(a) {
  a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > K.length && K.push(a);
}
function N(a, b, d, e) {
  var c = typeof a;if ("undefined" === c || "boolean" === c) a = null;if (null === a || "string" === c || "number" === c || "object" === c && a.$$typeof === I) return d(e, a, "" === b ? "." + O(a, 0) : b), 1;var g = 0;b = "" === b ? "." : b + ":";if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
    c = a[k];var m = b + O(c, k);g += N(c, m, d, e);
  } else if (m = H && a[H] || a["@@iterator"], "function" === typeof m) for (a = m.call(a), k = 0; !(c = a.next()).done;) {
    c = c.value, m = b + O(c, k++), g += N(c, m, d, e);
  } else "object" === c && (d = "" + a, t("31", "[object Object]" === d ? "object with keys {" + Object.keys(a).join(", ") + "}" : d, ""));return g;
}function O(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}function P(a, b) {
  a.func.call(a.context, b, a.count++);
}function Q(a, b, d) {
  var e = a.result,
      c = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? R(a, e, d, r.thatReturnsArgument) : null != a && (G.isValidElement(a) && (a = G.cloneAndReplaceKey(a, c + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(J, "$\x26/") + "/") + d)), e.push(a));
}
function R(a, b, d, e, c) {
  var g = "";null != d && (g = ("" + d).replace(J, "$\x26/") + "/");b = L(b, g, e, c);null == a || N(a, "", Q, b);M(b);
}var S = { forEach: function forEach(a, b, d) {
    if (null == a) return a;b = L(null, null, b, d);null == a || N(a, "", P, b);M(b);
  }, map: function map(a, b, d) {
    if (null == a) return a;var e = [];R(a, e, null, b, d);return e;
  }, count: function count(a) {
    return null == a ? 0 : N(a, "", r.thatReturnsNull, null);
  }, toArray: function toArray(a) {
    var b = [];R(a, b, null, r.thatReturnsArgument);return b;
  } };
module.exports = { Children: { map: S.map, forEach: S.forEach, count: S.count, toArray: S.toArray, only: function only(a) {
      G.isValidElement(a) ? void 0 : t("143");return a;
    } }, Component: B.Component, PureComponent: B.PureComponent, unstable_AsyncComponent: B.AsyncComponent, createElement: G.createElement, cloneElement: G.cloneElement, isValidElement: G.isValidElement, createFactory: G.createFactory, version: "16.0.0", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: C, assign: f } };
}, 36, null, "react/cjs/react.production.min.js");
__d(/* object-assign/index.js */function(global, require, module, exports) {/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		var test1 = new String('abc');
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(babelHelpers.extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};
}, 37, null, "object-assign/index.js");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 38, null, "fbjs/lib/emptyObject.js");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 39, null, "fbjs/lib/invariant.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 40, null, "fbjs/lib/emptyFunction.js");
__d(/* react/cjs/react.development.js */function(global, require, module, exports) {/** @license React v16.0.0
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if (process.env.NODE_ENV !== "production") {
  (function () {

    'use strict';

    var objectAssign$1 = require(37             ); // 37 = object-assign
    var require$$0 = require(42                ); // 42 = fbjs/lib/warning
    var emptyObject = require(38                    ); // 38 = fbjs/lib/emptyObject
    var invariant = require(39                  ); // 39 = fbjs/lib/invariant
    var emptyFunction = require(40                      ); // 40 = fbjs/lib/emptyFunction
    var checkPropTypes = require(43                         ); // 43 = prop-types/checkPropTypes

    {
      var warning = require$$0;
    }

    function warnNoop(publicInstance, callerName) {
      {
        var constructor = publicInstance.constructor;
        warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass');
      }
    }

    var ReactNoopUpdateQueue = {
      isMounted: function isMounted(publicInstance) {
        return false;
      },

      enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };

    var ReactNoopUpdateQueue_1 = ReactNoopUpdateQueue;

    var lowPriorityWarning = function lowPriorityWarning() {};

    {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.warn(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function lowPriorityWarning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }

    var lowPriorityWarning_1 = lowPriorityWarning;

    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    ReactComponent.prototype.isReactComponent = {};

    ReactComponent.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };

    ReactComponent.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };

    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };
      var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(ReactComponent.prototype, methodName, {
          get: function get() {
            lowPriorityWarning_1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ReactPureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    function ComponentDummy() {}
    ComponentDummy.prototype = ReactComponent.prototype;
    var pureComponentPrototype = ReactPureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = ReactPureComponent;

    objectAssign$1(pureComponentPrototype, ReactComponent.prototype);
    pureComponentPrototype.isPureReactComponent = true;

    function ReactAsyncComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    var asyncComponentPrototype = ReactAsyncComponent.prototype = new ComponentDummy();
    asyncComponentPrototype.constructor = ReactAsyncComponent;

    objectAssign$1(asyncComponentPrototype, ReactComponent.prototype);
    asyncComponentPrototype.unstable_isAsyncReactComponent = true;
    asyncComponentPrototype.render = function () {
      return this.props.children;
    };

    var ReactBaseClasses = {
      Component: ReactComponent,
      PureComponent: ReactPureComponent,
      AsyncComponent: ReactAsyncComponent
    };

    var ReactCurrentOwner = {
      current: null
    };

    var ReactCurrentOwner_1 = ReactCurrentOwner;

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    {
      var warning$2 = require$$0;
    }

    var REACT_ELEMENT_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };

    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function warnAboutAccessingKey() {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          warning$2(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };
      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function warnAboutAccessingRef() {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          warning$2(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };
      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }

    var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE$1,

        type: type,
        key: key,
        ref: ref,
        props: props,

        _owner: owner
      };

      {
        element._store = {};

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        });

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        });

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });
        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }

      return element;
    };

    ReactElement.createElement = function (type, config, children) {
      var propName;

      var props = {};

      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }

      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      }

      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }
      {
        if (key || ref) {
          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE$1) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) {
              defineKeyPropWarningGetter(props, displayName);
            }
            if (ref) {
              defineRefPropWarningGetter(props, displayName);
            }
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner_1.current, props);
    };

    ReactElement.createFactory = function (type) {
      var factory = ReactElement.createElement.bind(null, type);

      factory.type = type;
      return factory;
    };

    ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

      return newElement;
    };

    ReactElement.cloneElement = function (element, config, children) {
      var propName;

      var props = objectAssign$1({}, element.props);

      var key = element.key;
      var ref = element.ref;

      var self = element._self;

      var source = element._source;

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
          owner = ReactCurrentOwner_1.current;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        var defaultProps;
        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      }

      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    };

    ReactElement.isValidElement = function (object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE$1;
    };

    var ReactElement_1 = ReactElement;

    var ReactDebugCurrentFrame = {};

    {
      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) {
          return impl();
        }
        return null;
      };
    }

    var ReactDebugCurrentFrame_1 = ReactDebugCurrentFrame;

    {
      var warning$1 = require$$0;

      var _require = ReactDebugCurrentFrame_1,
          getStackAddendum = _require.getStackAddendum;
    }

    var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = ('' + key).replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });

      return '$' + escapedString;
    }

    var didWarnAboutMaps = false;

    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }

    var POOL_SIZE = 10;
    var traverseContextPool = [];
    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
      if (traverseContextPool.length) {
        var traverseContext = traverseContextPool.pop();
        traverseContext.result = mapResult;
        traverseContext.keyPrefix = keyPrefix;
        traverseContext.func = mapFunction;
        traverseContext.context = mapContext;
        traverseContext.count = 0;
        return traverseContext;
      } else {
        return {
          result: mapResult,
          keyPrefix: keyPrefix,
          func: mapFunction,
          context: mapContext,
          count: 0
        };
      }
    }

    function releaseTraverseContext(traverseContext) {
      traverseContext.result = null;
      traverseContext.keyPrefix = null;
      traverseContext.func = null;
      traverseContext.context = null;
      traverseContext.count = 0;
      if (traverseContextPool.length < POOL_SIZE) {
        traverseContextPool.push(traverseContext);
      }
    }

    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }

      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }

      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
        if (typeof iteratorFn === 'function') {
          {
            if (iteratorFn === children.entries) {
              warning$1(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getStackAddendum());
              didWarnAboutMaps = true;
            }
          }

          var iterator = iteratorFn.call(children);
          var step;
          var ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else if (type === 'object') {
          var addendum = '';
          {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getStackAddendum();
          }
          var childrenString = '' + children;
          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
        }
      }

      return subtreeCount;
    }

    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }

      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }

    function getComponentKey(component, index) {
      if (typeof component === 'object' && component !== null && component.key != null) {
        return escape(component.key);
      }

      return index.toString(36);
    }

    function forEachSingleChild(bookKeeping, child, name) {
      var func = bookKeeping.func,
          context = bookKeeping.context;

      func.call(context, child, bookKeeping.count++);
    }

    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }
      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;

      var mappedChild = func.call(context, child, bookKeeping.count++);
      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
      } else if (mappedChild != null) {
        if (ReactElement_1.isValidElement(mappedChild)) {
          mappedChild = ReactElement_1.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
        }
        result.push(mappedChild);
      }
    }

    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';
      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }
      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }

    function countChildren(children, context) {
      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
    }

    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
      return result;
    }

    var ReactChildren = {
      forEach: forEachChildren,
      map: mapChildren,
      count: countChildren,
      toArray: toArray
    };

    var ReactChildren_1 = ReactChildren;

    var ReactVersion = '16.0.0';

    function onlyChild(children) {
      !ReactElement_1.isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
      return children;
    }

    var onlyChild_1 = onlyChild;

    var describeComponentFrame$1 = function describeComponentFrame$1(name, source, ownerName) {
      return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
    };

    function getComponentName$1(instanceOrFiber) {
      if (typeof instanceOrFiber.getName === 'function') {
        var instance = instanceOrFiber;
        return instance.getName();
      }
      if (typeof instanceOrFiber.tag === 'number') {
        var fiber = instanceOrFiber;
        var type = fiber.type;

        if (typeof type === 'string') {
          return type;
        }
        if (typeof type === 'function') {
          return type.displayName || type.name;
        }
      }
      return null;
    }

    var getComponentName_1 = getComponentName$1;

    {
      var checkPropTypes$1 = checkPropTypes;
      var lowPriorityWarning$1 = lowPriorityWarning_1;
      var ReactDebugCurrentFrame$1 = ReactDebugCurrentFrame_1;
      var warning$3 = require$$0;
      var describeComponentFrame = describeComponentFrame$1;
      var getComponentName = getComponentName_1;

      var currentlyValidatingElement = null;

      var getDisplayName = function getDisplayName(element) {
        if (element == null) {
          return '#empty';
        } else if (typeof element === 'string' || typeof element === 'number') {
          return '#text';
        } else if (typeof element.type === 'string') {
          return element.type;
        } else {
          return element.type.displayName || element.type.name || 'Unknown';
        }
      };

      var getStackAddendum$1 = function getStackAddendum$1() {
        var stack = '';
        if (currentlyValidatingElement) {
          var name = getDisplayName(currentlyValidatingElement);
          var owner = currentlyValidatingElement._owner;
          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
        }
        stack += ReactDebugCurrentFrame$1.getStackAddendum() || '';
        return stack;
      };
    }

    var ITERATOR_SYMBOL$1 = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
    var FAUX_ITERATOR_SYMBOL$1 = '@@iterator';

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner_1.current) {
        var name = getComponentName(ReactCurrentOwner_1.current);
        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }
      return '';
    }

    function getSourceInfoErrorAddendum(elementProps) {
      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
        var source = elementProps.__source;
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }
      return '';
    }

    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          info = '\n\nCheck the top-level render call using <' + parentName + '>.';
        }
      }
      return info;
    }

    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;

      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }
      ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

      var childOwner = '';
      if (element && element._owner && element._owner !== ReactCurrentOwner_1.current) {
        childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
      }

      currentlyValidatingElement = element;
      {
        warning$3(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum$1());
      }
      currentlyValidatingElement = null;
    }

    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement_1.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement_1.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = ITERATOR_SYMBOL$1 && node[ITERATOR_SYMBOL$1] || node[FAUX_ITERATOR_SYMBOL$1];
        if (typeof iteratorFn === 'function') {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement_1.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }

    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      var propTypes = componentClass.propTypes;

      if (propTypes) {
        currentlyValidatingElement = element;
        checkPropTypes$1(propTypes, element.props, 'prop', name, getStackAddendum$1);
        currentlyValidatingElement = null;
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        warning$3(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
      }
    }

    var ReactElementValidator$1 = {
      createElement: function createElement(type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';

        if (!validType) {
          var info = '';
          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in.";
          }

          var sourceInfo = getSourceInfoErrorAddendum(props);
          if (sourceInfo) {
            info += sourceInfo;
          } else {
            info += getDeclarationErrorAddendum();
          }

          info += ReactDebugCurrentFrame$1.getStackAddendum() || '';

          warning$3(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
        }

        var element = ReactElement_1.createElement.apply(this, arguments);

        if (element == null) {
          return element;
        }

        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }

        validatePropTypes(element);

        return element;
      },

      createFactory: function createFactory(type) {
        var validatedFactory = ReactElementValidator$1.createElement.bind(null, type);

        validatedFactory.type = type;

        {
          Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function get() {
              lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
              Object.defineProperty(this, 'type', {
                value: type
              });
              return type;
            }
          });
        }

        return validatedFactory;
      },

      cloneElement: function cloneElement(element, props, children) {
        var newElement = ReactElement_1.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };

    var ReactElementValidator_1 = ReactElementValidator$1;

    {
      var warning$4 = require$$0;
    }

    function isNative(fn) {
      var funcToString = Function.prototype.toString;
      var reIsNative = RegExp('^' + funcToString.call(Object.prototype.hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      try {
        var source = funcToString.call(fn);
        return reIsNative.test(source);
      } catch (err) {
        return false;
      }
    }

    var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

    var setItem;
    var getItem;
    var removeItem;
    var getItemIDs;
    var addRoot;
    var removeRoot;
    var getRootIDs;

    if (canUseCollections) {
      var itemMap = new Map();
      var rootIDSet = new Set();

      setItem = function setItem(id, item) {
        itemMap.set(id, item);
      };
      getItem = function getItem(id) {
        return itemMap.get(id);
      };
      removeItem = function removeItem(id) {
        itemMap['delete'](id);
      };
      getItemIDs = function getItemIDs() {
        return Array.from(itemMap.keys());
      };

      addRoot = function addRoot(id) {
        rootIDSet.add(id);
      };
      removeRoot = function removeRoot(id) {
        rootIDSet['delete'](id);
      };
      getRootIDs = function getRootIDs() {
        return Array.from(rootIDSet.keys());
      };
    } else {
      var itemByKey = {};
      var rootByKey = {};

      var getKeyFromID = function getKeyFromID(id) {
        return '.' + id;
      };
      var getIDFromKey = function getIDFromKey(key) {
        return parseInt(key.substr(1), 10);
      };

      setItem = function setItem(id, item) {
        var key = getKeyFromID(id);
        itemByKey[key] = item;
      };
      getItem = function getItem(id) {
        var key = getKeyFromID(id);
        return itemByKey[key];
      };
      removeItem = function removeItem(id) {
        var key = getKeyFromID(id);
        delete itemByKey[key];
      };
      getItemIDs = function getItemIDs() {
        return Object.keys(itemByKey).map(getIDFromKey);
      };

      addRoot = function addRoot(id) {
        var key = getKeyFromID(id);
        rootByKey[key] = true;
      };
      removeRoot = function removeRoot(id) {
        var key = getKeyFromID(id);
        delete rootByKey[key];
      };
      getRootIDs = function getRootIDs() {
        return Object.keys(rootByKey).map(getIDFromKey);
      };
    }

    var unmountedIDs = [];

    function purgeDeep(id) {
      var item = getItem(id);
      if (item) {
        var childIDs = item.childIDs;

        removeItem(id);
        childIDs.forEach(purgeDeep);
      }
    }

    function getDisplayName$1(element) {
      if (element == null) {
        return '#empty';
      } else if (typeof element === 'string' || typeof element === 'number') {
        return '#text';
      } else if (typeof element.type === 'string') {
        return element.type;
      } else {
        return element.type.displayName || element.type.name || 'Unknown';
      }
    }

    function describeID(id) {
      var name = ReactComponentTreeHook.getDisplayName(id);
      var element = ReactComponentTreeHook.getElement(id);
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var ownerName = void 0;

      if (ownerID) {
        ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
      }
      warning$4(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id);
      return describeComponentFrame$1(name || '', element && element._source, ownerName || '');
    }

    var ReactComponentTreeHook = {
      onSetChildren: function onSetChildren(id, nextChildIDs) {
        var item = getItem(id);
        !item ? invariant(false, 'Item must have been set') : void 0;
        item.childIDs = nextChildIDs;

        for (var i = 0; i < nextChildIDs.length; i++) {
          var nextChildID = nextChildIDs[i];
          var nextChild = getItem(nextChildID);
          !nextChild ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : void 0;
          !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : void 0;
          !nextChild.isMounted ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : void 0;
          if (nextChild.parentID == null) {
            nextChild.parentID = id;
          }
          !(nextChild.parentID === id) ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : void 0;
        }
      },
      onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
        var item = {
          element: element,
          parentID: parentID,
          text: null,
          childIDs: [],
          isMounted: false,
          updateCount: 0
        };
        setItem(id, item);
      },
      onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.element = element;
      },
      onMountComponent: function onMountComponent(id) {
        var item = getItem(id);
        !item ? invariant(false, 'Item must have been set') : void 0;
        item.isMounted = true;
        var isRoot = item.parentID === 0;
        if (isRoot) {
          addRoot(id);
        }
      },
      onUpdateComponent: function onUpdateComponent(id) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.updateCount++;
      },
      onUnmountComponent: function onUnmountComponent(id) {
        var item = getItem(id);
        if (item) {
          item.isMounted = false;
          var isRoot = item.parentID === 0;
          if (isRoot) {
            removeRoot(id);
          }
        }
        unmountedIDs.push(id);
      },
      purgeUnmountedComponents: function purgeUnmountedComponents() {
        if (ReactComponentTreeHook._preventPurging) {
          return;
        }

        for (var i = 0; i < unmountedIDs.length; i++) {
          var id = unmountedIDs[i];
          purgeDeep(id);
        }
        unmountedIDs.length = 0;
      },
      isMounted: function isMounted(id) {
        var item = getItem(id);
        return item ? item.isMounted : false;
      },
      getCurrentStackAddendum: function getCurrentStackAddendum() {
        var info = '';
        var currentOwner = ReactCurrentOwner_1.current;
        if (currentOwner) {
          !(typeof currentOwner.tag !== 'number') ? invariant(false, 'Fiber owners should not show up in Stack stack traces.') : void 0;
          if (typeof currentOwner._debugID === 'number') {
            info += ReactComponentTreeHook.getStackAddendumByID(currentOwner._debugID);
          }
        }
        return info;
      },
      getStackAddendumByID: function getStackAddendumByID(id) {
        var info = '';
        while (id) {
          info += describeID(id);
          id = ReactComponentTreeHook.getParentID(id);
        }
        return info;
      },
      getChildIDs: function getChildIDs(id) {
        var item = getItem(id);
        return item ? item.childIDs : [];
      },
      getDisplayName: function getDisplayName(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element) {
          return null;
        }
        return getDisplayName$1(element);
      },
      getElement: function getElement(id) {
        var item = getItem(id);
        return item ? item.element : null;
      },
      getOwnerID: function getOwnerID(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element || !element._owner) {
          return null;
        }
        return element._owner._debugID;
      },
      getParentID: function getParentID(id) {
        var item = getItem(id);
        return item ? item.parentID : null;
      },
      getSource: function getSource(id) {
        var item = getItem(id);
        var element = item ? item.element : null;
        var source = element != null ? element._source : null;
        return source;
      },
      getText: function getText(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (typeof element === 'string') {
          return element;
        } else if (typeof element === 'number') {
          return '' + element;
        } else {
          return null;
        }
      },
      getUpdateCount: function getUpdateCount(id) {
        var item = getItem(id);
        return item ? item.updateCount : 0;
      },

      getRootIDs: getRootIDs,
      getRegisteredIDs: getItemIDs
    };

    var ReactComponentTreeHook_1 = ReactComponentTreeHook;

    var createElement = ReactElement_1.createElement;
    var createFactory = ReactElement_1.createFactory;
    var cloneElement = ReactElement_1.cloneElement;

    {
      var ReactElementValidator = ReactElementValidator_1;
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }

    var React = {
      Children: {
        map: ReactChildren_1.map,
        forEach: ReactChildren_1.forEach,
        count: ReactChildren_1.count,
        toArray: ReactChildren_1.toArray,
        only: onlyChild_1
      },

      Component: ReactBaseClasses.Component,
      PureComponent: ReactBaseClasses.PureComponent,
      unstable_AsyncComponent: ReactBaseClasses.AsyncComponent,

      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement_1.isValidElement,

      createFactory: createFactory,

      version: ReactVersion,

      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        ReactCurrentOwner: ReactCurrentOwner_1,

        assign: objectAssign$1
      }
    };

    {
      objectAssign$1(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
        ReactComponentTreeHook: ReactComponentTreeHook_1,
        ReactDebugCurrentFrame: ReactDebugCurrentFrame_1
      });
    }

    var ReactEntry = React;

    module.exports = ReactEntry;
  })();
}
}, 41, null, "react/cjs/react.development.js");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(40               ); // 40 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return;
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}, 42, null, "fbjs/lib/warning.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(44                  ); // 44 = fbjs/lib/invariant
  var warning = require(45                ); // 45 = fbjs/lib/warning
  var ReactPropTypesSecret = require(47                          ); // 47 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 43, null, "prop-types/checkPropTypes.js");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 44, null, "fbjs/lib/invariant.js");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(46               ); // 46 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return;
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}, 45, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 46, null, "fbjs/lib/emptyFunction.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 47, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* fbjs/lib/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 48, null, "fbjs/lib/shallowEqual.js");
__d(/* deepDiffer */function(global, require, module, exports) {
'use strict';

var deepDiffer = function deepDiffer(one, two) {
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii])) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key])) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
}, 49, null, "deepDiffer");
__d(/* flattenStyle */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var ReactNativePropRegistry;

function getStyle(style) {
  if (ReactNativePropRegistry === undefined) {
    ReactNativePropRegistry = require(51                       ); // 51 = ReactNativePropRegistry
  }
  if (typeof style === 'number') {
    return ReactNativePropRegistry.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 50, null, "flattenStyle");
__d(/* ReactNativePropRegistry */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativePropRegistry;
}, 51, null, "ReactNativePropRegistry");
__d(/* TextInputState */function(global, require, module, exports) {
'use strict';

var Platform = require(53        ); // 53 = Platform
var UIManager = require(54         ); // 54 = UIManager

var TextInputState = {
  _currentlyFocusedID: null,

  currentlyFocusedField: function currentlyFocusedField() {
    return this._currentlyFocusedID;
  },

  focusTextInput: function focusTextInput(textFieldID) {
    if (this._currentlyFocusedID !== textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = textFieldID;
      if (Platform.OS === 'ios') {
        UIManager.focus(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.focusTextInput, null);
      }
    }
  },

  blurTextInput: function blurTextInput(textFieldID) {
    if (this._currentlyFocusedID === textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = null;
      if (Platform.OS === 'ios') {
        UIManager.blur(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.blurTextInput, null);
      }
    }
  }
};

module.exports = TextInputState;
}, 52, null, "TextInputState");
__d(/* Platform */function(global, require, module, exports) {

'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var Platform = {
  OS: 'ios',
  get Version() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.osVersion;
  },
  get isPad() {
    var constants = NativeModules.PlatformConstants;
    return constants ? constants.interfaceIdiom === 'pad' : false;
  },
  get isTVOS() {
    var constants = NativeModules.PlatformConstants;
    return constants ? constants.interfaceIdiom === 'tv' : false;
  },
  get isTesting() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.isTesting;
  },
  select: function select(obj) {
    return 'ios' in obj ? obj.ios : obj.default;
  }
};

module.exports = Platform;
}, 53, null, "Platform");
__d(/* UIManager */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform

var defineLazyObjectProperty = require(55                        ); // 55 = defineLazyObjectProperty
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var UIManager = NativeModules.UIManager;


invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');

UIManager.__takeSnapshot = UIManager.takeSnapshot;
UIManager.takeSnapshot = function () {
  invariant(false, 'UIManager.takeSnapshot should not be called directly. ' + 'Use ReactNative.takeSnapshot instead.');
};

if (Platform.OS === 'ios') {
  Object.keys(UIManager).forEach(function (viewName) {
    var viewConfig = UIManager[viewName];
    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  });
} else if (Platform.OS === 'android' && UIManager.ViewManagerNames) {
  UIManager.ViewManagerNames.forEach(function (viewManagerName) {
    defineLazyObjectProperty(UIManager, viewManagerName, {
      get: function get() {
        return UIManager.getConstantsForViewManager(viewManagerName);
      }
    });
  });
}

module.exports = UIManager;
}, 54, null, "UIManager");
__d(/* defineLazyObjectProperty */function(global, require, module, exports) {

'use strict';

function defineLazyObjectProperty(object, name, descriptor) {
  var get = descriptor.get;

  var enumerable = descriptor.enumerable !== false;
  var writable = descriptor.writable !== false;

  var value = void 0;
  var valueSet = false;
  function getValue() {
    if (!valueSet) {
      valueSet = true;
      setValue(get());
    }
    return value;
  }
  function setValue(newValue) {
    value = newValue;
    valueSet = true;
    Object.defineProperty(object, name, {
      value: newValue,
      configurable: true,
      enumerable: enumerable,
      writable: writable
    });
  }

  Object.defineProperty(object, name, {
    get: getValue,
    set: setValue,
    configurable: true,
    enumerable: enumerable
  });
}

module.exports = defineLazyObjectProperty;
}, 55, null, "defineLazyObjectProperty");
__d(/* deepFreezeAndThrowOnMutationInDev */function(global, require, module, exports) {

'use strict';

function deepFreezeAndThrowOnMutationInDev(object) {
  if (__DEV__) {
    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {
      return;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        object.__defineGetter__(key, identity.bind(null, object[key]));
        object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
      }
    }

    Object.freeze(object);
    Object.seal(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        deepFreezeAndThrowOnMutationInDev(object[key]);
      }
    }
  }
}

function throwOnImmutableMutation(key, value) {
  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');
}

function identity(value) {
  return value;
}

module.exports = deepFreezeAndThrowOnMutationInDev;
}, 56, null, "deepFreezeAndThrowOnMutationInDev");
__d(/* InitializeCore */function(global, require, module, exports) {
'use strict';

if (global.GLOBAL === undefined) {
  global.GLOBAL = global;
}

if (global.window === undefined) {
  global.window = global;
}

var defineLazyObjectProperty = require(55                        ); // 55 = defineLazyObjectProperty

var _shouldPolyfillCollection = require(58                            ); // 58 = _shouldPolyfillES6Collection
if (_shouldPolyfillCollection('Map')) {
  polyfillGlobal('Map', function () {
    return require(59   ); // 59 = Map
  });
}
if (_shouldPolyfillCollection('Set')) {
  polyfillGlobal('Set', function () {
    return require(63   ); // 63 = Set
  });
}

function defineLazyProperty(object, name, getValue) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (__DEV__ && descriptor) {
    var backupName = 'original' + name[0].toUpperCase() + name.substr(1);
    Object.defineProperty(object, backupName, babelHelpers.extends({}, descriptor, {
      value: object[name]
    }));
  }

  var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      configurable = _ref.configurable;

  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }

  defineLazyObjectProperty(object, name, {
    get: getValue,
    enumerable: enumerable !== false,
    writable: writable !== false
  });
}

function polyfillGlobal(name, getValue) {
  defineLazyProperty(global, name, getValue);
}

global.process = global.process || {};
global.process.env = global.process.env || {};
if (!global.process.env.NODE_ENV) {
  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
}

if (global.__RCTProfileIsProfiling) {
  var Systrace = require(19        ); // 19 = Systrace
  Systrace.setEnabled(true);
}

var ExceptionsManager = require(25                 ); // 25 = ExceptionsManager
ExceptionsManager.installConsoleErrorReporter();

if (!global.__fbDisableExceptionsManager) {
  var handleError = function handleError(e, isFatal) {
    try {
      ExceptionsManager.handleException(e, isFatal);
    } catch (ee) {
      console.log('Failed to print error: ', ee.message);

      throw e;
    }
  };

  var ErrorUtils = require(18          ); // 18 = ErrorUtils
  ErrorUtils.setGlobalHandler(handleError);
}

if (__DEV__) {
  var ReactNativeVersionCheck = require(64                       ); // 64 = ReactNativeVersionCheck
  ReactNativeVersionCheck.checkVersions();
}

polyfillGlobal('Promise', function () {
  return require(66       ); // 66 = Promise
});

polyfillGlobal('regeneratorRuntime', function () {
  delete global.regeneratorRuntime;

  require(74                           ); // 74 = regenerator-runtime/runtime
  return global.regeneratorRuntime;
});

var defineLazyTimer = function defineLazyTimer(name) {
  polyfillGlobal(name, function () {
    return require(75        )[name]; // 75 = JSTimers
  });
};
defineLazyTimer('setTimeout');
defineLazyTimer('setInterval');
defineLazyTimer('setImmediate');
defineLazyTimer('clearTimeout');
defineLazyTimer('clearInterval');
defineLazyTimer('clearImmediate');
defineLazyTimer('requestAnimationFrame');
defineLazyTimer('cancelAnimationFrame');
defineLazyTimer('requestIdleCallback');
defineLazyTimer('cancelIdleCallback');

polyfillGlobal('XMLHttpRequest', function () {
  return require(79              ); // 79 = XMLHttpRequest
});
polyfillGlobal('FormData', function () {
  return require(95        ); // 95 = FormData
});

polyfillGlobal('fetch', function () {
  return require(31     ).fetch; // 31 = fetch
});
polyfillGlobal('Headers', function () {
  return require(31     ).Headers; // 31 = fetch
});
polyfillGlobal('Request', function () {
  return require(31     ).Request; // 31 = fetch
});
polyfillGlobal('Response', function () {
  return require(31     ).Response; // 31 = fetch
});
polyfillGlobal('WebSocket', function () {
  return require(96         ); // 96 = WebSocket
});
polyfillGlobal('Blob', function () {
  return require(97    ); // 97 = Blob
});
polyfillGlobal('URL', function () {
  return require(104  ); // 104 = URL
});

if (!global.alert) {
  global.alert = function (text) {
    require(105    ).alert('Alert', '' + text); // 105 = Alert
  };
}

var navigator = global.navigator;
if (navigator === undefined) {
  global.navigator = navigator = {};
}

defineLazyProperty(navigator, 'product', function () {
  return 'ReactNative';
});
defineLazyProperty(navigator, 'geolocation', function () {
  return require(107          ); // 107 = Geolocation
});

var BatchedBridge = require(16             ); // 16 = BatchedBridge
BatchedBridge.registerLazyCallableModule('Systrace', function () {
  return require(19        ); // 19 = Systrace
});
BatchedBridge.registerLazyCallableModule('JSTimers', function () {
  return require(75        ); // 75 = JSTimers
});
BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
  return require(110          ); // 110 = HeapCapture
});
BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
  return require(111               ); // 111 = SamplingProfiler
});
BatchedBridge.registerLazyCallableModule('RCTLog', function () {
  return require(112     ); // 112 = RCTLog
});
BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
  return require(91                     ); // 91 = RCTDeviceEventEmitter
});
BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
  return require(113                       ); // 113 = RCTNativeAppEventEmitter
});
BatchedBridge.registerLazyCallableModule('PerformanceLogger', function () {
  return require(114                ); // 114 = PerformanceLogger
});

global.fetchBundle = function (bundleId, callback) {
  var _require = require(15             ), // 15 = NativeModules
      BundleFetcher = _require.BundleFetcher;

  if (!BundleFetcher) {
    throw new Error('BundleFetcher is missing');
  }

  BundleFetcher.fetchBundle(bundleId, function (errorObject) {
    if (errorObject) {
      var error = new Error(errorObject.message);
      error.code = errorObject.code;
      callback(error);
    }

    callback(null);
  });
};

if (__DEV__) {
  if (!global.__RCTProfileIsProfiling) {
    BatchedBridge.registerCallableModule('HMRClient', require(116        )); // 116 = HMRClient

    if (!window.document) {
      require(120            ); // 120 = setupDevtools
    }

    var JSInspector = require(123          ); // 123 = JSInspector

    JSInspector.registerAgent(require(124           )); // 124 = NetworkAgent
  }
}
}, 57, null, "InitializeCore");
__d(/* _shouldPolyfillES6Collection */function(global, require, module, exports) {
'use strict';

function _shouldActuallyPolyfillES6Collection(collectionName) {
  var Collection = global[collectionName];
  if (Collection == null) {
    return true;
  }

  if (typeof global.Symbol !== 'function') {
    return true;
  }

  var proto = Collection.prototype;

  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
}

var cache = {};

function _shouldPolyfillES6Collection(collectionName) {
  var result = cache[collectionName];
  if (result !== undefined) {
    return result;
  }

  result = _shouldActuallyPolyfillES6Collection(collectionName);
  cache[collectionName] = result;
  return result;
}

module.exports = _shouldPolyfillES6Collection;
}, 58, null, "_shouldPolyfillES6Collection");
__d(/* Map */function(global, require, module, exports) {

'use strict';

var _shouldPolyfillES6Collection = require(58                            ); // 58 = _shouldPolyfillES6Collection
var guid = require(60    ); // 60 = guid
var isNode = require(61               ); // 61 = fbjs/lib/isNode
var toIterator = require(62          ); // 62 = toIterator

module.exports = function (global, undefined) {
  if (!_shouldPolyfillES6Collection('Map')) {
    return global.Map;
  }

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VALUE = 'key+value';

  var KEY_PREFIX = '$map_';

  var SECRET_SIZE_PROP;
  if (__DEV__) {
    SECRET_SIZE_PROP = '$size' + guid();
  }

  var OLD_IE_HASH_PREFIX = 'IE_HASH_';

  var Map = function () {
    function Map(iterable) {
      babelHelpers.classCallCheck(this, Map);

      if (!isObject(this)) {
        throw new TypeError('Wrong map object type.');
      }

      initMap(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          if (!isObject(next.value)) {
            throw new TypeError('Expected iterable items to be pair objects.');
          }
          this.set(next.value[0], next.value[1]);
        }
      }
    }

    babelHelpers.createClass(Map, [{
      key: 'clear',
      value: function clear() {
        initMap(this);
      }
    }, {
      key: 'has',
      value: function has(key) {
        var index = getIndex(this, key);
        return !!(index != null && this._mapData[index]);
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var index = getIndex(this, key);

        if (index != null && this._mapData[index]) {
          this._mapData[index][1] = value;
        } else {
          index = this._mapData.push([key, value]) - 1;
          setIndex(this, key, index);
          if (__DEV__) {
            this[SECRET_SIZE_PROP] += 1;
          } else {
            this.size += 1;
          }
        }

        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        var index = getIndex(this, key);
        if (index == null) {
          return undefined;
        } else {
          return this._mapData[index][1];
        }
      }
    }, {
      key: 'delete',
      value: function _delete(key) {
        var index = getIndex(this, key);
        if (index != null && this._mapData[index]) {
          setIndex(this, key, undefined);
          this._mapData[index] = undefined;
          if (__DEV__) {
            this[SECRET_SIZE_PROP] -= 1;
          } else {
            this.size -= 1;
          }
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: 'entries',
      value: function entries() {
        return new MapIterator(this, KIND_KEY_VALUE);
      }
    }, {
      key: 'keys',
      value: function keys() {
        return new MapIterator(this, KIND_KEY);
      }
    }, {
      key: 'values',
      value: function values() {
        return new MapIterator(this, KIND_VALUE);
      }
    }, {
      key: 'forEach',
      value: function forEach(callback, thisArg) {
        if (typeof callback !== 'function') {
          throw new TypeError('Callback must be callable.');
        }

        var boundCallback = callback.bind(thisArg || undefined);
        var mapData = this._mapData;

        for (var i = 0; i < mapData.length; i++) {
          var entry = mapData[i];
          if (entry != null) {
            boundCallback(entry[1], entry[0], this);
          }
        }
      }
    }]);
    return Map;
  }();

  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

  var MapIterator = function () {
    function MapIterator(map, kind) {
      babelHelpers.classCallCheck(this, MapIterator);

      if (!(isObject(map) && map._mapData)) {
        throw new TypeError('Object is not a map.');
      }

      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
        throw new Error('Invalid iteration kind.');
      }

      this._map = map;
      this._nextIndex = 0;
      this._kind = kind;
    }

    babelHelpers.createClass(MapIterator, [{
      key: 'next',
      value: function next() {
        if (!this instanceof Map) {
          throw new TypeError('Expected to be called on a MapIterator.');
        }

        var map = this._map;
        var index = this._nextIndex;
        var kind = this._kind;

        if (map == null) {
          return createIterResultObject(undefined, true);
        }

        var entries = map._mapData;

        while (index < entries.length) {
          var record = entries[index];

          index += 1;
          this._nextIndex = index;

          if (record) {
            if (kind === KIND_KEY) {
              return createIterResultObject(record[0], false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(record[1], false);
            } else if (kind) {
              return createIterResultObject(record, false);
            }
          }
        }

        this._map = undefined;

        return createIterResultObject(undefined, true);
      }
    }]);
    return MapIterator;
  }();

  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
    return this;
  };

  function getIndex(map, key) {
    if (isObject(key)) {
      var hash = getHash(key);
      return map._objectIndex[hash];
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        return map._stringIndex[prefixedKey];
      } else {
        return map._otherIndex[prefixedKey];
      }
    }
  }

  function setIndex(map, key, index) {
    var shouldDelete = index == null;

    if (isObject(key)) {
      var hash = getHash(key);
      if (shouldDelete) {
        delete map._objectIndex[hash];
      } else {
        map._objectIndex[hash] = index;
      }
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        if (shouldDelete) {
          delete map._stringIndex[prefixedKey];
        } else {
          map._stringIndex[prefixedKey] = index;
        }
      } else {
        if (shouldDelete) {
          delete map._otherIndex[prefixedKey];
        } else {
          map._otherIndex[prefixedKey] = index;
        }
      }
    }
  }

  function initMap(map) {
    map._mapData = [];

    map._objectIndex = {};

    map._stringIndex = {};

    map._otherIndex = {};

    if (__DEV__) {
      if (isES5) {
        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {
          map[SECRET_SIZE_PROP] = 0;
        } else {
          Object.defineProperty(map, SECRET_SIZE_PROP, {
            value: 0,
            writable: true
          });
          Object.defineProperty(map, 'size', {
            set: function set(v) {
              console.error('PLEASE FIX ME: You are changing the map size property which ' + 'should not be writable and will break in production.');
              throw new Error('The map size property is not writable.');
            },
            get: function get() {
              return map[SECRET_SIZE_PROP];
            }
          });
        }

        return;
      }
    }

    map.size = 0;
  }

  function isObject(o) {
    return o != null && (typeof o === 'object' || typeof o === 'function');
  }

  function createIterResultObject(value, done) {
    return { value: value, done: done };
  }

  var isES5 = function () {
    try {
      Object.defineProperty({}, 'x', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function isExtensible(o) {
    if (!isES5) {
      return true;
    } else {
      return Object.isExtensible(o);
    }
  }

  function getIENodeHash(node) {
    var uniqueID;
    switch (node.nodeType) {
      case 1:
        uniqueID = node.uniqueID;
        break;
      case 9:
        uniqueID = node.documentElement.uniqueID;
        break;
      default:
        return null;
    }

    if (uniqueID) {
      return OLD_IE_HASH_PREFIX + uniqueID;
    } else {
      return null;
    }
  }

  var getHash = function () {
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    var hashProperty = guid();
    var hashCounter = 0;

    return function getHash(o) {
      if (o[hashProperty]) {
        return o[hashProperty];
      } else if (!isES5 && o.propertyIsEnumerable && o.propertyIsEnumerable[hashProperty]) {
        return o.propertyIsEnumerable[hashProperty];
      } else if (!isES5 && isNode(o) && getIENodeHash(o)) {
        return getIENodeHash(o);
      } else if (!isES5 && o[hashProperty]) {
        return o[hashProperty];
      }

      if (isExtensible(o)) {
        hashCounter += 1;
        if (isES5) {
          Object.defineProperty(o, hashProperty, {
            enumerable: false,
            writable: false,
            configurable: false,
            value: hashCounter
          });
        } else if (o.propertyIsEnumerable) {
          o.propertyIsEnumerable = function () {
            return propIsEnumerable.apply(this, arguments);
          };
          o.propertyIsEnumerable[hashProperty] = hashCounter;
        } else if (isNode(o)) {
          o[hashProperty] = hashCounter;
        } else {
          throw new Error('Unable to set a non-enumerable property on object.');
        }
        return hashCounter;
      } else {
        throw new Error('Non-extensible objects are not allowed as keys.');
      }
    };
  }();

  return Map;
}(Function('return this')());
}, 59, null, "Map");
__d(/* guid */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 60, null, "guid");
__d(/* fbjs/lib/isNode.js */function(global, require, module, exports) {'use strict';

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}, 61, null, "fbjs/lib/isNode.js");
__d(/* toIterator */function(global, require, module, exports) {
'use strict';

var KIND_KEY = 'key';
var KIND_VALUE = 'value';
var KIND_KEY_VAL = 'key+value';

var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';

var toIterator = function () {
  if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
    return function () {
      var ArrayIterator = function () {
        function ArrayIterator(array, kind) {
          babelHelpers.classCallCheck(this, ArrayIterator);

          if (!Array.isArray(array)) {
            throw new TypeError('Object is not an Array');
          }
          this._iteratedObject = array;
          this._kind = kind;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(ArrayIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof ArrayIterator) {
              throw new TypeError('Object is not an ArrayIterator');
            }

            if (this._iteratedObject == null) {
              return createIterResultObject(undefined, true);
            }

            var array = this._iteratedObject;
            var len = this._iteratedObject.length;
            var index = this._nextIndex;
            var kind = this._kind;

            if (index >= len) {
              this._iteratedObject = undefined;
              return createIterResultObject(undefined, true);
            }

            this._nextIndex = index + 1;

            if (kind === KIND_KEY) {
              return createIterResultObject(index, false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(array[index], false);
            } else if (kind === KIND_KEY_VAL) {
              return createIterResultObject([index, array[index]], false);
            }
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return ArrayIterator;
      }();

      var StringIterator = function () {
        function StringIterator(string) {
          babelHelpers.classCallCheck(this, StringIterator);

          if (typeof string !== 'string') {
            throw new TypeError('Object is not a string');
          }
          this._iteratedString = string;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(StringIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof StringIterator) {
              throw new TypeError('Object is not a StringIterator');
            }

            if (this._iteratedString == null) {
              return createIterResultObject(undefined, true);
            }

            var index = this._nextIndex;
            var s = this._iteratedString;
            var len = s.length;

            if (index >= len) {
              this._iteratedString = undefined;
              return createIterResultObject(undefined, true);
            }

            var ret;
            var first = s.charCodeAt(index);

            if (first < 0xD800 || first > 0xDBFF || index + 1 === len) {
              ret = s[index];
            } else {
              var second = s.charCodeAt(index + 1);
              if (second < 0xDC00 || second > 0xDFFF) {
                ret = s[index];
              } else {
                ret = s[index] + s[index + 1];
              }
            }

            this._nextIndex = index + ret.length;

            return createIterResultObject(ret, false);
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return StringIterator;
      }();

      function createIterResultObject(value, done) {
        return { value: value, done: done };
      }

      return function (object, kind) {
        if (typeof object === 'string') {
          return new StringIterator(object);
        } else if (Array.isArray(object)) {
          return new ArrayIterator(object, kind || KIND_VALUE);
        } else {
          return object[ITERATOR_SYMBOL]();
        }
      };
    }();
  } else {
    return function (object) {
      return object[ITERATOR_SYMBOL]();
    };
  }
}();

babelHelpers.extends(toIterator, {
  KIND_KEY: KIND_KEY,
  KIND_VALUE: KIND_VALUE,
  KIND_KEY_VAL: KIND_KEY_VAL,
  ITERATOR_SYMBOL: ITERATOR_SYMBOL
});

module.exports = toIterator;
}, 62, null, "toIterator");
__d(/* Set */function(global, require, module, exports) {

'use strict';

var Map = require(59   ); // 59 = Map

var _shouldPolyfillES6Collection = require(58                            ); // 58 = _shouldPolyfillES6Collection
var toIterator = require(62          ); // 62 = toIterator

module.exports = function (global) {
  if (!_shouldPolyfillES6Collection('Set')) {
    return global.Set;
  }

  var Set = function () {
    function Set(iterable) {
      babelHelpers.classCallCheck(this, Set);

      if (this == null || typeof this !== 'object' && typeof this !== 'function') {
        throw new TypeError('Wrong set object type.');
      }

      initSet(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          this.add(next.value);
        }
      }
    }

    babelHelpers.createClass(Set, [{
      key: 'add',
      value: function add(value) {
        this._map.set(value, value);
        this.size = this._map.size;
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        initSet(this);
      }
    }, {
      key: 'delete',
      value: function _delete(value) {
        var ret = this._map.delete(value);
        this.size = this._map.size;
        return ret;
      }
    }, {
      key: 'entries',
      value: function entries() {
        return this._map.entries();
      }
    }, {
      key: 'forEach',
      value: function forEach(callback) {
        var thisArg = arguments[1];
        var it = this._map.keys();
        var next;
        while (!(next = it.next()).done) {
          callback.call(thisArg, next.value, next.value, this);
        }
      }
    }, {
      key: 'has',
      value: function has(value) {
        return this._map.has(value);
      }
    }, {
      key: 'values',
      value: function values() {
        return this._map.values();
      }
    }]);
    return Set;
  }();

  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;

  Set.prototype.keys = Set.prototype.values;

  function initSet(set) {
    set._map = new Map();
    set.size = set._map.size;
  }

  return Set;
}(Function('return this')());
}, 63, null, "Set");
__d(/* ReactNativeVersionCheck */function(global, require, module, exports) {
'use strict';

var _require = require(15             ), // 15 = NativeModules
    PlatformConstants = _require.PlatformConstants;

var ReactNativeVersion = require(65                  ); // 65 = ReactNativeVersion

exports.checkVersions = function checkVersions() {
  if (!PlatformConstants) {
    return;
  }

  var nativeVersion = PlatformConstants.reactNativeVersion;
  if (ReactNativeVersion.version.major !== nativeVersion.major || ReactNativeVersion.version.minor !== nativeVersion.minor) {
    throw new Error('React Native version mismatch.\n\nJavaScript version: ' + _formatVersion(ReactNativeVersion.version) + '\n' + ('Native version: ' + _formatVersion(nativeVersion) + '\n\n') + 'Make sure that you have rebuilt the native code. If the problem ' + 'persists try clearing the Watchman and packager caches with ' + '`watchman watch-del-all && react-native start --reset-cache`.');
  }
};

function _formatVersion(version) {
  return version.major + '.' + version.minor + '.' + version.patch + (version.prerelease !== null ? '-' + version.prerelease : '');
}
}, 64, null, "ReactNativeVersionCheck");
__d(/* ReactNativeVersion */function(global, require, module, exports) {

exports.version = {
  major: 0,
  minor: 51,
  patch: 0,
  prerelease: null
};
}, 65, null, "ReactNativeVersion");
__d(/* Promise */function(global, require, module, exports) {
'use strict';

var Promise = require(67                       ); // 67 = fbjs/lib/Promise.native

if (__DEV__) {
  require(71                                       ).enable({ // 71 = promise/setimmediate/rejection-tracking
    allRejections: true,
    onUnhandled: function onUnhandled(id) {
      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var message = void 0;
      var stack = void 0;

      var stringValue = Object.prototype.toString.call(error);
      if (stringValue === '[object Error]') {
        message = Error.prototype.toString.call(error);
        stack = error.stack;
      } else {
        message = require(72             )(error); // 72 = pretty-format
      }

      var warning = 'Possible Unhandled Promise Rejection (id: ' + id + '):\n' + (message + '\n') + (stack == null ? '' : stack);
      console.warn(warning);
    },
    onHandled: function onHandled(id) {
      var warning = 'Promise Rejection Handled (id: ' + id + ')\n' + 'This means you can ignore any previous messages of the form ' + ('"Possible Unhandled Promise Rejection (id: ' + id + '):"');
      console.warn(warning);
    }
  });
}

module.exports = Promise;
}, 66, null, "Promise");
__d(/* fbjs/lib/Promise.native.js */function(global, require, module, exports) {

'use strict';

var Promise = require(68                                   ); // 68 = promise/setimmediate/es6-extensions
require(70                         ); // 70 = promise/setimmediate/done

Promise.prototype['finally'] = function (onSettled) {
  return this.then(onSettled, onSettled);
};

module.exports = Promise;
}, 67, null, "fbjs/lib/Promise.native.js");
__d(/* promise/setimmediate/es6-extensions.js */function(global, require, module, exports) {'use strict';

var Promise = require(69         ); // 69 = ./core.js

module.exports = Promise;

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function (value) {
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};
}, 68, null, "promise/setimmediate/es6-extensions.js");
__d(/* promise/setimmediate/core.js */function(global, require, module, exports) {'use strict';

function noop() {}

var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._40 = 0;
  this._65 = 0;
  this._55 = null;
  this._72 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._37 = null;
Promise._87 = null;
Promise._61 = noop;

Promise.prototype.then = function (onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._65 === 3) {
    self = self._55;
  }
  if (Promise._37) {
    Promise._37(self);
  }
  if (self._65 === 0) {
    if (self._40 === 0) {
      self._40 = 1;
      self._72 = deferred;
      return;
    }
    if (self._40 === 1) {
      self._40 = 2;
      self._72 = [self._72, deferred];
      return;
    }
    self._72.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  setImmediate(function () {
    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._65 === 1) {
        resolve(deferred.promise, self._55);
      } else {
        reject(deferred.promise, self._55);
      }
      return;
    }
    var ret = tryCallOne(cb, self._55);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  if (newValue === self) {
    return reject(self, new TypeError('A promise cannot be resolved with itself.'));
  }
  if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (then === self.then && newValue instanceof Promise) {
      self._65 = 3;
      self._55 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._65 = 1;
  self._55 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._65 = 2;
  self._55 = newValue;
  if (Promise._87) {
    Promise._87(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._40 === 1) {
    handle(self, self._72);
    self._72 = null;
  }
  if (self._40 === 2) {
    for (var i = 0; i < self._72.length; i++) {
      handle(self, self._72[i]);
    }
    self._72 = null;
  }
}

function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}
}, 69, null, "promise/setimmediate/core.js");
__d(/* promise/setimmediate/done.js */function(global, require, module, exports) {'use strict';

var Promise = require(69         ); // 69 = ./core.js

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};
}, 70, null, "promise/setimmediate/done.js");
__d(/* promise/setimmediate/rejection-tracking.js */function(global, require, module, exports) {'use strict';

var Promise = require(69      ); // 69 = ./core

var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._37 = null;
  Promise._87 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._37 = function (promise) {
    if (promise._65 === 2 && rejections[promise._51]) {
      if (rejections[promise._51].logged) {
        onHandled(promise._51);
      } else {
        clearTimeout(rejections[promise._51].timeout);
      }
      delete rejections[promise._51];
    }
  };
  Promise._87 = function (promise, err) {
    if (promise._40 === 0) {
      promise._51 = id++;
      rejections[promise._51] = {
        displayId: null,
        error: err,
        timeout: setTimeout(onUnhandled.bind(null, promise._51), matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(rejections[id].displayId, rejections[id].error);
      } else {
        rejections[id].logged = true;
        logError(rejections[id].displayId, rejections[id].error);
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');
        console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' + rejections[id].displayId + '.');
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}
}, 71, null, "promise/setimmediate/rejection-tracking.js");
__d(/* pretty-format/index.js */function(global, require, module, exports) {'use strict';

var printString = require(73             ); // 73 = ./printString

var toString = Object.prototype.toString;
var toISOString = Date.prototype.toISOString;
var errorToString = Error.prototype.toString;
var regExpToString = RegExp.prototype.toString;
var symbolToString = (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype').toString;

var SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
var NEWLINE_REGEXP = /\n/ig;

var getSymbols = Object.getOwnPropertySymbols || function (obj) {
  return [];
};

function isToStringedArrayType(toStringed) {
  return toStringed === '[object Array]' || toStringed === '[object ArrayBuffer]' || toStringed === '[object DataView]' || toStringed === '[object Float32Array]' || toStringed === '[object Float64Array]' || toStringed === '[object Int8Array]' || toStringed === '[object Int16Array]' || toStringed === '[object Int32Array]' || toStringed === '[object Uint8Array]' || toStringed === '[object Uint8ClampedArray]' || toStringed === '[object Uint16Array]' || toStringed === '[object Uint32Array]';
}

function printNumber(val) {
  if (val != +val) return 'NaN';
  var isNegativeZero = val === 0 && 1 / val < 0;
  return isNegativeZero ? '-0' : '' + val;
}

function printFunction(val, printFunctionName) {
  if (!printFunctionName) {
    return '[Function]';
  } else if (val.name === '') {
    return '[Function anonymous]';
  } else {
    return '[Function ' + val.name + ']';
  }
}

function printSymbol(val) {
  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');
}

function printError(val) {
  return '[' + errorToString.call(val) + ']';
}

function printBasicValue(val, printFunctionName, escapeRegex) {
  if (val === true || val === false) return '' + val;
  if (val === undefined) return 'undefined';
  if (val === null) return 'null';

  var typeOf = typeof val;

  if (typeOf === 'number') return printNumber(val);
  if (typeOf === 'string') return '"' + printString(val) + '"';
  if (typeOf === 'function') return printFunction(val, printFunctionName);
  if (typeOf === 'symbol') return printSymbol(val);

  var toStringed = toString.call(val);

  if (toStringed === '[object WeakMap]') return 'WeakMap {}';
  if (toStringed === '[object WeakSet]') return 'WeakSet {}';
  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, printFunctionName);
  if (toStringed === '[object Symbol]') return printSymbol(val);
  if (toStringed === '[object Date]') return toISOString.call(val);
  if (toStringed === '[object Error]') return printError(val);
  if (toStringed === '[object RegExp]') {
    if (escapeRegex) {
      return printString(regExpToString.call(val));
    }
    return regExpToString.call(val);
  };
  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';
  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';

  if (val instanceof Error) return printError(val);

  return false;
}

function printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var body = '';

  if (list.length) {
    body += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < list.length; i++) {
      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      if (i < list.length - 1) {
        body += ',' + spacing;
      }
    }

    body += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return '[' + body + ']';
}

function printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Map {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      var key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + key + ' => ' + value;

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var constructor = min ? '' : val.constructor ? val.constructor.name + ' ' : 'Object ';
  var result = constructor + '{';
  var keys = Object.keys(val).sort();
  var symbols = getSymbols(val);

  if (symbols.length) {
    keys = keys.filter(function (key) {
      return !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]');
    }).concat(symbols);
  }

  if (keys.length) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + name + ': ' + value;

      if (i < keys.length - 1) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Set {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  refs = refs.slice();
  if (refs.indexOf(val) > -1) {
    return '[Circular]';
  } else {
    refs.push(val);
  }

  currentDepth++;

  var hitMaxDepth = currentDepth > maxDepth;

  if (callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {
    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  var toStringed = toString.call(val);
  if (toStringed === '[object Arguments]') {
    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (isToStringedArrayType(toStringed)) {
    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Map]') {
    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Set]') {
    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (typeof val === 'object') {
    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }
}

function printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var match = false;
  var plugin = void 0;

  for (var p = 0; p < plugins.length; p++) {
    plugin = plugins[p];

    if (plugin.test(val)) {
      match = true;
      break;
    }
  }

  if (!match) {
    return false;
  }

  function boundPrint(val) {
    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  function boundIndent(str) {
    var indentation = prevIndent + indent;
    return indentation + str.replace(NEWLINE_REGEXP, '\n' + indentation);
  }

  return plugin.print(val, boundPrint, boundIndent, {
    edgeSpacing: edgeSpacing,
    spacing: spacing
  });
}

function print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var basic = printBasicValue(val, printFunctionName, escapeRegex);
  if (basic) return basic;

  var plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  if (plugin) return plugin;

  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

var DEFAULTS = {
  callToJSON: true,
  indent: 2,
  maxDepth: Infinity,
  min: false,
  plugins: [],
  printFunctionName: true,
  escapeRegex: false
};

function validateOptions(opts) {
  Object.keys(opts).forEach(function (key) {
    if (!DEFAULTS.hasOwnProperty(key)) {
      throw new Error('prettyFormat: Invalid option: ' + key);
    }
  });

  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {
    throw new Error('prettyFormat: Cannot run with min option and indent');
  }
}

function normalizeOptions(opts) {
  var result = {};

  Object.keys(DEFAULTS).forEach(function (key) {
    return result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key];
  });

  if (result.min) {
    result.indent = 0;
  }

  return result;
}

function createIndent(indent) {
  return new Array(indent + 1).join(' ');
}

function prettyFormat(val, opts) {
  if (!opts) {
    opts = DEFAULTS;
  } else {
    validateOptions(opts);
    opts = normalizeOptions(opts);
  }

  var indent = void 0;
  var refs = void 0;
  var prevIndent = '';
  var currentDepth = 0;
  var spacing = opts.min ? ' ' : '\n';
  var edgeSpacing = opts.min ? '' : '\n';

  if (opts && opts.plugins.length) {
    indent = createIndent(opts.indent);
    refs = [];
    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
    if (pluginsResult) return pluginsResult;
  }

  var basicResult = printBasicValue(val, opts.printFunctionName, opts.escapeRegex);
  if (basicResult) return basicResult;

  if (!indent) indent = createIndent(opts.indent);
  if (!refs) refs = [];
  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
}

module.exports = prettyFormat;
}, 72, null, "pretty-format/index.js");
__d(/* pretty-format/printString.js */function(global, require, module, exports) {'use strict';

var ESCAPED_CHARACTERS = /(\\|\"|\')/g;

module.exports = function printString(val) {
  return val.replace(ESCAPED_CHARACTERS, '\\$1');
};
}, 73, null, "pretty-format/printString.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      context[delegate.resultName] = info.value;

      context.next = delegate.nextLoc;

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      return info;
    }

    context.delegate = null;
    return ContinueSentinel;
  }

  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
}(function () {
  return this;
}() || Function("return this")());
}, 74, null, "regenerator-runtime/runtime.js");
__d(/* JSTimers */function(global, require, module, exports) {
'use strict';

var Platform = require(53        ); // 53 = Platform
var Systrace = require(19        ); // 19 = Systrace

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(15             ), // 15 = NativeModules
    Timing = _require.Timing;

var _performanceNow = null;
function performanceNow() {
  if (!_performanceNow) {
    _performanceNow = require(76                       ); // 76 = fbjs/lib/performanceNow
  }
  return _performanceNow();
}

var FRAME_DURATION = 1000 / 60;
var IDLE_CALLBACK_FRAME_DEADLINE = 1;

var MAX_TIMER_DURATION_MS = 60 * 1000;
var IS_ANDROID = Platform.OS === 'android';
var ANDROID_LONG_TIMER_MESSAGE = 'Setting a timer for a long period of time, i.e. multiple minutes, is a ' + 'performance and correctness issue on Android as it keeps the timer ' + 'module awake, and timers can only be called when the app is in the foreground. ' + 'See https://github.com/facebook/react-native/issues/12981 for more info.';

var callbacks = [];
var types = [];
var timerIDs = [];
var immediates = [];
var requestIdleCallbacks = [];
var requestIdleCallbackTimeouts = {};
var identifiers = [];

var GUID = 1;
var errors = null;

var hasEmittedTimeDriftWarning = false;

function _getFreeIndex() {
  var freeIndex = timerIDs.indexOf(null);
  if (freeIndex === -1) {
    freeIndex = timerIDs.length;
  }
  return freeIndex;
}

function _allocateCallback(func, type) {
  var id = GUID++;
  var freeIndex = _getFreeIndex();
  timerIDs[freeIndex] = id;
  callbacks[freeIndex] = func;
  types[freeIndex] = type;
  if (__DEV__) {
    var parseErrorStack = require(26               ); // 26 = parseErrorStack
    var error = new Error();
    error.framesToPop = 1;
    var stack = parseErrorStack(error);
    if (stack) {
      identifiers[freeIndex] = stack.shift();
    }
  }
  return id;
}

function _callTimer(timerID, frameTime, didTimeout) {
  require(23                )(timerID <= GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID); // 23 = fbjs/lib/warning

  var timerIndex = timerIDs.indexOf(timerID);
  if (timerIndex === -1) {
    return;
  }

  var type = types[timerIndex];
  var callback = callbacks[timerIndex];
  if (!callback || !type) {
    console.error('No callback found for timerID ' + timerID);
    return;
  }

  if (__DEV__) {
    var identifier = identifiers[timerIndex] || {};
    Systrace.beginEvent('Systrace.callTimer: ' + identifier.methodName);
  }

  if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
    _clearIndex(timerIndex);
  }

  try {
    if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
      callback();
    } else if (type === 'requestAnimationFrame') {
      callback(performanceNow());
    } else if (type === 'requestIdleCallback') {
      callback({
        timeRemaining: function timeRemaining() {
          return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
        },
        didTimeout: !!didTimeout
      });
    } else {
      console.error('Tried to call a callback with invalid type: ' + type);
    }
  } catch (e) {
    if (!errors) {
      errors = [e];
    } else {
      errors.push(e);
    }
  }

  if (__DEV__) {
    Systrace.endEvent();
  }
}

function _callImmediatesPass() {
  if (__DEV__) {
    Systrace.beginEvent('callImmediatesPass()');
  }

  if (immediates.length > 0) {
    var passImmediates = immediates.slice();
    immediates = [];

    for (var i = 0; i < passImmediates.length; ++i) {
      _callTimer(passImmediates[i], 0);
    }
  }

  if (__DEV__) {
    Systrace.endEvent();
  }
  return immediates.length > 0;
}

function _clearIndex(i) {
  timerIDs[i] = null;
  callbacks[i] = null;
  types[i] = null;
  identifiers[i] = null;
}

function _freeCallback(timerID) {
  if (timerID == null) {
    return;
  }

  var index = timerIDs.indexOf(timerID);

  if (index !== -1) {
    _clearIndex(index);
    var type = types[index];
    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
      Timing.deleteTimer(timerID);
    }
  }
}

var JSTimers = {
  setTimeout: function setTimeout(func, duration) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setTimeout with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setTimeout');
    Timing.createTimer(id, duration || 0, Date.now(), false);
    return id;
  },

  setInterval: function setInterval(func, duration) {
    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setInterval with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setInterval');
    Timing.createTimer(id, duration || 0, Date.now(), true);
    return id;
  },

  setImmediate: function setImmediate(func) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setImmediate');
    immediates.push(id);
    return id;
  },

  requestAnimationFrame: function requestAnimationFrame(func) {
    var id = _allocateCallback(func, 'requestAnimationFrame');
    Timing.createTimer(id, 1, Date.now(), false);
    return id;
  },

  requestIdleCallback: function requestIdleCallback(func, options) {
    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(true);
    }

    var timeout = options && options.timeout;
    var id = _allocateCallback(timeout != null ? function (deadline) {
      var timeoutId = requestIdleCallbackTimeouts[id];
      if (timeoutId) {
        JSTimers.clearTimeout(timeoutId);
        delete requestIdleCallbackTimeouts[id];
      }
      return func(deadline);
    } : func, 'requestIdleCallback');
    requestIdleCallbacks.push(id);

    if (timeout != null) {
      var timeoutId = JSTimers.setTimeout(function () {
        var index = requestIdleCallbacks.indexOf(id);
        if (index > -1) {
          requestIdleCallbacks.splice(index, 1);
          _callTimer(id, performanceNow(), true);
        }
        delete requestIdleCallbackTimeouts[id];
        if (requestIdleCallbacks.length === 0) {
          Timing.setSendIdleEvents(false);
        }
      }, timeout);
      requestIdleCallbackTimeouts[id] = timeoutId;
    }
    return id;
  },

  cancelIdleCallback: function cancelIdleCallback(timerID) {
    _freeCallback(timerID);
    var index = requestIdleCallbacks.indexOf(timerID);
    if (index !== -1) {
      requestIdleCallbacks.splice(index, 1);
    }

    var timeoutId = requestIdleCallbackTimeouts[timerID];
    if (timeoutId) {
      JSTimers.clearTimeout(timeoutId);
      delete requestIdleCallbackTimeouts[timerID];
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }
  },

  clearTimeout: function clearTimeout(timerID) {
    _freeCallback(timerID);
  },

  clearInterval: function clearInterval(timerID) {
    _freeCallback(timerID);
  },

  clearImmediate: function clearImmediate(timerID) {
    _freeCallback(timerID);
    var index = immediates.indexOf(timerID);
    if (index !== -1) {
      immediates.splice(index, 1);
    }
  },

  cancelAnimationFrame: function cancelAnimationFrame(timerID) {
    _freeCallback(timerID);
  },

  callTimers: function callTimers(timersToCall) {
    invariant(timersToCall.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');

    errors = null;
    for (var i = 0; i < timersToCall.length; i++) {
      _callTimer(timersToCall[i], 0);
    }

    if (errors) {
      var errorCount = errors.length;
      if (errorCount > 1) {
        for (var ii = 1; ii < errorCount; ii++) {
          JSTimers.setTimeout(function (error) {
            throw error;
          }.bind(null, errors[ii]), 0);
        }
      }
      throw errors[0];
    }
  },

  callIdleCallbacks: function callIdleCallbacks(frameTime) {
    if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
      return;
    }

    errors = null;
    if (requestIdleCallbacks.length > 0) {
      var passIdleCallbacks = requestIdleCallbacks.slice();
      requestIdleCallbacks = [];

      for (var i = 0; i < passIdleCallbacks.length; ++i) {
        _callTimer(passIdleCallbacks[i], frameTime);
      }
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }

    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },

  callImmediates: function callImmediates() {
    errors = null;
    while (_callImmediatesPass()) {}
    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },
  emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
    if (hasEmittedTimeDriftWarning) {
      return;
    }
    hasEmittedTimeDriftWarning = true;
    console.warn(warningMessage);
  }
};

if (!Timing) {
  console.warn("Timing native module is not available, can't set timers.");

  module.exports = {
    callImmediates: JSTimers.callImmediates,
    setImmediate: JSTimers.setImmediate
  };
} else {
  module.exports = JSTimers;
}
}, 75, null, "JSTimers");
__d(/* fbjs/lib/performanceNow.js */function(global, require, module, exports) {'use strict';

var performance = require(77             ); // 77 = ./performance

var performanceNow;

if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}, 76, null, "fbjs/lib/performanceNow.js");
__d(/* fbjs/lib/performance.js */function(global, require, module, exports) {

'use strict';

var ExecutionEnvironment = require(78                      ); // 78 = ./ExecutionEnvironment

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}, 77, null, "fbjs/lib/performance.js");
__d(/* fbjs/lib/ExecutionEnvironment.js */function(global, require, module, exports) {

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM };

module.exports = ExecutionEnvironment;
}, 78, null, "fbjs/lib/ExecutionEnvironment.js");
__d(/* XMLHttpRequest */function(global, require, module, exports) {
'use strict';

var EventTarget = require(80                 ); // 80 = event-target-shim
var RCTNetworking = require(84             ); // 84 = RCTNetworking

var base64 = require(94         ); // 94 = base64-js
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var warning = require(23                ); // 23 = fbjs/lib/warning

var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var SUPPORTED_RESPONSE_TYPES = {
  arraybuffer: typeof global.ArrayBuffer === 'function',
  blob: typeof global.Blob === 'function',
  document: false,
  json: true,
  text: true,
  '': true
};

var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];

var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);
    return babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).apply(this, arguments));
  }

  return XMLHttpRequestEventTarget;
}(EventTarget.apply(undefined, REQUEST_EVENTS));

var XMLHttpRequest = function (_EventTarget2) {
  babelHelpers.inherits(XMLHttpRequest, _EventTarget2);
  babelHelpers.createClass(XMLHttpRequest, null, [{
    key: 'setInterceptor',
    value: function setInterceptor(interceptor) {
      XMLHttpRequest._interceptor = interceptor;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this2.UNSENT = UNSENT;
    _this2.OPENED = OPENED;
    _this2.HEADERS_RECEIVED = HEADERS_RECEIVED;
    _this2.LOADING = LOADING;
    _this2.DONE = DONE;
    _this2.readyState = UNSENT;
    _this2.status = 0;
    _this2.timeout = 0;
    _this2.withCredentials = true;
    _this2.upload = new XMLHttpRequestEventTarget();
    _this2._aborted = false;
    _this2._hasError = false;
    _this2._method = null;
    _this2._response = '';
    _this2._url = null;
    _this2._timedOut = false;
    _this2._trackingName = 'unknown';
    _this2._incrementalEvents = false;

    _this2._reset();
    return _this2;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: '_reset',
    value: function _reset() {
      this.readyState = this.UNSENT;
      this.responseHeaders = undefined;
      this.status = 0;
      delete this.responseURL;

      this._requestId = null;

      this._cachedResponse = undefined;
      this._hasError = false;
      this._headers = {};
      this._response = '';
      this._responseType = '';
      this._sent = false;
      this._lowerCaseResponseHeaders = {};

      this._clearSubscriptions();
      this._timedOut = false;
    }
  }, {
    key: '__didCreateRequest',
    value: function __didCreateRequest(requestId) {
      this._requestId = requestId;

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
    }
  }, {
    key: '__didUploadProgress',
    value: function __didUploadProgress(requestId, progress, total) {
      if (requestId === this._requestId) {
        this.upload.dispatchEvent({
          type: 'progress',
          lengthComputable: true,
          loaded: progress,
          total: total
        });
      }
    }
  }, {
    key: '__didReceiveResponse',
    value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
      if (requestId === this._requestId) {
        this.status = status;
        this.setResponseHeaders(responseHeaders);
        this.setReadyState(this.HEADERS_RECEIVED);
        if (responseURL || responseURL === '') {
          this.responseURL = responseURL;
        } else {
          delete this.responseURL;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
      }
    }
  }, {
    key: '__didReceiveData',
    value: function __didReceiveData(requestId, response) {
      if (requestId !== this._requestId) {
        return;
      }
      this._response = response;
      this._cachedResponse = undefined;
      this.setReadyState(this.LOADING);

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
    }
  }, {
    key: '__didReceiveIncrementalData',
    value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
      if (requestId !== this._requestId) {
        return;
      }
      if (!this._response) {
        this._response = responseText;
      } else {
        this._response += responseText;
      }

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);

      this.setReadyState(this.LOADING);
      this.__didReceiveDataProgress(requestId, progress, total);
    }
  }, {
    key: '__didReceiveDataProgress',
    value: function __didReceiveDataProgress(requestId, loaded, total) {
      if (requestId !== this._requestId) {
        return;
      }
      this.dispatchEvent({
        type: 'progress',
        lengthComputable: total >= 0,
        loaded: loaded,
        total: total
      });
    }
  }, {
    key: '__didCompleteResponse',
    value: function __didCompleteResponse(requestId, error, timeOutError) {
      if (requestId === this._requestId) {
        if (error) {
          if (this._responseType === '' || this._responseType === 'text') {
            this._response = error;
          }
          this._hasError = true;
          if (timeOutError) {
            this._timedOut = true;
          }
        }
        this._clearSubscriptions();
        this._requestId = null;
        this.setReadyState(this.DONE);

        if (error) {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
        } else {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
        }
      }
    }
  }, {
    key: '_clearSubscriptions',
    value: function _clearSubscriptions() {
      (this._subscriptions || []).forEach(function (sub) {
        if (sub) {
          sub.remove();
        }
      });
      this._subscriptions = [];
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      if (!this.responseHeaders) {
        return null;
      }
      var headers = this.responseHeaders || {};
      return Object.keys(headers).map(function (headerName) {
        return headerName + ': ' + headers[headerName];
      }).join('\r\n');
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(header) {
      var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
      return value !== undefined ? value : null;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(header, value) {
      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      this._headers[header.toLowerCase()] = String(value);
    }
  }, {
    key: 'setTrackingName',
    value: function setTrackingName(trackingName) {
      this._trackingName = trackingName;
      return this;
    }
  }, {
    key: 'open',
    value: function open(method, url, async) {
      if (this.readyState !== this.UNSENT) {
        throw new Error('Cannot open, already sending');
      }
      if (async !== undefined && !async) {
        throw new Error('Synchronous http requests are not supported');
      }
      if (!url) {
        throw new Error('Cannot load an empty url');
      }
      this._method = method.toUpperCase();
      this._url = url;
      this._aborted = false;
      this.setReadyState(this.OPENED);
    }
  }, {
    key: 'send',
    value: function send(data) {
      var _this3 = this;

      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      if (this._sent) {
        throw new Error('Request has already been sent');
      }
      this._sent = true;
      var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

      this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
        return _this3.__didUploadProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
        return _this3.__didReceiveResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
        return _this3.__didReceiveData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
        return _this3.__didReceiveIncrementalData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
        return _this3.__didReceiveDataProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
        return _this3.__didCompleteResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));

      var nativeResponseType = 'text';
      if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {
        nativeResponseType = 'base64';
      }

      invariant(this._method, 'Request method needs to be defined.');
      invariant(this._url, 'Request URL needs to be defined.');
      RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this), this.withCredentials);
    }
  }, {
    key: 'abort',
    value: function abort() {
      this._aborted = true;
      if (this._requestId) {
        RCTNetworking.abortRequest(this._requestId);
      }

      if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
        this._reset();
        this.setReadyState(this.DONE);
      }

      this._reset();
    }
  }, {
    key: 'setResponseHeaders',
    value: function setResponseHeaders(responseHeaders) {
      this.responseHeaders = responseHeaders || null;
      var headers = responseHeaders || {};
      this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
        return lcaseHeaders;
      }, {});
    }
  }, {
    key: 'setReadyState',
    value: function setReadyState(newState) {
      this.readyState = newState;
      this.dispatchEvent({ type: 'readystatechange' });
      if (newState === this.DONE) {
        if (this._aborted) {
          this.dispatchEvent({ type: 'abort' });
        } else if (this._hasError) {
          if (this._timedOut) {
            this.dispatchEvent({ type: 'timeout' });
          } else {
            this.dispatchEvent({ type: 'error' });
          }
        } else {
          this.dispatchEvent({ type: 'load' });
        }
        this.dispatchEvent({ type: 'loadend' });
      }
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, listener) {
      if (type === 'readystatechange' || type === 'progress') {
        this._incrementalEvents = true;
      }
      babelHelpers.get(XMLHttpRequest.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequest.prototype), 'addEventListener', this).call(this, type, listener);
    }
  }, {
    key: 'responseType',
    get: function get() {
      return this._responseType;
    },
    set: function set(responseType) {
      if (this._sent) {
        throw new Error('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The ' + 'response type cannot be set after the request has been sent.');
      }
      if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
        warning(false, 'The provided value \'' + responseType + '\' is not a valid \'responseType\'.');
        return;
      }

      invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', 'The provided value \'' + responseType + '\' is unsupported in this environment.');
      this._responseType = responseType;
    }
  }, {
    key: 'responseText',
    get: function get() {
      if (this._responseType !== '' && this._responseType !== 'text') {
        throw new Error("The 'responseText' property is only available if 'responseType' " + ('is set to \'\' or \'text\', but it is \'' + this._responseType + '\'.'));
      }
      if (this.readyState < LOADING) {
        return '';
      }
      return this._response;
    }
  }, {
    key: 'response',
    get: function get() {
      var responseType = this.responseType;

      if (responseType === '' || responseType === 'text') {
        return this.readyState < LOADING || this._hasError ? '' : this._response;
      }

      if (this.readyState !== DONE) {
        return null;
      }

      if (this._cachedResponse !== undefined) {
        return this._cachedResponse;
      }

      switch (responseType) {
        case 'document':
          this._cachedResponse = null;
          break;

        case 'arraybuffer':
          this._cachedResponse = base64.toByteArray(this._response).buffer;
          break;

        case 'blob':
          this._cachedResponse = new global.Blob([base64.toByteArray(this._response).buffer], { type: this.getResponseHeader('content-type') || '' });
          break;

        case 'json':
          try {
            this._cachedResponse = JSON.parse(this._response);
          } catch (_) {
            this._cachedResponse = null;
          }
          break;

        default:
          this._cachedResponse = null;
      }

      return this._cachedResponse;
    }
  }]);
  return XMLHttpRequest;
}(EventTarget.apply(undefined, babelHelpers.toConsumableArray(XHR_EVENTS)));

XMLHttpRequest.UNSENT = UNSENT;
XMLHttpRequest.OPENED = OPENED;
XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
XMLHttpRequest.LOADING = LOADING;
XMLHttpRequest.DONE = DONE;
XMLHttpRequest._interceptor = null;


module.exports = XMLHttpRequest;
}, 79, null, "XMLHttpRequest");
__d(/* event-target-shim/lib/event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(81         ); // 81 = ./commons
var CustomEventTarget = require(82                     ); // 82 = ./custom-event-target
var EventWrapper = require(83               ); // 83 = ./event-wrapper
var LISTENERS = Commons.LISTENERS;
var CAPTURE = Commons.CAPTURE;
var BUBBLE = Commons.BUBBLE;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;
var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
var createEventWrapper = EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;

var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
        Object.defineProperty(this, LISTENERS, { value: Object.create(null) });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
        var types = Array(arguments.length);
        for (var i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }

        return defineCustomEventTarget(EventTarget, types);
    } else {
        throw new TypeError("Cannot call a class as a function");
    }
};

EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
        value: EventTarget,
        writable: true,
        configurable: true
    },

    addEventListener: {
        value: function addEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }
            if (typeof listener !== "function" && typeof listener !== "object") {
                throw new TypeError("\"listener\" is not an object.");
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var node = this[LISTENERS][type];
            if (node == null) {
                this[LISTENERS][type] = newNode(listener, kind);
                return true;
            }

            var prev = null;
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    return false;
                }
                prev = node;
                node = node.next;
            }

            prev.next = newNode(listener, kind);
            return true;
        },
        configurable: true,
        writable: true
    },

    removeEventListener: {
        value: function removeEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = this[LISTENERS][type];
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    if (prev == null) {
                        this[LISTENERS][type] = node.next;
                    } else {
                        prev.next = node.next;
                    }
                    return true;
                }

                prev = node;
                node = node.next;
            }

            return false;
        },
        configurable: true,
        writable: true
    },

    dispatchEvent: {
        value: function dispatchEvent(event) {
            var node = this[LISTENERS][event.type];
            if (node == null) {
                return true;
            }

            var wrapped = createEventWrapper(event, this);

            while (node != null) {
                if (typeof node.listener === "function") {
                    node.listener.call(this, wrapped);
                } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrapped);
                }

                if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
                    break;
                }
                node = node.next;
            }

            return !wrapped.defaultPrevented;
        },
        configurable: true,
        writable: true
    }
});
}, 80, null, "event-target-shim/lib/event-target.js");
__d(/* event-target-shim/lib/commons.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
  return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
};

exports.LISTENERS = createUniqueKey("listeners");

exports.CAPTURE = 1;

exports.BUBBLE = 2;

exports.ATTRIBUTE = 3;

exports.newNode = function newNode(listener, kind) {
  return { listener: listener, kind: kind, next: null };
};
}, 81, null, "event-target-shim/lib/commons.js");
__d(/* event-target-shim/lib/custom-event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(81         ); // 81 = ./commons
var LISTENERS = Commons.LISTENERS;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;

function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            return node.listener;
        }
        node = node.next;
    }
    return null;
}

function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
        listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            if (prev == null) {
                eventTarget[LISTENERS][type] = node.next;
            } else {
                prev.next = node.next;
            }
        } else {
            prev = node;
        }

        node = node.next;
    }

    if (listener != null) {
        if (prev == null) {
            eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
        } else {
            prev.next = newNode(listener, ATTRIBUTE);
        }
    }
}

exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
        EventTargetBase.call(this);
    }

    var descripter = {
        constructor: {
            value: EventTarget,
            configurable: true,
            writable: true
        }
    };

    types.forEach(function (type) {
        descripter["on" + type] = {
            get: function get() {
                return getAttributeListener(this, type);
            },
            set: function set(listener) {
                setAttributeListener(this, type, listener);
            },
            configurable: true,
            enumerable: true
        };
    });

    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);

    return EventTarget;
};
}, 82, null, "event-target-shim/lib/custom-event-target.js");
__d(/* event-target-shim/lib/event-wrapper.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = require(81         ).createUniqueKey; // 81 = ./commons

var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");

var CANCELED_FLAG = createUniqueKey("canceled_flag");

var ORIGINAL_EVENT = createUniqueKey("original_event");

var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
        value: function stopPropagation() {
            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopPropagation === "function") {
                e.stopPropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    stopImmediatePropagation: Object.freeze({
        value: function stopImmediatePropagation() {
            this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopImmediatePropagation === "function") {
                e.stopImmediatePropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    preventDefault: Object.freeze({
        value: function preventDefault() {
            if (this.cancelable === true) {
                this[CANCELED_FLAG] = true;
            }

            var e = this[ORIGINAL_EVENT];
            if (typeof e.preventDefault === "function") {
                e.preventDefault();
            }
        },
        writable: true,
        configurable: true
    }),

    defaultPrevented: Object.freeze({
        get: function defaultPrevented() {
            return this[CANCELED_FLAG];
        },
        enumerable: true,
        configurable: true
    })
});

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
        type: { value: event.type, enumerable: true },
        target: { value: eventTarget, enumerable: true },
        currentTarget: { value: eventTarget, enumerable: true },
        eventPhase: { value: 2, enumerable: true },
        bubbles: { value: Boolean(event.bubbles), enumerable: true },
        cancelable: { value: Boolean(event.cancelable), enumerable: true },
        timeStamp: { value: timeStamp, enumerable: true },
        isTrusted: { value: false, enumerable: true }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = { value: false, writable: true };
    propertyDefinition[CANCELED_FLAG] = { value: false, writable: true };
    propertyDefinition[ORIGINAL_EVENT] = { value: event };

    if (typeof event.detail !== "undefined") {
        propertyDefinition.detail = { value: event.detail, enumerable: true };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
};
}, 83, null, "event-target-shim/lib/event-wrapper.js");
__d(/* RCTNetworking */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(85                             ); // 85 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var RCTNetworkingNative = require(15             ).Networking; // 15 = NativeModules
var convertRequestBody = require(92                  ); // 92 = convertRequestBody

var RCTNetworking = function (_NativeEventEmitter) {
  babelHelpers.inherits(RCTNetworking, _NativeEventEmitter);

  function RCTNetworking() {
    babelHelpers.classCallCheck(this, RCTNetworking);

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTNetworking.__proto__ || Object.getPrototypeOf(RCTNetworking)).call(this, RCTNetworkingNative));

    _this.isAvailable = true;
    return _this;
  }

  babelHelpers.createClass(RCTNetworking, [{
    key: 'sendRequest',
    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {
      var body = convertRequestBody(data);
      RCTNetworkingNative.sendRequest({
        method: method,
        url: url,
        data: babelHelpers.extends({}, body, { trackingName: trackingName }),
        headers: headers,
        responseType: responseType,
        incrementalUpdates: incrementalUpdates,
        timeout: timeout,
        withCredentials: withCredentials
      }, callback);
    }
  }, {
    key: 'abortRequest',
    value: function abortRequest(requestId) {
      RCTNetworkingNative.abortRequest(requestId);
    }
  }, {
    key: 'clearCookies',
    value: function clearCookies(callback) {
      RCTNetworkingNative.clearCookies(callback);
    }
  }]);
  return RCTNetworking;
}(NativeEventEmitter);

if (__DEV__ && !RCTNetworkingNative) {
  var MissingNativeRCTNetworkingShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeRCTNetworkingShim, _MissingNativeEventEm);

    function MissingNativeRCTNetworkingShim() {
      babelHelpers.classCallCheck(this, MissingNativeRCTNetworkingShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeRCTNetworkingShim.__proto__ || Object.getPrototypeOf(MissingNativeRCTNetworkingShim)).call(this, 'RCTNetworking', 'Networking'));
    }

    babelHelpers.createClass(MissingNativeRCTNetworkingShim, [{
      key: 'sendRequest',
      value: function sendRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'abortRequest',
      value: function abortRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'clearCookies',
      value: function clearCookies() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeRCTNetworkingShim;
  }(MissingNativeEventEmitterShim);

  RCTNetworking = new MissingNativeRCTNetworkingShim();
} else {
  RCTNetworking = new RCTNetworking();
}

module.exports = RCTNetworking;
}, 84, null, "RCTNetworking");
__d(/* MissingNativeEventEmitterShim */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(86                   ); // 86 = EmitterSubscription
var EventEmitter = require(88            ); // 88 = EventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MissingNativeEventEmitterShim = function (_EventEmitter) {
  babelHelpers.inherits(MissingNativeEventEmitterShim, _EventEmitter);

  function MissingNativeEventEmitterShim(nativeModuleName, nativeEventEmitterName) {
    babelHelpers.classCallCheck(this, MissingNativeEventEmitterShim);

    var _this = babelHelpers.possibleConstructorReturn(this, (MissingNativeEventEmitterShim.__proto__ || Object.getPrototypeOf(MissingNativeEventEmitterShim)).call(this, null));

    _this.isAvailable = false;

    _this._nativeModuleName = nativeModuleName;
    _this._nativeEventEmitterName = nativeEventEmitterName;
    return _this;
  }

  babelHelpers.createClass(MissingNativeEventEmitterShim, [{
    key: 'throwMissingNativeModule',
    value: function throwMissingNativeModule() {
      invariant(false, 'Cannot use \'' + this._nativeEventEmitterName + '\' module when ' + ('native \'' + this._nativeModuleName + '\' is not included in the build. ') + ('Either include it, or check \'' + this._nativeEventEmitterName + '\'.isAvailable ') + 'before calling any methods.');
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      this.throwMissingNativeModule();
    }
  }]);
  return MissingNativeEventEmitterShim;
}(EventEmitter);

module.exports = MissingNativeEventEmitterShim;
}, 85, null, "MissingNativeEventEmitterShim");
__d(/* EmitterSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(87                 ); // 87 = EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 86, null, "EmitterSubscription");
__d(/* EventSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 87, null, "EventSubscription");
__d(/* EventEmitter */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(86                   ); // 86 = EmitterSubscription
var EventSubscriptionVendor = require(89                       ); // 89 = EventSubscriptionVendor

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 88, null, "EventEmitter");
__d(/* EventSubscriptionVendor */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 89, null, "EventSubscriptionVendor");
__d(/* NativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(88            ); // 88 = EventEmitter
var Platform = require(53        ); // 53 = Platform
var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var NativeEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NativeEventEmitter, _EventEmitter);

  function NativeEventEmitter(nativeModule) {
    babelHelpers.classCallCheck(this, NativeEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NativeEventEmitter.__proto__ || Object.getPrototypeOf(NativeEventEmitter)).call(this, RCTDeviceEventEmitter.sharedSubscriber));

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }
    return _this;
  }

  babelHelpers.createClass(NativeEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (this._nativeModule != null) {
        this._nativeModule.addListener(eventType);
      }
      return babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      var count = this.listeners(eventType).length;
      if (this._nativeModule != null) {
        this._nativeModule.removeListeners(count);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (this._nativeModule != null) {
        this._nativeModule.removeListeners(1);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
}, 90, null, "NativeEventEmitter");
__d(/* RCTDeviceEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(88            ); // 88 = EventEmitter
var EventSubscriptionVendor = require(89                       ); // 89 = EventSubscriptionVendor

function checkNativeEventModule(eventType) {
  if (eventType) {
    if (eventType.lastIndexOf('statusBar', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');
    }
    if (eventType.lastIndexOf('keyboard', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');
    }
    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
      throw new Error('`' + eventType + '` event should be registered via the AppState module');
    }
  }
}

var RCTDeviceEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    babelHelpers.classCallCheck(this, RCTDeviceEventEmitter);

    var sharedSubscriber = new EventSubscriptionVendor();

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTDeviceEventEmitter.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this, sharedSubscriber));

    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  babelHelpers.createClass(RCTDeviceEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }
      return babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }
      babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

module.exports = new RCTDeviceEventEmitter();
}, 91, null, "RCTDeviceEventEmitter");
__d(/* convertRequestBody */function(global, require, module, exports) {
'use strict';

var binaryToBase64 = require(93              ); // 93 = binaryToBase64

var FormData = require(95        ); // 95 = FormData

function convertRequestBody(body) {
  if (typeof body === 'string') {
    return { string: body };
  }
  if (body instanceof FormData) {
    return { formData: body.getParts() };
  }
  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
    return { base64: binaryToBase64(body) };
  }
  return body;
}

module.exports = convertRequestBody;
}, 92, null, "convertRequestBody");
__d(/* binaryToBase64 */function(global, require, module, exports) {
'use strict';

var base64 = require(94         ); // 94 = base64-js

function binaryToBase64(data) {
  if (data instanceof ArrayBuffer) {
    data = new Uint8Array(data);
  }
  if (data instanceof Uint8Array) {
    return base64.fromByteArray(data);
  }
  if (!ArrayBuffer.isView(data)) {
    throw new Error('data must be ArrayBuffer or typed array');
  }
  var _data = data,
      buffer = _data.buffer,
      byteOffset = _data.byteOffset,
      byteLength = _data.byteLength;

  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
}

module.exports = binaryToBase64;
}, 93, null, "binaryToBase64");
__d(/* base64-js/index.js */function(global, require, module, exports) {'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function placeHoldersCount(b64) {
  var len = b64.length;
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
}

function byteLength(b64) {
  return b64.length * 3 / 4 - placeHoldersCount(b64);
}

function toByteArray(b64) {
  var i, l, tmp, placeHolders, arr;
  var len = b64.length;
  placeHolders = placeHoldersCount(b64);

  arr = new Arr(len * 3 / 4 - placeHolders);

  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0; i < l; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = tmp >> 16 & 0xFF;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3;
  var output = '';
  var parts = [];
  var maxChunkLength = 16383;
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[tmp << 4 & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    output += lookup[tmp >> 10];
    output += lookup[tmp >> 4 & 0x3F];
    output += lookup[tmp << 2 & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('');
}
}, 94, null, "base64-js/index.js");
__d(/* FormData */function(global, require, module, exports) {
'use strict';

var FormData = function () {
  function FormData() {
    babelHelpers.classCallCheck(this, FormData);

    this._parts = [];
  }

  babelHelpers.createClass(FormData, [{
    key: 'append',
    value: function append(key, value) {
      this._parts.push([key, value]);
    }
  }, {
    key: 'getParts',
    value: function getParts() {
      return this._parts.map(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        var contentDisposition = 'form-data; name="' + name + '"';

        var headers = { 'content-disposition': contentDisposition };

        if (typeof value === 'object' && value) {
          if (typeof value.name === 'string') {
            headers['content-disposition'] += '; filename="' + value.name + '"';
          }
          if (typeof value.type === 'string') {
            headers['content-type'] = value.type;
          }
          return babelHelpers.extends({}, value, { headers: headers, fieldName: name });
        }

        return { string: String(value), headers: headers, fieldName: name };
      });
    }
  }]);
  return FormData;
}();

module.exports = FormData;
}, 95, null, "FormData");
__d(/* WebSocket */function(global, require, module, exports) {
'use strict';

var Blob = require(97    ); // 97 = Blob
var EventTarget = require(80                 ); // 80 = event-target-shim
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform
var WebSocketEvent = require(103             ); // 103 = WebSocketEvent

var base64 = require(94         ); // 94 = base64-js
var binaryToBase64 = require(93              ); // 93 = binaryToBase64
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var WebSocketModule = NativeModules.WebSocketModule;


var CONNECTING = 0;
var OPEN = 1;
var CLOSING = 2;
var CLOSED = 3;

var CLOSE_NORMAL = 1000;

var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];

var nextWebSocketId = 0;

var WebSocket = function (_EventTarget) {
  babelHelpers.inherits(WebSocket, _EventTarget);

  function WebSocket(url, protocols, options) {
    babelHelpers.classCallCheck(this, WebSocket);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebSocket.__proto__ || Object.getPrototypeOf(WebSocket)).call(this));

    _this.CONNECTING = CONNECTING;
    _this.OPEN = OPEN;
    _this.CLOSING = CLOSING;
    _this.CLOSED = CLOSED;
    _this.readyState = CONNECTING;

    if (typeof protocols === 'string') {
      protocols = [protocols];
    }

    var _ref = options || {},
        _ref$headers = _ref.headers,
        headers = _ref$headers === undefined ? {} : _ref$headers,
        unrecognized = babelHelpers.objectWithoutProperties(_ref, ['headers']);

    if (unrecognized && typeof unrecognized.origin === 'string') {
      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');

      headers.origin = unrecognized.origin;

      delete unrecognized.origin;
    }

    if (Object.keys(unrecognized).length > 0) {
      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');
    }

    if (!Array.isArray(protocols)) {
      protocols = null;
    }

    if (!WebSocket.isAvailable) {
      throw new Error('Cannot initialize WebSocket module. ' + 'Native module WebSocketModule is missing.');
    }

    _this._eventEmitter = new NativeEventEmitter(WebSocketModule);
    _this._socketId = nextWebSocketId++;
    _this._registerEvents();
    WebSocketModule.connect(url, protocols, { headers: headers }, _this._socketId);
    return _this;
  }

  babelHelpers.createClass(WebSocket, [{
    key: 'close',
    value: function close(code, reason) {
      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
        return;
      }

      this.readyState = this.CLOSING;
      this._close(code, reason);
    }
  }, {
    key: 'send',
    value: function send(data) {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      if (data instanceof Blob) {
        var BlobModule = NativeModules.BlobModule;
        invariant(BlobModule, 'Native module BlobModule is required for blob support');
        BlobModule.sendBlob(data, this._socketId);
        return;
      }

      if (typeof data === 'string') {
        WebSocketModule.send(data, this._socketId);
        return;
      }

      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
        WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
        return;
      }

      throw new Error('Unsupported data type');
    }
  }, {
    key: 'ping',
    value: function ping() {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      WebSocketModule.ping(this._socketId);
    }
  }, {
    key: '_close',
    value: function _close(code, reason) {
      if (Platform.OS === 'android') {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        WebSocketModule.close(statusCode, closeReason, this._socketId);
      } else {
        WebSocketModule.close(this._socketId);
      }
    }
  }, {
    key: '_unregisterEvents',
    value: function _unregisterEvents() {
      this._subscriptions.forEach(function (e) {
        return e.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: '_registerEvents',
    value: function _registerEvents() {
      var _this2 = this;

      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        var data = ev.data;
        switch (ev.type) {
          case 'binary':
            data = base64.toByteArray(ev.data).buffer;
            break;
          case 'blob':
            data = Blob.create(ev.data);
            break;
        }
        _this2.dispatchEvent(new WebSocketEvent('message', { data: data }));
      }), this._eventEmitter.addListener('websocketOpen', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.OPEN;
        _this2.dispatchEvent(new WebSocketEvent('open'));
      }), this._eventEmitter.addListener('websocketClosed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('close', {
          code: ev.code,
          reason: ev.reason
        }));
        _this2._unregisterEvents();
        _this2.close();
      }), this._eventEmitter.addListener('websocketFailed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('error', {
          message: ev.message
        }));
        _this2.dispatchEvent(new WebSocketEvent('close', {
          message: ev.message
        }));
        _this2._unregisterEvents();
        _this2.close();
      })];
    }
  }, {
    key: 'binaryType',
    get: function get() {
      return this._binaryType;
    },
    set: function set(binaryType) {
      if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {
        throw new Error('binaryType must be either \'blob\' or \'arraybuffer\'');
      }
      if (this._binaryType === 'blob' || binaryType === 'blob') {
        var BlobModule = NativeModules.BlobModule;
        invariant(BlobModule, 'Native module BlobModule is required for blob support');
        if (BlobModule) {
          if (binaryType === 'blob') {
            BlobModule.enableBlobSupport(this._socketId);
          } else {
            BlobModule.disableBlobSupport(this._socketId);
          }
        }
      }
      this._binaryType = binaryType;
    }
  }]);
  return WebSocket;
}(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

WebSocket.CONNECTING = CONNECTING;
WebSocket.OPEN = OPEN;
WebSocket.CLOSING = CLOSING;
WebSocket.CLOSED = CLOSED;
WebSocket.isAvailable = !!WebSocketModule;


module.exports = WebSocket;
}, 96, null, "WebSocket");
__d(/* Blob */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var uuid = require(98    ); // 98 = uuid

var _require = require(15             ), // 15 = NativeModules
    BlobModule = _require.BlobModule;

var Blob = function () {
  babelHelpers.createClass(Blob, null, [{
    key: 'create',
    value: function create(props) {
      return babelHelpers.extends(Object.create(Blob.prototype), props);
    }
  }]);

  function Blob(parts, options) {
    babelHelpers.classCallCheck(this, Blob);

    var blobId = uuid();
    var size = 0;
    parts.forEach(function (part) {
      invariant(part instanceof Blob, 'Can currently only create a Blob from other Blobs');
      size += part.size;
    });
    BlobModule.createFromParts(parts, blobId);
    return Blob.create({
      blobId: blobId,
      offset: 0,
      size: size
    });
  }

  babelHelpers.createClass(Blob, [{
    key: 'slice',
    value: function slice(start, end) {
      var offset = this.offset;
      var size = this.size;
      if (typeof start === 'number') {
        if (start > size) {
          start = size;
        }
        offset += start;
        size -= start;

        if (typeof end === 'number') {
          if (end < 0) {
            end = this.size + end;
          }
          size = end - start;
        }
      }
      return Blob.create({
        blobId: this.blobId,
        offset: offset,
        size: size
      });
    }
  }, {
    key: 'close',
    value: function close() {
      BlobModule.release(this.blobId);
    }
  }]);
  return Blob;
}();

module.exports = Blob;
}, 97, null, "Blob");
__d(/* uuid/index.js */function(global, require, module, exports) {var v1 = require(99    ); // 99 = ./v1
var v4 = require(102   ); // 102 = ./v4

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;

module.exports = uuid;
}, 98, null, "uuid/index.js");
__d(/* uuid/v1.js */function(global, require, module, exports) {var rng = require(100        ); // 100 = ./lib/rng
var bytesToUuid = require(101                ); // 101 = ./lib/bytesToUuid

var _seedBytes = rng();

var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];

var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

var _lastMSecs = 0,
    _lastNSecs = 0;

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};

  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  msecs += 12219292800000;

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  b[i++] = tmh >>> 24 & 0xf | 0x10;
  b[i++] = tmh >>> 16 & 0xff;

  b[i++] = clockseq >>> 8 | 0x80;

  b[i++] = clockseq & 0xff;

  var node = options.node || _nodeId;
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid(b);
}

module.exports = v1;
}, 99, null, "uuid/v1.js");
__d(/* uuid/lib/rng-browser.js */function(global, require, module, exports) {
var rng;

var crypto = global.crypto || global.msCrypto;
if (crypto && crypto.getRandomValues) {
  var rnds8 = new Uint8Array(16);
  rng = function whatwgRNG() {
    crypto.getRandomValues(rnds8);
    return rnds8;
  };
}

if (!rng) {
  var rnds = new Array(16);
  rng = function rng() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}

module.exports = rng;
}, 100, null, "uuid/lib/rng-browser.js");
__d(/* uuid/lib/bytesToUuid.js */function(global, require, module, exports) {
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
}

module.exports = bytesToUuid;
}, 101, null, "uuid/lib/bytesToUuid.js");
__d(/* uuid/v4.js */function(global, require, module, exports) {var rng = require(100        ); // 100 = ./lib/rng
var bytesToUuid = require(101                ); // 101 = ./lib/bytesToUuid

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options == 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80;

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;
}, 102, null, "uuid/v4.js");
__d(/* WebSocketEvent */function(global, require, module, exports) {

'use strict';

var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
  babelHelpers.classCallCheck(this, WebSocketEvent);

  this.type = type.toString();
  babelHelpers.extends(this, eventInitDict);
};

module.exports = WebSocketEvent;
}, 103, null, "WebSocketEvent");
__d(/* URL */function(global, require, module, exports) {

'use strict';

var Blob = require(97    ); // 97 = Blob

var _require = require(15             ), // 15 = NativeModules
    BlobModule = _require.BlobModule;

var BLOB_URL_PREFIX = null;

if (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {
  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';
  if (typeof BlobModule.BLOB_URI_HOST === 'string') {
    BLOB_URL_PREFIX += '//' + BlobModule.BLOB_URI_HOST + '/';
  }
}

var URL = function () {
  function URL() {
    babelHelpers.classCallCheck(this, URL);

    throw new Error('Creating BlobURL objects is not supported yet.');
  }

  babelHelpers.createClass(URL, null, [{
    key: 'createObjectURL',
    value: function createObjectURL(blob) {
      if (BLOB_URL_PREFIX === null) {
        throw new Error('Cannot create URL for blob!');
      }
      return '' + BLOB_URL_PREFIX + blob.blobId + '?offset=' + blob.offset + '&size=' + blob.size;
    }
  }, {
    key: 'revokeObjectURL',
    value: function revokeObjectURL(url) {}
  }]);
  return URL;
}();

module.exports = URL;
}, 104, null, "URL");
__d(/* Alert */function(global, require, module, exports) {
'use strict';

var AlertIOS = require(106       ); // 106 = AlertIOS
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform

var Alert = function () {
  function Alert() {
    babelHelpers.classCallCheck(this, Alert);
  }

  babelHelpers.createClass(Alert, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options, type) {
      if (Platform.OS === 'ios') {
        if (typeof type !== 'undefined') {
          console.warn('Alert.alert() with a 5th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
          AlertIOS.alert(title, message, buttons, type);
          return;
        }
        AlertIOS.alert(title, message, buttons);
      } else if (Platform.OS === 'android') {
        AlertAndroid.alert(title, message, buttons, options);
      }
    }
  }]);
  return Alert;
}();

var AlertAndroid = function () {
  function AlertAndroid() {
    babelHelpers.classCallCheck(this, AlertAndroid);
  }

  babelHelpers.createClass(AlertAndroid, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options) {
      var config = {
        title: title || '',
        message: message || ''
      };

      if (options) {
        config = babelHelpers.extends({}, config, { cancelable: options.cancelable });
      }

      var validButtons = buttons ? buttons.slice(0, 3) : [{ text: 'OK' }];
      var buttonPositive = validButtons.pop();
      var buttonNegative = validButtons.pop();
      var buttonNeutral = validButtons.pop();
      if (buttonNeutral) {
        config = babelHelpers.extends({}, config, { buttonNeutral: buttonNeutral.text || '' });
      }
      if (buttonNegative) {
        config = babelHelpers.extends({}, config, { buttonNegative: buttonNegative.text || '' });
      }
      if (buttonPositive) {
        config = babelHelpers.extends({}, config, { buttonPositive: buttonPositive.text || '' });
      }
      NativeModules.DialogManagerAndroid.showAlert(config, function (errorMessage) {
        return console.warn(errorMessage);
      }, function (action, buttonKey) {
        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {
          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {
            buttonNeutral.onPress && buttonNeutral.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonNegative) {
            buttonNegative.onPress && buttonNegative.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonPositive) {
            buttonPositive.onPress && buttonPositive.onPress();
          }
        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {
          options && options.onDismiss && options.onDismiss();
        }
      });
    }
  }]);
  return AlertAndroid;
}();

module.exports = Alert;
}, 105, null, "Alert");
__d(/* AlertIOS */function(global, require, module, exports) {
'use strict';

var RCTAlertManager = require(15             ).AlertManager; // 15 = NativeModules

var AlertIOS = function () {
  function AlertIOS() {
    babelHelpers.classCallCheck(this, AlertIOS);
  }

  babelHelpers.createClass(AlertIOS, null, [{
    key: 'alert',
    value: function alert(title, message, callbackOrButtons, type) {
      if (typeof type !== 'undefined') {
        console.warn('AlertIOS.alert() with a 4th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
        this.prompt(title, message, callbackOrButtons, type);
        return;
      }
      this.prompt(title, message, callbackOrButtons, 'default');
    }
  }, {
    key: 'prompt',
    value: function prompt(title, message, callbackOrButtons) {
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
      var defaultValue = arguments[4];
      var keyboardType = arguments[5];

      if (typeof type === 'function') {
        console.warn('You passed a callback function as the "type" argument to AlertIOS.prompt(). React Native is ' + 'assuming  you want to use the deprecated AlertIOS.prompt(title, defaultValue, buttons, callback) ' + 'signature. The current signature is AlertIOS.prompt(title, message, callbackOrButtons, type, defaultValue, ' + 'keyboardType) and the old syntax will be removed in a future version.');

        var callback = type;
        var defaultValue = message;
        RCTAlertManager.alertWithArgs({
          title: title || '',
          type: 'plain-text',
          defaultValue: defaultValue
        }, function (id, value) {
          callback(value);
        });
        return;
      }

      var callbacks = [];
      var buttons = [];
      var cancelButtonKey;
      var destructiveButtonKey;
      if (typeof callbackOrButtons === 'function') {
        callbacks = [callbackOrButtons];
      } else if (callbackOrButtons instanceof Array) {
        callbackOrButtons.forEach(function (btn, index) {
          callbacks[index] = btn.onPress;
          if (btn.style === 'cancel') {
            cancelButtonKey = String(index);
          } else if (btn.style === 'destructive') {
            destructiveButtonKey = String(index);
          }
          if (btn.text || index < (callbackOrButtons || []).length - 1) {
            var btnDef = {};
            btnDef[index] = btn.text || '';
            buttons.push(btnDef);
          }
        });
      }

      RCTAlertManager.alertWithArgs({
        title: title || '',
        message: message || undefined,
        buttons: buttons,
        type: type || undefined,
        defaultValue: defaultValue,
        cancelButtonKey: cancelButtonKey,
        destructiveButtonKey: destructiveButtonKey,
        keyboardType: keyboardType
      }, function (id, value) {
        var cb = callbacks[id];
        cb && cb(value);
      });
    }
  }]);
  return AlertIOS;
}();

module.exports = AlertIOS;
}, 106, null, "AlertIOS");
__d(/* Geolocation */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var RCTLocationObserver = require(15             ).LocationObserver; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var logError = require(108       ); // 108 = logError

var warning = require(23                ); // 23 = fbjs/lib/warning

var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

var Platform = require(53        ); // 53 = Platform
var PermissionsAndroid = require(109                 ); // 109 = PermissionsAndroid

var subscriptions = [];
var updatesEnabled = false;

var Geolocation = {
  setRNConfiguration: function setRNConfiguration(config) {
    if (RCTLocationObserver.setConfiguration) {
      RCTLocationObserver.setConfiguration(config);
    }
  },

  requestAuthorization: function requestAuthorization() {
    RCTLocationObserver.requestAuthorization();
  },

  getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
    var hasPermission, status;
    return regeneratorRuntime.async(function getCurrentPosition$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
            hasPermission = true;

            if (!(Platform.OS === 'android' && Platform.Version >= 23)) {
              _context.next = 11;
              break;
            }

            _context.next = 5;
            return regeneratorRuntime.awrap(PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 5:
            hasPermission = _context.sent;

            if (hasPermission) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 9:
            status = _context.sent;

            hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;

          case 11:
            if (hasPermission) {
              RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
            }

          case 12:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  },

  watchPosition: function watchPosition(success, error, options) {
    if (!updatesEnabled) {
      RCTLocationObserver.startObserving(options || {});
      updatesEnabled = true;
    }
    var watchID = subscriptions.length;
    subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
    return watchID;
  },

  clearWatch: function clearWatch(watchID) {
    var sub = subscriptions[watchID];
    if (!sub) {
      return;
    }

    sub[0].remove();

    var sub1 = sub[1];sub1 && sub1.remove();
    subscriptions[watchID] = undefined;
    var noWatchers = true;
    for (var ii = 0; ii < subscriptions.length; ii++) {
      if (subscriptions[ii]) {
        noWatchers = false;
      }
    }
    if (noWatchers) {
      Geolocation.stopObserving();
    }
  },

  stopObserving: function stopObserving() {
    if (updatesEnabled) {
      RCTLocationObserver.stopObserving();
      updatesEnabled = false;
      for (var ii = 0; ii < subscriptions.length; ii++) {
        var sub = subscriptions[ii];
        if (sub) {
          warning(false, 'Called stopObserving with existing subscriptions.');
          sub[0].remove();

          var sub1 = sub[1];sub1 && sub1.remove();
        }
      }
      subscriptions = [];
    }
  }
};

module.exports = Geolocation;
}, 107, null, "Geolocation");
__d(/* logError */function(global, require, module, exports) {
'use strict';

var logError = function logError() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 1 && args[0] instanceof Error) {
    var err = args[0];
    console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
  } else {
    console.error.apply(console, args);
  }
};

module.exports = logError;
}, 108, null, "logError");
__d(/* PermissionsAndroid */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var PermissionsAndroid = function () {
  function PermissionsAndroid() {
    babelHelpers.classCallCheck(this, PermissionsAndroid);

    this.PERMISSIONS = {
      READ_CALENDAR: 'android.permission.READ_CALENDAR',
      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
      CAMERA: 'android.permission.CAMERA',
      READ_CONTACTS: 'android.permission.READ_CONTACTS',
      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
      CALL_PHONE: 'android.permission.CALL_PHONE',
      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
      USE_SIP: 'android.permission.USE_SIP',
      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
      BODY_SENSORS: 'android.permission.BODY_SENSORS',
      SEND_SMS: 'android.permission.SEND_SMS',
      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
      READ_SMS: 'android.permission.READ_SMS',
      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
    };

    this.RESULTS = {
      GRANTED: 'granted',
      DENIED: 'denied',
      NEVER_ASK_AGAIN: 'never_ask_again'
    };
  }

  babelHelpers.createClass(PermissionsAndroid, [{
    key: 'checkPermission',
    value: function checkPermission(permission) {
      console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'check',
    value: function check(permission) {
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'requestPermission',
    value: function requestPermission(permission, rationale) {
      var response;
      return regeneratorRuntime.async(function requestPermission$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
              _context.next = 3;
              return regeneratorRuntime.awrap(this.request(permission, rationale));

            case 3:
              response = _context.sent;
              return _context.abrupt('return', response === this.RESULTS.GRANTED);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'request',
    value: function request(permission, rationale) {
      var shouldShowRationale;
      return regeneratorRuntime.async(function request$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!rationale) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));

            case 3:
              shouldShowRationale = _context2.sent;

              if (!shouldShowRationale) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                NativeModules.DialogManagerAndroid.showAlert(rationale, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));
                });
              }));

            case 6:
              return _context2.abrupt('return', NativeModules.PermissionsAndroid.requestPermission(permission));

            case 7:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'requestMultiple',
    value: function requestMultiple(permissions) {
      return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);
    }
  }]);
  return PermissionsAndroid;
}();

PermissionsAndroid = new PermissionsAndroid();

module.exports = PermissionsAndroid;
}, 109, null, "PermissionsAndroid");
__d(/* HeapCapture */function(global, require, module, exports) {
'use strict';

var HeapCapture = {
  captureHeap: function captureHeap(path) {
    var error = null;
    try {
      global.nativeCaptureHeap(path);
      console.log('HeapCapture.captureHeap succeeded: ' + path);
    } catch (e) {
      console.log('HeapCapture.captureHeap error: ' + e.toString());
      error = e.toString();
    }
    require(15             ).JSCHeapCapture.captureComplete(path, error); // 15 = NativeModules
  }
};

module.exports = HeapCapture;
}, 110, null, "HeapCapture");
__d(/* SamplingProfiler */function(global, require, module, exports) {
'use strict';

var SamplingProfiler = {
  poke: function poke(token) {
    var error = null;
    var result = null;
    try {
      result = global.pokeSamplingProfiler();
      if (result === null) {
        console.log('The JSC Sampling Profiler has started');
      } else {
        console.log('The JSC Sampling Profiler has stopped');
      }
    } catch (e) {
      console.log('Error occured when restarting Sampling Profiler: ' + e.toString());
      error = e.toString();
    }

    var _require = require(15             ), // 15 = NativeModules
        JSCSamplingProfiler = _require.JSCSamplingProfiler;

    JSCSamplingProfiler.operationComplete(token, result, error);
  }
};

module.exports = SamplingProfiler;
}, 111, null, "SamplingProfiler");
__d(/* RCTLog */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var levelsMap = {
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error',
  fatal: 'error'
};

var warningHandler = null;

var RCTLog = {
  logIfNoNativeHook: function logIfNoNativeHook(level) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (typeof global.nativeLoggingHook === 'undefined') {
      RCTLog.logToConsole.apply(RCTLog, [level].concat(babelHelpers.toConsumableArray(args)));
    } else {
      if (warningHandler && level === 'warn') {
        warningHandler.apply(undefined, babelHelpers.toConsumableArray(args));
      }
    }
  },
  logToConsole: function logToConsole(level) {
    var _console;

    var logFn = levelsMap[level];
    invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap).toString());

    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    (_console = console)[logFn].apply(_console, babelHelpers.toConsumableArray(args));
  },
  setWarningHandler: function setWarningHandler(handler) {
    warningHandler = handler;
  }
};

module.exports = RCTLog;
}, 112, null, "RCTLog");
__d(/* RCTNativeAppEventEmitter */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter

var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;
module.exports = RCTNativeAppEventEmitter;
}, 113, null, "RCTNativeAppEventEmitter");
__d(/* PerformanceLogger */function(global, require, module, exports) {
'use strict';

var Systrace = require(19        ); // 19 = Systrace

var infoLog = require(115      ); // 115 = infoLog
var performanceNow = global.nativePerformanceNow || require(76                       ); // 76 = fbjs/lib/performanceNow

var timespans = {};
var extras = {};
var cookies = {};

var PRINT_TO_CONSOLE = false;

var PerformanceLogger = {
  addTimespan: function addTimespan(key, lengthInMs, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to add a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      totalTime: lengthInMs
    };
  },
  startTimespan: function startTimespan(key, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to start a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      startTime: performanceNow()
    };
    cookies[key] = Systrace.beginAsyncEvent(key);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'start: ' + key);
    }
  },
  stopTimespan: function stopTimespan(key) {
    var timespan = timespans[key];
    if (!timespan || !timespan.startTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has not started ', key);
      }
      return;
    }
    if (timespan.endTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has already ended ', key);
      }
      return;
    }

    timespan.endTime = performanceNow();
    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'end: ' + key);
    }

    Systrace.endAsyncEvent(key, cookies[key]);
    delete cookies[key];
  },
  clear: function clear() {
    timespans = {};
    extras = {};
  },
  clearCompleted: function clearCompleted() {
    for (var _key in timespans) {
      if (timespans[_key].totalTime) {
        delete timespans[_key];
      }
    }
    extras = {};
  },
  clearExceptTimespans: function clearExceptTimespans(keys) {
    timespans = Object.keys(timespans).reduce(function (previous, key) {
      if (keys.indexOf(key) !== -1) {
        previous[key] = timespans[key];
      }
      return previous;
    }, {});
    extras = {};
  },
  currentTimestamp: function currentTimestamp() {
    return performanceNow();
  },
  getTimespans: function getTimespans() {
    return timespans;
  },
  hasTimespan: function hasTimespan(key) {
    return !!timespans[key];
  },
  logTimespans: function logTimespans() {
    for (var _key2 in timespans) {
      if (timespans[_key2].totalTime) {
        infoLog(_key2 + ': ' + timespans[_key2].totalTime + 'ms');
      }
    }
  },
  addTimespans: function addTimespans(newTimespans, labels) {
    for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
      var label = labels[ii / 2];
      PerformanceLogger.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
    }
  },
  setExtra: function setExtra(key, value) {
    if (extras[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to set an extra that already exists ', { key: key, currentValue: extras[key], attemptedValue: value });
      }
      return;
    }
    extras[key] = value;
  },
  getExtras: function getExtras() {
    return extras;
  }
};

module.exports = PerformanceLogger;
}, 114, null, "PerformanceLogger");
__d(/* infoLog */function(global, require, module, exports) {
'use strict';

function infoLog() {
  var _console;

  return (_console = console).log.apply(_console, arguments);
}

module.exports = infoLog;
}, 115, null, "infoLog");
__d(/* HMRClient */function(global, require, module, exports) {
'use strict';

var Platform = require(53        ); // 53 = Platform
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var HMRClient = {
  enable: function enable(platform, bundleEntry, host, port) {
    invariant(platform, 'Missing required parameter `platform`');
    invariant(bundleEntry, 'Missing required paramenter `bundleEntry`');
    invariant(host, 'Missing required paramenter `host`');

    var WebSocket = require(96         ); // 96 = WebSocket

    var wsHostPort = port !== null && port !== '' ? host + ':' + port : host;

    var wsUrl = 'ws://' + wsHostPort + '/hot?' + ('platform=' + platform + '&') + ('bundleEntry=' + bundleEntry.replace('.bundle', '.js'));

    var activeWS = new WebSocket(wsUrl);
    activeWS.onerror = function (e) {
      var error = 'Hot loading isn\'t working because it cannot connect to the development server.\n\nTry the following to fix the issue:\n- Ensure that the packager server is running and available on the same network';

      if (Platform.OS === 'ios') {
        error += '\n- Ensure that the Packager server URL is correctly set in AppDelegate';
      } else {
        error += '\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run \'adb devices\' to see a list of connected devices\n- If you\'re on a physical device connected to the same machine, run \'adb reverse tcp:8081 tcp:8081\' to forward requests from your device\n- If your device is on the same Wi-Fi network, set \'Debug server host & port for device\' in \'Dev settings\' to your machine\'s IP address and the port of the local dev server - e.g. 10.0.1.1:8081';
      }

      error += '\n\nURL: ' + host + ':' + port + '\n\nError: ' + e.message;

      throw new Error(error);
    };
    activeWS.onmessage = function (_ref) {
      var data = _ref.data;

      var HMRLoadingView = require(117             ); // 117 = HMRLoadingView

      data = JSON.parse(data);

      switch (data.type) {
        case 'update-start':
          {
            HMRLoadingView.showMessage('Hot Loading...');
            break;
          }
        case 'update':
          {
            var _data$body = data.body,
                modules = _data$body.modules,
                sourceMappingURLs = _data$body.sourceMappingURLs,
                sourceURLs = _data$body.sourceURLs,
                inverseDependencies = _data$body.inverseDependencies;


            if (Platform.OS === 'ios') {
              var RCTRedBox = require(15             ).RedBox; // 15 = NativeModules
              RCTRedBox && RCTRedBox.dismiss && RCTRedBox.dismiss();
            } else {
              var RCTExceptionsManager = require(15             ).ExceptionsManager; // 15 = NativeModules
              RCTExceptionsManager && RCTExceptionsManager.dismissRedbox && RCTExceptionsManager.dismissRedbox();
            }

            modules.forEach(function (_ref2, i) {
              var id = _ref2.id,
                  code = _ref2.code;

              code = code + '\n\n' + sourceMappingURLs[i];

              var injectFunction = typeof global.nativeInjectHMRUpdate === 'function' ? global.nativeInjectHMRUpdate : eval;

              code = ['__accept(', id + ',', 'function(global,require,module,exports){', '' + code, '\n},', '' + JSON.stringify(inverseDependencies), ');'].join('');

              injectFunction(code, sourceURLs[i]);
            });

            HMRLoadingView.hide();
            break;
          }
        case 'update-done':
          {
            HMRLoadingView.hide();
            break;
          }
        case 'error':
          {
            HMRLoadingView.hide();
            throw new Error(data.body.type + ' ' + data.body.description);
          }
        default:
          {
            throw new Error('Unexpected message: ' + data);
          }
      }
    };
  }
};

module.exports = HMRClient;
}, 116, null, "HMRClient");
__d(/* HMRLoadingView */function(global, require, module, exports) {

'use strict';

var processColor = require(118           ); // 118 = processColor

var _require = require(15             ), // 15 = NativeModules
    DevLoadingView = _require.DevLoadingView;

var HMRLoadingView = function () {
  function HMRLoadingView() {
    babelHelpers.classCallCheck(this, HMRLoadingView);
  }

  babelHelpers.createClass(HMRLoadingView, null, [{
    key: 'showMessage',
    value: function showMessage(message) {
      DevLoadingView.showMessage(message, processColor('#000000'), processColor('#aaaaaa'));
    }
  }, {
    key: 'hide',
    value: function hide() {
      DevLoadingView.hide();
    }
  }]);
  return HMRLoadingView;
}();

module.exports = HMRLoadingView;
}, 117, null, "HMRLoadingView");
__d(/* processColor */function(global, require, module, exports) {
'use strict';

var Platform = require(53        ); // 53 = Platform

var normalizeColor = require(119             ); // 119 = normalizeColor

function processColor(color) {
  if (color === undefined || color === null) {
    return color;
  }

  var int32Color = normalizeColor(color);
  if (int32Color === null || int32Color === undefined) {
    return undefined;
  }

  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;

  if (Platform.OS === 'android') {
    int32Color = int32Color | 0x0;
  }
  return int32Color;
}

module.exports = processColor;
}, 118, null, "processColor");
__d(/* normalizeColor */function(global, require, module, exports) {
'use strict';

function normalizeColor(color) {
  var match;

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }

  if (match = matchers.hex6.exec(color)) {
    return parseInt(match[1] + 'ff', 16) >>> 0;
  }

  if (names.hasOwnProperty(color)) {
    return names[color];
  }

  if (match = matchers.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = matchers.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = matchers.hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = matchers.hex8.exec(color)) {
    return parseInt(match[1], 16) >>> 0;
  }

  if (match = matchers.hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = matchers.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = matchers.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}

function hslToRgb(h, s, l) {
  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);

  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

var NUMBER = '[-+]?\\d*\\.?\\d+';
var PERCENTAGE = NUMBER + '%';

function call() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}

var matchers = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};

function parse255(str) {
  var int = parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}

function parse360(str) {
  var int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  var num = parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}

function parsePercentage(str) {
  var int = parseFloat(str);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}

var names = {
  transparent: 0x00000000,

  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

module.exports = normalizeColor;
}, 119, null, "normalizeColor");
__d(/* setupDevtools */function(global, require, module, exports) {
'use strict';

var register = function register() {};

if (__DEV__) {
  var AppState = require(121       ); // 121 = AppState
  var WebSocket = require(96         ); // 96 = WebSocket

  var _require = require(15             ), // 15 = NativeModules
      PlatformConstants = _require.PlatformConstants;

  var reactDevTools = require(122                  ); // 122 = react-devtools-core

  if (WebSocket.isAvailable) {
    var _isAppActive = function _isAppActive() {
      return AppState.currentState !== 'background';
    };

    var _host = PlatformConstants && PlatformConstants.ServerHost ? PlatformConstants.ServerHost.split(':')[0] : 'localhost';

    reactDevTools.connectToDevTools({
      isAppActive: _isAppActive,
      host: _host,

      port: window.__REACT_DEVTOOLS_PORT__,
      resolveRNStyle: require(50            ) // 50 = flattenStyle
    });
  }
}

module.exports = {
  register: register
};
}, 120, null, "setupDevtools");
__d(/* AppState */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(85                             ); // 85 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var RCTAppState = NativeModules.AppState;

var logError = require(108       ); // 108 = logError
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AppState = function (_NativeEventEmitter) {
  babelHelpers.inherits(AppState, _NativeEventEmitter);

  function AppState() {
    babelHelpers.classCallCheck(this, AppState);

    var _this = babelHelpers.possibleConstructorReturn(this, (AppState.__proto__ || Object.getPrototypeOf(AppState)).call(this, RCTAppState));

    _this.isAvailable = true;


    _this.isAvailable = true;
    _this._eventHandlers = {
      change: new Map(),
      memoryWarning: new Map()
    };

    _this.currentState = RCTAppState.initialAppState || 'active';

    var eventUpdated = false;

    _this.addListener('appStateDidChange', function (appStateData) {
      eventUpdated = true;
      _this.currentState = appStateData.app_state;
    });

    RCTAppState.getCurrentAppState(function (appStateData) {
      if (!eventUpdated) {
        _this.currentState = appStateData.app_state;
      }
    }, logError);
    return _this;
  }

  babelHelpers.createClass(AppState, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);
      if (type === 'change') {
        this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
          handler(appStateData.app_state);
        }));
      } else if (type === 'memoryWarning') {
        this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
      }
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);
      if (!this._eventHandlers[type].has(handler)) {
        return;
      }
      this._eventHandlers[type].get(handler).remove();
      this._eventHandlers[type].delete(handler);
    }
  }]);
  return AppState;
}(NativeEventEmitter);

if (__DEV__ && !RCTAppState) {
  var MissingNativeAppStateShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeAppStateShim, _MissingNativeEventEm);

    function MissingNativeAppStateShim() {
      babelHelpers.classCallCheck(this, MissingNativeAppStateShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeAppStateShim.__proto__ || Object.getPrototypeOf(MissingNativeAppStateShim)).call(this, 'RCTAppState', 'AppState'));
    }

    babelHelpers.createClass(MissingNativeAppStateShim, [{
      key: 'addEventListener',
      value: function addEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'removeEventListener',
      value: function removeEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'currentState',
      get: function get() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeAppStateShim;
  }(MissingNativeEventEmitterShim);

  AppState = new MissingNativeAppStateShim();
} else {
  AppState = new AppState();
}

module.exports = AppState;
}, 121, null, "AppState");
__d(/* react-devtools-core/build/backend.js */function(global, require, module, exports) {!function (root, factory) {
    "object" == typeof exports && "object" == typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define([], factory) : "object" == typeof exports ? exports.ReactDevToolsBackend = factory() : root.ReactDevToolsBackend = factory();
}(this, function () {
    return function (modules) {
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {},
                id: moduleId,
                loaded: !1
            };
            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), module.loaded = !0, module.exports;
        }
        var installedModules = {};
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.p = "", __webpack_require__(0);
    }([function (module, exports, __webpack_require__) {
        "use strict";

        function connectToDevTools(options) {
            function scheduleRetry() {
                setTimeout(function () {
                    return connectToDevTools(options);
                }, 2e3);
            }
            function handleClose() {
                hasClosed || (hasClosed = !0, scheduleRetry(), closeListeners.forEach(function (fn) {
                    return fn();
                }));
            }
            function handleMessage(evt) {
                var data;
                if (0 !== evt.data.indexOf("eval:")) {
                    try {
                        data = JSON.parse(evt.data);
                    } catch (e) {
                        return void console.error("failed to parse json: " + evt.data);
                    }
                    messageListeners.forEach(function (fn) {
                        try {
                            fn(data);
                        } catch (e) {
                            throw console.log(data), e;
                        }
                    });
                }
            }
            var _ref = options || {},
                _ref$host = _ref.host,
                host = void 0 === _ref$host ? "localhost" : _ref$host,
                _ref$port = _ref.port,
                port = void 0 === _ref$port ? 8097 : _ref$port,
                _ref$resolveRNStyle = _ref.resolveRNStyle,
                resolveRNStyle = void 0 === _ref$resolveRNStyle ? null : _ref$resolveRNStyle,
                _ref$isAppActive = _ref.isAppActive,
                isAppActive = void 0 === _ref$isAppActive ? function () {
                return !0;
            } : _ref$isAppActive;
            if (!isAppActive()) return void scheduleRetry();
            var messageListeners = [],
                closeListeners = [],
                uri = "ws://" + host + ":" + port,
                ws = new window.WebSocket(uri);
            ws.onclose = handleClose, ws.onerror = handleClose, ws.onmessage = handleMessage, ws.onopen = function () {
                var wall = {
                    listen: function listen(fn) {
                        messageListeners.push(fn);
                    },
                    onClose: function onClose(fn) {
                        closeListeners.push(fn);
                    },
                    send: function send(data) {
                        ws.send(JSON.stringify(data));
                    }
                };
                setupBackend(wall, resolveRNStyle);
            };
            var hasClosed = !1;
        }
        function setupBackend(wall, resolveRNStyle) {
            wall.onClose(function () {
                agent && agent.emit("shutdown"), window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit("shutdown"), bridge = null, agent = null, console.log("closing devtools");
            });
            var bridge = new Bridge(wall),
                agent = new Agent(window, {
                rnStyle: !!resolveRNStyle,
                rnStyleMeasure: !!resolveRNStyle
            });
            agent.addBridge(bridge), resolveRNStyle && setupRNStyle(bridge, agent, resolveRNStyle), setupRelay(bridge, agent, window.__REACT_DEVTOOLS_GLOBAL_HOOK__);
            var _connectTimeout = setTimeout(function () {
                console.warn("react-devtools agent got no connection");
            }, 2e4);
            agent.once("connected", function () {
                agent && (inject(window.__REACT_DEVTOOLS_GLOBAL_HOOK__, agent), clearTimeout(_connectTimeout));
            });
        }
        var Agent = __webpack_require__(1),
            Bridge = __webpack_require__(6),
            installGlobalHook = __webpack_require__(31),
            installRelayHook = __webpack_require__(32),
            inject = __webpack_require__(33),
            setupRNStyle = __webpack_require__(45),
            setupRelay = __webpack_require__(47);
        installGlobalHook(window), installRelayHook(window), window.document && window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on("react-devtools", function (agent) {
            var setupHighlighter = __webpack_require__(48);
            setupHighlighter(agent);
        }), module.exports = {
            connectToDevTools: connectToDevTools
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _possibleConstructorReturn(self, call) {
            if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !call || "object" != typeof call && "function" != typeof call ? self : call;
        }
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            _require = __webpack_require__(2),
            EventEmitter = _require.EventEmitter,
            assign = __webpack_require__(3),
            guid = __webpack_require__(4),
            getIn = __webpack_require__(5),
            Agent = function (_EventEmitter) {
            function Agent(global, capabilities) {
                _classCallCheck(this, Agent);
                var _this = _possibleConstructorReturn(this, (Agent.__proto__ || Object.getPrototypeOf(Agent)).call(this));
                _this.global = global, _this.internalInstancesById = new Map(), _this.idsByInternalInstances = new WeakMap(), _this.renderers = new Map(), _this.elementData = new Map(), _this.roots = new Set(), _this.reactInternals = {};
                var lastSelected;
                _this.on("selected", function (id) {
                    var data = _this.elementData.get(id);
                    data && data.publicInstance && _this.global.$r === lastSelected && (_this.global.$r = data.publicInstance, lastSelected = data.publicInstance);
                }), _this._prevSelected = null, _this._scrollUpdate = !1;
                var isReactDOM = window.document && "function" == typeof window.document.createElement;
                return _this.capabilities = assign({
                    scroll: isReactDOM && "function" == typeof window.document.body.scrollIntoView,
                    dom: isReactDOM,
                    editTextContent: !1
                }, capabilities), isReactDOM && (_this._updateScroll = _this._updateScroll.bind(_this), window.addEventListener("scroll", _this._onScroll.bind(_this), !0), window.addEventListener("click", _this._onClick.bind(_this), !0), window.addEventListener("mouseover", _this._onMouseOver.bind(_this), !0), window.addEventListener("resize", _this._onResize.bind(_this), !0)), _this;
            }
            return _inherits(Agent, _EventEmitter), _createClass(Agent, [{
                key: "sub",
                value: function value(ev, fn) {
                    var _this2 = this;
                    return this.on(ev, fn), function () {
                        _this2.removeListener(ev, fn);
                    };
                }
            }, {
                key: "setReactInternals",
                value: function value(renderer, reactInternals) {
                    this.reactInternals[renderer] = reactInternals;
                }
            }, {
                key: "addBridge",
                value: function value(bridge) {
                    var _this3 = this;
                    bridge.on("requestCapabilities", function () {
                        bridge.send("capabilities", _this3.capabilities), _this3.emit("connected");
                    }), bridge.on("setState", this._setState.bind(this)), bridge.on("setProps", this._setProps.bind(this)), bridge.on("setContext", this._setContext.bind(this)), bridge.on("makeGlobal", this._makeGlobal.bind(this)), bridge.on("highlight", function (id) {
                        return _this3.highlight(id);
                    }), bridge.on("highlightMany", function (id) {
                        return _this3.highlightMany(id);
                    }), bridge.on("hideHighlight", function () {
                        return _this3.emit("hideHighlight");
                    }), bridge.on("startInspecting", function () {
                        return _this3.emit("startInspecting");
                    }), bridge.on("stopInspecting", function () {
                        return _this3.emit("stopInspecting");
                    }), bridge.on("selected", function (id) {
                        return _this3.emit("selected", id);
                    }), bridge.on("setInspectEnabled", function (enabled) {
                        _this3._inspectEnabled = enabled, _this3.emit("stopInspecting");
                    }), bridge.on("shutdown", function () {
                        return _this3.emit("shutdown");
                    }), bridge.on("changeTextContent", function (_ref) {
                        var id = _ref.id,
                            text = _ref.text,
                            node = _this3.getNodeForID(id);
                        node && (node.textContent = text);
                    }), bridge.on("putSelectedNode", function (id) {
                        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node = _this3.getNodeForID(id);
                    }), bridge.on("putSelectedInstance", function (id) {
                        var node = _this3.elementData.get(id);
                        node ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = node.type : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = null, node && node.publicInstance ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = node.publicInstance : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = null;
                    }), bridge.on("checkSelection", function () {
                        var newSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;
                        if (newSelected !== _this3._prevSelected) {
                            _this3._prevSelected = newSelected;
                            var sentSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node;
                            newSelected !== sentSelected && _this3.selectFromDOMNode(newSelected, !0);
                        }
                    }), bridge.on("scrollToNode", function (id) {
                        return _this3.scrollToNode(id);
                    }), bridge.on("traceupdatesstatechange", function (value) {
                        return _this3.emit("traceupdatesstatechange", value);
                    }), bridge.on("colorizerchange", function (value) {
                        return _this3.emit("colorizerchange", value);
                    }), this.on("root", function (id) {
                        return bridge.send("root", id);
                    }), this.on("mount", function (data) {
                        return bridge.send("mount", data);
                    }), this.on("update", function (data) {
                        return bridge.send("update", data);
                    }), this.on("unmount", function (id) {
                        bridge.send("unmount", id), bridge.forget(id);
                    }), this.on("setSelection", function (data) {
                        return bridge.send("select", data);
                    }), this.on("setInspectEnabled", function (data) {
                        return bridge.send("setInspectEnabled", data);
                    });
                }
            }, {
                key: "scrollToNode",
                value: function value(id) {
                    var node = this.getNodeForID(id);
                    if (!node) return void console.warn("unable to get the node for scrolling");
                    var domElement = node.nodeType === Node.ELEMENT_NODE ? node : node.parentElement;
                    return domElement ? ("function" == typeof domElement.scrollIntoViewIfNeeded ? domElement.scrollIntoViewIfNeeded() : "function" == typeof domElement.scrollIntoView && domElement.scrollIntoView(), void this.highlight(id)) : void console.warn("unable to get the domElement for scrolling");
                }
            }, {
                key: "highlight",
                value: function value(id) {
                    var data = this.elementData.get(id),
                        node = this.getNodeForID(id);
                    data && node && this.emit("highlight", {
                        node: node,
                        name: data.name,
                        props: data.props
                    });
                }
            }, {
                key: "highlightMany",
                value: function value(ids) {
                    var _this4 = this,
                        nodes = [];
                    ids.forEach(function (id) {
                        var node = _this4.getNodeForID(id);
                        node && nodes.push(node);
                    }), nodes.length && this.emit("highlightMany", nodes);
                }
            }, {
                key: "getNodeForID",
                value: function value(id) {
                    var component = this.internalInstancesById.get(id);
                    if (!component) return null;
                    var renderer = this.renderers.get(id);
                    return renderer && this.reactInternals[renderer].getNativeFromReactElement ? this.reactInternals[renderer].getNativeFromReactElement(component) : null;
                }
            }, {
                key: "selectFromDOMNode",
                value: function value(node, quiet) {
                    var offsetFromLeaf = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        id = this.getIDForNode(node);
                    id && this.emit("setSelection", {
                        id: id,
                        quiet: quiet,
                        offsetFromLeaf: offsetFromLeaf
                    });
                }
            }, {
                key: "selectFromReactInstance",
                value: function value(instance, quiet) {
                    var id = this.getId(instance);
                    return id ? void this.emit("setSelection", {
                        id: id,
                        quiet: quiet
                    }) : void console.log("no instance id", instance);
                }
            }, {
                key: "getIDForNode",
                value: function value(node) {
                    if (!this.reactInternals) return null;
                    var component;
                    for (var renderer in this.reactInternals) {
                        try {
                            component = this.reactInternals[renderer].getReactElementFromNative(node);
                        } catch (e) {}
                        if (component) return this.getId(component);
                    }
                    return null;
                }
            }, {
                key: "_setProps",
                value: function value(_ref2) {
                    var id = _ref2.id,
                        path = _ref2.path,
                        value = _ref2.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInProps ? data.updater.setInProps(path, value) : console.warn("trying to set props on a component that doesn't support it");
                }
            }, {
                key: "_setState",
                value: function value(_ref3) {
                    var id = _ref3.id,
                        path = _ref3.path,
                        value = _ref3.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInState ? data.updater.setInState(path, value) : console.warn("trying to set state on a component that doesn't support it");
                }
            }, {
                key: "_setContext",
                value: function value(_ref4) {
                    var id = _ref4.id,
                        path = _ref4.path,
                        value = _ref4.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInContext ? data.updater.setInContext(path, value) : console.warn("trying to set context on a component that doesn't support it");
                }
            }, {
                key: "_makeGlobal",
                value: function value(_ref5) {
                    var id = _ref5.id,
                        path = _ref5.path,
                        data = this.elementData.get(id);
                    if (data) {
                        var value;
                        value = "instance" === path ? data.publicInstance : getIn(data, path), this.global.$tmp = value, console.log("$tmp =", value);
                    }
                }
            }, {
                key: "getId",
                value: function value(internalInstance) {
                    return "object" === ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) && internalInstance ? (this.idsByInternalInstances.has(internalInstance) || (this.idsByInternalInstances.set(internalInstance, guid()), this.internalInstancesById.set(this.idsByInternalInstances.get(internalInstance), internalInstance)), this.idsByInternalInstances.get(internalInstance)) : internalInstance;
                }
            }, {
                key: "addRoot",
                value: function value(renderer, internalInstance) {
                    var id = this.getId(internalInstance);
                    this.roots.add(id), this.emit("root", id);
                }
            }, {
                key: "onMounted",
                value: function value(renderer, component, data) {
                    var _this5 = this,
                        id = this.getId(component);
                    this.renderers.set(id, renderer), this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this5.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("mount", send);
                }
            }, {
                key: "onUpdated",
                value: function value(component, data) {
                    var _this6 = this,
                        id = this.getId(component);
                    this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this6.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("update", send);
                }
            }, {
                key: "onUnmounted",
                value: function value(component) {
                    var id = this.getId(component);
                    this.elementData["delete"](id), this.roots["delete"](id), this.renderers["delete"](id), this.emit("unmount", id), this.idsByInternalInstances["delete"](component);
                }
            }, {
                key: "_onScroll",
                value: function value() {
                    this._scrollUpdate || (this._scrollUpdate = !0, window.requestAnimationFrame(this._updateScroll));
                }
            }, {
                key: "_updateScroll",
                value: function value() {
                    this.emit("refreshMultiOverlay"), this.emit("stopInspecting"), this._scrollUpdate = !1;
                }
            }, {
                key: "_onClick",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        id && (event.stopPropagation(), event.preventDefault(), this.emit("setSelection", {
                            id: id
                        }), this.emit("setInspectEnabled", !1));
                    }
                }
            }, {
                key: "_onMouseOver",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        if (!id) return;
                        this.highlight(id);
                    }
                }
            }, {
                key: "_onResize",
                value: function value(event) {
                    this.emit("stopInspecting");
                }
            }]), Agent;
        }(EventEmitter);
        module.exports = Agent;
    }, function (module, exports) {
        function EventEmitter() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;
        }
        function isFunction(arg) {
            return "function" == typeof arg;
        }
        function isNumber(arg) {
            return "number" == typeof arg;
        }
        function isObject(arg) {
            return "object" == typeof arg && null !== arg;
        }
        function isUndefined(arg) {
            return void 0 === arg;
        }
        module.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._maxListeners = void 0, EventEmitter.defaultMaxListeners = 10, EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
            return this._maxListeners = n, this;
        }, EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;
            if (this._events || (this._events = {}), "error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
                if (er = arguments[1], er instanceof Error) throw er;
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                throw err.context = er, err;
            }
            if (handler = this._events[type], isUndefined(handler)) return !1;
            if (isFunction(handler)) switch (arguments.length) {
                case 1:
                    handler.call(this);
                    break;

                case 2:
                    handler.call(this, arguments[1]);
                    break;

                case 3:
                    handler.call(this, arguments[1], arguments[2]);
                    break;

                default:
                    args = Array.prototype.slice.call(arguments, 1), handler.apply(this, args);
            } else if (isObject(handler)) for (args = Array.prototype.slice.call(arguments, 1), listeners = handler.slice(), len = listeners.length, i = 0; i < len; i++) {
                listeners[i].apply(this, args);
            }return !0;
        }, EventEmitter.prototype.addListener = function (type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener), this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [this._events[type], listener] : this._events[type] = listener, isObject(this._events[type]) && !this._events[type].warned && (m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners, m && m > 0 && this._events[type].length > m && (this._events[type].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length), "function" == typeof console.trace && console.trace())), this;
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.once = function (type, listener) {
            function g() {
                this.removeListener(type, g), fired || (fired = !0, listener.apply(this, arguments));
            }
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            var fired = !1;
            return g.listener = listener, this.on(type, g), this;
        }, EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[type]) return this;
            if (list = this._events[type], length = list.length, position = -1, list === listener || isFunction(list.listener) && list.listener === listener) delete this._events[type], this._events.removeListener && this.emit("removeListener", type, listener);else if (isObject(list)) {
                for (i = length; i-- > 0;) {
                    if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                        position = i;
                        break;
                    }
                }if (position < 0) return this;
                1 === list.length ? (list.length = 0, delete this._events[type]) : list.splice(position, 1), this._events.removeListener && this.emit("removeListener", type, listener);
            }
            return this;
        }, EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type], this;
            if (0 === arguments.length) {
                for (key in this._events) {
                    "removeListener" !== key && this.removeAllListeners(key);
                }return this.removeAllListeners("removeListener"), this._events = {}, this;
            }
            if (listeners = this._events[type], isFunction(listeners)) this.removeListener(type, listeners);else if (listeners) for (; listeners.length;) {
                this.removeListener(type, listeners[listeners.length - 1]);
            }return delete this._events[type], this;
        }, EventEmitter.prototype.listeners = function (type) {
            var ret;
            return ret = this._events && this._events[type] ? isFunction(this._events[type]) ? [this._events[type]] : this._events[type].slice() : [];
        }, EventEmitter.prototype.listenerCount = function (type) {
            if (this._events) {
                var evlistener = this._events[type];
                if (isFunction(evlistener)) return 1;
                if (evlistener) return evlistener.length;
            }
            return 0;
        }, EventEmitter.listenerCount = function (emitter, type) {
            return emitter.listenerCount(type);
        };
    }, function (module, exports) {
        "use strict";

        function toObject(val) {
            if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val);
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module.exports = Object.assign || function (target, source) {
            for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);
                for (var key in from) {
                    hasOwnProperty.call(from, key) && (to[key] = from[key]);
                }if (Object.getOwnPropertySymbols) {
                    symbols = Object.getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) {
                        propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                    }
                }
            }
            return to;
        };
    }, function (module, exports) {
        "use strict";

        function guid() {
            return "g" + Math.random().toString(16).substr(2);
        }
        module.exports = guid;
    }, function (module, exports) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function getIn(base, path) {
            return path.reduce(function (obj, attr) {
                if (obj) {
                    if (obj.hasOwnProperty(attr)) return obj[attr];
                    if ("function" == typeof obj[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return [].concat(_toConsumableArray(obj))[attr];
                }
                return null;
            }, base);
        }
        module.exports = getIn;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function getWindowFunction(name, polyfill) {
            return String(window[name]).indexOf("[native code]") === -1 ? polyfill : window[name];
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            consts = __webpack_require__(7),
            hydrate = __webpack_require__(26),
            dehydrate = __webpack_require__(27),
            getIn = __webpack_require__(5),
            performanceNow = __webpack_require__(28),
            lastRunTimeMS = 5,
            cancelIdleCallback = getWindowFunction("cancelIdleCallback", clearTimeout),
            requestIdleCallback = getWindowFunction("requestIdleCallback", function (cb, options) {
            var delayMS = 3e3 * lastRunTimeMS;
            return delayMS > 500 && (delayMS = 500), setTimeout(function () {
                var startTime = performanceNow();
                cb({
                    didTimeout: !1,
                    timeRemaining: function timeRemaining() {
                        return 1 / 0;
                    }
                });
                var endTime = performanceNow();
                lastRunTimeMS = (endTime - startTime) / 1e3;
            }, delayMS);
        }),
            Bridge = function () {
            function Bridge(wall) {
                _classCallCheck(this, Bridge), this._cbs = new Map(), this._inspectables = new Map(), this._cid = 0, this._listeners = {}, this._buffer = [], this._flushHandle = null, this._callers = {}, this._paused = !1, this._wall = wall, wall.listen(this._handleMessage.bind(this));
            }
            return _createClass(Bridge, [{
                key: "inspect",
                value: function value(id, path, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, function (data, cleaned, proto, protoclean) {
                        cleaned.length && hydrate(data, cleaned), proto && protoclean.length && hydrate(proto, protoclean), proto && (data[consts.proto] = proto), cb(data);
                    }), this._wall.send({
                        type: "inspect",
                        callback: _cid,
                        path: path,
                        id: id
                    });
                }
            }, {
                key: "call",
                value: function value(name, args, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, cb), this._wall.send({
                        type: "call",
                        callback: _cid,
                        args: args,
                        name: name
                    });
                }
            }, {
                key: "onCall",
                value: function value(name, handler) {
                    if (this._callers[name]) throw new Error("only one call handler per call name allowed");
                    this._callers[name] = handler;
                }
            }, {
                key: "pause",
                value: function value() {
                    this._wall.send({
                        type: "pause"
                    });
                }
            }, {
                key: "resume",
                value: function value() {
                    this._wall.send({
                        type: "resume"
                    });
                }
            }, {
                key: "setInspectable",
                value: function value(id, data) {
                    var prev = this._inspectables.get(id);
                    return prev ? void this._inspectables.set(id, _extends({}, prev, data)) : void this._inspectables.set(id, data);
                }
            }, {
                key: "send",
                value: function value(evt, data) {
                    this._buffer.push({
                        evt: evt,
                        data: data
                    }), this.scheduleFlush();
                }
            }, {
                key: "scheduleFlush",
                value: function value() {
                    if (!this._flushHandle && this._buffer.length) {
                        var timeout = this._paused ? 5e3 : 500;
                        this._flushHandle = requestIdleCallback(this.flushBufferWhileIdle.bind(this), {
                            timeout: timeout
                        });
                    }
                }
            }, {
                key: "cancelFlush",
                value: function value() {
                    this._flushHandle && (cancelIdleCallback(this._flushHandle), this._flushHandle = null);
                }
            }, {
                key: "flushBufferWhileIdle",
                value: function value(deadline) {
                    this._flushHandle = null;
                    for (var chunkCount = this._paused ? 20 : 10, chunkSize = Math.round(this._buffer.length / chunkCount), minChunkSize = this._paused ? 50 : 100; this._buffer.length && (deadline.timeRemaining() > 0 || deadline.didTimeout);) {
                        var take = Math.min(this._buffer.length, Math.max(minChunkSize, chunkSize)),
                            currentBuffer = this._buffer.splice(0, take);
                        this.flushBufferSlice(currentBuffer);
                    }
                    this._buffer.length && this.scheduleFlush();
                }
            }, {
                key: "flushBufferSlice",
                value: function value(bufferSlice) {
                    var _this = this,
                        events = bufferSlice.map(function (_ref) {
                        var evt = _ref.evt,
                            data = _ref.data,
                            cleaned = [],
                            san = dehydrate(data, cleaned);
                        return cleaned.length && _this.setInspectable(data.id, data), {
                            type: "event",
                            evt: evt,
                            data: san,
                            cleaned: cleaned
                        };
                    });
                    this._wall.send({
                        type: "many-events",
                        events: events
                    });
                }
            }, {
                key: "forget",
                value: function value(id) {
                    this._inspectables["delete"](id);
                }
            }, {
                key: "on",
                value: function value(evt, fn) {
                    this._listeners[evt] ? this._listeners[evt].push(fn) : this._listeners[evt] = [fn];
                }
            }, {
                key: "off",
                value: function value(evt, fn) {
                    if (this._listeners[evt]) {
                        var ix = this._listeners[evt].indexOf(fn);
                        ix !== -1 && this._listeners[evt].splice(ix, 1);
                    }
                }
            }, {
                key: "once",
                value: function value(evt, fn) {
                    var self = this,
                        listener = function listener() {
                        fn.apply(this, arguments), self.off(evt, listener);
                    };
                    this.on(evt, listener);
                }
            }, {
                key: "_handleMessage",
                value: function value(payload) {
                    var _this2 = this;
                    if ("resume" === payload.type) return this._paused = !1, void this.scheduleFlush();
                    if ("pause" === payload.type) return this._paused = !0, void this.cancelFlush();
                    if ("callback" === payload.type) {
                        var callback = this._cbs.get(payload.id);
                        return void (callback && (callback.apply(void 0, _toConsumableArray(payload.args)), this._cbs["delete"](payload.id)));
                    }
                    if ("call" === payload.type) return void this._handleCall(payload.name, payload.args, payload.callback);
                    if ("inspect" === payload.type) return void this._inspectResponse(payload.id, payload.path, payload.callback);
                    if ("event" === payload.type) {
                        payload.cleaned && hydrate(payload.data, payload.cleaned);
                        var fns = this._listeners[payload.evt],
                            data = payload.data;
                        fns && fns.forEach(function (fn) {
                            return fn(data);
                        });
                    }
                    "many-events" === payload.type && payload.events.forEach(function (event) {
                        event.cleaned && hydrate(event.data, event.cleaned);
                        var handlers = _this2._listeners[event.evt];
                        handlers && handlers.forEach(function (fn) {
                            return fn(event.data);
                        });
                    });
                }
            }, {
                key: "_handleCall",
                value: function value(name, args, callback) {
                    if (!this._callers[name]) return void console.warn('unknown call: "' + name + '"');
                    args = Array.isArray(args) ? args : [args];
                    var result;
                    try {
                        result = this._callers[name].apply(null, args);
                    } catch (e) {
                        return void console.error("Failed to call", e);
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result]
                    });
                }
            }, {
                key: "_inspectResponse",
                value: function value(id, path, callback) {
                    var inspectable = this._inspectables.get(id),
                        result = {},
                        cleaned = [],
                        proto = null,
                        protoclean = [];
                    if (inspectable) {
                        var val = getIn(inspectable, path),
                            protod = !1,
                            isFn = "function" == typeof val;
                        if (val && "function" == typeof val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) {
                            var iterVal = Object.create({}),
                                count = 0,
                                _iteratorNormalCompletion = !0,
                                _didIteratorError = !1,
                                _iteratorError = void 0;
                            try {
                                for (var _step, _iterator = val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
                                    var entry = _step.value;
                                    if (count > 100) break;
                                    iterVal[count] = entry, count++;
                                }
                            } catch (err) {
                                _didIteratorError = !0, _iteratorError = err;
                            } finally {
                                try {
                                    !_iteratorNormalCompletion && _iterator["return"] && _iterator["return"]();
                                } finally {
                                    if (_didIteratorError) throw _iteratorError;
                                }
                            }
                            val = iterVal;
                        }
                        if (Object.getOwnPropertyNames(val).forEach(function (name) {
                            "__proto__" === name && (protod = !0), (!isFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (result[name] = dehydrate(val[name], cleaned, [name]));
                        }), !protod && val.__proto__ && "Object" !== val.constructor.name) {
                            var newProto = {},
                                pIsFn = "function" == typeof val.__proto__;
                            Object.getOwnPropertyNames(val.__proto__).forEach(function (name) {
                                (!pIsFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (newProto[name] = dehydrate(val.__proto__[name], protoclean, [name]));
                            }), proto = newProto;
                        }
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result, cleaned, proto, protoclean]
                    });
                }
            }]), Bridge;
        }();
        module.exports = Bridge;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var _Symbol = __webpack_require__(8);
        module.exports = {
            name: _Symbol("name"),
            type: _Symbol("type"),
            inspected: _Symbol("inspected"),
            meta: _Symbol("meta"),
            proto: _Symbol("proto")
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(9)() ? Symbol : __webpack_require__(10);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var symbol;
            if ("function" != typeof Symbol) return !1;
            symbol = Symbol("test symbol");
            try {
                String(symbol);
            } catch (e) {
                return !1;
            }
            return "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") || "object" == typeof (typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable") && "object" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") && "object" == typeof (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") && "object" == typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") && "object" == typeof (typeof Symbol === "function" ? Symbol.unscopables : "@@unscopables");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var NativeSymbol,
            SymbolPolyfill,
            _HiddenSymbol,
            d = __webpack_require__(11),
            validateSymbol = __webpack_require__(24),
            create = Object.create,
            defineProperties = Object.defineProperties,
            defineProperty = Object.defineProperty,
            objPrototype = Object.prototype,
            globalSymbols = create(null);
        "function" == typeof Symbol && (NativeSymbol = Symbol);
        var generateName = function () {
            var created = create(null);
            return function (desc) {
                for (var name, ie11BugWorkaround, postfix = 0; created[desc + (postfix || "")];) {
                    ++postfix;
                }return desc += postfix || "", created[desc] = !0, name = "@@" + desc, defineProperty(objPrototype, name, d.gs(null, function (value) {
                    ie11BugWorkaround || (ie11BugWorkaround = !0, defineProperty(this, name, d(value)), ie11BugWorkaround = !1);
                })), name;
            };
        }();
        _HiddenSymbol = function HiddenSymbol(description) {
            if (this instanceof _HiddenSymbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return SymbolPolyfill(description);
        }, module.exports = SymbolPolyfill = function Symbol(description) {
            var symbol;
            if (this instanceof Symbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return symbol = create(_HiddenSymbol.prototype), description = void 0 === description ? "" : String(description), defineProperties(symbol, {
                __description__: d("", description),
                __name__: d("", generateName(description))
            });
        }, defineProperties(SymbolPolyfill, {
            "for": d(function (key) {
                return globalSymbols[key] ? globalSymbols[key] : globalSymbols[key] = SymbolPolyfill(String(key));
            }),
            keyFor: d(function (s) {
                var key;
                validateSymbol(s);
                for (key in globalSymbols) {
                    if (globalSymbols[key] === s) return key;
                }
            }),
            hasInstance: d("", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill("hasInstance")),
            isConcatSpreadable: d("", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill("isConcatSpreadable")),
            iterator: d("", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill("iterator")),
            match: d("", NativeSymbol && NativeSymbol.match || SymbolPolyfill("match")),
            replace: d("", NativeSymbol && NativeSymbol.replace || SymbolPolyfill("replace")),
            search: d("", NativeSymbol && NativeSymbol.search || SymbolPolyfill("search")),
            species: d("", NativeSymbol && NativeSymbol.species || SymbolPolyfill("species")),
            split: d("", NativeSymbol && NativeSymbol.split || SymbolPolyfill("split")),
            toPrimitive: d("", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill("toPrimitive")),
            toStringTag: d("", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill("toStringTag")),
            unscopables: d("", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill("unscopables"))
        }), defineProperties(_HiddenSymbol.prototype, {
            constructor: d(SymbolPolyfill),
            toString: d("", function () {
                return this.__name__;
            })
        }), defineProperties(SymbolPolyfill.prototype, {
            toString: d(function () {
                return "Symbol (" + validateSymbol(this).__description__ + ")";
            }),
            valueOf: d(function () {
                return validateSymbol(this);
            })
        }), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d("", function () {
            return validateSymbol(this);
        })), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d("c", "Symbol")), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var d,
            assign = __webpack_require__(12),
            normalizeOpts = __webpack_require__(19),
            isCallable = __webpack_require__(20),
            contains = __webpack_require__(21);
        d = module.exports = function (dscr, value) {
            var c, e, w, options, desc;
            return arguments.length < 2 || "string" != typeof dscr ? (options = value, value = dscr, dscr = null) : options = arguments[2], null == dscr ? (c = w = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e"), w = contains.call(dscr, "w")), desc = {
                value: value,
                configurable: c,
                enumerable: e,
                writable: w
            }, options ? assign(normalizeOpts(options), desc) : desc;
        }, d.gs = function (dscr, get, set) {
            var c, e, options, desc;
            return "string" != typeof dscr ? (options = set, set = get, get = dscr, dscr = null) : options = arguments[3], null == get ? get = void 0 : isCallable(get) ? null == set ? set = void 0 : isCallable(set) || (options = set, set = void 0) : (options = get, get = set = void 0), null == dscr ? (c = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e")), desc = {
                get: get,
                set: set,
                configurable: c,
                enumerable: e
            }, options ? assign(normalizeOpts(options), desc) : desc;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(13)() ? Object.assign : __webpack_require__(14);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var obj,
                assign = Object.assign;
            return "function" == typeof assign && (obj = {
                foo: "raz"
            }, assign(obj, {
                bar: "dwa"
            }, {
                trzy: "trzy"
            }), obj.foo + obj.bar + obj.trzy === "razdwatrzy");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var keys = __webpack_require__(15),
            value = __webpack_require__(18),
            max = Math.max;
        module.exports = function (dest, src) {
            var error,
                i,
                assign,
                l = max(arguments.length, 2);
            for (dest = Object(value(dest)), assign = function assign(key) {
                try {
                    dest[key] = src[key];
                } catch (e) {
                    error || (error = e);
                }
            }, i = 1; i < l; ++i) {
                src = arguments[i], keys(src).forEach(assign);
            }if (void 0 !== error) throw error;
            return dest;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(16)() ? Object.keys : __webpack_require__(17);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            try {
                return Object.keys("primitive"), !0;
            } catch (e) {
                return !1;
            }
        };
    }, function (module, exports) {
        "use strict";

        var keys = Object.keys;
        module.exports = function (object) {
            return keys(null == object ? object : Object(object));
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (value) {
            if (null == value) throw new TypeError("Cannot use null or undefined");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        var forEach = Array.prototype.forEach,
            create = Object.create,
            process = function process(src, obj) {
            var key;
            for (key in src) {
                obj[key] = src[key];
            }
        };
        module.exports = function (options) {
            var result = create(null);
            return forEach.call(arguments, function (options) {
                null != options && process(Object(options), result);
            }), result;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (obj) {
            return "function" == typeof obj;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(22)() ? String.prototype.contains : __webpack_require__(23);
    }, function (module, exports) {
        "use strict";

        var str = "razdwatrzy";
        module.exports = function () {
            return "function" == typeof str.contains && str.contains("dwa") === !0 && str.contains("foo") === !1;
        };
    }, function (module, exports) {
        "use strict";

        var indexOf = String.prototype.indexOf;
        module.exports = function (searchString) {
            return indexOf.call(this, searchString, arguments[1]) > -1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var isSymbol = __webpack_require__(25);
        module.exports = function (value) {
            if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (x) {
            return x && ("symbol" == typeof x || "Symbol" === x["@@toStringTag"]) || !1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function hydrate(data, cleaned) {
            cleaned.forEach(function (path) {
                var last = path.pop(),
                    obj = path.reduce(function (obj_, attr) {
                    return obj_ ? obj_[attr] : null;
                }, data);
                if (obj && obj[last]) {
                    var replace = {};
                    replace[consts.name] = obj[last].name, replace[consts.type] = obj[last].type, replace[consts.meta] = obj[last].meta, replace[consts.inspected] = !1, obj[last] = replace;
                }
            });
        }
        var consts = __webpack_require__(7);
        module.exports = hydrate;
    }, function (module, exports) {
        "use strict";

        function getPropType(data) {
            if (!data) return null;
            var type = "undefined" == typeof data ? "undefined" : _typeof(data);
            if ("object" === type) {
                if (data._reactFragment) return "react_fragment";
                if (Array.isArray(data)) return "array";
                if (ArrayBuffer.isView(data)) return data instanceof DataView ? "data_view" : "typed_array";
                if (data instanceof ArrayBuffer) return "array_buffer";
                if ("function" == typeof data[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return "iterator";
                if ("[object Date]" === Object.prototype.toString.call(data)) return "date";
            }
            return type;
        }
        function createDehydrated(type, data, cleaned, path) {
            var meta = {};
            return "array" !== type && "typed_array" !== type || (meta.length = data.length), "iterator" !== type && "typed_array" !== type || (meta.readOnly = !0), cleaned.push(path), {
                type: type,
                meta: meta,
                name: data.constructor && "Object" !== data.constructor.name ? data.constructor.name : ""
            };
        }
        function dehydrate(data, cleaned) {
            var path = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                level = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                type = getPropType(data);
            switch (type) {
                case "function":
                    return cleaned.push(path), {
                        name: data.name,
                        type: "function"
                    };

                case "string":
                    return data.length <= 500 ? data : data.slice(0, 500) + "...";

                case "symbol":
                    return cleaned.push(path), {
                        type: "symbol",
                        name: data.toString()
                    };

                case "react_fragment":
                    return "A React Fragment";

                case "array_buffer":
                case "data_view":
                    return cleaned.push(path), {
                        type: type,
                        name: "data_view" === type ? "DataView" : "ArrayBuffer",
                        meta: {
                            length: data.byteLength,
                            uninspectable: !0
                        }
                    };

                case "array":
                    return level > 2 ? createDehydrated(type, data, cleaned, path) : data.map(function (item, i) {
                        return dehydrate(item, cleaned, path.concat([i]), level + 1);
                    });

                case "typed_array":
                case "iterator":
                    return createDehydrated(type, data, cleaned, path);

                case "date":
                    return cleaned.push(path), {
                        name: data.toString(),
                        type: "date",
                        meta: {
                            uninspectable: !0
                        }
                    };

                case "object":
                    if (level > 2 || data.constructor && "function" == typeof data.constructor && "Object" !== data.constructor.name) return createDehydrated(type, data, cleaned, path);
                    var res = {};
                    for (var name in data) {
                        res[name] = dehydrate(data[name], cleaned, path.concat([name]), level + 1);
                    }return res;

                default:
                    return data;
            }
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        };
        module.exports = dehydrate;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performanceNow,
            performance = __webpack_require__(29);
        performanceNow = performance.now ? function () {
            return performance.now();
        } : function () {
            return Date.now();
        }, module.exports = performanceNow;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performance,
            ExecutionEnvironment = __webpack_require__(30);
        ExecutionEnvironment.canUseDOM && (performance = window.performance || window.msPerformance || window.webkitPerformance), module.exports = performance || {};
    }, function (module, exports) {
        "use strict";

        var canUseDOM = !("undefined" == typeof window || !window.document || !window.document.createElement),
            ExecutionEnvironment = {
            canUseDOM: canUseDOM,
            canUseWorkers: "undefined" != typeof Worker,
            canUseEventListeners: canUseDOM && !(!window.addEventListener && !window.attachEvent),
            canUseViewport: canUseDOM && !!window.screen,
            isInWorker: !canUseDOM
        };
        module.exports = ExecutionEnvironment;
    }, function (module, exports) {
        "use strict";

        function installGlobalHook(window) {
            function detectReactBuildType(renderer) {
                try {
                    if ("string" == typeof renderer.version) return renderer.bundleType > 0 ? "development" : "production";
                    var toString = Function.prototype.toString;
                    if (renderer.Mount && renderer.Mount._renderNewRootComponent) {
                        var renderRootCode = toString.call(renderer.Mount._renderNewRootComponent);
                        return 0 !== renderRootCode.indexOf("function") ? "production" : renderRootCode.indexOf("storedMeasure") !== -1 ? "development" : renderRootCode.indexOf("should be a pure function") !== -1 ? renderRootCode.indexOf("NODE_ENV") !== -1 ? "development" : renderRootCode.indexOf("development") !== -1 ? "development" : renderRootCode.indexOf("true") !== -1 ? "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : renderRootCode.indexOf("._registerComponent") !== -1 ? "outdated" : "production";
                    }
                } catch (err) {}
                return "production";
            }
            if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var hasDetectedBadDCE = !1,
                    hook = {
                    _renderers: {},
                    helpers: {},
                    checkDCE: function checkDCE(fn) {
                        try {
                            var toString = Function.prototype.toString,
                                code = toString.call(fn);
                            code.indexOf("^_^") > -1 && (hasDetectedBadDCE = !0, setTimeout(function () {
                                throw new Error("React is running in production mode, but dead code elimination has not been applied. Read how to correctly configure React for production: https://fb.me/react-perf-use-the-production-build");
                            }));
                        } catch (err) {}
                    },
                    inject: function inject(renderer) {
                        var id = Math.random().toString(16).slice(2);
                        hook._renderers[id] = renderer;
                        var reactBuildType = hasDetectedBadDCE ? "deadcode" : detectReactBuildType(renderer);
                        return hook.emit("renderer", {
                            id: id,
                            renderer: renderer,
                            reactBuildType: reactBuildType
                        }), id;
                    },
                    _listeners: {},
                    sub: function sub(evt, fn) {
                        return hook.on(evt, fn), function () {
                            return hook.off(evt, fn);
                        };
                    },
                    on: function on(evt, fn) {
                        hook._listeners[evt] || (hook._listeners[evt] = []), hook._listeners[evt].push(fn);
                    },
                    off: function off(evt, fn) {
                        if (hook._listeners[evt]) {
                            var ix = hook._listeners[evt].indexOf(fn);
                            ix !== -1 && hook._listeners[evt].splice(ix, 1), hook._listeners[evt].length || (hook._listeners[evt] = null);
                        }
                    },
                    emit: function emit(evt, data) {
                        hook._listeners[evt] && hook._listeners[evt].map(function (fn) {
                            return fn(data);
                        });
                    },
                    supportsFiber: !0,
                    _fiberRoots: {},
                    getFiberRoots: function getFiberRoots(rendererID) {
                        var roots = hook._fiberRoots;
                        return roots[rendererID] || (roots[rendererID] = new Set()), roots[rendererID];
                    },
                    onCommitFiberUnmount: function onCommitFiberUnmount(rendererID, fiber) {
                        hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberUnmount(fiber);
                    },
                    onCommitFiberRoot: function onCommitFiberRoot(rendererID, root) {
                        var mountedRoots = hook.getFiberRoots(rendererID),
                            current = root.current,
                            isKnownRoot = mountedRoots.has(root),
                            isUnmounting = null == current.memoizedState || null == current.memoizedState.element;
                        isKnownRoot || isUnmounting ? isKnownRoot && isUnmounting && mountedRoots["delete"](root) : mountedRoots.add(root), hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberRoot(root);
                    }
                };
                Object.defineProperty(window, "__REACT_DEVTOOLS_GLOBAL_HOOK__", {
                    value: hook
                });
            }
        }
        module.exports = installGlobalHook;
    }, function (module, exports) {
        "use strict";

        function installRelayHook(window) {
            function decorate(obj, attr, fn) {
                var old = obj[attr];
                obj[attr] = function () {
                    var res = old.apply(this, arguments);
                    return fn.apply(this, arguments), res;
                };
            }
            function emit(name, data) {
                _eventQueue.push({
                    name: name,
                    data: data
                }), _listener && _listener(name, data);
            }
            function setRequestListener(listener) {
                if (_listener) throw new Error("Relay Devtools: Called only call setRequestListener once.");
                return _listener = listener, _eventQueue.forEach(function (_ref) {
                    var name = _ref.name,
                        data = _ref.data;
                    listener(name, data);
                }), function () {
                    _listener = null;
                };
            }
            function recordRequest(type, start, request, requestNumber) {
                var id = Math.random().toString(16).substr(2);
                request.then(function (response) {
                    emit("relay:success", {
                        id: id,
                        end: performanceNow(),
                        response: response.response
                    });
                }, function (error) {
                    emit("relay:failure", {
                        id: id,
                        end: performanceNow(),
                        error: error
                    });
                });
                for (var textChunks = [], text = request.getQueryString(); text.length > 0;) {
                    textChunks.push(text.substr(0, TEXT_CHUNK_LENGTH)), text = text.substr(TEXT_CHUNK_LENGTH);
                }return {
                    id: id,
                    name: request.getDebugName(),
                    requestNumber: requestNumber,
                    start: start,
                    text: textChunks,
                    type: type,
                    variables: request.getVariables()
                };
            }
            function instrumentRelayRequests(relayInternals) {
                var NetworkLayer = relayInternals.NetworkLayer;
                decorate(NetworkLayer, "sendMutation", function (mutation) {
                    requestNumber++, emit("relay:pending", [recordRequest("mutation", performanceNow(), mutation, requestNumber)]);
                }), decorate(NetworkLayer, "sendQueries", function (queries) {
                    requestNumber++;
                    var start = performanceNow();
                    emit("relay:pending", queries.map(function (query) {
                        return recordRequest("query", start, query, requestNumber);
                    }));
                });
                var instrumented = {};
                for (var key in relayInternals) {
                    relayInternals.hasOwnProperty(key) && (instrumented[key] = relayInternals[key]);
                }return instrumented.setRequestListener = setRequestListener, instrumented;
            }
            var performanceNow,
                performance = window.performance;
            performanceNow = performance && "function" == typeof performance.now ? function () {
                return performance.now();
            } : function () {
                return Date.now();
            };
            var TEXT_CHUNK_LENGTH = 500,
                hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook) {
                var _eventQueue = [],
                    _listener = null,
                    requestNumber = 0,
                    _relayInternals = null;
                Object.defineProperty(hook, "_relayInternals", {
                    configurable: !0,
                    set: function set(relayInternals) {
                        _relayInternals = instrumentRelayRequests(relayInternals);
                    },
                    get: function get() {
                        return _relayInternals;
                    }
                });
            }
        }
        module.exports = installRelayHook;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var setupBackend = __webpack_require__(34);
        module.exports = function (hook, agent) {
            var subs = [hook.sub("renderer-attached", function (_ref) {
                var id = _ref.id,
                    helpers = (_ref.renderer, _ref.helpers);
                agent.setReactInternals(id, helpers), helpers.walkTree(agent.onMounted.bind(agent, id), agent.addRoot.bind(agent, id));
            }), hook.sub("root", function (_ref2) {
                var renderer = _ref2.renderer,
                    internalInstance = _ref2.internalInstance;
                return agent.addRoot(renderer, internalInstance);
            }), hook.sub("mount", function (_ref3) {
                var renderer = _ref3.renderer,
                    internalInstance = _ref3.internalInstance,
                    data = _ref3.data;
                return agent.onMounted(renderer, internalInstance, data);
            }), hook.sub("update", function (_ref4) {
                var internalInstance = (_ref4.renderer, _ref4.internalInstance),
                    data = _ref4.data;
                return agent.onUpdated(internalInstance, data);
            }), hook.sub("unmount", function (_ref5) {
                var internalInstance = (_ref5.renderer, _ref5.internalInstance);
                return agent.onUnmounted(internalInstance);
            })],
                success = setupBackend(hook);
            success && (hook.emit("react-devtools", agent), hook.reactDevtoolsAgent = agent, agent.on("shutdown", function () {
                subs.forEach(function (fn) {
                    return fn();
                }), hook.reactDevtoolsAgent = null;
            }));
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var attachRenderer = __webpack_require__(35);
        module.exports = function (hook) {
            var oldReact = window.React && window.React.__internals;
            oldReact && 0 === Object.keys(hook._renderers).length && hook.inject(oldReact);
            for (var rid in hook._renderers) {
                hook.helpers[rid] = attachRenderer(hook, rid, hook._renderers[rid]), hook.emit("renderer-attached", {
                    id: rid,
                    renderer: hook._renderers[rid],
                    helpers: hook.helpers[rid]
                });
            }hook.on("renderer", function (_ref) {
                var id = _ref.id,
                    renderer = _ref.renderer;
                hook.helpers[id] = attachRenderer(hook, id, renderer), hook.emit("renderer-attached", {
                    id: id,
                    renderer: renderer,
                    helpers: hook.helpers[id]
                });
            });
            var shutdown = function shutdown() {
                for (var id in hook.helpers) {
                    hook.helpers[id].cleanup();
                }hook.off("shutdown", shutdown);
            };
            return hook.on("shutdown", shutdown), !0;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRenderer(hook, rid, renderer) {
            var rootNodeIDMap = new Map(),
                extras = {},
                isPre013 = !renderer.Reconciler;
            if ("function" == typeof renderer.findFiberByHostInstance) return attachRendererFiber(hook, rid, renderer);
            renderer.Mount.findNodeHandle && renderer.Mount.nativeTagToRootNodeID ? (extras.getNativeFromReactElement = function (component) {
                return renderer.Mount.findNodeHandle(component);
            }, extras.getReactElementFromNative = function (nativeTag) {
                var id = renderer.Mount.nativeTagToRootNodeID(nativeTag);
                return rootNodeIDMap.get(id);
            }) : renderer.ComponentTree ? (extras.getNativeFromReactElement = function (component) {
                return renderer.ComponentTree.getNodeFromInstance(component);
            }, extras.getReactElementFromNative = function (node) {
                return renderer.ComponentTree.getClosestInstanceFromNode(node);
            }) : renderer.Mount.getID && renderer.Mount.getNode ? (extras.getNativeFromReactElement = function (component) {
                try {
                    return renderer.Mount.getNode(component._rootNodeID);
                } catch (e) {
                    return;
                }
            }, extras.getReactElementFromNative = function (node) {
                for (var id = renderer.Mount.getID(node); node && node.parentNode && !id;) {
                    node = node.parentNode, id = renderer.Mount.getID(node);
                }return rootNodeIDMap.get(id);
            }) : console.warn("Unknown react version (does not have getID), probably an unshimmed React Native");
            var oldMethods, oldRenderComponent, oldRenderRoot;
            return renderer.Mount._renderNewRootComponent ? oldRenderRoot = decorateResult(renderer.Mount, "_renderNewRootComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance
                });
            }) : renderer.Mount.renderComponent && (oldRenderComponent = decorateResult(renderer.Mount, "renderComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance._reactInternalInstance
                });
            })), renderer.Component ? (console.error("You are using a version of React with limited support in this version of the devtools.\nPlease upgrade to use at least 0.13, or you can downgrade to use the old version of the devtools:\ninstructions here https://github.com/facebook/react-devtools/tree/devtools-next#how-do-i-use-this-for-react--013"), oldMethods = decorateMany(renderer.Component.Mixin, {
                mountComponent: function mountComponent() {
                    var _this = this;
                    rootNodeIDMap.set(this._rootNodeID, this), setTimeout(function () {
                        hook.emit("mount", {
                            internalInstance: _this,
                            data: getData012(_this),
                            renderer: rid
                        });
                    }, 0);
                },
                updateComponent: function updateComponent() {
                    var _this2 = this;
                    setTimeout(function () {
                        hook.emit("update", {
                            internalInstance: _this2,
                            data: getData012(_this2),
                            renderer: rid
                        });
                    }, 0);
                },
                unmountComponent: function unmountComponent() {
                    hook.emit("unmount", {
                        internalInstance: this,
                        renderer: rid
                    }), rootNodeIDMap["delete"](this._rootNodeID, this);
                }
            })) : renderer.Reconciler && (oldMethods = decorateMany(renderer.Reconciler, {
                mountComponent: function mountComponent(internalInstance, rootID, transaction, context) {
                    var data = getData(internalInstance);
                    rootNodeIDMap.set(internalInstance._rootNodeID, internalInstance), hook.emit("mount", {
                        internalInstance: internalInstance,
                        data: data,
                        renderer: rid
                    });
                },
                performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                receiveComponent: function receiveComponent(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                unmountComponent: function unmountComponent(internalInstance) {
                    hook.emit("unmount", {
                        internalInstance: internalInstance,
                        renderer: rid
                    }), rootNodeIDMap["delete"](internalInstance._rootNodeID, internalInstance);
                }
            })), extras.walkTree = function (visit, visitRoot) {
                var onMount = function onMount(component, data) {
                    rootNodeIDMap.set(component._rootNodeID, component), visit(component, data);
                };
                walkRoots(renderer.Mount._instancesByReactRootID || renderer.Mount._instancesByContainerID, onMount, visitRoot, isPre013);
            }, extras.cleanup = function () {
                oldMethods && (renderer.Component ? restoreMany(renderer.Component.Mixin, oldMethods) : restoreMany(renderer.Reconciler, oldMethods)), oldRenderRoot && (renderer.Mount._renderNewRootComponent = oldRenderRoot), oldRenderComponent && (renderer.Mount.renderComponent = oldRenderComponent), oldMethods = null, oldRenderRoot = null, oldRenderComponent = null;
            }, extras;
        }
        function walkRoots(roots, onMount, onRoot, isPre013) {
            for (var name in roots) {
                walkNode(roots[name], onMount, isPre013), onRoot(roots[name]);
            }
        }
        function walkNode(internalInstance, onMount, isPre013) {
            var data = isPre013 ? getData012(internalInstance) : getData(internalInstance);
            data.children && Array.isArray(data.children) && data.children.forEach(function (child) {
                return walkNode(child, onMount, isPre013);
            }), onMount(internalInstance, data);
        }
        function decorateResult(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn(res), res;
            }, old;
        }
        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, old;
        }
        function decorateMany(source, fns) {
            var olds = {};
            for (var name in fns) {
                olds[name] = decorate(source, name, fns[name]);
            }return olds;
        }
        function restoreMany(source, olds) {
            for (var name in olds) {
                source[name] = olds[name];
            }
        }
        var getData = __webpack_require__(36),
            getData012 = __webpack_require__(41),
            attachRendererFiber = __webpack_require__(42);
        module.exports = attachRenderer;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData(internalInstance) {
            var children = null,
                props = null,
                state = null,
                context = null,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                source = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            if ("object" !== ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance))) nodeType = "Text", text = internalInstance + "";else if (null === internalInstance._currentElement || internalInstance._currentElement === !1) nodeType = "Empty";else if (internalInstance._renderedComponent) nodeType = "NativeWrapper", children = [internalInstance._renderedComponent], props = internalInstance._instance.props, state = internalInstance._instance.state, context = internalInstance._instance.context, context && 0 === Object.keys(context).length && (context = null);else if (internalInstance._renderedChildren) children = childrenList(internalInstance._renderedChildren);else if (internalInstance._currentElement && internalInstance._currentElement.props) {
                var unfilteredChildren = internalInstance._currentElement.props.children,
                    filteredChildren = [];
                traverseAllChildrenImpl(unfilteredChildren, "", function (_traverseContext, child) {
                    var childType = "undefined" == typeof child ? "undefined" : _typeof(child);
                    "string" !== childType && "number" !== childType || filteredChildren.push(child);
                }), children = filteredChildren.length <= 1 ? filteredChildren.length ? String(filteredChildren[0]) : void 0 : filteredChildren;
            }
            if (!props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), null != internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), source = internalInstance._currentElement._source, ref = internalInstance._currentElement.ref, "string" == typeof type ? (name = type, null != internalInstance._nativeNode && (publicInstance = internalInstance._nativeNode), null != internalInstance._hostNode && (publicInstance = internalInstance._hostNode)) : "function" == typeof type ? (nodeType = "Composite", name = getDisplayName(type), internalInstance._renderedComponent && (internalInstance._currentElement.props === internalInstance._renderedComponent._currentElement || internalInstance._currentElement.type.isReactTopLevelWrapper) && (nodeType = "Wrapper"), null === name && (name = "No display name")) : "string" == typeof internalInstance._stringText ? (nodeType = "Text", text = internalInstance._stringText) : name = getDisplayName(type)), internalInstance._instance) {
                var inst = internalInstance._instance;
                updater = {
                    setState: inst.setState && inst.setState.bind(inst),
                    forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                    setInProps: inst.forceUpdate && setInProps.bind(null, internalInstance),
                    setInState: inst.forceUpdate && setInState.bind(null, inst),
                    setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                }, "function" == typeof type && (publicInstance = inst), inst._renderedChildren && (children = childrenList(inst._renderedChildren));
            }
            return "function" == typeof internalInstance.setNativeProps && (updater = {
                setNativeProps: function setNativeProps(nativeProps) {
                    internalInstance.setNativeProps(nativeProps);
                }
            }), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(internalInst, path, value) {
            var element = internalInst._currentElement;
            internalInst._currentElement = _extends({}, element, {
                props: copyWithSet(element.props, path, value)
            }), internalInst._instance.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            traverseAllChildrenImpl = __webpack_require__(39);
        module.exports = getData;
    }, function (module, exports) {
        "use strict";

        function copyWithSetImpl(obj, path, idx, value) {
            if (idx >= path.length) return value;
            var key = path[idx],
                updated = Array.isArray(obj) ? obj.slice() : _extends({}, obj);
            return updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value), updated;
        }
        function copyWithSet(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        };
        module.exports = copyWithSet;
    }, function (module, exports) {
        "use strict";

        function getDisplayName(type) {
            if (cachedDisplayNames.has(type)) return cachedDisplayNames.get(type);
            var displayName = void 0;
            "string" == typeof type.displayName && (displayName = type.displayName), displayName || (displayName = type.name || "Unknown");
            var match = displayName.match(FB_MODULE_RE);
            if (match) {
                var componentName = match[1],
                    moduleName = match[2];
                componentName && moduleName && (moduleName === componentName || moduleName.startsWith(componentName + ".")) && (displayName = componentName);
            }
            return cachedDisplayNames.set(type, displayName), displayName;
        }
        var FB_MODULE_RE = /^(.*) \[from (.*)\]$/,
            cachedDisplayNames = new WeakMap();
        module.exports = getDisplayName;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function escape(key) {
            var escapeRegex = /[=:]/g,
                escaperLookup = {
                "=": "=0",
                ":": "=2"
            },
                escapedString = ("" + key).replace(escapeRegex, function (match) {
                return escaperLookup[match];
            });
            return "$" + escapedString;
        }
        function getComponentKey(component, index) {
            return "object" === ("undefined" == typeof component ? "undefined" : _typeof(component)) && null !== component && null != component.key ? escape(component.key) : index.toString(36);
        }
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
            var type = "undefined" == typeof children ? "undefined" : _typeof(children);
            if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
            var child,
                nextName,
                subtreeCount = 0,
                nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
            if (Array.isArray(children)) for (var i = 0; i < children.length; i++) {
                child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            } else {
                var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
                if ("function" == typeof iteratorFn) for (var step, iterator = iteratorFn.call(children), ii = 0; !(step = iterator.next()).done;) {
                    child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                } else if ("object" === type) {
                    var addendum = " If you meant to render a collection of children, use an array instead.",
                        childrenString = "" + children;
                    invariant(!1, "The React Devtools cannot render an object as a child. (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum);
                }
            }
            return subtreeCount;
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            invariant = __webpack_require__(40),
            SEPARATOR = ".",
            SUBSEPARATOR = ":",
            FAUX_ITERATOR_SYMBOL = "@@iterator",
            ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
            REACT_ELEMENT_TYPE = "function" == typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;
        module.exports = traverseAllChildrenImpl;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function invariant(condition, format, a, b, c, d, e, f) {
            if (!condition) {
                var error;
                if (void 0 === format) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
                    var args = [a, b, c, d, e, f],
                        argIndex = 0;
                    error = new Error(format.replace(/%s/g, function () {
                        return args[argIndex++];
                    })), error.name = "Invariant Violation";
                }
                throw error.framesToPop = 1, error;
            }
        }
        module.exports = invariant;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData012(internalInstance) {
            var children = null,
                props = internalInstance.props,
                state = internalInstance.state,
                context = internalInstance.context,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            return internalInstance._renderedComponent ? (nodeType = "Wrapper", children = [internalInstance._renderedComponent], context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? (name = internalInstance.constructor.displayName, children = childrenList(internalInstance._renderedChildren)) : "string" == typeof props.children && (name = internalInstance.constructor.displayName, children = props.children, nodeType = "Native"), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), ref = internalInstance._currentElement.ref, "string" == typeof type ? name = type : (nodeType = "Composite", name = type.displayName, name || (name = "No display name"))), name || (name = internalInstance.constructor.displayName || "No display name", nodeType = "Composite"), "string" == typeof props && (nodeType = "Text", text = props, props = null, name = null), internalInstance.forceUpdate && (updater = {
                setState: internalInstance.setState.bind(internalInstance),
                forceUpdate: internalInstance.forceUpdate.bind(internalInstance),
                setInProps: internalInstance.forceUpdate && setInProps.bind(null, internalInstance),
                setInState: internalInstance.forceUpdate && setInState.bind(null, internalInstance),
                setInContext: internalInstance.forceUpdate && setInContext.bind(null, internalInstance)
            }, publicInstance = internalInstance), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: null,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(inst, path, value) {
            inst.props = copyWithSet(inst.props, path, value), inst.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var copyWithSet = __webpack_require__(37);
        module.exports = getData012;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRendererFiber(hook, rid, renderer) {
            function getOpaqueNode(fiber) {
                if (opaqueNodes.has(fiber)) return fiber;
                var alternate = fiber.alternate;
                return null != alternate && opaqueNodes.has(alternate) ? alternate : (opaqueNodes.add(fiber), fiber);
            }
            function hasDataChanged(prevFiber, nextFiber) {
                if (prevFiber.tag === ClassComponent) {
                    if ((nextFiber.effectTag & PerformedWork) !== PerformedWork) return !1;
                    if (prevFiber.stateNode.context !== nextFiber.stateNode.context) return !0;
                    if (null != nextFiber.updateQueue && nextFiber.updateQueue.hasForceUpdate) return !0;
                }
                return prevFiber.memoizedProps !== nextFiber.memoizedProps || prevFiber.memoizedState !== nextFiber.memoizedState || prevFiber.ref !== nextFiber.ref || prevFiber._debugSource !== nextFiber._debugSource;
            }
            function flushPendingEvents() {
                var events = pendingEvents;
                pendingEvents = [];
                for (var i = 0; i < events.length; i++) {
                    var event = events[i];
                    hook.emit(event.type, event);
                }
            }
            function enqueueMount(fiber) {
                pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "mount"
                });
                var isRoot = fiber.tag === HostRoot;
                isRoot && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    renderer: rid,
                    type: "root"
                });
            }
            function enqueueUpdateIfNecessary(fiber, hasChildOrderChanged) {
                (hasChildOrderChanged || hasDataChanged(fiber.alternate, fiber)) && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "update"
                });
            }
            function enqueueUnmount(fiber) {
                var isRoot = fiber.tag === HostRoot,
                    opaqueNode = getOpaqueNode(fiber),
                    event = {
                    internalInstance: opaqueNode,
                    renderer: rid,
                    type: "unmount"
                };
                isRoot ? pendingEvents.push(event) : pendingEvents.unshift(event), opaqueNodes["delete"](opaqueNode);
            }
            function mountFiber(fiber) {
                var node = fiber;
                outer: for (;;) {
                    if (node.child) node.child["return"] = node, node = node.child;else {
                        if (enqueueMount(node), node == fiber) return;
                        if (!node.sibling) {
                            for (; node["return"];) {
                                if (node = node["return"], enqueueMount(node), node == fiber) return;
                                if (node.sibling) {
                                    node.sibling["return"] = node["return"], node = node.sibling;
                                    continue outer;
                                }
                            }
                            return;
                        }
                        node.sibling["return"] = node["return"], node = node.sibling;
                    }
                }
            }
            function updateFiber(nextFiber, prevFiber) {
                var hasChildOrderChanged = !1;
                if (nextFiber.child !== prevFiber.child) {
                    for (var nextChild = nextFiber.child, prevChildAtSameIndex = prevFiber.child; nextChild;) {
                        if (nextChild.alternate) {
                            var prevChild = nextChild.alternate;
                            updateFiber(nextChild, prevChild), hasChildOrderChanged || prevChild === prevChildAtSameIndex || (hasChildOrderChanged = !0);
                        } else mountFiber(nextChild), hasChildOrderChanged || (hasChildOrderChanged = !0);
                        nextChild = nextChild.sibling, hasChildOrderChanged || null == prevChildAtSameIndex || (prevChildAtSameIndex = prevChildAtSameIndex.sibling);
                    }
                    hasChildOrderChanged || null == prevChildAtSameIndex || (hasChildOrderChanged = !0);
                }
                enqueueUpdateIfNecessary(nextFiber, hasChildOrderChanged);
            }
            function walkTree() {
                hook.getFiberRoots(rid).forEach(function (root) {
                    mountFiber(root.current);
                }), flushPendingEvents();
            }
            function cleanup() {}
            function handleCommitFiberUnmount(fiber) {
                enqueueUnmount(fiber);
            }
            function handleCommitFiberRoot(root) {
                var current = root.current,
                    alternate = current.alternate;
                if (alternate) {
                    var wasMounted = null != alternate.memoizedState && null != alternate.memoizedState.element,
                        isMounted = null != current.memoizedState && null != current.memoizedState.element;
                    !wasMounted && isMounted ? mountFiber(current) : wasMounted && isMounted ? updateFiber(current, alternate) : wasMounted && !isMounted && enqueueUnmount(current);
                } else mountFiber(current);
                flushPendingEvents();
            }
            function getNativeFromReactElement(fiber) {
                try {
                    var opaqueNode = fiber,
                        hostInstance = renderer.findHostInstanceByFiber(opaqueNode);
                    return hostInstance;
                } catch (err) {
                    return null;
                }
            }
            function getReactElementFromNative(hostInstance) {
                var fiber = renderer.findFiberByHostInstance(hostInstance);
                if (null != fiber) {
                    var opaqueNode = getOpaqueNode(fiber);
                    return opaqueNode;
                }
                return null;
            }
            var opaqueNodes = new Set(),
                pendingEvents = [];
            return {
                getNativeFromReactElement: getNativeFromReactElement,
                getReactElementFromNative: getReactElementFromNative,
                handleCommitFiberRoot: handleCommitFiberRoot,
                handleCommitFiberUnmount: handleCommitFiberUnmount,
                cleanup: cleanup,
                walkTree: walkTree
            };
        }
        var getDataFiber = __webpack_require__(43),
            _require = __webpack_require__(44),
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            PerformedWork = 1;
        module.exports = attachRendererFiber;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getDataFiber(fiber, getOpaqueNode) {
            var type = fiber.type,
                key = fiber.key,
                ref = fiber.ref,
                source = fiber._debugSource,
                publicInstance = null,
                props = null,
                state = null,
                children = null,
                context = null,
                updater = null,
                nodeType = null,
                name = null,
                text = null;
            switch (fiber.tag) {
                case FunctionalComponent:
                case ClassComponent:
                    nodeType = "Composite", name = getDisplayName(fiber.type), publicInstance = fiber.stateNode, props = fiber.memoizedProps, state = fiber.memoizedState, null != publicInstance && (context = publicInstance.context, context && 0 === Object.keys(context).length && (context = null));
                    var inst = publicInstance;
                    inst && (updater = {
                        setState: inst.setState && inst.setState.bind(inst),
                        forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                        setInProps: inst.forceUpdate && setInProps.bind(null, fiber),
                        setInState: inst.forceUpdate && setInState.bind(null, inst),
                        setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                    }), children = [];
                    break;

                case HostRoot:
                    nodeType = "Wrapper", children = [];
                    break;

                case HostPortal:
                    nodeType = "Portal", name = "ReactPortal", props = {
                        target: fiber.stateNode.containerInfo
                    }, children = [];
                    break;

                case HostComponent:
                    nodeType = "Native", name = fiber.type, name = name.replace("topsecret-", ""), publicInstance = fiber.stateNode, props = fiber.memoizedProps, children = "string" == typeof props.children || "number" == typeof props.children ? props.children.toString() : [], "function" == typeof fiber.stateNode.setNativeProps && (updater = {
                        setNativeProps: function setNativeProps(nativeProps) {
                            fiber.stateNode.setNativeProps(nativeProps);
                        }
                    });
                    break;

                case HostText:
                    nodeType = "Text", text = fiber.memoizedProps;
                    break;

                case Fragment:
                    nodeType = "Wrapper", children = [];
                    break;

                default:
                    nodeType = "Native", props = fiber.memoizedProps, name = "TODO_NOT_IMPLEMENTED_YET", children = [];
            }
            if (Array.isArray(children)) for (var child = fiber.child; child;) {
                children.push(getOpaqueNode(child)), child = child.sibling;
            }return {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(fiber, path, value) {
            var inst = fiber.stateNode;
            fiber.pendingProps = copyWithSet(inst.props, path, value), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps), fiber.stateNode.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        var copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            _require = __webpack_require__(44),
            FunctionalComponent = _require.FunctionalComponent,
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            HostPortal = _require.HostPortal,
            HostComponent = _require.HostComponent,
            HostText = _require.HostText,
            Fragment = _require.Fragment;
        module.exports = getDataFiber;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            IndeterminateComponent: 0,
            FunctionalComponent: 1,
            ClassComponent: 2,
            HostRoot: 3,
            HostPortal: 4,
            HostComponent: 5,
            HostText: 6,
            CoroutineComponent: 7,
            CoroutineHandlerPhase: 8,
            YieldComponent: 9,
            Fragment: 10
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, {
                value: value,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : obj[key] = value, obj;
        }
        function measureStyle(agent, bridge, resolveRNStyle, id) {
            var node = agent.elementData.get(id);
            if (!node || !node.props) return void bridge.send("rn-style:measure", {});
            var style = resolveRNStyle(node.props.style);
            styleOverridesByHostComponentId[id] && (style = babelHelpers.extends({}, style, styleOverridesByHostComponentId[id]));
            var instance = node.publicInstance;
            return instance && instance.measure ? void instance.measure(function (x, y, width, height, left, top) {
                if ("number" != typeof x) return void bridge.send("rn-style:measure", {
                    style: style
                });
                var margin = style && resolveBoxStyle("margin", style) || blank,
                    padding = style && resolveBoxStyle("padding", style) || blank;
                bridge.send("rn-style:measure", {
                    style: style,
                    measuredLayout: {
                        x: x,
                        y: y,
                        width: width,
                        height: height,
                        left: left,
                        top: top,
                        margin: margin,
                        padding: padding
                    }
                });
            }) : void bridge.send("rn-style:measure", {
                style: style
            });
        }
        function shallowClone(obj) {
            var nobj = {};
            for (var n in obj) {
                nobj[n] = obj[n];
            }return nobj;
        }
        function renameStyle(agent, id, oldName, newName, val) {
            var _ref3,
                data = agent.elementData.get(id),
                newStyle = newName ? (_ref3 = {}, _defineProperty(_ref3, oldName, void 0), _defineProperty(_ref3, newName, val), _ref3) : _defineProperty({}, oldName, void 0);
            if (data && data.updater && data.updater.setInProps) {
                var customStyle,
                    style = data && data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : (customStyle = shallowClone(style[lastLength]), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style", lastLength], customStyle));
                } else "object" === ("undefined" == typeof style ? "undefined" : _typeof(style)) ? (customStyle = shallowClone(style), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style"], customStyle)) : (style = [style, newStyle], data.updater.setInProps(["style"], style));
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        function setStyle(agent, id, attr, val) {
            var data = agent.elementData.get(id),
                newStyle = _defineProperty({}, attr, val);
            if (data && data.updater && data.updater.setInProps) {
                var style = data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : data.updater.setInProps(["style", lastLength, attr], val);
                } else style = [style, newStyle], data.updater.setInProps(["style"], style);
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            resolveBoxStyle = __webpack_require__(46),
            styleOverridesByHostComponentId = {};
        module.exports = function (bridge, agent, resolveRNStyle) {
            bridge.onCall("rn-style:get", function (id) {
                var node = agent.elementData.get(id);
                return node && node.props ? resolveRNStyle(node.props.style) : null;
            }), bridge.on("rn-style:measure", function (id) {
                measureStyle(agent, bridge, resolveRNStyle, id);
            }), bridge.on("rn-style:rename", function (_ref) {
                var id = _ref.id,
                    oldName = _ref.oldName,
                    newName = _ref.newName,
                    val = _ref.val;
                renameStyle(agent, id, oldName, newName, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            }), bridge.on("rn-style:set", function (_ref2) {
                var id = _ref2.id,
                    attr = _ref2.attr,
                    val = _ref2.val;
                setStyle(agent, id, attr, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            });
        };
        var blank = {
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
        };
    }, function (module, exports) {
        "use strict";

        function resolveBoxStyle(prefix, style) {
            var res = {},
                subs = ["top", "left", "bottom", "right"],
                set = !1;
            return subs.forEach(function (sub) {
                res[sub] = style[prefix] || 0;
            }), style[prefix] && (set = !0), style[prefix + "Vertical"] && (res.top = res.bottom = style[prefix + "Vertical"], set = !0), style[prefix + "Horizontal"] && (res.left = res.right = style[prefix + "Horizontal"], set = !0), subs.forEach(function (sub) {
                var val = style[prefix + capFirst(sub)];
                val && (res[sub] = val, set = !0);
            }), set ? res : null;
        }
        function capFirst(text) {
            return text[0].toUpperCase() + text.slice(1);
        }
        module.exports = resolveBoxStyle;
    }, function (module, exports) {
        "use strict";

        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function () {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, function () {
                obj[attr] = old;
            };
        }
        var subscriptionEnabled = !1;
        module.exports = function (bridge, agent, hook) {
            function sendStoreData() {
                subscriptionEnabled && bridge.send("relay:store", {
                    id: "relay:store",
                    nodes: DefaultStoreData.getNodeData()
                });
            }
            var shouldEnable = !!hook._relayInternals;
            if (bridge.onCall("relay:check", function () {
                return shouldEnable;
            }), shouldEnable) {
                var _hook$_relayInternals = hook._relayInternals,
                    DefaultStoreData = _hook$_relayInternals.DefaultStoreData,
                    setRequestListener = _hook$_relayInternals.setRequestListener;
                bridge.onCall("relay:store:enable", function () {
                    subscriptionEnabled = !0, sendStoreData();
                }), bridge.onCall("relay:store:disable", function () {
                    subscriptionEnabled = !1;
                }), sendStoreData(), decorate(DefaultStoreData, "handleUpdatePayload", sendStoreData), decorate(DefaultStoreData, "handleQueryPayload", sendStoreData);
                var removeListener = setRequestListener(function (event, data) {
                    bridge.send(event, data);
                });
                hook.on("shutdown", removeListener);
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var Highlighter = __webpack_require__(49);
        module.exports = function (agent) {
            var hl = new Highlighter(window, function (node) {
                agent.selectFromDOMNode(node);
            });
            agent.on("highlight", function (data) {
                return hl.highlight(data.node, data.name);
            }), agent.on("highlightMany", function (nodes) {
                return hl.highlightMany(nodes);
            }), agent.on("hideHighlight", function () {
                return hl.hideHighlight();
            }), agent.on("refreshMultiOverlay", function () {
                return hl.refreshMultiOverlay();
            }), agent.on("startInspecting", function () {
                return hl.startInspecting();
            }), agent.on("stopInspecting", function () {
                return hl.stopInspecting();
            }), agent.on("shutdown", function () {
                hl.remove();
            });
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function captureSubscription(obj, evt, cb) {
            return obj.addEventListener(evt, cb, !0), function () {
                return obj.removeEventListener(evt, cb, !0);
            };
        }
        function makeMagnifier() {
            var button = window.document.createElement("button");
            return button.innerHTML = "&#128269;", button.style.backgroundColor = "transparent", button.style.border = "none", button.style.outline = "none", button.style.cursor = "pointer", button.style.position = "fixed", button.style.bottom = "10px", button.style.right = "10px", button.style.fontSize = "30px", button.style.zIndex = 1e7, button;
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            Overlay = __webpack_require__(50),
            MultiOverlay = __webpack_require__(52),
            Highlighter = function () {
            function Highlighter(win, onSelect) {
                _classCallCheck(this, Highlighter), this._win = win, this._onSelect = onSelect, this._overlay = null, this._multiOverlay = null, this._subs = [];
            }
            return _createClass(Highlighter, [{
                key: "startInspecting",
                value: function value() {
                    this._inspecting = !0, this._subs = [captureSubscription(this._win, "mouseover", this.onHover.bind(this)), captureSubscription(this._win, "mousedown", this.onMouseDown.bind(this)), captureSubscription(this._win, "click", this.onClick.bind(this))];
                }
            }, {
                key: "stopInspecting",
                value: function value() {
                    this._subs.forEach(function (unsub) {
                        return unsub();
                    }), this.hideHighlight();
                }
            }, {
                key: "remove",
                value: function value() {
                    this.stopInspecting(), this._button && this._button.parentNode && this._button.parentNode.removeChild(this._button);
                }
            }, {
                key: "highlight",
                value: function value(node, name) {
                    this.removeMultiOverlay(), node.nodeType !== Node.COMMENT_NODE && (this._overlay || (this._overlay = new Overlay(this._win)), this._overlay.inspect(node, name));
                }
            }, {
                key: "highlightMany",
                value: function value(nodes) {
                    this.removeOverlay(), this._multiOverlay || (this._multiOverlay = new MultiOverlay(this._win)), this._multiOverlay.highlightMany(nodes);
                }
            }, {
                key: "hideHighlight",
                value: function value() {
                    this._inspecting = !1, this.removeOverlay(), this.removeMultiOverlay();
                }
            }, {
                key: "refreshMultiOverlay",
                value: function value() {
                    this._multiOverlay && this._multiOverlay.refresh();
                }
            }, {
                key: "removeOverlay",
                value: function value() {
                    this._overlay && (this._overlay.remove(), this._overlay = null);
                }
            }, {
                key: "removeMultiOverlay",
                value: function value() {
                    this._multiOverlay && (this._multiOverlay.remove(), this._multiOverlay = null);
                }
            }, {
                key: "onMouseDown",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this._onSelect(evt.target));
                }
            }, {
                key: "onClick",
                value: function value(evt) {
                    this._inspecting && (this._subs.forEach(function (unsub) {
                        return unsub();
                    }), evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.hideHighlight());
                }
            }, {
                key: "onHover",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.highlight(evt.target));
                }
            }, {
                key: "injectButton",
                value: function value() {
                    this._button = makeMagnifier(), this._button.onclick = this.startInspecting.bind(this), this._win.document.body.appendChild(this._button);
                }
            }]), Highlighter;
        }();
        module.exports = Highlighter;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function findTipPos(dims, win) {
            var top,
                tipHeight = 20,
                margin = 5;
            return top = dims.top + dims.height + tipHeight <= win.innerHeight ? dims.top + dims.height < 0 ? margin : dims.top + dims.height + margin : dims.top - tipHeight <= win.innerHeight ? dims.top - tipHeight - margin < margin ? margin : dims.top - tipHeight - margin : win.innerHeight - tipHeight - margin, top += "px", dims.left < 0 ? {
                top: top,
                left: margin
            } : dims.left + 200 > win.innerWidth ? {
                top: top,
                right: margin
            } : {
                top: top,
                left: dims.left + margin + "px"
            };
        }
        function getElementDimensions(domElement) {
            var calculatedStyle = window.getComputedStyle(domElement);
            return {
                borderLeft: +calculatedStyle.borderLeftWidth.match(/[0-9]*/)[0],
                borderRight: +calculatedStyle.borderRightWidth.match(/[0-9]*/)[0],
                borderTop: +calculatedStyle.borderTopWidth.match(/[0-9]*/)[0],
                borderBottom: +calculatedStyle.borderBottomWidth.match(/[0-9]*/)[0],
                marginLeft: +calculatedStyle.marginLeft.match(/[0-9]*/)[0],
                marginRight: +calculatedStyle.marginRight.match(/[0-9]*/)[0],
                marginTop: +calculatedStyle.marginTop.match(/[0-9]*/)[0],
                marginBottom: +calculatedStyle.marginBottom.match(/[0-9]*/)[0],
                paddingLeft: +calculatedStyle.paddingLeft.match(/[0-9]*/)[0],
                paddingRight: +calculatedStyle.paddingRight.match(/[0-9]*/)[0],
                paddingTop: +calculatedStyle.paddingTop.match(/[0-9]*/)[0],
                paddingBottom: +calculatedStyle.paddingBottom.match(/[0-9]*/)[0]
            };
        }
        function getOwnerWindow(node) {
            return node.ownerDocument ? node.ownerDocument.defaultView : null;
        }
        function getOwnerIframe(node) {
            var nodeWindow = getOwnerWindow(node);
            return nodeWindow ? nodeWindow.frameElement : null;
        }
        function getBoundingClientRectWithBorderOffset(node) {
            var dimensions = getElementDimensions(node);
            return mergeRectOffsets([node.getBoundingClientRect(), {
                top: dimensions.borderTop,
                left: dimensions.borderLeft,
                bottom: dimensions.borderBottom,
                right: dimensions.borderRight,
                width: 0,
                height: 0
            }]);
        }
        function mergeRectOffsets(rects) {
            return rects.reduce(function (previousRect, rect) {
                return null == previousRect ? rect : {
                    top: previousRect.top + rect.top,
                    left: previousRect.left + rect.left,
                    width: previousRect.width,
                    height: previousRect.height,
                    bottom: previousRect.bottom + rect.bottom,
                    right: previousRect.right + rect.right
                };
            });
        }
        function getNestedBoundingClientRect(node, boundaryWindow) {
            var ownerIframe = getOwnerIframe(node);
            if (ownerIframe && ownerIframe !== boundaryWindow) {
                for (var rects = [node.getBoundingClientRect()], currentIframe = ownerIframe, onlyOneMore = !1; currentIframe;) {
                    var rect = getBoundingClientRectWithBorderOffset(currentIframe);
                    if (rects.push(rect), currentIframe = getOwnerIframe(currentIframe), onlyOneMore) break;
                    currentIframe && getOwnerWindow(currentIframe) === boundaryWindow && (onlyOneMore = !0);
                }
                return mergeRectOffsets(rects);
            }
            return node.getBoundingClientRect();
        }
        function boxWrap(dims, what, node) {
            assign(node.style, {
                borderTopWidth: dims[what + "Top"] + "px",
                borderLeftWidth: dims[what + "Left"] + "px",
                borderRightWidth: dims[what + "Right"] + "px",
                borderBottomWidth: dims[what + "Bottom"] + "px",
                borderStyle: "solid"
            });
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            _require = __webpack_require__(51),
            monospace = _require.monospace,
            Overlay = function () {
            function Overlay(window) {
                _classCallCheck(this, Overlay);
                var doc = window.document;
                this.win = window, this.container = doc.createElement("div"), this.node = doc.createElement("div"), this.border = doc.createElement("div"), this.padding = doc.createElement("div"), this.content = doc.createElement("div"), this.border.style.borderColor = overlayStyles.border, this.padding.style.borderColor = overlayStyles.padding, this.content.style.backgroundColor = overlayStyles.background, assign(this.node.style, {
                    borderColor: overlayStyles.margin,
                    pointerEvents: "none",
                    position: "fixed"
                }), this.tip = doc.createElement("div"), assign(this.tip.style, {
                    backgroundColor: "#333740",
                    borderRadius: "2px",
                    fontFamily: monospace.family,
                    fontWeight: "bold",
                    padding: "3px 5px",
                    position: "fixed",
                    fontSize: monospace.sizes.normal
                }), this.nameSpan = doc.createElement("span"), this.tip.appendChild(this.nameSpan), assign(this.nameSpan.style, {
                    color: "#ee78e6",
                    borderRight: "1px solid #aaaaaa",
                    paddingRight: "0.5rem",
                    marginRight: "0.5rem"
                }), this.dimSpan = doc.createElement("span"), this.tip.appendChild(this.dimSpan), assign(this.dimSpan.style, {
                    color: "#d7d7d7"
                }), this.container.style.zIndex = 1e7, this.node.style.zIndex = 1e7, this.tip.style.zIndex = 1e7, this.container.appendChild(this.node), this.container.appendChild(this.tip), this.node.appendChild(this.border), this.border.appendChild(this.padding), this.padding.appendChild(this.content), doc.body.appendChild(this.container);
            }
            return _createClass(Overlay, [{
                key: "remove",
                value: function value() {
                    this.container.parentNode && this.container.parentNode.removeChild(this.container);
                }
            }, {
                key: "inspect",
                value: function value(node, name) {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        var box = getNestedBoundingClientRect(node, this.win),
                            dims = getElementDimensions(node);
                        boxWrap(dims, "margin", this.node), boxWrap(dims, "border", this.border), boxWrap(dims, "padding", this.padding), assign(this.content.style, {
                            height: box.height - dims.borderTop - dims.borderBottom - dims.paddingTop - dims.paddingBottom + "px",
                            width: box.width - dims.borderLeft - dims.borderRight - dims.paddingLeft - dims.paddingRight + "px"
                        }), assign(this.node.style, {
                            top: box.top - dims.marginTop + "px",
                            left: box.left - dims.marginLeft + "px"
                        }), this.nameSpan.textContent = name || node.nodeName.toLowerCase(), this.dimSpan.textContent = box.width + "px × " + box.height + "px";
                        var tipPos = findTipPos({
                            top: box.top - dims.marginTop,
                            left: box.left - dims.marginLeft,
                            height: box.height + dims.marginTop + dims.marginBottom,
                            width: box.width + dims.marginLeft + dims.marginRight
                        }, this.win);
                        assign(this.tip.style, tipPos);
                    }
                }
            }]), Overlay;
        }(),
            overlayStyles = {
            background: "rgba(120, 170, 210, 0.7)",
            padding: "rgba(77, 200, 0, 0.3)",
            margin: "rgba(255, 155, 0, 0.3)",
            border: "rgba(255, 200, 50, 0.3)"
        };
        module.exports = Overlay;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            monospace: {
                family: "Menlo, Consolas, monospace",
                sizes: {
                    normal: 11,
                    large: 14
                }
            },
            sansSerif: {
                family: '"Helvetica Neue", "Lucida Grande", -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, sans-serif',
                sizes: {
                    small: 10,
                    normal: 12,
                    large: 14
                }
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            MultiOverlay = function () {
            function MultiOverlay(window) {
                _classCallCheck(this, MultiOverlay), this.win = window;
                var doc = window.document;
                this.container = doc.createElement("div"), doc.body.appendChild(this.container), this._currentNodes = null;
            }
            return _createClass(MultiOverlay, [{
                key: "highlightMany",
                value: function value(nodes) {
                    var _this = this;
                    this._currentNodes = nodes, this.container.innerHTML = "", nodes.forEach(function (node) {
                        var div = _this.win.document.createElement("div");
                        if ("function" == typeof node.getBoundingClientRect) {
                            var box = node.getBoundingClientRect();
                            box.bottom < 0 || box.top > window.innerHeight || (assign(div.style, {
                                top: box.top + "px",
                                left: box.left + "px",
                                width: box.width + "px",
                                height: box.height + "px",
                                border: "2px dotted rgba(200, 100, 100, .8)",
                                boxSizing: "border-box",
                                backgroundColor: "rgba(200, 100, 100, .2)",
                                position: "fixed",
                                zIndex: 1e7,
                                pointerEvents: "none"
                            }), _this.container.appendChild(div));
                        }
                    });
                }
            }, {
                key: "refresh",
                value: function value() {
                    this._currentNodes && this.highlightMany(this._currentNodes);
                }
            }, {
                key: "remove",
                value: function value() {
                    this.container.parentNode && (this.container.parentNode.removeChild(this.container), this._currentNodes = null);
                }
            }]), MultiOverlay;
        }();
        module.exports = MultiOverlay;
    }]);
});
}, 122, null, "react-devtools-core/build/backend.js");
__d(/* JSInspector */function(global, require, module, exports) {
'use strict';

var JSInspector = {
  registerAgent: function registerAgent(type) {
    if (global.__registerInspectorAgent) {
      global.__registerInspectorAgent(type);
    }
  },
  getTimestamp: function getTimestamp() {
    return global.__inspectorTimestamp();
  }
};

module.exports = JSInspector;
}, 123, null, "JSInspector");
__d(/* NetworkAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = require(125             ); // 125 = InspectorAgent
var JSInspector = require(123          ); // 123 = JSInspector
var Map = require(59   ); // 59 = Map
var XMLHttpRequest = require(79              ); // 79 = XMLHttpRequest

var Interceptor = function () {
  function Interceptor(agent) {
    babelHelpers.classCallCheck(this, Interceptor);

    this._agent = agent;
    this._requests = new Map();
  }

  babelHelpers.createClass(Interceptor, [{
    key: 'getData',
    value: function getData(requestId) {
      return this._requests.get(requestId);
    }
  }, {
    key: 'requestSent',
    value: function requestSent(id, url, method, headers) {
      var requestId = String(id);
      this._requests.set(requestId, '');

      var request = {
        url: url,
        method: method,
        headers: headers,
        initialPriority: 'Medium'
      };
      var event = {
        requestId: requestId,
        documentURL: '',
        frameId: '1',
        loaderId: '1',
        request: request,
        timestamp: JSInspector.getTimestamp(),
        initiator: {
          type: 'other'
        },
        type: 'Other'
      };
      this._agent.sendEvent('requestWillBeSent', event);
    }
  }, {
    key: 'responseReceived',
    value: function responseReceived(id, url, status, headers) {
      var requestId = String(id);
      var response = {
        url: url,
        status: status,
        statusText: String(status),
        headers: headers,

        requestHeaders: {},
        mimeType: this._getMimeType(headers),
        connectionReused: false,
        connectionId: -1,
        encodedDataLength: 0,
        securityState: 'unknown'
      };

      var event = {
        requestId: requestId,
        frameId: '1',
        loaderId: '1',
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        response: response
      };
      this._agent.sendEvent('responseReceived', event);
    }
  }, {
    key: 'dataReceived',
    value: function dataReceived(id, data) {
      var requestId = String(id);
      var existingData = this._requests.get(requestId) || '';
      this._requests.set(requestId, existingData.concat(data));
      var event = {
        requestId: requestId,
        timestamp: JSInspector.getTimestamp(),
        dataLength: data.length,
        encodedDataLength: data.length
      };
      this._agent.sendEvent('dataReceived', event);
    }
  }, {
    key: 'loadingFinished',
    value: function loadingFinished(id, encodedDataLength) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        encodedDataLength: encodedDataLength
      };
      this._agent.sendEvent('loadingFinished', event);
    }
  }, {
    key: 'loadingFailed',
    value: function loadingFailed(id, error) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        errorText: error
      };
      this._agent.sendEvent('loadingFailed', event);
    }
  }, {
    key: '_getMimeType',
    value: function _getMimeType(headers) {
      var contentType = headers['Content-Type'] || '';
      return contentType.split(';')[0];
    }
  }]);
  return Interceptor;
}();

var NetworkAgent = function (_InspectorAgent) {
  babelHelpers.inherits(NetworkAgent, _InspectorAgent);

  function NetworkAgent() {
    babelHelpers.classCallCheck(this, NetworkAgent);
    return babelHelpers.possibleConstructorReturn(this, (NetworkAgent.__proto__ || Object.getPrototypeOf(NetworkAgent)).apply(this, arguments));
  }

  babelHelpers.createClass(NetworkAgent, [{
    key: 'enable',
    value: function enable(_ref) {
      var maxResourceBufferSize = _ref.maxResourceBufferSize,
          maxTotalBufferSize = _ref.maxTotalBufferSize;

      this._interceptor = new Interceptor(this);
      XMLHttpRequest.setInterceptor(this._interceptor);
    }
  }, {
    key: 'disable',
    value: function disable() {
      XMLHttpRequest.setInterceptor(null);
      this._interceptor = null;
    }
  }, {
    key: 'getResponseBody',
    value: function getResponseBody(_ref2) {
      var requestId = _ref2.requestId;

      return { body: this.interceptor().getData(requestId), base64Encoded: false };
    }
  }, {
    key: 'interceptor',
    value: function interceptor() {
      if (this._interceptor) {
        return this._interceptor;
      } else {
        throw Error('_interceptor can not be null');
      }
    }
  }]);
  return NetworkAgent;
}(InspectorAgent);

NetworkAgent.DOMAIN = 'Network';


module.exports = NetworkAgent;
}, 124, null, "NetworkAgent");
__d(/* InspectorAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = function () {
  function InspectorAgent(eventSender) {
    babelHelpers.classCallCheck(this, InspectorAgent);

    this._eventSender = eventSender;
  }

  babelHelpers.createClass(InspectorAgent, [{
    key: 'sendEvent',
    value: function sendEvent(name, params) {
      this._eventSender(name, params);
    }
  }]);
  return InspectorAgent;
}();

module.exports = InspectorAgent;
}, 125, null, "InspectorAgent");
__d(/* RCTEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge

var RCTEventEmitter = {
  register: function register(eventEmitter) {
    BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
  }
};

module.exports = RCTEventEmitter;
}, 126, null, "RCTEventEmitter");
__d(/* ReactNativeFiber-prod */function(global, require, module, exports) {
"use strict";

var invariant = require(13                  ), // 13 = fbjs/lib/invariant
    ExceptionsManager = require(25                 ), // 25 = ExceptionsManager
    emptyObject = require(34                    ), // 34 = fbjs/lib/emptyObject
    react = require(35     ), // 35 = react
    shallowEqual = require(48                     ), // 48 = fbjs/lib/shallowEqual
    deepDiffer = require(49          ), // 49 = deepDiffer
    flattenStyle = require(50            ), // 50 = flattenStyle
    TextInputState = require(52              ), // 52 = TextInputState
    UIManager = require(54         ); // 54 = UIManager

require(56                                 ), require(57              ); // 57 = InitializeCore // 56 = deepFreezeAndThrowOnMutationInDev

var RCTEventEmitter = require(126              ), // 126 = RCTEventEmitter
    emptyFunction = require(24                      ), // 24 = fbjs/lib/emptyFunction
    defaultShowDialog = function defaultShowDialog(capturedError) {
    return !0;
},
    showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
    if (!1 !== showDialog(capturedError)) {
        var error = capturedError.error;
        console.error(error);
    }
}

var injection = {
    injectDialog: function injectDialog(fn) {
        invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
    }
},
    logCapturedError_1 = logCapturedError,
    ReactFiberErrorLogger = {
    injection: injection,
    logCapturedError: logCapturedError_1
},
    ReactErrorUtils = {
    _caughtError: null,
    _hasCaughtError: !1,
    _rethrowError: null,
    _hasRethrowError: !1,
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        _invokeGuardedCallback.apply(ReactErrorUtils, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        if (ReactErrorUtils.invokeGuardedCallback.apply(this, arguments), ReactErrorUtils.hasCaughtError()) {
            var error = ReactErrorUtils.clearCaughtError();
            ReactErrorUtils._hasRethrowError || (ReactErrorUtils._hasRethrowError = !0, ReactErrorUtils._rethrowError = error);
        }
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(ReactErrorUtils, arguments);
    },
    hasCaughtError: function hasCaughtError() {
        return ReactErrorUtils._hasCaughtError;
    },
    clearCaughtError: function clearCaughtError() {
        if (ReactErrorUtils._hasCaughtError) {
            var error = ReactErrorUtils._caughtError;
            return ReactErrorUtils._caughtError = null, ReactErrorUtils._hasCaughtError = !1, error;
        }
        invariant(!1, "clearCaughtError was called but no error was captured. This error " + "is likely caused by a bug in React. Please file an issue.");
    }
},
    _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null;
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        ReactErrorUtils._caughtError = error, ReactErrorUtils._hasCaughtError = !0;
    }
},
    _rethrowCaughtError = function _rethrowCaughtError() {
    if (ReactErrorUtils._hasRethrowError) {
        var error = ReactErrorUtils._rethrowError;
        throw ReactErrorUtils._rethrowError = null, ReactErrorUtils._hasRethrowError = !1, error;
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection$1 = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected;
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection$1
},
    EventPluginUtils_1 = EventPluginUtils,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events. This error is likely caused by a bug in React. Please file an issue.");
        var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
        fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function batchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching;

function ReactNativeFiberErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error,
        errorToHandle = void 0;
    if (error instanceof Error) {
        var message = error.message,
            name = error.name,
            summary = message ? name + ": " + message : name;
        errorToHandle = error;
        try {
            errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
        } catch (e) {}
    } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
    return ExceptionsManager.handleException(errorToHandle, !1), !1;
}

var showDialog$1 = ReactNativeFiberErrorDialog,
    ReactNativeFiberErrorDialog_1 = {
    showDialog: showDialog$1
},
    REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
    createPortal = function createPortal(children, containerInfo, implementation) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
    };
},
    isPortal = function isPortal(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
},
    REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
    ReactPortal = {
    createPortal: createPortal,
    isPortal: isPortal,
    REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
},
    instanceCache = {},
    instanceProps = {};

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    uncacheFiberNode: uncacheFiberNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree,
    commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
    ReactFeatureFlags = {
    enableAsyncSubtreeAPI: !0
},
    ReactFeatureFlags_1 = ReactFeatureFlags,
    ReactTypeOfSideEffect = {
    NoEffect: 0,
    PerformedWork: 1,
    Placement: 2,
    Update: 4,
    PlacementAndUpdate: 6,
    Deletion: 8,
    ContentReset: 16,
    Callback: 32,
    Err: 64,
    Ref: 128
},
    ReactPriorityLevel = {
    NoWork: 0,
    SynchronousPriority: 1,
    TaskPriority: 2,
    HighPriority: 3,
    LowPriority: 4,
    OffscreenPriority: 5
},
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    CallbackEffect = ReactTypeOfSideEffect.Callback,
    NoWork = ReactPriorityLevel.NoWork,
    SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
    TaskPriority = ReactPriorityLevel.TaskPriority,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    _queue1 = void 0,
    _queue2 = void 0;

function comparePriority(a, b) {
    return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
}

function createUpdateQueue() {
    return {
        first: null,
        last: null,
        hasForceUpdate: !1,
        callbackList: null
    };
}

function cloneUpdate(update) {
    return {
        priorityLevel: update.priorityLevel,
        partialState: update.partialState,
        callback: update.callback,
        isReplace: update.isReplace,
        isForced: update.isForced,
        isTopLevelUnmount: update.isTopLevelUnmount,
        next: null
    };
}

function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
    null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
}

function findInsertionPosition(queue, update) {
    var priorityLevel = update.priorityLevel,
        insertAfter = null,
        insertBefore = null;
    if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
        insertAfter = insertBefore, insertBefore = insertBefore.next;
    }return insertAfter;
}

function ensureUpdateQueues(fiber) {
    var alternateFiber = fiber.alternate,
        queue1 = fiber.updateQueue;
    null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
    var queue2 = void 0;
    null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, _queue1 = queue1, _queue2 = queue2 !== queue1 ? queue2 : null;
}

function insertUpdate(fiber, update) {
    ensureUpdateQueues(fiber);
    var queue1 = _queue1,
        queue2 = _queue2,
        insertAfter1 = findInsertionPosition(queue1, update),
        insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
    if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
    var insertAfter2 = findInsertionPosition(queue2, update),
        insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
    if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
    var update2 = cloneUpdate(update);
    return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
}

function addUpdate(fiber, partialState, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addUpdate_1 = addUpdate;

function addReplaceUpdate(fiber, state, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: state,
        callback: callback,
        isReplace: !0,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addReplaceUpdate_1 = addReplaceUpdate;

function addForceUpdate(fiber, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: null,
        callback: callback,
        isReplace: !1,
        isForced: !0,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addForceUpdate_1 = addForceUpdate;

function getUpdatePriority(fiber) {
    var updateQueue = fiber.updateQueue;
    return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
}

var getUpdatePriority_1 = getUpdatePriority;

function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
    var isTopLevelUnmount = null === partialState.element,
        update = {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: isTopLevelUnmount,
        next: null
    },
        update2 = insertUpdate(fiber, update);
    if (isTopLevelUnmount) {
        var queue1 = _queue1,
            queue2 = _queue2;
        null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
    }
}

var addTopLevelUpdate_1 = addTopLevelUpdate$1;

function getStateFromUpdate(update, instance, prevState, props) {
    var partialState = update.partialState;
    if ("function" == typeof partialState) {
        return partialState.call(instance, prevState, props);
    }
    return partialState;
}

function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
    if (null !== current && current.updateQueue === queue) {
        var currentQueue = queue;
        queue = workInProgress.updateQueue = {
            first: currentQueue.first,
            last: currentQueue.last,
            callbackList: null,
            hasForceUpdate: !1
        };
    }
    for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
        queue.first = update.next, null === queue.first && (queue.last = null);
        var _partialState = void 0;
        update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
    }
    return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), state;
}

var beginUpdateQueue_1 = beginUpdateQueue;

function commitCallbacks(finishedWork, queue, context) {
    var callbackList = queue.callbackList;
    if (null !== callbackList) {
        queue.callbackList = null;
        for (var i = 0; i < callbackList.length; i++) {
            var _callback = callbackList[i];
            invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
        }
    }
}

var commitCallbacks_1 = commitCallbacks,
    ReactFiberUpdateQueue = {
    addUpdate: addUpdate_1,
    addReplaceUpdate: addReplaceUpdate_1,
    addForceUpdate: addForceUpdate_1,
    getUpdatePriority: getUpdatePriority_1,
    addTopLevelUpdate: addTopLevelUpdate_1,
    beginUpdateQueue: beginUpdateQueue_1,
    commitCallbacks: commitCallbacks_1
};

function getComponentName$1(fiber) {
    var type = fiber.type;
    return "string" == typeof type ? type : "function" == typeof type ? type.displayName || type.name : null;
}

var getComponentName_1 = getComponentName$1,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalFiber = void 0;
    },
    get: function get(key) {
        return key._reactInternalFiber;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalFiber;
    },
    set: function set(key, value) {
        key._reactInternalFiber = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
},
    ReactGlobalSharedState_1 = ReactGlobalSharedState,
    HostComponent$1 = ReactTypeOfWork.HostComponent,
    HostRoot$2 = ReactTypeOfWork.HostRoot,
    HostPortal = ReactTypeOfWork.HostPortal,
    HostText = ReactTypeOfWork.HostText,
    NoEffect = ReactTypeOfSideEffect.NoEffect,
    Placement = ReactTypeOfSideEffect.Placement,
    MOUNTING = 1,
    MOUNTED = 2,
    UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
        node = node.return;
    } else {
        if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
        for (; node.return;) {
            if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
        }
    }
    return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
}

var isFiberMounted$1 = function isFiberMounted$1(fiber) {
    return isFiberMountedImpl(fiber) === MOUNTED;
},
    isMounted = function isMounted(component) {
    var fiber = ReactInstanceMap_1.get(component);
    return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
};

function assertIsMounted(fiber) {
    invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
}

function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
        var state = isFiberMountedImpl(fiber);
        return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
    }
    for (var a = fiber, b = alternate; !0;) {
        var parentA = a.return,
            parentB = parentA ? parentA.alternate : null;
        if (!parentA || !parentB) break;
        if (parentA.child === parentB.child) {
            for (var child = parentA.child; child;) {
                if (child === a) return assertIsMounted(parentA), fiber;
                if (child === b) return assertIsMounted(parentA), alternate;
                child = child.sibling;
            }
            invariant(!1, "Unable to find node on an unmounted component.");
        }
        if (a.return !== b.return) a = parentA, b = parentB;else {
            for (var didFindChild = !1, _child = parentA.child; _child;) {
                if (_child === a) {
                    didFindChild = !0, a = parentA, b = parentB;
                    break;
                }
                if (_child === b) {
                    didFindChild = !0, b = parentA, a = parentB;
                    break;
                }
                _child = _child.sibling;
            }
            if (!didFindChild) {
                for (_child = parentB.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentB, b = parentA;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentB, a = parentA;
                        break;
                    }
                    _child = _child.sibling;
                }
                invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "in React related to the return pointer. Please file an issue.");
            }
        }
        invariant(a.alternate === b, "Return fibers should always be each others' alternates. " + "This error is likely caused by a bug in React. Please file an issue.");
    }
    return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
}

var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
    findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$1 || node.tag === HostText) return node;
        if (node.child) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    findCurrentHostFiberWithNoPortals$1 = function findCurrentHostFiberWithNoPortals$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$1 || node.tag === HostText) return node;
        if (node.child && node.tag !== HostPortal) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    ReactFiberTreeReflection = {
    isFiberMounted: isFiberMounted$1,
    isMounted: isMounted,
    findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
    findCurrentHostFiber: findCurrentHostFiber$1,
    findCurrentHostFiberWithNoPortals: findCurrentHostFiberWithNoPortals$1
},
    valueStack = [],
    index = -1,
    createCursor$1 = function createCursor$1(defaultValue) {
    return {
        current: defaultValue
    };
},
    isEmpty = function isEmpty() {
    return -1 === index;
},
    pop$1 = function pop$1(cursor, fiber) {
    index < 0 || (cursor.current = valueStack[index], valueStack[index] = null, index--);
},
    push$1 = function push$1(cursor, value, fiber) {
    index++, valueStack[index] = cursor.current, cursor.current = value;
},
    reset = function reset() {
    for (; index > -1;) {
        valueStack[index] = null, index--;
    }
},
    ReactFiberStack = {
    createCursor: createCursor$1,
    isEmpty: isEmpty,
    pop: pop$1,
    push: push$1,
    reset: reset
},
    isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
    ClassComponent$1 = ReactTypeOfWork.ClassComponent,
    HostRoot$1 = ReactTypeOfWork.HostRoot,
    createCursor = ReactFiberStack.createCursor,
    pop = ReactFiberStack.pop,
    push = ReactFiberStack.push,
    contextStackCursor = createCursor(emptyObject),
    didPerformWorkStackCursor = createCursor(!1),
    previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
    return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
}

var getUnmaskedContext_1 = getUnmaskedContext;

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

var cacheContext_1 = cacheContext,
    getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
    var type = workInProgress.type,
        contextTypes = type.contextTypes;
    if (!contextTypes) return emptyObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {};
    for (var key in contextTypes) {
        context[key] = unmaskedContext[key];
    }return instance && cacheContext(workInProgress, unmaskedContext, context), context;
},
    hasContextChanged = function hasContextChanged() {
    return didPerformWorkStackCursor.current;
};

function isContextConsumer(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
}

var isContextConsumer_1 = isContextConsumer;

function isContextProvider$1(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
}

var isContextProvider_1 = isContextProvider$1;

function popContextProvider(fiber) {
    isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
}

var popContextProvider_1 = popContextProvider,
    popTopLevelContextObject = function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
},
    pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(null == contextStackCursor.cursor, "Unexpected context found on stack. " + "This error is likely caused by a bug in React. Please file an issue."), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
};

function processChildContext$1(fiber, parentContext) {
    var instance = fiber.stateNode,
        childContextTypes = fiber.type.childContextTypes;
    if ("function" != typeof instance.getChildContext) return parentContext;
    var childContext = void 0;
    childContext = instance.getChildContext();
    for (var contextKey in childContext) {
        invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
    }return babelHelpers.extends({}, parentContext, childContext);
}

var processChildContext_1 = processChildContext$1,
    pushContextProvider = function pushContextProvider(workInProgress) {
    if (!isContextProvider$1(workInProgress)) return !1;
    var instance = workInProgress.stateNode,
        memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
    return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress), !0;
},
    invalidateContextProvider = function invalidateContextProvider(workInProgress, didChange) {
    var instance = workInProgress.stateNode;
    if (invariant(instance, "Expected to have an instance by this point. " + "This error is likely caused by a bug in React. Please file an issue."), didChange) {
        var mergedContext = processChildContext$1(workInProgress, previousContext);
        instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
    } else pop(didPerformWorkStackCursor, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
},
    resetContext = function resetContext() {
    previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
},
    findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
    invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component. " + "This error is likely caused by a bug in React. Please file an issue.");
    for (var node = fiber; node.tag !== HostRoot$1;) {
        if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
        var parent = node.return;
        invariant(parent, "Found unexpected detached subtree parent. " + "This error is likely caused by a bug in React. Please file an issue."), node = parent;
    }
    return node.stateNode.context;
},
    ReactFiberContext = {
    getUnmaskedContext: getUnmaskedContext_1,
    cacheContext: cacheContext_1,
    getMaskedContext: getMaskedContext,
    hasContextChanged: hasContextChanged,
    isContextConsumer: isContextConsumer_1,
    isContextProvider: isContextProvider_1,
    popContextProvider: popContextProvider_1,
    popTopLevelContextObject: popTopLevelContextObject,
    pushTopLevelContextObject: pushTopLevelContextObject,
    processChildContext: processChildContext_1,
    pushContextProvider: pushContextProvider,
    invalidateContextProvider: invalidateContextProvider,
    resetContext: resetContext,
    findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
},
    ReactTypeOfInternalContext = {
    NoContext: 0,
    AsyncUpdates: 1
},
    IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    ClassComponent$3 = ReactTypeOfWork.ClassComponent,
    HostRoot$3 = ReactTypeOfWork.HostRoot,
    HostComponent$2 = ReactTypeOfWork.HostComponent,
    HostText$1 = ReactTypeOfWork.HostText,
    HostPortal$1 = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment,
    NoWork$1 = ReactPriorityLevel.NoWork,
    NoContext = ReactTypeOfInternalContext.NoContext,
    NoEffect$1 = ReactTypeOfSideEffect.NoEffect;

function FiberNode(tag, key, internalContextTag) {
    this.tag = tag, this.key = key, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = null, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.internalContextTag = internalContextTag, this.effectTag = NoEffect$1, this.nextEffect = null, this.firstEffect = null, this.lastEffect = null, this.pendingWorkPriority = NoWork$1, this.alternate = null;
}

var createFiber = function createFiber(tag, key, internalContextTag) {
    return new FiberNode(tag, key, internalContextTag);
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
    var workInProgress = current.alternate;
    return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoEffect$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
},
    createHostRootFiber$1 = function createHostRootFiber$1() {
    return createFiber(HostRoot$3, null, NoContext);
},
    createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
    var owner = null,
        fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
    return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
    var fiber = createFiber(Fragment, null, internalContextTag);
    return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostText$1, null, internalContextTag);
    return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
};

function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
    var fiber = void 0;
    if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$3, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$2, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
        var info = "";
        invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
    }
    return fiber;
}

var createFiberFromElementType_1 = createFiberFromElementType,
    createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
    var fiber = createFiber(HostComponent$2, null, NoContext);
    return fiber.type = "DELETED", fiber;
},
    createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
    var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
    return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
    return createFiber(YieldComponent, null, internalContextTag);
},
    createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostPortal$1, portal.key, internalContextTag);
    return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
        containerInfo: portal.containerInfo,
        implementation: portal.implementation
    }, fiber;
},
    largerPriority = function largerPriority(p1, p2) {
    return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
},
    ReactFiber = {
    createWorkInProgress: createWorkInProgress,
    createHostRootFiber: createHostRootFiber$1,
    createFiberFromElement: createFiberFromElement,
    createFiberFromFragment: createFiberFromFragment,
    createFiberFromText: createFiberFromText,
    createFiberFromElementType: createFiberFromElementType_1,
    createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
    createFiberFromCoroutine: createFiberFromCoroutine,
    createFiberFromYield: createFiberFromYield,
    createFiberFromPortal: createFiberFromPortal,
    largerPriority: largerPriority
},
    createHostRootFiber = ReactFiber.createHostRootFiber,
    createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
    var uninitializedFiber = createHostRootFiber(),
        root = {
        current: uninitializedFiber,
        containerInfo: containerInfo,
        isScheduled: !1,
        nextScheduledRoot: null,
        context: null,
        pendingContext: null
    };
    return uninitializedFiber.stateNode = root, root;
},
    ReactFiberRoot = {
    createFiberRoot: createFiberRoot$1
},
    describeComponentFrame = function describeComponentFrame(name, source, ownerName) {
    return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
},
    IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$5 = ReactTypeOfWork.ClassComponent,
    HostComponent$4 = ReactTypeOfWork.HostComponent;

function describeFiber(fiber) {
    switch (fiber.tag) {
        case IndeterminateComponent$1:
        case FunctionalComponent:
        case ClassComponent$5:
        case HostComponent$4:
            var owner = fiber._debugOwner,
                source = fiber._debugSource,
                name = getComponentName_1(fiber),
                ownerName = null;
            return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

        default:
            return "";
    }
}

function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
    var info = "",
        node = workInProgress;
    do {
        info += describeFiber(node), node = node.return;
    } while (node);
    return info;
}

var ReactFiberComponentTreeHook = {
    getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1
},
    REACT_COROUTINE_TYPE$1,
    REACT_YIELD_TYPE$1;

"function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);

var createCoroutine = function createCoroutine(children, handler, props) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_COROUTINE_TYPE$1,
        key: null == key ? null : "" + key,
        children: children,
        handler: handler,
        props: props
    };
},
    createYield = function createYield(value) {
    return {
        $$typeof: REACT_YIELD_TYPE$1,
        value: value
    };
},
    isCoroutine = function isCoroutine(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
},
    isYield = function isYield(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
},
    REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
    REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
    ReactCoroutine = {
    createCoroutine: createCoroutine,
    createYield: createYield,
    isCoroutine: isCoroutine,
    isYield: isYield,
    REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
    REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
},
    REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
    REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
    REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
    createWorkInProgress$2 = ReactFiber.createWorkInProgress,
    createFiberFromElement$1 = ReactFiber.createFiberFromElement,
    createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
    createFiberFromText$1 = ReactFiber.createFiberFromText,
    createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
    createFiberFromYield$1 = ReactFiber.createFiberFromYield,
    createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
    isArray = Array.isArray,
    FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$7 = ReactTypeOfWork.ClassComponent,
    HostText$3 = ReactTypeOfWork.HostText,
    HostPortal$4 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
    YieldComponent$2 = ReactTypeOfWork.YieldComponent,
    Fragment$2 = ReactTypeOfWork.Fragment,
    NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
    Placement$3 = ReactTypeOfSideEffect.Placement,
    Deletion$1 = ReactTypeOfSideEffect.Deletion,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;

function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || void 0 === maybeIterable) return null;
    var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
    return "function" == typeof iteratorFn ? iteratorFn : null;
}

function coerceRef(current, element) {
    var mixedRef = element.ref;
    if (null !== mixedRef && "function" != typeof mixedRef) {
        if (element._owner) {
            var owner = element._owner,
                inst = void 0;
            if (owner) {
                var ownerFiber = owner;
                invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
            }
            invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
            var stringRef = "" + mixedRef;
            if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
            var ref = function ref(value) {
                var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
                null === value ? delete refs[stringRef] : refs[stringRef] = value;
            };
            return ref._stringRef = stringRef, ref;
        }
        invariant("string" == typeof mixedRef, "Expected ref to be a function or a string."), invariant(element._owner, "Element ref was specified as a string (%s) but no owner was " + "set. You may have multiple copies of React loaded. " + "(details: https://fb.me/react-refs-must-have-owner).", mixedRef);
    }
    return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) {
        invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, "");
    }
}

function ChildReconciler(shouldClone, shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
        if (shouldTrackSideEffects) {
            if (!shouldClone) {
                if (null === childToDelete.alternate) return;
                childToDelete = childToDelete.alternate;
            }
            var last = returnFiber.lastEffect;
            null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
        }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) return null;
        for (var childToDelete = currentFirstChild; null !== childToDelete;) {
            deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
        }return null;
    }
    function mapRemainingChildren(returnFiber, currentFirstChild) {
        for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
            null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
        }return existingChildren;
    }
    function useFiber(fiber, priority) {
        if (shouldClone) {
            var clone = createWorkInProgress$2(fiber, priority);
            return clone.index = 0, clone.sibling = null, clone;
        }
        return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
        if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
        var current = newFiber.alternate;
        if (null !== current) {
            var oldIndex = current.index;
            return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
        }
        return newFiber.effectTag = Placement$3, lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
        return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, priority) {
        if (null === current || current.tag !== HostText$3) {
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = textContent, existing.return = returnFiber, existing;
    }
    function updateElement(returnFiber, current, element, priority) {
        if (null === current || current.type !== element.type) {
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(current, element), created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
    }
    function updateCoroutine(returnFiber, current, coroutine, priority) {
        if (null === current || current.tag !== CoroutineComponent$2) {
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
    }
    function updateYield(returnFiber, current, yieldNode, priority) {
        if (null === current || current.tag !== YieldComponent$2) {
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.type = yieldNode.value, existing.return = returnFiber, existing;
    }
    function updatePortal(returnFiber, current, portal, priority) {
        if (null === current || current.tag !== HostPortal$4 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
    }
    function updateFragment(returnFiber, current, fragment, priority) {
        if (null === current || current.tag !== Fragment$2) {
            var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = fragment, existing.return = returnFiber, existing;
    }
    function createChild(returnFiber, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                    return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                case REACT_COROUTINE_TYPE:
                    var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                    return _created2.return = returnFiber, _created2;

                case REACT_YIELD_TYPE:
                    var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                    return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                case REACT_PORTAL_TYPE$1:
                    var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                    return _created4.return = returnFiber, _created4;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                return _created5.return = returnFiber, _created5;
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, priority) {
        var key = null !== oldFiber ? oldFiber.key : null;
        if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_COROUTINE_TYPE:
                    return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_YIELD_TYPE:
                    return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_PORTAL_TYPE$1:
                    return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_COROUTINE_TYPE:
                    return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_YIELD_TYPE:
                    return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                case REACT_PORTAL_TYPE$1:
                    return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
            if (null === newFiber) {
                null === oldFiber && (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
            var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
            _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
        var iteratorFn = getIteratorFn(newChildrenIterable);
        invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue.");
        var newChildren = iteratorFn.call(newChildrenIterable);
        invariant(null != newChildren, "An iterable object provided no iterator.");
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
            if (null === newFiber) {
                oldFiber || (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, priority);
                null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
            null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
        if (null !== currentFirstChild && currentFirstChild.tag === HostText$3) {
            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
            var existing = useFiber(currentFirstChild, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
        for (var key = element.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.type === element.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
        return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
    }
    function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
        for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === CoroutineComponent$2) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
        var child = currentFirstChild;
        if (null !== child) {
            if (child.tag === YieldComponent$2) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, priority);
                return existing.type = yieldNode.value, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, child);
        }
        var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
        return created.type = yieldNode.value, created.return = returnFiber, created;
    }
    function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
        for (var key = portal.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === HostPortal$4 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
        var isObject = "object" == typeof newChild && null !== newChild;
        if (isObject) switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_COROUTINE_TYPE:
                return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

            case REACT_YIELD_TYPE:
                return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
        if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
        if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
        if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
        if (isObject && throwOnInvalidObjectType(returnFiber, newChild), void 0 === newChild) switch (returnFiber.tag) {
            case ClassComponent$7:
            case FunctionalComponent$2:
                var Component = returnFiber.type;
                invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", Component.displayName || Component.name || "Component");
        }
        return deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return reconcileChildFibers;
}

var reconcileChildFibers$1 = ChildReconciler(!0, !0),
    reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
    mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
    cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
    if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
        var currentChild = workInProgress.child,
            newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
        for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
            currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
        }newChild.sibling = null;
    }
},
    ReactChildFiber = {
    reconcileChildFibers: reconcileChildFibers$1,
    reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
    mountChildFibersInPlace: mountChildFibersInPlace$1,
    cloneChildFibers: cloneChildFibers$1
},
    Update$1 = ReactTypeOfSideEffect.Update,
    AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
    cacheContext$1 = ReactFiberContext.cacheContext,
    getMaskedContext$2 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
    isContextConsumer$1 = ReactFiberContext.isContextConsumer,
    addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
    addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
    addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
    beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
    _require5 = ReactFiberContext,
    hasContextChanged$2 = _require5.hasContextChanged,
    isMounted$1 = ReactFiberTreeReflection.isMounted,
    ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
    var updater = {
        isMounted: isMounted$1,
        enqueueSetState: function enqueueSetState(instance, partialState, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        }
    };
    function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
        if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
        var instance = workInProgress.stateNode,
            type = workInProgress.type;
        if ("function" == typeof instance.shouldComponentUpdate) {
            return instance.shouldComponentUpdate(newProps, newState, newContext);
        }
        return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }
    function resetInputPointers(workInProgress, instance) {
        instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress);
    }
    function constructClassInstance(workInProgress, props) {
        var ctor = workInProgress.type,
            unmaskedContext = getUnmaskedContext$2(workInProgress),
            needsContext = isContextConsumer$1(workInProgress),
            context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
            instance = new ctor(props, context);
        return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        instance.componentWillMount(), oldState !== instance.state && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
        var oldState = instance.state;
        instance.componentWillReceiveProps(newProps, newContext), instance.state !== oldState && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function mountClassInstance(workInProgress, priorityLevel) {
        var current = workInProgress.alternate,
            instance = workInProgress.stateNode,
            state = instance.state || null,
            props = workInProgress.pendingProps;
        invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
        var unmaskedContext = getUnmaskedContext$2(workInProgress);
        if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && null != workInProgress.type.prototype && !0 === workInProgress.type.prototype.unstable_isAsyncReactComponent && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
            callComponentWillMount(workInProgress, instance);
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
        }
        "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
    }
    function updateClassInstance(current, workInProgress, priorityLevel) {
        var instance = workInProgress.stateNode;
        resetInputPointers(workInProgress, instance);
        var oldProps = workInProgress.memoizedProps,
            newProps = workInProgress.pendingProps;
        newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var oldContext = instance.context,
            newUnmaskedContext = getUnmaskedContext$2(workInProgress),
            newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
        "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
        var oldState = workInProgress.memoizedState,
            newState = void 0;
        if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
        var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
        return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && instance.componentWillUpdate(newProps, newState, newContext), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
    }
    return {
        adoptClassInstance: adoptClassInstance,
        constructClassInstance: constructClassInstance,
        mountClassInstance: mountClassInstance,
        updateClassInstance: updateClassInstance
    };
},
    mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
    reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
    reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
    cloneChildFibers = ReactChildFiber.cloneChildFibers,
    beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
    getMaskedContext$1 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
    hasContextChanged$1 = ReactFiberContext.hasContextChanged,
    pushContextProvider$1 = ReactFiberContext.pushContextProvider,
    pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
    invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
    IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$6 = ReactTypeOfWork.ClassComponent,
    HostRoot$5 = ReactTypeOfWork.HostRoot,
    HostComponent$5 = ReactTypeOfWork.HostComponent,
    HostText$2 = ReactTypeOfWork.HostText,
    HostPortal$3 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$1 = ReactTypeOfWork.YieldComponent,
    Fragment$1 = ReactTypeOfWork.Fragment,
    NoWork$3 = ReactPriorityLevel.NoWork,
    OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
    PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
    Placement$2 = ReactTypeOfSideEffect.Placement,
    ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
    Err$1 = ReactTypeOfSideEffect.Err,
    Ref$1 = ReactTypeOfSideEffect.Ref,
    ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
    ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
    var shouldSetTextContent = config.shouldSetTextContent,
        useSyncScheduling = config.useSyncScheduling,
        shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
        pushHostContext = hostContext.pushHostContext,
        pushHostContainer = hostContext.pushHostContainer,
        enterHydrationState = hydrationContext.enterHydrationState,
        resetHydrationState = hydrationContext.resetHydrationState,
        tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
        _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
        adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
        constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
        mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
        updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
    function reconcileChildren(current, workInProgress, nextChildren) {
        reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
    }
    function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
        null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
    }
    function updateFragment(current, workInProgress) {
        var nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
    }
    function updateFunctionalComponent(current, workInProgress) {
        var fn = workInProgress.type,
            nextProps = workInProgress.pendingProps,
            memoizedProps = workInProgress.memoizedProps;
        if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        return nextChildren = fn(nextProps, context), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, priorityLevel) {
        var hasContext = pushContextProvider$1(workInProgress),
            shouldUpdate = void 0;
        return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
    }
    function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
        if (markRef(current, workInProgress), !shouldUpdate) return hasContext && invalidateContextProvider$1(workInProgress, !1), bailoutOnAlreadyFinishedWork(current, workInProgress);
        var instance = workInProgress.stateNode;
        ReactCurrentOwner$2.current = workInProgress;
        var nextChildren = void 0;
        return nextChildren = instance.render(), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress, !0), workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, priorityLevel) {
        pushHostRootContext(workInProgress);
        var updateQueue = workInProgress.updateQueue;
        if (null !== updateQueue) {
            var prevState = workInProgress.memoizedState,
                state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
            if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var element = state.element;
            return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
        }
        return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    function updateHostComponent(current, workInProgress, renderPriority) {
        pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type,
            memoizedProps = workInProgress.memoizedProps,
            nextProps = workInProgress.pendingProps;
        null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var prevProps = null !== current ? current.memoizedProps : null;
        if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren = nextProps.children;
        return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
    }
    function updateHostText(current, workInProgress) {
        null === current && tryToClaimNextHydratableInstance(workInProgress);
        var nextProps = workInProgress.pendingProps;
        return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
    }
    function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
        invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
        var value,
            fn = workInProgress.type,
            props = workInProgress.pendingProps,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        if (value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
            workInProgress.tag = ClassComponent$6;
            var hasContext = pushContextProvider$1(workInProgress);
            return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
        }
        return workInProgress.tag = FunctionalComponent$1, reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
    }
    function updateCoroutineComponent(current, workInProgress) {
        var nextCoroutine = workInProgress.pendingProps;
        hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
        var nextChildren = nextCoroutine.children,
            priorityLevel = workInProgress.pendingWorkPriority;
        return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
    }
    function updatePortalComponent(current, workInProgress) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var priorityLevel = workInProgress.pendingWorkPriority,
            nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress) {
        return cloneChildFibers(current, workInProgress), workInProgress.child;
    }
    function bailoutOnLowPriority(current, workInProgress) {
        switch (workInProgress.tag) {
            case HostRoot$5:
                pushHostRootContext(workInProgress);
                break;

            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostPortal$3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        }
        return null;
    }
    function memoizeProps(workInProgress, nextProps) {
        workInProgress.memoizedProps = nextProps;
    }
    function memoizeState(workInProgress, nextState) {
        workInProgress.memoizedState = nextState;
    }
    function beginWork(current, workInProgress, priorityLevel) {
        if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        switch (workInProgress.tag) {
            case IndeterminateComponent$2:
                return mountIndeterminateComponent(current, workInProgress, priorityLevel);

            case FunctionalComponent$1:
                return updateFunctionalComponent(current, workInProgress);

            case ClassComponent$6:
                return updateClassComponent(current, workInProgress, priorityLevel);

            case HostRoot$5:
                return updateHostRoot(current, workInProgress, priorityLevel);

            case HostComponent$5:
                return updateHostComponent(current, workInProgress, priorityLevel);

            case HostText$2:
                return updateHostText(current, workInProgress);

            case CoroutineHandlerPhase:
                workInProgress.tag = CoroutineComponent$1;

            case CoroutineComponent$1:
                return updateCoroutineComponent(current, workInProgress);

            case YieldComponent$1:
                return null;

            case HostPortal$3:
                return updatePortalComponent(current, workInProgress);

            case Fragment$1:
                return updateFragment(current, workInProgress);

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function beginFailedWork(current, workInProgress, priorityLevel) {
        switch (workInProgress.tag) {
            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostRoot$5:
                pushHostRootContext(workInProgress);
                break;

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue.");
        }
        if (workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
            var instance = workInProgress.stateNode;
            workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
        }
        return workInProgress.child;
    }
    return {
        beginWork: beginWork,
        beginFailedWork: beginFailedWork
    };
},
    reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
    popContextProvider$2 = ReactFiberContext.popContextProvider,
    popTopLevelContextObject$1 = ReactFiberContext.popTopLevelContextObject,
    IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$8 = ReactTypeOfWork.ClassComponent,
    HostRoot$6 = ReactTypeOfWork.HostRoot,
    HostComponent$6 = ReactTypeOfWork.HostComponent,
    HostText$4 = ReactTypeOfWork.HostText,
    HostPortal$5 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$3 = ReactTypeOfWork.YieldComponent,
    Fragment$3 = ReactTypeOfWork.Fragment,
    Placement$4 = ReactTypeOfSideEffect.Placement,
    Ref$2 = ReactTypeOfSideEffect.Ref,
    Update$2 = ReactTypeOfSideEffect.Update,
    OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
    ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
    var createInstance = config.createInstance,
        createTextInstance = config.createTextInstance,
        appendInitialChild = config.appendInitialChild,
        finalizeInitialChildren = config.finalizeInitialChildren,
        prepareUpdate = config.prepareUpdate,
        getRootHostContainer = hostContext.getRootHostContainer,
        popHostContext = hostContext.popHostContext,
        getHostContext = hostContext.getHostContext,
        popHostContainer = hostContext.popHostContainer,
        prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
        popHydrationState = hydrationContext.popHydrationState;
    function markUpdate(workInProgress) {
        workInProgress.effectTag |= Update$2;
    }
    function markRef(workInProgress) {
        workInProgress.effectTag |= Ref$2;
    }
    function appendAllYields(yields, workInProgress) {
        var node = workInProgress.stateNode;
        for (node && (node.return = workInProgress); null !== node;) {
            if (node.tag === HostComponent$6 || node.tag === HostText$4 || node.tag === HostPortal$5) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$3) yields.push(node.type);else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function moveCoroutineToHandlerPhase(current, workInProgress) {
        var coroutine = workInProgress.memoizedProps;
        invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
        var yields = [];
        appendAllYields(yields, workInProgress);
        var fn = coroutine.handler,
            props = coroutine.props,
            nextChildren = fn(props, yields),
            currentFirstChild = null !== current ? current.child : null,
            priority = workInProgress.pendingWorkPriority;
        return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
    }
    function appendAllChildren(parent, workInProgress) {
        for (var node = workInProgress.child; null !== node;) {
            if (node.tag === HostComponent$6 || node.tag === HostText$4) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$5) ;else if (null !== node.child) {
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node = node.sibling;
        }
    }
    function completeWork(current, workInProgress, renderPriority) {
        var newProps = workInProgress.pendingProps;
        switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
            case FunctionalComponent$3:
                return null;

            case ClassComponent$8:
                return popContextProvider$2(workInProgress), null;

            case HostRoot$6:
                popHostContainer(workInProgress), popTopLevelContextObject$1(workInProgress);
                var fiberRoot = workInProgress.stateNode;
                return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

            case HostComponent$6:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer(),
                    type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) {
                    var oldProps = current.memoizedProps,
                        instance = workInProgress.stateNode,
                        currentHostContext = getHostContext(),
                        updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                    workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                } else {
                    if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _currentHostContext = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext) && markUpdate(workInProgress);else {
                        var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                        appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                    }
                    null !== workInProgress.ref && markRef(workInProgress);
                }
                return null;

            case HostText$4:
                var newText = newProps;
                if (current && null != workInProgress.stateNode) {
                    current.memoizedProps !== newText && markUpdate(workInProgress);
                } else {
                    if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _rootContainerInstance = getRootHostContainer(),
                        _currentHostContext2 = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                }
                return null;

            case CoroutineComponent$3:
                return moveCoroutineToHandlerPhase(current, workInProgress);

            case CoroutineHandlerPhase$1:
                return workInProgress.tag = CoroutineComponent$3, null;

            case YieldComponent$3:
            case Fragment$3:
                return null;

            case HostPortal$5:
                return markUpdate(workInProgress), popHostContainer(workInProgress), null;

            case IndeterminateComponent$3:
                invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    return {
        completeWork: completeWork
    };
},
    onCommitFiberRoot = null,
    onCommitFiberUnmount = null,
    hasLoggedError = !1;

function catchErrors(fn) {
    return function (arg) {
        try {
            return fn(arg);
        } catch (err) {
            1 || hasLoggedError || (hasLoggedError = !0);
        }
    };
}

function injectInternals$1(internals) {
    if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!hook.supportsFiber) return !0;
    try {
        var rendererID = hook.inject(internals);
        onCommitFiberRoot = catchErrors(function (root) {
            return hook.onCommitFiberRoot(rendererID, root);
        }), onCommitFiberUnmount = catchErrors(function (fiber) {
            return hook.onCommitFiberUnmount(rendererID, fiber);
        });
    } catch (err) {}
    return !0;
}

function onCommitRoot$1(root) {
    "function" == typeof onCommitFiberRoot && onCommitFiberRoot(root);
}

function onCommitUnmount$1(fiber) {
    "function" == typeof onCommitFiberUnmount && onCommitFiberUnmount(fiber);
}

var injectInternals_1 = injectInternals$1,
    onCommitRoot_1 = onCommitRoot$1,
    onCommitUnmount_1 = onCommitUnmount$1,
    ReactFiberDevToolsHook = {
    injectInternals: injectInternals_1,
    onCommitRoot: onCommitRoot_1,
    onCommitUnmount: onCommitUnmount_1
},
    ClassComponent$9 = ReactTypeOfWork.ClassComponent,
    HostRoot$7 = ReactTypeOfWork.HostRoot,
    HostComponent$7 = ReactTypeOfWork.HostComponent,
    HostText$5 = ReactTypeOfWork.HostText,
    HostPortal$6 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
    commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
    onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
    Placement$5 = ReactTypeOfSideEffect.Placement,
    Update$3 = ReactTypeOfSideEffect.Update,
    Callback$1 = ReactTypeOfSideEffect.Callback,
    ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
    ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
    var commitMount = config.commitMount,
        commitUpdate = config.commitUpdate,
        resetTextContent = config.resetTextContent,
        commitTextUpdate = config.commitTextUpdate,
        appendChild = config.appendChild,
        appendChildToContainer = config.appendChildToContainer,
        insertBefore = config.insertBefore,
        insertInContainerBefore = config.insertInContainerBefore,
        removeChild = config.removeChild,
        removeChildFromContainer = config.removeChildFromContainer,
        getPublicInstance = config.getPublicInstance;
    function safelyCallComponentWillUnmount(current, instance) {
        try {
            instance.props = current.memoizedProps, instance.state = current.memoizedState, instance.componentWillUnmount();
        } catch (unmountError) {
            captureError(current, unmountError);
        }
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (null !== ref) {
            try {
                ref(null);
            } catch (refError) {
                captureError(current, refError);
            }
        }
    }
    function getHostParentFiber(fiber) {
        for (var parent = fiber.return; null !== parent;) {
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent$7 || fiber.tag === HostRoot$7 || fiber.tag === HostPortal$6;
    }
    function getHostSibling(fiber) {
        var node = fiber;
        siblings: for (; !0;) {
            for (; null === node.sibling;) {
                if (null === node.return || isHostParent(node.return)) return null;
                node = node.return;
            }
            for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$7 && node.tag !== HostText$5;) {
                if (node.effectTag & Placement$5) continue siblings;
                if (null === node.child || node.tag === HostPortal$6) continue siblings;
                node.child.return = node, node = node.child;
            }
            if (!(node.effectTag & Placement$5)) return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork),
            parent = void 0,
            isContainer = void 0;
        switch (parentFiber.tag) {
            case HostComponent$7:
                parent = parentFiber.stateNode, isContainer = !1;
                break;

            case HostRoot$7:
            case HostPortal$6:
                parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                break;

            default:
                invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
        for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
            if (node.tag === HostComponent$7 || node.tag === HostText$5) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$6) ;else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitNestedUnmounts(root) {
        for (var node = root; !0;) {
            if (commitUnmount(node), null === node.child || node.tag === HostPortal$6) {
                if (node === root) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === root) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            } else node.child.return = node, node = node.child;
        }
    }
    function unmountHostComponents(current) {
        for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: for (; !0;) {
                    switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                        case HostComponent$7:
                            currentParent = parent.stateNode, currentParentIsContainer = !1;
                            break findParent;

                        case HostRoot$7:
                        case HostPortal$6:
                            currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = !0;
            }
            if (node.tag === HostComponent$7 || node.tag === HostText$5) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$6) {
                if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
            } else if (commitUnmount(node), null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === current) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === current) return;
                node = node.return, node.tag === HostPortal$6 && (currentParentIsValid = !1);
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitDeletion(current) {
        unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
    }
    function commitUnmount(current) {
        switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
            case ClassComponent$9:
                safelyDetachRef(current);
                var instance = current.stateNode;
                return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

            case HostComponent$7:
                return void safelyDetachRef(current);

            case CoroutineComponent$4:
                return void commitNestedUnmounts(current.stateNode);

            case HostPortal$6:
                return void unmountHostComponents(current);
        }
    }
    function commitWork(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                return;

            case HostComponent$7:
                var instance = finishedWork.stateNode;
                if (null != instance) {
                    var newProps = finishedWork.memoizedProps,
                        oldProps = null !== current ? current.memoizedProps : newProps,
                        type = finishedWork.type,
                        updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                }
                return;

            case HostText$5:
                invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode,
                    newText = finishedWork.memoizedProps,
                    oldText = null !== current ? current.memoizedProps : newText;
                return void commitTextUpdate(textInstance, oldText, newText);

            case HostRoot$7:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitLifeCycles(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update$3) if (null === current) instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidMount();else {
                    var prevProps = current.memoizedProps,
                        prevState = current.memoizedState;
                    instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidUpdate(prevProps, prevState);
                }
                return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

            case HostRoot$7:
                var updateQueue = finishedWork.updateQueue;
                if (null !== updateQueue) {
                    var _instance = finishedWork.child && finishedWork.child.stateNode;
                    commitCallbacks$1(finishedWork, updateQueue, _instance);
                }
                return;

            case HostComponent$7:
                var _instance2 = finishedWork.stateNode;
                if (null === current && finishedWork.effectTag & Update$3) {
                    var type = finishedWork.type,
                        props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                }
                return;

            case HostText$5:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            var instance = finishedWork.stateNode;
            switch (finishedWork.tag) {
                case HostComponent$7:
                    ref(getPublicInstance(instance));
                    break;

                default:
                    ref(instance);
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        null !== currentRef && currentRef(null);
    }
    return {
        commitPlacement: commitPlacement,
        commitDeletion: commitDeletion,
        commitWork: commitWork,
        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
    };
},
    createCursor$2 = ReactFiberStack.createCursor,
    pop$2 = ReactFiberStack.pop,
    push$2 = ReactFiberStack.push,
    NO_CONTEXT = {},
    ReactFiberHostContext = function ReactFiberHostContext(config) {
    var getChildHostContext = config.getChildHostContext,
        getRootHostContext = config.getRootHostContext,
        contextStackCursor = createCursor$2(NO_CONTEXT),
        contextFiberStackCursor = createCursor$2(NO_CONTEXT),
        rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
    function requiredContext(c) {
        return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
    }
    function getRootHostContainer() {
        return requiredContext(rootInstanceStackCursor.current);
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push$2(rootInstanceStackCursor, nextRootInstance, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance);
        push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current),
            context = requiredContext(contextStackCursor.current),
            nextContext = getChildHostContext(context, fiber.type, rootInstance);
        context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
    }
    function resetHostContainer() {
        contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
    }
    return {
        getHostContext: getHostContext,
        getRootHostContainer: getRootHostContainer,
        popHostContainer: popHostContainer,
        popHostContext: popHostContext,
        pushHostContainer: pushHostContainer,
        pushHostContext: pushHostContext,
        resetHostContainer: resetHostContainer
    };
},
    HostComponent$8 = ReactTypeOfWork.HostComponent,
    HostText$6 = ReactTypeOfWork.HostText,
    HostRoot$8 = ReactTypeOfWork.HostRoot,
    Deletion$2 = ReactTypeOfSideEffect.Deletion,
    Placement$6 = ReactTypeOfSideEffect.Placement,
    createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
    ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
    var shouldSetTextContent = config.shouldSetTextContent,
        canHydrateInstance = config.canHydrateInstance,
        canHydrateTextInstance = config.canHydrateTextInstance,
        getNextHydratableSibling = config.getNextHydratableSibling,
        getFirstHydratableChild = config.getFirstHydratableChild,
        hydrateInstance = config.hydrateInstance,
        hydrateTextInstance = config.hydrateTextInstance,
        didNotHydrateInstance = config.didNotHydrateInstance,
        didNotFindHydratableInstance = config.didNotFindHydratableInstance,
        didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
    if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
        enterHydrationState: function enterHydrationState() {
            return !1;
        },
        resetHydrationState: function resetHydrationState() {},
        tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
        prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
            invariant(!1, "Expected prepareToHydrateHostInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
        },
        prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
            invariant(!1, "Expected prepareToHydrateHostTextInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
        },
        popHydrationState: function popHydrationState(fiber) {
            return !1;
        }
    };
    var hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = !1;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        var childToDelete = createFiberFromHostInstanceForDeletion$1();
        childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.effectTag |= Placement$6;
    }
    function canHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case HostComponent$8:
                var type = fiber.type,
                    props = fiber.pendingProps;
                return canHydrateInstance(nextInstance, type, props);

            case HostText$6:
                var text = fiber.pendingProps;
                return canHydrateTextInstance(nextInstance, text);

            default:
                return !1;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
            if (!canHydrate(fiber, nextInstance)) {
                if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
            }
            fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode,
            updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
        return fiber.updateQueue = updatePayload, null !== updatePayload;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
    }
    function popToNextHostParent(fiber) {
        for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$8 && parent.tag !== HostRoot$8;) {
            parent = parent.return;
        }hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var type = fiber.type;
        if (fiber.tag !== HostComponent$8 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
            deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
        }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
    }
    function resetHydrationState() {
        hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
    }
    return {
        enterHydrationState: enterHydrationState,
        resetHydrationState: resetHydrationState,
        tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
        prepareToHydrateHostInstance: prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
        popHydrationState: popHydrationState
    };
},
    popContextProvider$1 = ReactFiberContext.popContextProvider,
    reset$1 = ReactFiberStack.reset,
    getStackAddendumByWorkInProgressFiber = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
    logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
    createWorkInProgress$1 = ReactFiber.createWorkInProgress,
    largerPriority$1 = ReactFiber.largerPriority,
    onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
    NoWork$2 = ReactPriorityLevel.NoWork,
    SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
    TaskPriority$1 = ReactPriorityLevel.TaskPriority,
    HighPriority = ReactPriorityLevel.HighPriority,
    LowPriority = ReactPriorityLevel.LowPriority,
    OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
    AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
    PerformedWork = ReactTypeOfSideEffect.PerformedWork,
    Placement$1 = ReactTypeOfSideEffect.Placement,
    Update = ReactTypeOfSideEffect.Update,
    PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
    Deletion = ReactTypeOfSideEffect.Deletion,
    ContentReset = ReactTypeOfSideEffect.ContentReset,
    Callback = ReactTypeOfSideEffect.Callback,
    Err = ReactTypeOfSideEffect.Err,
    Ref = ReactTypeOfSideEffect.Ref,
    HostRoot$4 = ReactTypeOfWork.HostRoot,
    HostComponent$3 = ReactTypeOfWork.HostComponent,
    HostPortal$2 = ReactTypeOfWork.HostPortal,
    ClassComponent$4 = ReactTypeOfWork.ClassComponent,
    getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
    _require14 = ReactFiberContext,
    resetContext$1 = _require14.resetContext,
    ReactFiberInstrumentation$1,
    timeHeuristicForUnitOfWork = 1,
    ReactFiberScheduler = function ReactFiberScheduler(config) {
    var hostContext = ReactFiberHostContext(config),
        hydrationContext = ReactFiberHydrationContext(config),
        popHostContainer = hostContext.popHostContainer,
        popHostContext = hostContext.popHostContext,
        resetHostContainer = hostContext.resetHostContainer,
        _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
        beginWork = _ReactFiberBeginWork.beginWork,
        beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
        _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
        completeWork = _ReactFiberCompleteWo.completeWork,
        _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
        commitPlacement = _ReactFiberCommitWork.commitPlacement,
        commitDeletion = _ReactFiberCommitWork.commitDeletion,
        commitWork = _ReactFiberCommitWork.commitWork,
        commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
        commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
        commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
        scheduleDeferredCallback = config.scheduleDeferredCallback,
        useSyncScheduling = config.useSyncScheduling,
        prepareForCommit = config.prepareForCommit,
        resetAfterCommit = config.resetAfterCommit,
        priorityContext = NoWork$2,
        isPerformingWork = !1,
        deadlineHasExpired = !1,
        isBatchingUpdates = !1,
        isUnbatchingUpdates = !1,
        nextUnitOfWork = null,
        nextPriorityLevel = NoWork$2,
        nextEffect = null,
        pendingCommit = null,
        nextScheduledRoot = null,
        lastScheduledRoot = null,
        isCallbackScheduled = !1,
        capturedErrors = null,
        failedBoundaries = null,
        commitPhaseBoundaries = null,
        firstUncaughtError = null,
        didFatal = !1,
        isCommitting = !1,
        isUnmounting = !1,
        NESTED_UPDATE_LIMIT = 1e3,
        nestedUpdateCount = 0,
        nextRenderedTree = null;
    function resetContextStack() {
        reset$1(), resetContext$1(), resetHostContainer();
    }
    function resetNextUnitOfWork() {
        for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
            nextScheduledRoot.isScheduled = !1;
            var next = nextScheduledRoot.nextScheduledRoot;
            if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
            nextScheduledRoot = next;
        }
        for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
            root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
        }if (null !== highestPriorityRoot) return nextPriorityLevel = highestPriorityLevel, resetContextStack(), nextUnitOfWork = createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel), void (highestPriorityRoot !== nextRenderedTree && (nestedUpdateCount = 0, nextRenderedTree = highestPriorityRoot));
        nextPriorityLevel = NoWork$2, nextUnitOfWork = null, nextRenderedTree = null;
    }
    function commitAllHostEffects() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                var current = nextEffect.alternate;
                null !== current && commitDetachRef(current);
            }
            switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                case Placement$1:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    break;

                case PlacementAndUpdate:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;

                case Update:
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;

                case Deletion:
                    isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
            }
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitAllLifeCycles() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & (Update | Callback)) {
                var current = nextEffect.alternate;
                commitLifeCycles(current, nextEffect);
            }
            effectTag & Ref && commitAttachRef(nextEffect), effectTag & Err && commitErrorHandling(nextEffect);
            var next = nextEffect.nextEffect;
            nextEffect.nextEffect = null, nextEffect = next;
        }
    }
    function commitAllWork(finishedWork) {
        isCommitting = !0, pendingCommit = null;
        var root = finishedWork.stateNode;
        invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), nextPriorityLevel !== SynchronousPriority$1 && nextPriorityLevel !== TaskPriority$1 || nestedUpdateCount++, ReactCurrentOwner$1.current = null;
        var firstEffect = void 0;
        for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect; null !== nextEffect;) {
            var didError = !1,
                _error = void 0;
            try {
                commitAllHostEffects();
            } catch (e) {
                didError = !0, _error = e;
            }
            didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        for (resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect; null !== nextEffect;) {
            var _didError = !1,
                _error2 = void 0;
            try {
                commitAllLifeCycles();
            } catch (e) {
                _didError = !0, _error2 = e;
            }
            _didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        isCommitting = !1, "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), resetNextUnitOfWork();
    }
    function resetWorkPriority(workInProgress, renderPriority) {
        if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
            for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
            }workInProgress.pendingWorkPriority = newPriority;
        }
    }
    function completeUnitOfWork(workInProgress) {
        for (; !0;) {
            var current = workInProgress.alternate,
                next = completeWork(current, workInProgress, nextPriorityLevel),
                returnFiber = workInProgress.return,
                siblingFiber = workInProgress.sibling;
            if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
            if (null !== returnFiber) {
                null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
            }
            if (!1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
            if (null === returnFiber) return pendingCommit = workInProgress, null;
            workInProgress = returnFiber;
        }
        return null;
    }
    function performUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function performFailedUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginFailedWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function performDeferredWork(deadline) {
        performWork(OffscreenPriority, deadline);
    }
    function handleCommitPhaseErrors() {
        if (null !== capturedErrors && capturedErrors.size > 0 && nextPriorityLevel === TaskPriority$1) for (; null !== nextUnitOfWork && (null !== (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) || (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, null !== capturedErrors && 0 !== capturedErrors.size && nextPriorityLevel === TaskPriority$1));) {}
    }
    function workLoop(minPriorityLevel, deadline) {
        if (null !== pendingCommit ? (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), handleCommitPhaseErrors()) : null === nextUnitOfWork && resetNextUnitOfWork(), !(nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel)) {
            priorityContext = nextPriorityLevel;
            loop: do {
                if (nextPriorityLevel <= TaskPriority$1) for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {} else if (null !== deadline) for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
                    if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                        if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork))) if (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                            if (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                        } else deadlineHasExpired = !0;
                    } else deadlineHasExpired = !0;
                }switch (nextPriorityLevel) {
                    case SynchronousPriority$1:
                    case TaskPriority$1:
                        if (nextPriorityLevel <= minPriorityLevel) continue loop;
                        break loop;

                    case HighPriority:
                    case LowPriority:
                    case OffscreenPriority:
                        if (null === deadline) break loop;
                        if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue loop;
                        break loop;

                    case NoWork$2:
                        break loop;

                    default:
                        invariant(!1, "Switch statement should be exhuastive. " + "This error is likely caused by a bug in React. Please file an issue.");
                }
            } while (!0);
        }
    }
    function performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline) {
        unwindContexts(failedWork, boundary), nextUnitOfWork = performFailedUnitOfWork(boundary), workLoop(minPriorityLevel, deadline);
    }
    function performWork(minPriorityLevel, deadline) {
        invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
        var previousPriorityContext = priorityContext,
            didError = !1,
            error = null;
        try {
            workLoop(minPriorityLevel, deadline);
        } catch (e) {
            didError = !0, error = e;
        }
        for (; didError;) {
            if (didFatal) {
                firstUncaughtError = error;
                break;
            }
            var failedWork = nextUnitOfWork;
            if (null !== failedWork) {
                var boundary = captureError(failedWork, error);
                if (invariant(null !== boundary, "Should have found an error boundary. This error is likely " + "caused by a bug in React. Please file an issue."), !didFatal) {
                    didError = !1, error = null;
                    try {
                        performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline), error = null;
                    } catch (e) {
                        didError = !0, error = e;
                        continue;
                    }
                    break;
                }
            } else didFatal = !0;
        }
        priorityContext = previousPriorityContext, null !== deadline && (isCallbackScheduled = !1), nextPriorityLevel > TaskPriority$1 && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
        var errorToThrow = firstUncaughtError;
        if (isPerformingWork = !1, deadlineHasExpired = !1, didFatal = !1, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, nextRenderedTree = null, nestedUpdateCount = 0, null !== errorToThrow) throw errorToThrow;
    }
    function captureError(failedWork, error) {
        ReactCurrentOwner$1.current = null;
        var boundary = null,
            errorBoundaryFound = !1,
            willRetry = !1,
            errorBoundaryName = null;
        if (failedWork.tag === HostRoot$4) boundary = failedWork, isFailedBoundary(failedWork) && (didFatal = !0);else for (var node = failedWork.return; null !== node && null === boundary;) {
            if (node.tag === ClassComponent$4) {
                var instance = node.stateNode;
                "function" == typeof instance.componentDidCatch && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
            } else node.tag === HostRoot$4 && (boundary = node);
            if (isFailedBoundary(node)) {
                if (isUnmounting) return null;
                if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                boundary = null, willRetry = !1;
            }
            node = node.return;
        }
        if (null !== boundary) {
            null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
            var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork),
                _componentName = getComponentName_1(failedWork);
            null === capturedErrors && (capturedErrors = new Map());
            var capturedError = {
                componentName: _componentName,
                componentStack: _componentStack,
                error: error,
                errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                errorBoundaryFound: errorBoundaryFound,
                errorBoundaryName: errorBoundaryName,
                willRetry: willRetry
            };
            capturedErrors.set(boundary, capturedError);
            try {
                logCapturedError$1(capturedError);
            } catch (e) {
                console.error(e);
            }
            return isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
        }
        return null === firstUncaughtError && (firstUncaughtError = error), null;
    }
    function hasCapturedError(fiber) {
        return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
    }
    function isFailedBoundary(fiber) {
        return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
    }
    function commitErrorHandling(effectfulFiber) {
        var capturedError = void 0;
        switch (null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue."), effectfulFiber.tag) {
            case ClassComponent$4:
                var instance = effectfulFiber.stateNode,
                    info = {
                    componentStack: capturedError.componentStack
                };
                return void instance.componentDidCatch(capturedError.error, info);

            case HostRoot$4:
                return void (null === firstUncaughtError && (firstUncaughtError = capturedError.error));

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function unwindContexts(from, to) {
        for (var node = from; null !== node;) {
            switch (node.tag) {
                case ClassComponent$4:
                    popContextProvider$1(node);
                    break;

                case HostComponent$3:
                    popHostContext(node);
                    break;

                case HostRoot$4:
                case HostPortal$2:
                    popHostContainer(node);
            }
            if (node === to || node.alternate === to) break;
            node = node.return;
        }
    }
    function scheduleRoot(root, priorityLevel) {
        priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
    }
    function scheduleUpdate(fiber, priorityLevel) {
        return scheduleUpdateImpl(fiber, priorityLevel, !1);
    }
    function scheduleUpdateImpl(fiber, priorityLevel, isErrorRecovery) {
        nestedUpdateCount > NESTED_UPDATE_LIMIT && (didFatal = !0, invariant(!1, "Maximum update depth exceeded. This can happen when a " + "component repeatedly calls setState inside componentWillUpdate or " + "componentDidUpdate. React limits the number of nested updates to " + "prevent infinite loops.")), !isPerformingWork && priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null);
        for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
            if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                if (node.tag !== HostRoot$4) return;
                if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                    case SynchronousPriority$1:
                        isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                        break;

                    case TaskPriority$1:
                        invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                        break;

                    default:
                        isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                }
            }
            node = node.return;
        }
    }
    function getPriorityContext(fiber, forceAsync) {
        var priorityLevel = priorityContext;
        return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
    }
    function scheduleErrorRecovery(fiber) {
        scheduleUpdateImpl(fiber, TaskPriority$1, !0);
    }
    function batchedUpdates(fn, a) {
        var previousIsBatchingUpdates = isBatchingUpdates;
        isBatchingUpdates = !0;
        try {
            return fn(a);
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
        }
    }
    function unbatchedUpdates(fn) {
        var previousIsUnbatchingUpdates = isUnbatchingUpdates,
            previousIsBatchingUpdates = isBatchingUpdates;
        isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
        try {
            return fn();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
        }
    }
    function flushSync(batch) {
        var previousIsBatchingUpdates = isBatchingUpdates,
            previousPriorityContext = priorityContext;
        isBatchingUpdates = !0, priorityContext = SynchronousPriority$1;
        try {
            return batch();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, priorityContext = previousPriorityContext, invariant(!isPerformingWork, "flushSync was called from inside a lifecycle method. It cannot be " + "called when React is already rendering."), performWork(TaskPriority$1, null);
        }
    }
    function deferredUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = LowPriority;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    return {
        scheduleUpdate: scheduleUpdate,
        getPriorityContext: getPriorityContext,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        flushSync: flushSync,
        deferredUpdates: deferredUpdates
    };
},
    addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
    findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
    isContextProvider = ReactFiberContext.isContextProvider,
    processChildContext = ReactFiberContext.processChildContext,
    createFiberRoot = ReactFiberRoot.createFiberRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber,
    findCurrentHostFiberWithNoPortals = ReactFiberTreeReflection.findCurrentHostFiberWithNoPortals;

function getContextForSubtree(parentComponent) {
    if (!parentComponent) return emptyObject;
    var fiber = ReactInstanceMap_1.get(parentComponent),
        parentContext = findCurrentUnmaskedContext(fiber);
    return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

var ReactFiberReconciler = function ReactFiberReconciler(config) {
    var getPublicInstance = config.getPublicInstance,
        _ReactFiberScheduler = ReactFiberScheduler(config),
        scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
        getPriorityContext = _ReactFiberScheduler.getPriorityContext,
        batchedUpdates = _ReactFiberScheduler.batchedUpdates,
        unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
        flushSync = _ReactFiberScheduler.flushSync,
        deferredUpdates = _ReactFiberScheduler.deferredUpdates;
    function scheduleTopLevelUpdate(current, element, callback) {
        var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && null != element.type.prototype && !0 === element.type.prototype.unstable_isAsyncReactComponent,
            priorityLevel = getPriorityContext(current, forceAsync),
            nextState = {
            element: element
        };
        callback = void 0 === callback ? null : callback, addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
    }
    return {
        createContainer: function createContainer(containerInfo) {
            return createFiberRoot(containerInfo);
        },
        updateContainer: function updateContainer(element, container, parentComponent, callback) {
            var current = container.current,
                context = getContextForSubtree(parentComponent);
            null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
        },
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        deferredUpdates: deferredUpdates,
        flushSync: flushSync,
        getPublicRootInstance: function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) return null;
            switch (containerFiber.child.tag) {
                case HostComponent:
                    return getPublicInstance(containerFiber.child.stateNode);

                default:
                    return containerFiber.child.stateNode;
            }
        },
        findHostInstance: function findHostInstance(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        },
        findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        }
    };
};

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps$1(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps$1
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
        _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
    }
    return ReactNativeFiberHostComponent.prototype.blur = function () {
        TextInputState.blurTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.focus = function () {
        TextInputState.focusTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
        UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
        null != updatePayload && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
    }, ReactNativeFiberHostComponent;
}(),
    ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    viewConfigCallbacks = new Map(),
    viewConfigs = new Map(),
    ReactNativeViewConfigRegistry = {
    register: function register(name, callback) {
        return invariant(!viewConfigCallbacks.has(name), "Tried to register two views with the same name %s", name), viewConfigCallbacks.set(name, callback), name;
    },
    get: function get(name) {
        var viewConfig = void 0;
        if (viewConfigs.has(name)) viewConfig = viewConfigs.get(name);else {
            var callback = viewConfigCallbacks.get(name);
            invariant("function" == typeof callback, "View config not found for name %s", name), viewConfigCallbacks.set(name, null), viewConfig = callback(), viewConfigs.set(name, viewConfig);
        }
        return invariant(viewConfig, "View config not found for name %s", name), viewConfig;
    }
},
    ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
    precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
    uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
    updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;

function recursivelyUncacheFiberNode(node) {
    "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
}

var NativeRenderer = ReactFiberReconciler({
    appendChild: function appendChild(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag,
            children = parentInstance._children,
            index = children.indexOf(child);
        index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
    },
    appendChildToContainer: function appendChildToContainer(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag;
        UIManager.setChildren(parentInstance, [childTag]);
    },
    appendInitialChild: function appendInitialChild(parentInstance, child) {
        parentInstance._children.push(child);
    },
    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
        UIManager.updateView(textInstance, "RCTRawText", {
            text: newText
        });
    },
    commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
    commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
        var viewConfig = instance.viewConfig;
        updateFiberProps$1(instance._nativeTag, newProps);
        var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
        null != updatePayload && UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    },
    createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag(),
            viewConfig = ReactNativeViewConfigRegistry_1.get(type),
            updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
        UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
        var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
        return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
    },
    createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
            text: text
        }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
    },
    finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
        if (0 === parentInstance._children.length) return !1;
        var nativeTags = parentInstance._children.map(function (child) {
            return "number" == typeof child ? child : child._nativeTag;
        });
        return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
    },
    getRootHostContext: function getRootHostContext() {
        return emptyObject;
    },
    getChildHostContext: function getChildHostContext() {
        return emptyObject;
    },
    getPublicInstance: function getPublicInstance(instance) {
        return instance;
    },
    insertBefore: function insertBefore(parentInstance, child, beforeChild) {
        var children = parentInstance._children,
            index = children.indexOf(child);
        if (index >= 0) {
            children.splice(index, 1);
            var beforeChildIndex = children.indexOf(beforeChild);
            children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
        } else {
            var _beforeChildIndex = children.indexOf(beforeChild);
            children.splice(_beforeChildIndex, 0, child);
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
        }
    },
    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
        invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
    },
    prepareForCommit: function prepareForCommit() {},
    prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
        return emptyObject;
    },
    removeChild: function removeChild(parentInstance, child) {
        recursivelyUncacheFiberNode(child);
        var children = parentInstance._children,
            index = children.indexOf(child);
        children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
    },
    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
        recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
    },
    resetAfterCommit: function resetAfterCommit() {},
    resetTextContent: function resetTextContent(instance) {},
    shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
        return !1;
    },
    scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
    shouldSetTextContent: function shouldSetTextContent(type, props) {
        return !1;
    },
    useSyncScheduling: !0
}),
    ReactNativeFiberRenderer = NativeRenderer,
    getInspectorDataForViewTag = void 0;

getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(!1, "getInspectorDataForViewTag() is not available in production");
};

var ReactNativeFiberInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    ReactVersion = "16.0.0";

function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? ReactNativeFiberRenderer.findHostInstance(internalInstance) : component || (invariant("object" == typeof component && "_nativeTag" in component || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    findNumericNodeHandle = function findNumericNodeHandle(componentOrHandle) {
    var instance = findNodeHandle_1(componentOrHandle);
    return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
},
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: null,
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener,
            stateNode = inst.stateNode;
        if (!stateNode) return null;
        var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
        return props ? (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props) ? null : (invariant(!listener || "function" == typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener), listener)) : null;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    HostComponent$10 = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    do {
        inst = inst.return;
    } while (inst && inst.tag !== HostComponent$10);
    return inst || null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    EVENT_POOL_SIZE = 10,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            this[propName] = null;
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, addEventPoolingTo(Class);
}, addEventPoolingTo(SyntheticEvent);

var SyntheticEvent_1 = SyntheticEvent;

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    var EventConstructor = this;
    if (EventConstructor.eventPool.length) {
        var instance = EventConstructor.eventPool.pop();
        return EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst), instance;
    }
    return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
    var EventConstructor = this;
    invariant(event instanceof EventConstructor, "Trying to release an event instance  into a pool of a different type."), event.destructor(), EventConstructor.eventPool.length < EVENT_POOL_SIZE && EventConstructor.eventPool.push(event);
}

function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [], EventConstructor.getPooled = getPooledEvent, EventConstructor.release = releasePooledEvent;
}

var customBubblingEventTypes = {},
    customDirectEventTypes = {},
    ReactNativeBridgeEventPlugin = {
    eventTypes: {},
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
        var event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    },
    processEventTypes: function processEventTypes(viewConfig) {
        var bubblingEventTypes = viewConfig.bubblingEventTypes,
            directEventTypes = viewConfig.directEventTypes;
        if (null != bubblingEventTypes) for (var _topLevelType in bubblingEventTypes) {
            null == customBubblingEventTypes[_topLevelType] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType] = customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType]);
        }if (null != directEventTypes) for (var _topLevelType2 in directEventTypes) {
            null == customDirectEventTypes[_topLevelType2] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType2] = customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2]);
        }
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt || (rootNodeID = target)), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) for (var i = 0; i < touchBank.length; i++) {
            var touchTrackToCheck = touchBank[i];
            if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                touchHistory.indexOfSingleActiveTouch = i;
                break;
            }
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin_1,
    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
});

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        var maybeInstance = void 0;
        try {
            maybeInstance = findNodeHandle_1(this);
        } catch (error) {}
        if (null != maybeInstance) {
            var viewConfig = maybeInstance.viewConfig,
                updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        }
    }, ReactNativeComponent;
}(react.Component),
    ReactNativeComponent_1 = ReactNativeComponent,
    mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        var maybeInstance = void 0;
        try {
            maybeInstance = findNodeHandle_1(this);
        } catch (error) {}
        if (null != maybeInstance) {
            var viewConfig = maybeInstance.viewConfig,
                updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        }
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }
},
    NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath,
    createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
    return ReactNativeViewConfigRegistry_1.register(name, callback);
},
    createReactNativeComponentClass_1 = createReactNativeComponentClass;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot,
    injectInternals = ReactFiberDevToolsHook.injectInternals;

ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);

var roots = new Map();

ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);

var ReactNativeFiber = {
    NativeComponent: ReactNativeComponent_1,
    findNodeHandle: findNumericNodeHandle,
    render: function render(element, containerTag, callback) {
        var root = roots.get(containerTag);
        return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        var root = roots.get(containerTag);
        root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
            roots.delete(containerTag);
        });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
        var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        return ReactPortal.createPortal(children, containerTag, null, key);
    },
    unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
    flushSync: ReactNativeFiberRenderer.flushSync,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass_1,
        takeSnapshot: takeSnapshot_1
    }
};

injectInternals({
    findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
    findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
    getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
    bundleType: 0,
    version: ReactVersion,
    rendererPackageName: "react-native"
});

var ReactNativeFiberEntry = ReactNativeFiber;

module.exports = ReactNativeFiberEntry;
}, 127, null, "ReactNativeFiber-prod");
__d(/* ReactDebugTool */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDebugTool;
}, 128, null, "ReactDebugTool");
__d(/* ActivityIndicator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var ProgressBarAndroid = require(132                 ); // 132 = ProgressBarAndroid
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var GRAY = '#999999';

var ActivityIndicator = createReactClass({
  displayName: 'ActivityIndicator',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    animating: PropTypes.bool,

    color: ColorPropType,

    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'large']), PropTypes.number]),

    hidesWhenStopped: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: Platform.OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small'
    };
  },
  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);

    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;
    }

    var nativeProps = babelHelpers.extends({}, props, {
      style: sizeStyle,
      styleAttr: 'Normal',
      indeterminate: true
    });

    return React.createElement(
      View,
      { onLayout: onLayout, style: [styles.container, style], __source: {
          fileName: _jsxFileName,
          lineNumber: 144
        }
      },
      Platform.OS === 'ios' ? React.createElement(RCTActivityIndicator, babelHelpers.extends({}, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 146
        }
      })) : React.createElement(ProgressBarAndroid, babelHelpers.extends({}, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 148
        }
      }))
    );
  }
});

var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});

if (Platform.OS === 'ios') {
  var RCTActivityIndicator = requireNativeComponent('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
}

module.exports = ActivityIndicator;
}, 129, null, "ActivityIndicator");
__d(/* ColorPropType */function(global, require, module, exports) {
'use strict';

var normalizeColor = require(119             ); // 119 = normalizeColor

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];
  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }
    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + 'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);

module.exports = ColorPropType;
}, 130, null, "ColorPropType");
__d(/* NativeMethodsMixin */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var NativeMethodsMixin = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;


module.exports = NativeMethodsMixin;
}, 131, null, "NativeMethodsMixin");
__d(/* ProgressBarAndroid */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 132, null, "ProgressBarAndroid");
__d(/* UnimplementedView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/UnimplementedViews/UnimplementedView.js';
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet

var UnimplementedView = function (_React$Component) {
  babelHelpers.inherits(UnimplementedView, _React$Component);

  function UnimplementedView() {
    babelHelpers.classCallCheck(this, UnimplementedView);
    return babelHelpers.possibleConstructorReturn(this, (UnimplementedView.__proto__ || Object.getPrototypeOf(UnimplementedView)).apply(this, arguments));
  }

  babelHelpers.createClass(UnimplementedView, [{
    key: 'setNativeProps',
    value: function setNativeProps() {}
  }, {
    key: 'render',
    value: function render() {
      var View = require(156   ); // 156 = View
      return React.createElement(
        View,
        { style: [styles.unimplementedView, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        },
        this.props.children
      );
    }
  }]);
  return UnimplementedView;
}(React.Component);

var styles = StyleSheet.create({
  unimplementedView: __DEV__ ? {
    alignSelf: 'flex-start',
    borderColor: 'red',
    borderWidth: 1
  } : {}
});

module.exports = UnimplementedView;
}, 133, null, "UnimplementedView");
__d(/* React */function(global, require, module, exports) {

'use strict';

module.exports = require(35     ); // 35 = react
}, 134, null, "React");
__d(/* StyleSheet */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(136         ); // 136 = PixelRatio
var ReactNativePropRegistry = require(51                       ); // 51 = ReactNativePropRegistry
var ReactNativeStyleAttributes = require(139                         ); // 139 = ReactNativeStyleAttributes
var StyleSheetValidation = require(155                   ); // 155 = StyleSheetValidation

var flatten = require(50            ); // 50 = flattenStyle

var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / PixelRatio.get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);
module.exports = {
  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  flatten: flatten,

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof ReactNativeStyleAttributes[property] === 'string') {
      value = {};
    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
      value = ReactNativeStyleAttributes[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    ReactNativeStyleAttributes[property] = babelHelpers.extends({}, value, { process: process });
  },
  create: function create(obj) {
    var result = {};
    for (var _key in obj) {
      StyleSheetValidation.validateStyle(_key, obj);
      result[_key] = obj[_key] && ReactNativePropRegistry.register(obj[_key]);
    }
    return result;
  }
};
}, 135, null, "StyleSheet");
__d(/* PixelRatio */function(global, require, module, exports) {
'use strict';

var Dimensions = require(137         ); // 137 = Dimensions

var PixelRatio = function () {
  function PixelRatio() {
    babelHelpers.classCallCheck(this, PixelRatio);
  }

  babelHelpers.createClass(PixelRatio, null, [{
    key: 'get',
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: 'getFontScale',
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: 'getPixelSizeForLayoutSize',
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: 'roundToNearestPixel',
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: 'startDetecting',
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();

module.exports = PixelRatio;
}, 136, null, "PixelRatio");
__d(/* Dimensions */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(138         ); // 138 = DeviceInfo
var EventEmitter = require(88            ); // 88 = EventEmitter
var Platform = require(53        ); // 53 = Platform
var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var eventEmitter = new EventEmitter();
var dimensionsInitialized = false;
var dimensions = {};

var Dimensions = function () {
  function Dimensions() {
    babelHelpers.classCallCheck(this, Dimensions);
  }

  babelHelpers.createClass(Dimensions, null, [{
    key: 'set',
    value: function set(dims) {
      if (dims && dims.windowPhysicalPixels) {
        dims = JSON.parse(JSON.stringify(dims));

        var windowPhysicalPixels = dims.windowPhysicalPixels;
        dims.window = {
          width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
          height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
          scale: windowPhysicalPixels.scale,
          fontScale: windowPhysicalPixels.fontScale
        };
        if (Platform.OS === 'android') {
          var screenPhysicalPixels = dims.screenPhysicalPixels;
          dims.screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };

          delete dims.screenPhysicalPixels;
        } else {
          dims.screen = dims.window;
        }

        delete dims.windowPhysicalPixels;
      }

      babelHelpers.extends(dimensions, dims);
      if (dimensionsInitialized) {
        eventEmitter.emit('change', {
          window: dimensions.window,
          screen: dimensions.screen
        });
      } else {
        dimensionsInitialized = true;
      }
    }
  }, {
    key: 'get',
    value: function get(dim) {
      invariant(dimensions[dim], 'No dimension set for key ' + dim);
      return dimensions[dim];
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'change', 'Trying to subscribe to unknown event: "%s"', type);
      eventEmitter.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'change', 'Trying to remove listener for unknown event: "%s"', type);
      eventEmitter.removeListener(type, handler);
    }
  }]);
  return Dimensions;
}();

Dimensions.set(DeviceInfo.Dimensions);
RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
  Dimensions.set(update);
});

module.exports = Dimensions;
}, 137, null, "Dimensions");
__d(/* DeviceInfo */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(15             ).DeviceInfo; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

invariant(DeviceInfo, 'DeviceInfo native module is not installed correctly');

module.exports = DeviceInfo;
}, 138, null, "DeviceInfo");
__d(/* ReactNativeStyleAttributes */function(global, require, module, exports) {

'use strict';

var ImageStylePropTypes = require(140                  ); // 140 = ImageStylePropTypes
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror
var processColor = require(118           ); // 118 = processColor
var processTransform = require(152               ); // 152 = processTransform
var sizesDiffer = require(154          ); // 154 = sizesDiffer

var ReactNativeStyleAttributes = babelHelpers.extends({}, keyMirror(ViewStylePropTypes), keyMirror(TextStylePropTypes), keyMirror(ImageStylePropTypes));

ReactNativeStyleAttributes.transform = { process: processTransform };
ReactNativeStyleAttributes.shadowOffset = { diff: sizesDiffer };

var colorAttributes = { process: processColor };
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.borderStartColor = colorAttributes;
ReactNativeStyleAttributes.borderEndColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
}, 139, null, "ReactNativeStyleAttributes");
__d(/* ImageStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(130            ); // 130 = ColorPropType
var ImageResizeMode = require(141              ); // 141 = ImageResizeMode
var LayoutPropTypes = require(143              ); // 143 = LayoutPropTypes
var ReactPropTypes = require(144         ); // 144 = prop-types
var ShadowPropTypesIOS = require(147                 ); // 147 = ShadowPropTypesIOS
var TransformPropTypes = require(148                 ); // 148 = TransformPropTypes

var ImageStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),

  tintColor: ColorPropType,
  opacity: ReactPropTypes.number,

  overlayColor: ReactPropTypes.string,

  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
}, 140, null, "ImageStylePropTypes");
__d(/* ImageResizeMode */function(global, require, module, exports) {
'use strict';

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror

var ImageResizeMode = keyMirror({
  contain: null,

  cover: null,

  stretch: null,

  center: null,

  repeat: null
});

module.exports = ImageResizeMode;
}, 141, null, "ImageResizeMode");
__d(/* fbjs/lib/keyMirror.js */function(global, require, module, exports) {

'use strict';

var invariant = require(13           ); // 13 = ./invariant

var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}, 142, null, "fbjs/lib/keyMirror.js");
__d(/* LayoutPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(144         ); // 144 = prop-types

var LayoutPropTypes = {
  display: ReactPropTypes.oneOf(['none', 'flex']),

  width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  borderWidth: ReactPropTypes.number,

  borderTopWidth: ReactPropTypes.number,

  borderStartWidth: ReactPropTypes.number,

  borderEndWidth: ReactPropTypes.number,

  borderRightWidth: ReactPropTypes.number,

  borderBottomWidth: ReactPropTypes.number,

  borderLeftWidth: ReactPropTypes.number,

  position: ReactPropTypes.oneOf(['absolute', 'relative']),

  flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),

  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap']),

  justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),

  alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),

  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),

  flex: ReactPropTypes.number,
  flexGrow: ReactPropTypes.number,
  flexShrink: ReactPropTypes.number,
  flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  aspectRatio: ReactPropTypes.number,

  zIndex: ReactPropTypes.number,

  direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
};

module.exports = LayoutPropTypes;
}, 143, null, "LayoutPropTypes");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(145                        )(isValidElement, throwOnDirectAccess); // 145 = ./factoryWithTypeCheckers
} else {
  module.exports = require(146                         )(); // 146 = ./factoryWithThrowingShims
}
}, 144, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(46                      ); // 46 = fbjs/lib/emptyFunction
var invariant = require(44                  ); // 44 = fbjs/lib/invariant
var warning = require(45                ); // 45 = fbjs/lib/warning
var assign = require(37             ); // 37 = object-assign

var ReactPropTypesSecret = require(47                          ); // 47 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(43                ); // 43 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 145, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(46                      ); // 46 = fbjs/lib/emptyFunction
var invariant = require(44                  ); // 44 = fbjs/lib/invariant
var ReactPropTypesSecret = require(47                          ); // 47 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 146, null, "prop-types/factoryWithThrowingShims.js");
__d(/* ShadowPropTypesIOS */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(130            ); // 130 = ColorPropType
var ReactPropTypes = require(144         ); // 144 = prop-types

var ShadowPropTypesIOS = {
  shadowColor: ColorPropType,

  shadowOffset: ReactPropTypes.shape({
    width: ReactPropTypes.number,
    height: ReactPropTypes.number
  }),

  shadowOpacity: ReactPropTypes.number,

  shadowRadius: ReactPropTypes.number
};

module.exports = ShadowPropTypesIOS;
}, 147, null, "ShadowPropTypesIOS");
__d(/* TransformPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(144         ); // 144 = prop-types

var deprecatedPropType = require(149                 ); // 149 = deprecatedPropType

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var TransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({ perspective: ReactPropTypes.number }), ReactPropTypes.shape({ rotate: ReactPropTypes.string }), ReactPropTypes.shape({ rotateX: ReactPropTypes.string }), ReactPropTypes.shape({ rotateY: ReactPropTypes.string }), ReactPropTypes.shape({ rotateZ: ReactPropTypes.string }), ReactPropTypes.shape({ scale: ReactPropTypes.number }), ReactPropTypes.shape({ scaleX: ReactPropTypes.number }), ReactPropTypes.shape({ scaleY: ReactPropTypes.number }), ReactPropTypes.shape({ translateX: ReactPropTypes.number }), ReactPropTypes.shape({ translateY: ReactPropTypes.number }), ReactPropTypes.shape({ skewX: ReactPropTypes.string }), ReactPropTypes.shape({ skewY: ReactPropTypes.string })])),

  transformMatrix: TransformMatrixPropType,

  decomposedMatrix: DecomposedMatrixPropType,

  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};

module.exports = TransformPropTypes;
}, 148, null, "TransformPropTypes");
__d(/* deprecatedPropType */function(global, require, module, exports) {
'use strict';

var UIManager = require(54         ); // 54 = UIManager

function deprecatedPropType(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (!UIManager[componentName] && props[propName] !== undefined) {
      console.warn('`' + propName + '` supplied to `' + componentName + '` has been deprecated. ' + explanation);
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(undefined, [props, propName, componentName].concat(rest));
  };
}

module.exports = deprecatedPropType;
}, 149, null, "deprecatedPropType");
__d(/* TextStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(130            ); // 130 = ColorPropType
var ReactPropTypes = require(144         ); // 144 = prop-types
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var TextStylePropTypes = babelHelpers.extends({}, ViewStylePropTypes, {

  color: ColorPropType,
  fontFamily: ReactPropTypes.string,
  fontSize: ReactPropTypes.number,
  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),

  fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),

  fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
  textShadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),
  textShadowRadius: ReactPropTypes.number,
  textShadowColor: ColorPropType,

  letterSpacing: ReactPropTypes.number,
  lineHeight: ReactPropTypes.number,

  textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),

  textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),

  includeFontPadding: ReactPropTypes.bool,
  textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),

  textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),

  textDecorationColor: ColorPropType,

  writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
});

module.exports = TextStylePropTypes;
}, 150, null, "TextStylePropTypes");
__d(/* ViewStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(130            ); // 130 = ColorPropType
var LayoutPropTypes = require(143              ); // 143 = LayoutPropTypes
var ReactPropTypes = require(144         ); // 144 = prop-types
var ShadowPropTypesIOS = require(147                 ); // 147 = ShadowPropTypesIOS
var TransformPropTypes = require(148                 ); // 148 = TransformPropTypes

var ViewStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderStartColor: ColorPropType,
  borderEndColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderTopStartRadius: ReactPropTypes.number,
  borderTopEndRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderBottomStartRadius: ReactPropTypes.number,
  borderBottomEndRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,

  elevation: ReactPropTypes.number
});

module.exports = ViewStylePropTypes;
}, 151, null, "ViewStylePropTypes");
__d(/* processTransform */function(global, require, module, exports) {
'use strict';

var MatrixMath = require(153         ); // 153 = MatrixMath
var Platform = require(53        ); // 53 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var stringifySafe = require(33             ); // 33 = stringifySafe

function processTransform(transform) {
  if (__DEV__) {
    _validateTransforms(transform);
  }

  if (Platform.OS === 'android' || Platform.OS === 'ios') {
    return transform;
  }

  var result = MatrixMath.createIdentityMatrix();

  transform.forEach(function (transformation) {
    var key = Object.keys(transformation)[0];
    var value = transformation[key];

    switch (key) {
      case 'matrix':
        MatrixMath.multiplyInto(result, result, value);
        break;
      case 'perspective':
        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
        break;
      case 'rotateX':
        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
        break;
      case 'rotateY':
        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
        break;
      case 'rotate':
      case 'rotateZ':
        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
        break;
      case 'scale':
        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
        break;
      case 'scaleX':
        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
        break;
      case 'scaleY':
        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
        break;
      case 'translate':
        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
        break;
      case 'translateX':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
        break;
      case 'translateY':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
        break;
      case 'skewX':
        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);
        break;
      case 'skewY':
        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);
        break;
      default:
        throw new Error('Invalid transform name: ' + key);
    }
  });

  return result;
}

function _multiplyTransform(result, matrixMathFunction, args) {
  var matrixToApply = MatrixMath.createIdentityMatrix();
  var argsWithIdentity = [matrixToApply].concat(args);
  matrixMathFunction.apply(this, argsWithIdentity);
  MatrixMath.multiplyInto(result, result, matrixToApply);
}

function _convertToRadians(value) {
  var floatValue = parseFloat(value);
  return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
}

function _validateTransforms(transform) {
  transform.forEach(function (transformation) {
    var keys = Object.keys(transformation);
    invariant(keys.length === 1, 'You must specify exactly one property per transform object. Passed properties: %s', stringifySafe(transformation));
    var key = keys[0];
    var value = transformation[key];
    _validateTransform(key, value, transformation);
  });
}

function _validateTransform(key, value, transformation) {
  invariant(!value.getValue, 'You passed an Animated.Value to a normal component. ' + 'You need to wrap that component in an Animated. For example, ' + 'replace <View /> by <Animated.View />.');

  var multivalueTransforms = ['matrix', 'translate'];
  if (multivalueTransforms.indexOf(key) !== -1) {
    invariant(Array.isArray(value), 'Transform with key of %s must have an array as the value: %s', key, stringifySafe(transformation));
  }
  switch (key) {
    case 'matrix':
      invariant(value.length === 9 || value.length === 16, 'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 'Provided matrix has a length of %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'translate':
      invariant(value.length === 2 || value.length === 3, 'Transform with key translate must be an array of length 2 or 3, found %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'rotateX':
    case 'rotateY':
    case 'rotateZ':
    case 'rotate':
    case 'skewX':
    case 'skewY':
      invariant(typeof value === 'string', 'Transform with key of "%s" must be a string: %s', key, stringifySafe(transformation));
      invariant(value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 'Rotate transform must be expressed in degrees (deg) or radians ' + '(rad): %s', stringifySafe(transformation));
      break;
    case 'perspective':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      invariant(value !== 0, 'Transform with key of "%s" cannot be zero: %s', key, stringifySafe(transformation));
      break;
    case 'translateX':
    case 'translateY':
    case 'scale':
    case 'scaleX':
    case 'scaleY':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      break;
    default:
      invariant(false, 'Invalid transform %s: %s', key, stringifySafe(transformation));
  }
}

module.exports = processTransform;
}, 152, null, "processTransform");
__d(/* MatrixMath */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MatrixMath = {
  createIdentityMatrix: function createIdentityMatrix() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  },

  createCopy: function createCopy(m) {
    return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
  },

  createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
    var a = 2 / (right - left);
    var b = 2 / (top - bottom);
    var c = -2 / (far - near);

    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);

    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
  },

  createFrustum: function createFrustum(left, right, bottom, top, near, far) {
    var r_width = 1 / (right - left);
    var r_height = 1 / (top - bottom);
    var r_depth = 1 / (near - far);
    var x = 2 * (near * r_width);
    var y = 2 * (near * r_height);
    var A = (right + left) * r_width;
    var B = (top + bottom) * r_height;
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
  },

  createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
    var h = 1 / Math.tan(fovInRadians / 2);
    var r_depth = 1 / (near - far);
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
  },

  createTranslate2d: function createTranslate2d(x, y) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseTranslate2dCommand(mat, x, y);
    return mat;
  },

  reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
  },

  reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
    matrixCommand[14] = z;
  },

  createScale: function createScale(factor) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseScaleCommand(mat, factor);
    return mat;
  },

  reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
    matrixCommand[5] = factor;
  },

  reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
    matrixCommand[0] = x;
    matrixCommand[5] = y;
    matrixCommand[10] = z;
  },

  reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
    matrixCommand[11] = -1 / p;
  },

  reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
  },
  reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
    matrixCommand[5] = factor;
  },
  reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
    matrixCommand[10] = factor;
  },


  reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
    matrixCommand[5] = Math.cos(radians);
    matrixCommand[6] = Math.sin(radians);
    matrixCommand[9] = -Math.sin(radians);
    matrixCommand[10] = Math.cos(radians);
  },

  reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
    matrixCommand[0] = Math.cos(amount);
    matrixCommand[2] = -Math.sin(amount);
    matrixCommand[8] = Math.sin(amount);
    matrixCommand[10] = Math.cos(amount);
  },

  reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
    matrixCommand[0] = Math.cos(radians);
    matrixCommand[1] = Math.sin(radians);
    matrixCommand[4] = -Math.sin(radians);
    matrixCommand[5] = Math.cos(radians);
  },

  createRotateZ: function createRotateZ(radians) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseRotateZCommand(mat, radians);
    return mat;
  },

  reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
    matrixCommand[4] = Math.tan(radians);
  },

  reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
    matrixCommand[1] = Math.tan(radians);
  },

  multiplyInto: function multiplyInto(out, a, b) {
    var a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11],
        a30 = a[12],
        a31 = a[13],
        a32 = a[14],
        a33 = a[15];

    var b0 = b[0],
        b1 = b[1],
        b2 = b[2],
        b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },

  determinant: function determinant(matrix) {
    var _matrix = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix[0],
        m01 = _matrix[1],
        m02 = _matrix[2],
        m03 = _matrix[3],
        m10 = _matrix[4],
        m11 = _matrix[5],
        m12 = _matrix[6],
        m13 = _matrix[7],
        m20 = _matrix[8],
        m21 = _matrix[9],
        m22 = _matrix[10],
        m23 = _matrix[11],
        m30 = _matrix[12],
        m31 = _matrix[13],
        m32 = _matrix[14],
        m33 = _matrix[15];

    return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
  },
  inverse: function inverse(matrix) {
    var det = MatrixMath.determinant(matrix);
    if (!det) {
      return matrix;
    }

    var _matrix2 = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix2[0],
        m01 = _matrix2[1],
        m02 = _matrix2[2],
        m03 = _matrix2[3],
        m10 = _matrix2[4],
        m11 = _matrix2[5],
        m12 = _matrix2[6],
        m13 = _matrix2[7],
        m20 = _matrix2[8],
        m21 = _matrix2[9],
        m22 = _matrix2[10],
        m23 = _matrix2[11],
        m30 = _matrix2[12],
        m31 = _matrix2[13],
        m32 = _matrix2[14],
        m33 = _matrix2[15];

    return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
  },
  transpose: function transpose(m) {
    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
  },
  multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
    var _v = babelHelpers.slicedToArray(v, 4),
        vx = _v[0],
        vy = _v[1],
        vz = _v[2],
        vw = _v[3];

    return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
  },
  v3Length: function v3Length(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
  },
  v3Normalize: function v3Normalize(vector, v3Length) {
    var im = 1 / (v3Length || MatrixMath.v3Length(vector));
    return [vector[0] * im, vector[1] * im, vector[2] * im];
  },
  v3Dot: function v3Dot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  },
  v3Combine: function v3Combine(a, b, aScale, bScale) {
    return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
  },
  v3Cross: function v3Cross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  },
  quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
    var _q = babelHelpers.slicedToArray(q, 4),
        qx = _q[0],
        qy = _q[1],
        qz = _q[2],
        qw = _q[3];

    var qw2 = qw * qw;
    var qx2 = qx * qx;
    var qy2 = qy * qy;
    var qz2 = qz * qz;
    var test = qx * qy + qz * qw;
    var unit = qw2 + qx2 + qy2 + qz2;
    var conv = 180 / Math.PI;

    if (test > 0.49999 * unit) {
      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
    }
    if (test < -0.49999 * unit) {
      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
    }

    return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
  },
  roundTo3Places: function roundTo3Places(n) {
    var arr = n.toString().split('e');
    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
  },
  decomposeMatrix: function decomposeMatrix(transformMatrix) {

    invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);

    var perspective = [];
    var quaternion = [];
    var scale = [];
    var skew = [];
    var translation = [];

    if (!transformMatrix[15]) {
      return;
    }
    var matrix = [];
    var perspectiveMatrix = [];
    for (var i = 0; i < 4; i++) {
      matrix.push([]);
      for (var j = 0; j < 4; j++) {
        var value = transformMatrix[i * 4 + j] / transformMatrix[15];
        matrix[i].push(value);
        perspectiveMatrix.push(j === 3 ? 0 : value);
      }
    }
    perspectiveMatrix[15] = 1;

    if (!MatrixMath.determinant(perspectiveMatrix)) {
      return;
    }

    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
      var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];

      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
      var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
      var perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
    } else {
      perspective[0] = perspective[1] = perspective[2] = 0;
      perspective[3] = 1;
    }

    for (var i = 0; i < 3; i++) {
      translation[i] = matrix[3][i];
    }

    var row = [];
    for (i = 0; i < 3; i++) {
      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
    }

    scale[0] = MatrixMath.v3Length(row[0]);
    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    scale[1] = MatrixMath.v3Length(row[1]);
    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
    skew[0] /= scale[1];

    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

    scale[2] = MatrixMath.v3Length(row[2]);
    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
    skew[1] /= scale[2];
    skew[2] /= scale[2];

    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);
    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
      for (i = 0; i < 3; i++) {
        scale[i] *= -1;
        row[i][0] *= -1;
        row[i][1] *= -1;
        row[i][2] *= -1;
      }
    }

    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

    if (row[2][1] > row[1][2]) {
      quaternion[0] = -quaternion[0];
    }
    if (row[0][2] > row[2][0]) {
      quaternion[1] = -quaternion[1];
    }
    if (row[1][0] > row[0][1]) {
      quaternion[2] = -quaternion[2];
    }

    var rotationDegrees;
    if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
    } else {
      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
    }

    return {
      rotationDegrees: rotationDegrees,
      perspective: perspective,
      quaternion: quaternion,
      scale: scale,
      skew: skew,
      translation: translation,

      rotate: rotationDegrees[2],
      rotateX: rotationDegrees[0],
      rotateY: rotationDegrees[1],
      scaleX: scale[0],
      scaleY: scale[1],
      translateX: translation[0],
      translateY: translation[1]
    };
  }
};

module.exports = MatrixMath;
}, 153, null, "MatrixMath");
__d(/* sizesDiffer */function(global, require, module, exports) {
'use strict';

var dummySize = { width: undefined, height: undefined };

var sizesDiffer = function sizesDiffer(one, two) {
  one = one || dummySize;
  two = two || dummySize;
  return one !== two && (one.width !== two.width || one.height !== two.height);
};

module.exports = sizesDiffer;
}, 154, null, "sizesDiffer");
__d(/* StyleSheetValidation */function(global, require, module, exports) {
'use strict';

var ImageStylePropTypes = require(140                  ); // 140 = ImageStylePropTypes
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    babelHelpers.classCallCheck(this, StyleSheetValidation);
  }

  babelHelpers.createClass(StyleSheetValidation, null, [{
    key: 'validateStyleProp',
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');

        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: 'validateStyle',
    value: function validateStyle(name, styles) {
      if (!__DEV__) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: 'addValidStylePropTypes',
    value: function addValidStylePropTypes(stylePropTypes) {
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
}, 155, null, "StyleSheetValidation");
__d(/* View */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/View/View.js';
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var ReactNativeStyleAttributes = require(139                         ); // 139 = ReactNativeStyleAttributes
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var View = createReactClass({
  displayName: 'View',

  mixins: [NativeMethodsMixin],

  propTypes: ViewPropTypes,

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  render: function render() {
    invariant(!(this.context.isInAParentText && Platform.OS === 'android'), 'Nesting of <View> within <Text> is not supported on Android.');

    return React.createElement(RCTView, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112
      }
    }));
  }
});

var RCTView = requireNativeComponent('RCTView', View, {
  nativeOnly: {
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true
  }
});

if (__DEV__) {
  var UIManager = require(54         ); // 54 = UIManager
  var viewConfig = UIManager.viewConfigs && UIManager.viewConfigs.RCTView || {};
  for (var prop in viewConfig.nativeProps) {
    var viewAny = View;
    if (!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]) {
      throw new Error('View is missing propType for native prop `' + prop + '`');
    }
  }
}

var ViewToExport = RCTView;
if (__DEV__) {
  ViewToExport = View;
}

module.exports = ViewToExport;
}, 156, null, "View");
__d(/* ReactNativeViewAttributes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(139                         ); // 139 = ReactNativeStyleAttributes

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = babelHelpers.extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
}, 157, null, "ReactNativeViewAttributes");
__d(/* ViewPropTypes */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var PlatformViewPropTypes = require(164                    ); // 164 = PlatformViewPropTypes
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var _require = require(167                ), // 167 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var stylePropType = StyleSheetPropType(ViewStylePropTypes);

module.exports = babelHelpers.extends({}, PlatformViewPropTypes, {
  accessible: PropTypes.bool,

  accessibilityLabel: PropTypes.node,

  accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),

  accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),

  importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

  accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

  accessibilityViewIsModal: PropTypes.bool,

  onAccessibilityTap: PropTypes.func,

  onMagicTap: PropTypes.func,

  testID: PropTypes.string,

  nativeID: PropTypes.string,

  onResponderGrant: PropTypes.func,

  onResponderMove: PropTypes.func,

  onResponderReject: PropTypes.func,

  onResponderRelease: PropTypes.func,

  onResponderTerminate: PropTypes.func,

  onResponderTerminationRequest: PropTypes.func,

  onStartShouldSetResponder: PropTypes.func,

  onStartShouldSetResponderCapture: PropTypes.func,

  onMoveShouldSetResponder: PropTypes.func,

  onMoveShouldSetResponderCapture: PropTypes.func,

  hitSlop: EdgeInsetsPropType,

  onLayout: PropTypes.func,

  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
  style: stylePropType,

  removeClippedSubviews: PropTypes.bool,

  renderToHardwareTextureAndroid: PropTypes.bool,

  shouldRasterizeIOS: PropTypes.bool,

  collapsable: PropTypes.bool,

  needsOffscreenAlphaCompositing: PropTypes.bool
});
}, 158, null, "ViewPropTypes");
__d(/* EdgeInsetsPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types

var createStrictShapeTypeChecker = require(160                           ); // 160 = createStrictShapeTypeChecker

var EdgeInsetsPropType = createStrictShapeTypeChecker({
  top: PropTypes.number,
  left: PropTypes.number,
  bottom: PropTypes.number,
  right: PropTypes.number
});

module.exports = EdgeInsetsPropType;
}, 159, null, "EdgeInsetsPropType");
__d(/* createStrictShapeTypeChecker */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var merge = require(161    ); // 161 = merge

function createStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, 'Required object `' + propName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return;
    }
    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location || '(unknown)';
    if (propType !== 'object') {
      invariant(false, 'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }

    var allKeys = merge(props[propName], shapeTypes);

    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    for (var key in allKeys) {
      var checker = shapeTypes[key];
      if (!checker) {
        invariant(false, 'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }
      var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }
  function chainedCheckType(props, propName, componentName, location) {
    for (var _len2 = arguments.length, rest = Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
      rest[_key2 - 4] = arguments[_key2];
    }

    return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
  }
  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = createStrictShapeTypeChecker;
}, 160, null, "createStrictShapeTypeChecker");
__d(/* merge */function(global, require, module, exports) {

"use strict";

var mergeInto = require(162        ); // 162 = mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 161, null, "merge");
__d(/* mergeInto */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(163           ); // 163 = mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 162, null, "mergeInto");
__d(/* mergeHelpers */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o instanceof Date || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: {
    Clobber: 'Clobber',
    Concat: 'Concat',
    IndexByIndex: 'IndexByIndex'
  }

};

module.exports = mergeHelpers;
}, 163, null, "mergeHelpers");
__d(/* PlatformViewPropTypes */function(global, require, module, exports) {

var Platform = require(53        ); // 53 = Platform

var TVViewPropTypes = {};
if (Platform.isTVOS) {
  TVViewPropTypes = require(165              ); // 165 = TVViewPropTypes
}

module.exports = TVViewPropTypes;
}, 164, null, "PlatformViewPropTypes");
__d(/* TVViewPropTypes */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types

var TVViewPropTypes = {
  isTVSelectable: PropTypes.bool,

  hasTVPreferredFocus: PropTypes.bool,

  tvParallaxProperties: PropTypes.object,

  tvParallaxShiftDistanceX: PropTypes.number,

  tvParallaxShiftDistanceY: PropTypes.number,

  tvParallaxTiltAngle: PropTypes.number,

  tvParallaxMagnification: PropTypes.number

};

module.exports = TVViewPropTypes;
}, 165, null, "TVViewPropTypes");
__d(/* StyleSheetPropType */function(global, require, module, exports) {
'use strict';

var createStrictShapeTypeChecker = require(160                           ); // 160 = createStrictShapeTypeChecker
var flattenStyle = require(50            ); // 50 = flattenStyle

function StyleSheetPropType(shape) {
  var shapePropType = createStrictShapeTypeChecker(shape);
  return function (props, propName, componentName, location) {
    var newProps = props;
    if (props[propName]) {
      newProps = {};
      newProps[propName] = flattenStyle(props[propName]);
    }

    for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
  };
}

module.exports = StyleSheetPropType;
}, 166, null, "StyleSheetPropType");
__d(/* ViewAccessibility */function(global, require, module, exports) {
'use strict';

module.exports = {
  AccessibilityTraits: ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'],
  AccessibilityComponentTypes: ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked']
};
}, 167, null, "ViewAccessibility");
__d(/* create-react-class/index.js */function(global, require, module, exports) {

'use strict';

var React = require(35     ); // 35 = react
var factory = require(169        ); // 169 = ./factory

if (typeof React === 'undefined') {
  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
}

var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
}, 168, null, "create-react-class/index.js");
__d(/* create-react-class/factory.js */function(global, require, module, exports) {

'use strict';

var _assign = require(37             ); // 37 = object-assign

var emptyObject = require(34                    ); // 34 = fbjs/lib/emptyObject
var _invariant = require(13                  ); // 13 = fbjs/lib/invariant

if (process.env.NODE_ENV !== 'production') {
  var warning = require(23                ); // 23 = fbjs/lib/warning
}

var MIXINS_KEY = 'mixins';

function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {

  var injectedMixins = [];

  var ReactClassInterface = {
    mixins: 'DEFINE_MANY',

    statics: 'DEFINE_MANY',

    propTypes: 'DEFINE_MANY',

    contextTypes: 'DEFINE_MANY',

    childContextTypes: 'DEFINE_MANY',

    getDefaultProps: 'DEFINE_MANY_MERGED',

    getInitialState: 'DEFINE_MANY_MERGED',

    getChildContext: 'DEFINE_MANY_MERGED',

    render: 'DEFINE_ONCE',

    componentWillMount: 'DEFINE_MANY',

    componentDidMount: 'DEFINE_MANY',

    componentWillReceiveProps: 'DEFINE_MANY',

    shouldComponentUpdate: 'DEFINE_ONCE',

    componentWillUpdate: 'DEFINE_MANY',

    componentDidUpdate: 'DEFINE_MANY',

    componentWillUnmount: 'DEFINE_MANY',

    updateComponent: 'OVERRIDE_BASE'
  };

  var RESERVED_SPEC_KEYS = {
    displayName: function displayName(Constructor, _displayName) {
      Constructor.displayName = _displayName;
    },
    mixins: function mixins(Constructor, _mixins) {
      if (_mixins) {
        for (var i = 0; i < _mixins.length; i++) {
          mixSpecIntoComponent(Constructor, _mixins[i]);
        }
      }
    },
    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
    },
    contextTypes: function contextTypes(Constructor, _contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _contextTypes, 'context');
      }
      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
    },

    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
      } else {
        Constructor.getDefaultProps = _getDefaultProps;
      }
    },
    propTypes: function propTypes(Constructor, _propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
    },
    statics: function statics(Constructor, _statics) {
      mixStaticSpecIntoComponent(Constructor, _statics);
    },
    autobind: function autobind() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        if (process.env.NODE_ENV !== 'production') {
          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
    }

    if (isAlreadyDefined) {
      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
    }
  }

  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
        }
      }

      return;
    }

    _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
    _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);

            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

      var isInherited = name in Constructor;
      _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
      Constructor[name] = property;
    }
  }

  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
        one[key] = two[key];
      }
    }
    return one;
  }

  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function (newThis) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function componentDidMount() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this.__isMounted = false;
    }
  };

  var ReactClassMixin = {
    replaceState: function replaceState(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    isMounted: function isMounted() {
      if (process.env.NODE_ENV !== 'production') {
        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function ReactClassComponent() {};
  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

  function createClass(spec) {
    var Constructor = identity(function (props, context, updater) {

      if (process.env.NODE_ENV !== 'production') {
        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
      }

      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          initialState = null;
        }
      }
      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

    if (process.env.NODE_ENV !== 'production') {
      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
    }

    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;
}, 169, null, "create-react-class/factory.js");
__d(/* requireNativeComponent */function(global, require, module, exports) {
'use strict';

var ReactNativeBridgeEventPlugin = require(171                           ); // 171 = ReactNativeBridgeEventPlugin
var ReactNativeStyleAttributes = require(139                         ); // 139 = ReactNativeStyleAttributes
var UIManager = require(54         ); // 54 = UIManager

var createReactNativeComponentClass = require(172                              ); // 172 = createReactNativeComponentClass
var insetsDiffer = require(173           ); // 173 = insetsDiffer
var matricesDiffer = require(174             ); // 174 = matricesDiffer
var pointsDiffer = require(175           ); // 175 = pointsDiffer
var processColor = require(118           ); // 118 = processColor
var resolveAssetSource = require(176                 ); // 176 = resolveAssetSource
var sizesDiffer = require(154          ); // 154 = sizesDiffer
var verifyPropTypes = require(180              ); // 180 = verifyPropTypes

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var warning = require(23                ); // 23 = fbjs/lib/warning

function requireNativeComponent(viewName, componentInterface, extraConfig) {
  function attachBubblingEventTypes(viewConfig) {
    if (UIManager.genericBubblingEventTypes) {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, UIManager.genericBubblingEventTypes);

      delete UIManager.genericBubblingEventTypes;
    }
  }

  function attachDirectEventTypes(viewConfig) {
    if (UIManager.genericDirectEventTypes) {
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, UIManager.genericDirectEventTypes);

      delete UIManager.genericDirectEventTypes;
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }
    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];
      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];
        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }
      destination[key] = sourceValue;
    }
    return destination;
  }

  function getViewConfig() {
    var viewConfig = UIManager[viewName];

    invariant(viewConfig != null && !viewConfig.NativeProps != null, 'Native component for "%s" does not exist', viewName);

    viewConfig.uiViewClassName = viewName;
    viewConfig.validAttributes = {};

    if (componentInterface) {
      viewConfig.propTypes = typeof componentInterface.__propTypesSecretDontUseThesePlease === 'object' ? componentInterface.__propTypesSecretDontUseThesePlease : componentInterface.propTypes;
    } else {
      viewConfig.propTypes = null;
    }

    var baseModuleName = viewConfig.baseModuleName;
    var nativeProps = babelHelpers.extends({}, viewConfig.NativeProps);
    while (baseModuleName) {
      var baseModule = UIManager[baseModuleName];
      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        nativeProps = babelHelpers.extends({}, nativeProps, baseModule.NativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    for (var key in nativeProps) {
      var useAttribute = false;
      var attribute = {};

      var differ = TypeToDifferMap[nativeProps[key]];
      if (differ) {
        attribute.diff = differ;
        useAttribute = true;
      }

      var processor = TypeToProcessorMap[nativeProps[key]];
      if (processor) {
        attribute.process = processor;
        useAttribute = true;
      }

      viewConfig.validAttributes[key] = useAttribute ? attribute : true;
    }

    viewConfig.validAttributes.style = ReactNativeStyleAttributes;

    if (__DEV__) {
      componentInterface && verifyPropTypes(componentInterface, viewConfig, extraConfig && extraConfig.nativeOnly);
    }

    attachBubblingEventTypes(viewConfig);
    attachDirectEventTypes(viewConfig);

    ReactNativeBridgeEventPlugin.processEventTypes(viewConfig);

    return viewConfig;
  }

  return createReactNativeComponentClass(viewName, getViewConfig);
}

var TypeToDifferMap = {
  CATransform3D: matricesDiffer,
  CGPoint: pointsDiffer,
  CGSize: sizesDiffer,
  UIEdgeInsets: insetsDiffer
};

function processColorArray(colors) {
  return colors && colors.map(processColor);
}

var TypeToProcessorMap = {
  CGColor: processColor,
  CGColorArray: processColorArray,
  UIColor: processColor,
  UIColorArray: processColorArray,
  CGImage: resolveAssetSource,
  UIImage: resolveAssetSource,
  RCTImageSource: resolveAssetSource,

  Color: processColor,
  ColorArray: processColorArray
};

module.exports = requireNativeComponent;
}, 170, null, "requireNativeComponent");
__d(/* ReactNativeBridgeEventPlugin */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativeBridgeEventPlugin;
}, 171, null, "ReactNativeBridgeEventPlugin");
__d(/* createReactNativeComponentClass */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.createReactNativeComponentClass;
}, 172, null, "createReactNativeComponentClass");
__d(/* insetsDiffer */function(global, require, module, exports) {
'use strict';

var dummyInsets = {
  top: undefined,
  left: undefined,
  right: undefined,
  bottom: undefined
};

var insetsDiffer = function insetsDiffer(one, two) {
  one = one || dummyInsets;
  two = two || dummyInsets;
  return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
};

module.exports = insetsDiffer;
}, 173, null, "insetsDiffer");
__d(/* matricesDiffer */function(global, require, module, exports) {
'use strict';

var matricesDiffer = function matricesDiffer(one, two) {
  if (one === two) {
    return false;
  }
  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
};

module.exports = matricesDiffer;
}, 174, null, "matricesDiffer");
__d(/* pointsDiffer */function(global, require, module, exports) {
'use strict';

var dummyPoint = { x: undefined, y: undefined };

var pointsDiffer = function pointsDiffer(one, two) {
  one = one || dummyPoint;
  two = two || dummyPoint;
  return one !== two && (one.x !== two.x || one.y !== two.y);
};

module.exports = pointsDiffer;
}, 175, null, "pointsDiffer");
__d(/* resolveAssetSource */function(global, require, module, exports) {
'use strict';

var AssetRegistry = require(177            ); // 177 = AssetRegistry
var AssetSourceResolver = require(178                  ); // 178 = AssetSourceResolver
var NativeModules = require(15             ); // 15 = NativeModules

var _customSourceTransformer = void 0,
    _serverURL = void 0,
    _bundleSourceURL = void 0;

function getDevServerURL() {
  if (_serverURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    var match = scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}

function getBundleSourceURL() {
  if (_bundleSourceURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    if (!scriptURL) {
      _bundleSourceURL = null;
      return _bundleSourceURL;
    }
    if (scriptURL.startsWith('assets://')) {
      _bundleSourceURL = null;
      return _bundleSourceURL;
    }
    _bundleSourceURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    if (!scriptURL.startsWith('file://')) {
      _bundleSourceURL = 'file://' + _bundleSourceURL;
    }
  }

  return _bundleSourceURL;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getBundleSourceURL(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
}, 176, null, "resolveAssetSource");
__d(/* AssetRegistry */function(global, require, module, exports) {
'use strict';

var assets = [];

function registerAsset(asset) {
  return assets.push(asset);
}

function getAssetByID(assetId) {
  return assets[assetId - 1];
}

module.exports = { registerAsset: registerAsset, getAssetByID: getAssetByID };
}, 177, null, "AssetRegistry");
__d(/* AssetSourceResolver */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(136         ); // 136 = PixelRatio
var Platform = require(53        ); // 53 = Platform

var assetPathUtils = require(179                                    ); // 179 = ../../local-cli/bundle/assetPathUtils
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function getScaledAssetPath(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
  var assetDir = assetPathUtils.getBasePath(asset);
  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
}

function getAssetPathInDrawableFolder(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var drawbleFolder = assetPathUtils.getAndroidResourceFolderName(asset, scale);
  var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
  return drawbleFolder + '/' + fileName + '.' + asset.type;
}

var AssetSourceResolver = function () {
  function AssetSourceResolver(serverUrl, bundleUrl, asset) {
    babelHelpers.classCallCheck(this, AssetSourceResolver);

    this.serverUrl = serverUrl;
    this.bundleUrl = bundleUrl;
    this.asset = asset;
  }

  babelHelpers.createClass(AssetSourceResolver, [{
    key: 'isLoadedFromServer',
    value: function isLoadedFromServer() {
      return !!this.serverUrl;
    }
  }, {
    key: 'isLoadedFromFileSystem',
    value: function isLoadedFromFileSystem() {
      return !!this.bundleUrl;
    }
  }, {
    key: 'defaultAsset',
    value: function defaultAsset() {
      if (this.isLoadedFromServer()) {
        return this.assetServerURL();
      }

      if (Platform.OS === 'android') {
        return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
      } else {
        return this.scaledAssetURLInBundle();
      }
    }
  }, {
    key: 'assetServerURL',
    value: function assetServerURL() {
      invariant(!!this.serverUrl, 'need server to load from');
      return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);
    }
  }, {
    key: 'scaledAssetPath',
    value: function scaledAssetPath() {
      return this.fromSource(getScaledAssetPath(this.asset));
    }
  }, {
    key: 'scaledAssetURLInBundle',
    value: function scaledAssetURLInBundle() {
      var path = this.bundleUrl || 'file://';
      return this.fromSource(path + getScaledAssetPath(this.asset));
    }
  }, {
    key: 'resourceIdentifierWithoutScale',
    value: function resourceIdentifierWithoutScale() {
      invariant(Platform.OS === 'android', 'resource identifiers work on Android');
      return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
    }
  }, {
    key: 'drawableFolderInBundle',
    value: function drawableFolderInBundle() {
      var path = this.bundleUrl || 'file://';
      return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));
    }
  }, {
    key: 'fromSource',
    value: function fromSource(source) {
      return {
        __packager_asset: true,
        width: this.asset.width,
        height: this.asset.height,
        uri: source,
        scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
      };
    }
  }], [{
    key: 'pickScale',
    value: function pickScale(scales, deviceScale) {
      for (var i = 0; i < scales.length; i++) {
        if (scales[i] >= deviceScale) {
          return scales[i];
        }
      }

      return scales[scales.length - 1] || 1;
    }
  }]);
  return AssetSourceResolver;
}();

module.exports = AssetSourceResolver;
}, 178, null, "AssetSourceResolver");
__d(/* react-native/local-cli/bundle/assetPathUtils.js */function(global, require, module, exports) {

'use strict';

function getAndroidAssetSuffix(scale) {
  switch (scale) {
    case 0.75:
      return 'ldpi';
    case 1:
      return 'mdpi';
    case 1.5:
      return 'hdpi';
    case 2:
      return 'xhdpi';
    case 3:
      return 'xxhdpi';
    case 4:
      return 'xxxhdpi';
  }
  throw new Error('no such scale');
}

var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

function getAndroidResourceFolderName(asset, scale) {
  if (!drawableFileTypes.has(asset.type)) {
    return 'raw';
  }
  var suffix = getAndroidAssetSuffix(scale);
  if (!suffix) {
    throw new Error('Don\'t know which android drawable suffix to use for asset: ' + JSON.stringify(asset));
  }
  var androidFolder = 'drawable-' + suffix;
  return androidFolder;
}

function getAndroidResourceIdentifier(asset) {
  var folderPath = getBasePath(asset);
  return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  if (basePath[0] === '/') {
    basePath = basePath.substr(1);
  }
  return basePath;
}

module.exports = {
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidResourceFolderName: getAndroidResourceFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
}, 179, null, "react-native/local-cli/bundle/assetPathUtils.js");
__d(/* verifyPropTypes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(139                         ); // 139 = ReactNativeStyleAttributes

function verifyPropTypes(componentInterface, viewConfig, nativePropsToIgnore) {
  if (!viewConfig) {
    return;
  }
  var componentName = componentInterface.displayName || componentInterface.name || 'unknown';

  var propTypes = componentInterface.__propTypesSecretDontUseThesePlease || componentInterface.propTypes;

  if (!propTypes) {
    throw new Error('`' + componentName + '` has no propTypes defined`');
  }

  var nativeProps = viewConfig.NativeProps;
  for (var prop in nativeProps) {
    if (!propTypes[prop] && !ReactNativeStyleAttributes[prop] && (!nativePropsToIgnore || !nativePropsToIgnore[prop])) {
      var message;
      if (propTypes.hasOwnProperty(prop)) {
        message = '`' + componentName + '` has incorrectly defined propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop];
      } else {
        message = '`' + componentName + '` has no propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop] + '`';
      }
      message += "\nIf you haven't changed this prop yourself, this usually means that " + 'your versions of the native code and JavaScript code are out of sync. Updating both ' + 'should make this error go away.';
      throw new Error(message);
    }
  }
}

module.exports = verifyPropTypes;
}, 180, null, "verifyPropTypes");
__d(/* ReactNativeART */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/ART/ReactNativeART.js';
var Color = require(182             ); // 182 = art/core/color
var Path = require(183                  ); // 183 = ARTSerializablePath
var Transform = require(186                 ); // 186 = art/core/transform

var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes

var createReactNativeComponentClass = require(172                              ); // 172 = createReactNativeComponentClass
var merge = require(161    ); // 161 = merge
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function arrayDiffer(a, b) {
  if (a == null || b == null) {
    return true;
  }
  if (a.length !== b.length) {
    return true;
  }
  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return true;
    }
  }
  return false;
}

function fontAndLinesDiffer(a, b) {
  if (a === b) {
    return false;
  }
  if (a.font !== b.font) {
    if (a.font === null) {
      return true;
    }
    if (b.font === null) {
      return true;
    }

    if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
      return true;
    }
  }
  return arrayDiffer(a.lines, b.lines);
}

var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});

var NodeAttributes = {
  transform: { diff: arrayDiffer },
  opacity: true
};

var GroupAttributes = merge(NodeAttributes, {
  clipping: { diff: arrayDiffer }
});

var RenderableAttributes = merge(NodeAttributes, {
  fill: { diff: arrayDiffer },
  stroke: { diff: arrayDiffer },
  strokeWidth: true,
  strokeCap: true,
  strokeJoin: true,
  strokeDash: { diff: arrayDiffer }
});

var ShapeAttributes = merge(RenderableAttributes, {
  d: { diff: arrayDiffer }
});

var TextAttributes = merge(RenderableAttributes, {
  alignment: true,
  frame: { diff: fontAndLinesDiffer },
  path: { diff: arrayDiffer }
});

var NativeSurfaceView = createReactNativeComponentClass('ARTSurfaceView', function () {
  return {
    validAttributes: SurfaceViewAttributes,
    uiViewClassName: 'ARTSurfaceView'
  };
});

var NativeGroup = createReactNativeComponentClass('ARTGroup', function () {
  return {
    validAttributes: GroupAttributes,
    uiViewClassName: 'ARTGroup'
  };
});

var NativeShape = createReactNativeComponentClass('ARTShape', function () {
  return {
    validAttributes: ShapeAttributes,
    uiViewClassName: 'ARTShape'
  };
});

var NativeText = createReactNativeComponentClass('ARTText', function () {
  return {
    validAttributes: TextAttributes,
    uiViewClassName: 'ARTText'
  };
});

function childrenAsString(children) {
  if (!children) {
    return '';
  }
  if (typeof children === 'string') {
    return children;
  }
  if (children.length) {
    return children.join('\n');
  }
  return '';
}

var Surface = function (_React$Component) {
  babelHelpers.inherits(Surface, _React$Component);

  function Surface() {
    babelHelpers.classCallCheck(this, Surface);
    return babelHelpers.possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).apply(this, arguments));
  }

  babelHelpers.createClass(Surface, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { isInSurface: true };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      return React.createElement(
        NativeSurfaceView,
        { style: [props.style, { width: w, height: h }], __source: {
            fileName: _jsxFileName,
            lineNumber: 159
          }
        },
        this.props.children
      );
    }
  }]);
  return Surface;
}(React.Component);

Surface.childContextTypes = {
  isInSurface: PropTypes.bool
};


function extractNumber(value, defaultValue) {
  if (value == null) {
    return defaultValue;
  }
  return +value;
}

var pooledTransform = new Transform();

function extractTransform(props) {
  var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
  var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;

  pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

  if (props.transform != null) {
    pooledTransform.transform(props.transform);
  }

  return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
}

function extractOpacity(props) {
  if (props.visible === false) {
    return 0;
  }
  if (props.opacity == null) {
    return 1;
  }
  return +props.opacity;
}

var Group = function (_React$Component2) {
  babelHelpers.inherits(Group, _React$Component2);

  function Group() {
    babelHelpers.classCallCheck(this, Group);
    return babelHelpers.possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));
  }

  babelHelpers.createClass(Group, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
      return React.createElement(
        NativeGroup,
        {
          opacity: extractOpacity(props),
          transform: extractTransform(props), __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        this.props.children
      );
    }
  }]);
  return Group;
}(React.Component);

Group.contextTypes = {
  isInSurface: PropTypes.bool.isRequired
};

var ClippingRectangle = function (_React$Component3) {
  babelHelpers.inherits(ClippingRectangle, _React$Component3);

  function ClippingRectangle() {
    babelHelpers.classCallCheck(this, ClippingRectangle);
    return babelHelpers.possibleConstructorReturn(this, (ClippingRectangle.__proto__ || Object.getPrototypeOf(ClippingRectangle)).apply(this, arguments));
  }

  babelHelpers.createClass(ClippingRectangle, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var x = extractNumber(props.x, 0);
      var y = extractNumber(props.y, 0);
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      var clipping = [x, y, w, h];

      var propsExcludingXAndY = merge(props);
      delete propsExcludingXAndY.x;
      delete propsExcludingXAndY.y;
      return React.createElement(
        NativeGroup,
        {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY), __source: {
            fileName: _jsxFileName,
            lineNumber: 253
          }
        },
        this.props.children
      );
    }
  }]);
  return ClippingRectangle;
}(React.Component);

var SOLID_COLOR = 0;
var LINEAR_GRADIENT = 1;
var RADIAL_GRADIENT = 2;
var PATTERN = 3;

function insertColorIntoArray(color, targetArray, atIndex) {
  var c = new Color(color);
  targetArray[atIndex + 0] = c.red / 255;
  targetArray[atIndex + 1] = c.green / 255;
  targetArray[atIndex + 2] = c.blue / 255;
  targetArray[atIndex + 3] = c.alpha;
}

function insertColorsIntoArray(stops, targetArray, atIndex) {
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
      i++;
    }
  } else {
    for (var offset in stops) {
      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
      i++;
    }
  }
  return atIndex + i * 4;
}

function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
  var offsetNumber;
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      offsetNumber = i / (stops.length - 1) * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  } else {
    for (var offsetString in stops) {
      offsetNumber = +offsetString * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  }
  return atIndex + i;
}

function insertColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
}

function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
}

function applyBoundingBoxToBrushData(brushData, props) {
  var type = brushData[0];
  var width = +props.width;
  var height = +props.height;
  if (type === LINEAR_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
  } else if (type === RADIAL_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
    brushData[5] *= width;
    brushData[6] *= height;
  } else if (type === PATTERN) {}
}

function extractBrush(colorOrBrush, props) {
  if (colorOrBrush == null) {
    return null;
  }
  if (colorOrBrush._brush) {
    if (colorOrBrush._bb) {
      applyBoundingBoxToBrushData(colorOrBrush._brush, props);
      colorOrBrush._bb = false;
    }
    return colorOrBrush._brush;
  }
  var c = new Color(colorOrBrush);
  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractColor(color) {
  if (color == null) {
    return null;
  }
  var c = new Color(color);
  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractStrokeCap(strokeCap) {
  switch (strokeCap) {
    case 'butt':
      return 0;
    case 'square':
      return 2;
    default:
      return 1;}
}

function extractStrokeJoin(strokeJoin) {
  switch (strokeJoin) {
    case 'miter':
      return 0;
    case 'bevel':
      return 2;
    default:
      return 1;}
}

var Shape = function (_React$Component4) {
  babelHelpers.inherits(Shape, _React$Component4);

  function Shape() {
    babelHelpers.classCallCheck(this, Shape);
    return babelHelpers.possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));
  }

  babelHelpers.createClass(Shape, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.d || childrenAsString(props.children);
      var d = (path instanceof Path ? path : new Path(path)).toJSON();
      return React.createElement(NativeShape, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        d: d,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 401
        }
      });
    }
  }]);
  return Shape;
}(React.Component);

var cachedFontObjectsFromString = {};

var fontFamilyPrefix = /^[\s"']*/;
var fontFamilySuffix = /[\s"']*$/;

function extractSingleFontFamily(fontFamilyString) {
  return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
}

function parseFontString(font) {
  if (cachedFontObjectsFromString.hasOwnProperty(font)) {
    return cachedFontObjectsFromString[font];
  }
  var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
  var match = regexp.exec(font);
  if (!match) {
    return null;
  }
  var fontFamily = extractSingleFontFamily(match[3]);
  var fontSize = +match[2] || 12;
  var isBold = /bold/.exec(match[1]);
  var isItalic = /italic/.exec(match[1]);
  cachedFontObjectsFromString[font] = {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: isBold ? 'bold' : 'normal',
    fontStyle: isItalic ? 'italic' : 'normal'
  };
  return cachedFontObjectsFromString[font];
}

function extractFont(font) {
  if (font == null) {
    return null;
  }
  if (typeof font === 'string') {
    return parseFontString(font);
  }
  var fontFamily = extractSingleFontFamily(font.fontFamily);
  var fontSize = +font.fontSize || 12;
  var fontWeight = font.fontWeight != null ? font.fontWeight.toString() : '400';
  return {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    fontStyle: font.fontStyle
  };
}

var newLine = /\n/g;
function extractFontAndLines(font, text) {
  return { font: extractFont(font), lines: text.split(newLine) };
}

function extractAlignment(alignment) {
  switch (alignment) {
    case 'right':
      return 1;
    case 'center':
      return 2;
    default:
      return 0;
  }
}

var Text = function (_React$Component5) {
  babelHelpers.inherits(Text, _React$Component5);

  function Text() {
    babelHelpers.classCallCheck(this, Text);
    return babelHelpers.possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  babelHelpers.createClass(Text, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.path;
      var textPath = path ? (path instanceof Path ? path : new Path(path)).toJSON() : null;
      var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
      return React.createElement(NativeText, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        alignment: extractAlignment(props.alignment),
        frame: textFrame,
        path: textPath,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 500
        }
      });
    }
  }]);
  return Text;
}(React.Component);

function LinearGradient(stops, x1, y1, x2, y2) {
  var type = LINEAR_GRADIENT;

  if (arguments.length < 5) {
    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;

    var x = Math.cos(angle);
    var y = -Math.sin(angle);
    var l = (Math.abs(x) + Math.abs(y)) / 2;

    x *= l;y *= l;

    x1 = 0.5 - x;
    x2 = 0.5 + x;
    y1 = 0.5 - y;
    y2 = 0.5 + y;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [type, +x1, +y1, +x2, +y2];
  insertColorStopsIntoArray(stops, brushData, 5);
  this._brush = brushData;
}

function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
  if (ry == null) {
    ry = rx;
  }
  if (cx == null) {
    cx = fx;
  }
  if (cy == null) {
    cy = fy;
  }
  if (fx == null) {
    fx = fy = rx = ry = cx = cy = 0.5;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
  insertDoubleColorStopsIntoArray(stops, brushData, 7);
  this._brush = brushData;
}

function Pattern(url, width, height, left, top) {
  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
}

var ReactART = {
  LinearGradient: LinearGradient,
  RadialGradient: RadialGradient,
  Pattern: Pattern,
  Transform: Transform,
  Path: Path,
  Surface: Surface,
  Group: Group,
  ClippingRectangle: ClippingRectangle,
  Shape: Shape,
  Text: Text
};

module.exports = ReactART;
}, 181, null, "ReactNativeART");
__d(/* art/core/color.js */function(global, require, module, exports) {var colors = {
	maroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',
	purple: '#800080', fuchsia: "#ff00ff", white: '#ffffff', lime: '#00ff00', green: '#008000',
	navy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',
	black: '#000000', silver: '#c0c0c0', gray: '#808080'
};

var map = function map(array, fn) {
	var results = [];
	for (var i = 0, l = array.length; i < l; i++) {
		results[i] = fn(array[i], i);
	}return results;
};

var Color = function Color(color, type) {

	if (color.isColor) {

		this.red = color.red;
		this.green = color.green;
		this.blue = color.blue;
		this.alpha = color.alpha;
	} else {

		var namedColor = colors[color];
		if (namedColor) {
			color = namedColor;
			type = 'hex';
		}

		switch (typeof color) {
			case 'string':
				if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';break;
			case 'object':
				type = type || 'rgb';color = color.toString();break;
			case 'number':
				type = 'hex';color = color.toString(16);break;
		}

		color = Color['parse' + type.toUpperCase()](color);
		this.red = color[0];
		this.green = color[1];
		this.blue = color[2];
		this.alpha = color[3];
	}

	this.isColor = true;
};

var limit = function limit(number, min, max) {
	return Math.min(max, Math.max(min, number));
};

var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB = function (color) {
	return map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
		return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
	});
};

Color.parseHEX = function (color) {
	if (color.length == 1) color = color + color + color;
	return map(color.match(hexMatch).slice(1), function (bit, i) {
		if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
		return parseInt(bit.length == 1 ? bit + bit : bit, 16);
	});
};

Color.parseHSB = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var a = hsb[3];
	var br = Math.round(hsb[2] / 100 * 255);
	if (hsb[1] == 0) return [br, br, br, a];

	var hue = hsb[0];
	var f = hue % 60;
	var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
	var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
	var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

	switch (Math.floor(hue / 60)) {
		case 0:
			return [br, t, p, a];
		case 1:
			return [q, br, p, a];
		case 2:
			return [p, br, t, a];
		case 3:
			return [p, q, br, a];
		case 4:
			return [t, p, br, a];
		default:
			return [br, p, q, a];
	}
};

Color.parseHSL = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var h = hsb[0] / 60;
	var s = hsb[1] / 100;
	var l = hsb[2] / 100;
	var a = hsb[3];

	var c = (1 - Math.abs(2 * l - 1)) * s;
	var x = c * (1 - Math.abs(h % 2 - 1));
	var m = l - c / 2;

	var p = Math.round((c + m) * 255);
	var q = Math.round((x + m) * 255);
	var t = Math.round(m * 255);

	switch (Math.floor(h)) {
		case 0:
			return [p, q, t, a];
		case 1:
			return [q, p, t, a];
		case 2:
			return [t, p, q, a];
		case 3:
			return [t, q, p, a];
		case 4:
			return [q, t, p, a];
		default:
			return [p, t, q, a];
	}
};

var toString = function toString(type, array) {
	if (array[3] != 1) type += 'a';else array.pop();
	return type + '(' + array.join(', ') + ')';
};

Color.prototype = {

	toHSB: function toHSB(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / max : 0,
		    brightness = max / 255;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];

		return array ? hsb : toString('hsb', hsb);
	},

	toHSL: function toHSL(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
		    lightness = (max + min) / 512;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];

		return array ? hsl : toString('hsl', hsl);
	},

	toHEX: function toHEX(array) {

		var a = this.alpha;
		var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;

		var hex = map([this.red, this.green, this.blue], function (bit) {
			bit = bit.toString(16);
			return bit.length == 1 ? '0' + bit : bit;
		});

		return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
	},

	toRGB: function toRGB(array) {
		var rgb = [this.red, this.green, this.blue, this.alpha];
		return array ? rgb : toString('rgb', rgb);
	}

};

Color.prototype.toString = Color.prototype.toRGB;

Color.hex = function (hex) {
	return new Color(hex, 'hex');
};

if (this.hex == null) this.hex = Color.hex;

Color.hsb = function (h, s, b, a) {
	return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
};

if (this.hsb == null) this.hsb = Color.hsb;

Color.hsl = function (h, s, l, a) {
	return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
};

if (this.hsl == null) this.hsl = Color.hsl;

Color.rgb = function (r, g, b, a) {
	return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
};

if (this.rgb == null) this.rgb = Color.rgb;

Color.detach = function (color) {
	color = new Color(color);
	return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
};

module.exports = Color;
}, 182, null, "art/core/color.js");
__d(/* ARTSerializablePath */function(global, require, module, exports) {
'use strict';

var Class = require(184                ); // 184 = art/core/class.js
var Path = require(185               ); // 185 = art/core/path.js

var MOVE_TO = 0;
var CLOSE = 1;
var LINE_TO = 2;
var CURVE_TO = 3;
var ARC = 4;

var SerializablePath = Class(Path, {

  initialize: function initialize(path) {
    this.reset();
    if (path instanceof SerializablePath) {
      this.path = path.path.slice(0);
    } else if (path) {
      if (path.applyToPath) {
        path.applyToPath(this);
      } else {
        this.push(path);
      }
    }
  },

  onReset: function onReset() {
    this.path = [];
  },

  onMove: function onMove(sx, sy, x, y) {
    this.path.push(MOVE_TO, x, y);
  },

  onLine: function onLine(sx, sy, x, y) {
    this.path.push(LINE_TO, x, y);
  },

  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
  },

  _arcToBezier: Path.prototype.onArc,

  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
    if (rx !== ry || rotation) {
      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
    }
    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
  },

  onClose: function onClose() {
    this.path.push(CLOSE);
  },

  toJSON: function toJSON() {
    return this.path;
  }

});

module.exports = SerializablePath;
}, 183, null, "ARTSerializablePath");
__d(/* art/core/class.js */function(global, require, module, exports) {module.exports = function (mixins) {
	var proto = {};
	for (var i = 0, l = arguments.length; i < l; i++) {
		var mixin = arguments[i];
		if (typeof mixin == 'function') mixin = mixin.prototype;
		for (var key in mixin) {
			proto[key] = mixin[key];
		}
	}
	if (!proto.initialize) proto.initialize = function () {};
	proto.constructor = function (a, b, c, d, e, f, g, h) {
		return new proto.initialize(a, b, c, d, e, f, g, h);
	};
	proto.constructor.prototype = proto.initialize.prototype = proto;
	return proto.constructor;
};
}, 184, null, "art/core/class.js");
__d(/* art/core/path.js */function(global, require, module, exports) {var Class = require(184      ); // 184 = ./class

module.exports = Class({

	initialize: function initialize(path) {
		this.reset().push(path);
	},

	push: function push() {
		var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
		if (!p) return this;

		var last,
		    cmd = p[0],
		    i = 1;
		while (cmd) {
			switch (cmd) {
				case 'm':
					this.move(p[i++], p[i++]);break;
				case 'l':
					this.line(p[i++], p[i++]);break;
				case 'c':
					this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 's':
					this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'q':
					this.curve(p[i++], p[i++], p[i++], p[i++]);break;
				case 't':
					this.curve(p[i++], p[i++]);break;
				case 'a':
					this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'h':
					this.line(p[i++], 0);break;
				case 'v':
					this.line(0, p[i++]);break;

				case 'M':
					this.moveTo(p[i++], p[i++]);break;
				case 'L':
					this.lineTo(p[i++], p[i++]);break;
				case 'C':
					this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 'S':
					this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'Q':
					this.curveTo(p[i++], p[i++], p[i++], p[i++]);break;
				case 'T':
					this.curveTo(p[i++], p[i++]);break;
				case 'A':
					this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'H':
					this.lineTo(p[i++], this.penY);break;
				case 'V':
					this.lineTo(this.penX, p[i++]);break;

				case 'Z':case 'z':
					this.close();break;
				default:
					cmd = last;i--;continue;
			}

			last = cmd;
			if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
			cmd = p[i++];
		}
		return this;
	},

	reset: function reset() {
		this.penX = this.penY = 0;
		this.penDownX = this.penDownY = null;
		this._pivotX = this._pivotY = 0;
		this.onReset();
		return this;
	},

	move: function move(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
		return this;
	},
	moveTo: function moveTo(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	line: function line(x, y) {
		return this.lineTo(this.penX + +x, this.penY + +y);
	},
	lineTo: function lineTo(x, y) {
		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
	},
	curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		if (c2x == null) {
			c2x = +c1x;c2y = +c1y;
			c1x = x * 2 - (this._pivotX || 0);c1y = y * 2 - (this._pivotY || 0);
		}
		if (ex == null) {
			this._pivotX = +c1x;this._pivotY = +c1y;
			ex = +c2x;ey = +c2y;
			c2x = (ex + +c1x * 2) / 3;c2y = (ey + +c1y * 2) / 3;
			c1x = (x + +c1x * 2) / 3;c1y = (y + +c1y * 2) / 3;
		} else {
			this._pivotX = +c2x;this._pivotY = +c2y;
		}
		if (this.penDownX == null) {
			this.penDownX = x;this.penDownY = y;
		}
		this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
		return this;
	},

	arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
		return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
	},
	arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
		ry = Math.abs(+ry || +rx || +y - this.penY);
		rx = Math.abs(+rx || +x - this.penX);

		if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);

		var tX = this.penX,
		    tY = this.penY,
		    clockwise = !+counterClockwise,
		    large = !!+outer;

		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad);
		x -= tX;y -= tY;

		var cx = cos * x / 2 + sin * y / 2,
		    cy = -sin * x / 2 + cos * y / 2,
		    rxry = rx * rx * ry * ry,
		    rycx = ry * ry * cx * cx,
		    rxcy = rx * rx * cy * cy,
		    a = rxry - rxcy - rycx;

		if (a < 0) {
			a = Math.sqrt(1 - a / rxry);
			rx *= a;ry *= a;
			cx = x / 2;cy = y / 2;
		} else {
			a = Math.sqrt(a / (rxcy + rycx));
			if (large == clockwise) a = -a;
			var cxd = -a * cy * rx / ry,
			    cyd = a * cx * ry / rx;
			cx = cos * cxd - sin * cyd + x / 2;
			cy = sin * cxd + cos * cyd + y / 2;
		}

		var xx = cos / rx,
		    yx = sin / rx,
		    xy = -sin / ry,
		    yy = cos / ry;

		var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
		    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));

		cx += tX;cy += tY;
		x += tX;y += tY;

		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
		return this;
	},

	counterArc: function counterArc(x, y, rx, ry, outer) {
		return this.arc(x, y, rx, ry, outer, true);
	},
	counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
		return this.arcTo(x, y, rx, ry, outer, true);
	},

	close: function close() {
		if (this.penDownX != null) {
			this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
			this.penDownX = null;
		}
		return this;
	},

	onReset: function onReset() {},

	onMove: function onMove(sx, sy, ex, ey) {},

	onLine: function onLine(sx, sy, ex, ey) {
		this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
	},

	onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
		var gx = ex - sx,
		    gy = ey - sy,
		    g = gx * gx + gy * gy,
		    v1,
		    v2,
		    cx,
		    cy,
		    u;

		cx = c1x - sx;cy = c1y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v1 = cx * cx + cy * cy;

		cx = c2x - sx;cy = c2y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v2 = cx * cx + cy * cy;

		if (v1 < 0.01 && v2 < 0.01) {
			this.onLine(sx, sy, ex, ey);
			return;
		}

		if (isNaN(v1) || isNaN(v2)) {
			throw new Error('Bad input');
		}

		var s1x = (c1x + c2x) * 0.5,
		    s1y = (c1y + c2y) * 0.5,
		    l1x = (c1x + sx) * 0.5,
		    l1y = (c1y + sy) * 0.5,
		    l2x = (l1x + s1x) * 0.5,
		    l2y = (l1y + s1y) * 0.5,
		    r2x = (ex + c2x) * 0.5,
		    r2y = (ey + c2y) * 0.5,
		    r1x = (r2x + s1x) * 0.5,
		    r1y = (r2y + s1y) * 0.5,
		    l2r1x = (l2x + r1x) * 0.5,
		    l2r1y = (l2y + r1y) * 0.5;

		this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
		this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
	},

	onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad),
		    xx = cos * rx,
		    yx = -sin * ry,
		    xy = sin * rx,
		    yy = cos * ry;

		var arc = ea - sa;
		if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;

		var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
		    step = arc / n,
		    k = 4 / 3 * Math.tan(step / 4);

		var x = Math.cos(sa),
		    y = Math.sin(sa);

		for (var i = 0; i < n; i++) {
			var cp1x = x - k * y,
			    cp1y = y + k * x;

			sa += step;
			x = Math.cos(sa);y = Math.sin(sa);

			var cp2x = x + k * y,
			    cp2y = y - k * x;

			this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
		}
	},

	onClose: function onClose(sx, sy, ex, ey) {
		this.onLine(sx, sy, ex, ey);
	}

});
}, 185, null, "art/core/path.js");
__d(/* art/core/transform.js */function(global, require, module, exports) {var Class = require(184      ); // 184 = ./class

function Transform(xx, yx, xy, yy, x, y) {
	if (xx && typeof xx == 'object') {
		yx = xx.yx;yy = xx.yy;y = xx.y;
		xy = xx.xy;x = xx.x;xx = xx.xx;
	}
	this.xx = xx == null ? 1 : xx;
	this.yx = yx || 0;
	this.xy = xy || 0;
	this.yy = yy == null ? 1 : yy;
	this.x = (x == null ? this.x : x) || 0;
	this.y = (y == null ? this.y : y) || 0;
	this._transform();
	return this;
};

module.exports = Class({

	initialize: Transform,

	_transform: function _transform() {},

	xx: 1, yx: 0, x: 0,
	xy: 0, yy: 1, y: 0,

	transform: function transform(xx, yx, xy, yy, x, y) {
		var m = this;
		if (xx && typeof xx == 'object') {
			yx = xx.yx;yy = xx.yy;y = xx.y;
			xy = xx.xy;x = xx.x;xx = xx.xx;
		}
		if (!x) x = 0;
		if (!y) y = 0;
		return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
	},

	transformTo: Transform,

	translate: function translate(x, y) {
		return this.transform(1, 0, 0, 1, x, y);
	},

	move: function move(x, y) {
		this.x += x || 0;
		this.y += y || 0;
		this._transform();
		return this;
	},

	scale: function scale(x, y) {
		if (y == null) y = x;
		return this.transform(x, 0, 0, y, 0, 0);
	},

	rotate: function rotate(deg, x, y) {
		if (x == null || y == null) {
			x = (this.left || 0) + (this.width || 0) / 2;
			y = (this.top || 0) + (this.height || 0) / 2;
		}

		var rad = deg * Math.PI / 180,
		    sin = Math.sin(rad),
		    cos = Math.cos(rad);

		this.transform(1, 0, 0, 1, x, y);
		var m = this;

		return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
	},

	moveTo: function moveTo(x, y) {
		var m = this;
		return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
	},

	rotateTo: function rotateTo(deg, x, y) {
		var m = this;
		var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
		if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
		return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
	},

	scaleTo: function scaleTo(x, y) {
		var m = this;

		var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
		m.xx /= h;m.yx /= h;

		h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
		m.yy /= h;m.xy /= h;

		return this.scale(x, y);
	},

	resizeTo: function resizeTo(width, height) {
		var w = this.width,
		    h = this.height;
		if (!w || !h) return this;
		return this.scaleTo(width / w, height / h);
	},

	inversePoint: function inversePoint(x, y) {
		var a = this.xx,
		    b = this.yx,
		    c = this.xy,
		    d = this.yy,
		    e = this.x,
		    f = this.y;
		var det = b * c - a * d;
		if (det == 0) return null;
		return {
			x: (d * (e - x) + c * (y - f)) / det,
			y: (a * (f - y) + b * (x - e)) / det
		};
	},

	point: function point(x, y) {
		var m = this;
		return {
			x: m.xx * x + m.xy * y + m.x,
			y: m.yx * x + m.yy * y + m.y
		};
	}

});
}, 186, null, "art/core/transform.js");
__d(/* Button */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Button.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var TouchableNativeFeedback = require(196                      ); // 196 = TouchableNativeFeedback
var TouchableOpacity = require(197               ); // 197 = TouchableOpacity
var View = require(156   ); // 156 = View

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var Button = function (_React$Component) {
  babelHelpers.inherits(Button, _React$Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accessibilityLabel = _props.accessibilityLabel,
          color = _props.color,
          onPress = _props.onPress,
          title = _props.title,
          hasTVPreferredFocus = _props.hasTVPreferredFocus,
          disabled = _props.disabled,
          testID = _props.testID;

      var buttonStyles = [styles.button];
      var textStyles = [styles.text];
      if (color) {
        if (Platform.OS === 'ios') {
          textStyles.push({ color: color });
        } else {
          buttonStyles.push({ backgroundColor: color });
        }
      }
      var accessibilityTraits = ['button'];
      if (disabled) {
        buttonStyles.push(styles.buttonDisabled);
        textStyles.push(styles.textDisabled);
        accessibilityTraits.push('disabled');
      }
      invariant(typeof title === 'string', 'The title prop of a Button must be a string');
      var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;
      var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;
      return React.createElement(
        Touchable,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: accessibilityLabel,
          accessibilityTraits: accessibilityTraits,
          hasTVPreferredFocus: hasTVPreferredFocus,
          testID: testID,
          disabled: disabled,
          onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 128
          }
        },
        React.createElement(
          View,
          { style: buttonStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 136
            }
          },
          React.createElement(
            Text,
            { style: textStyles, disabled: disabled, __source: {
                fileName: _jsxFileName,
                lineNumber: 137
              }
            },
            formattedTitle
          )
        )
      );
    }
  }]);
  return Button;
}(React.Component);

Button.propTypes = {
  title: PropTypes.string.isRequired,

  accessibilityLabel: PropTypes.string,

  color: ColorPropType,

  disabled: PropTypes.bool,

  onPress: PropTypes.func.isRequired,

  testID: PropTypes.string,

  hasTVPreferredFocus: PropTypes.bool
};


var styles = StyleSheet.create({
  button: Platform.select({
    ios: {},
    android: {
      elevation: 4,

      backgroundColor: '#2196F3',
      borderRadius: 2
    }
  }),
  text: Platform.select({
    ios: {
      color: '#007AFF',
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    android: {
      color: 'white',
      textAlign: 'center',
      padding: 8,
      fontWeight: '500'
    }
  }),
  buttonDisabled: Platform.select({
    ios: {},
    android: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    }
  }),
  textDisabled: Platform.select({
    ios: {
      color: '#cdcdcd'
    },
    android: {
      color: '#a1a1a1'
    }
  })
});

module.exports = Button;
}, 187, null, "Button");
__d(/* Text */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Text/Text.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var Touchable = require(189        ); // 189 = Touchable

var createReactClass = require(168                 ); // 168 = create-react-class
var createReactNativeComponentClass = require(172                              ); // 172 = createReactNativeComponentClass
var mergeFast = require(195        ); // 195 = mergeFast
var processColor = require(118           ); // 118 = processColor

var stylePropType = StyleSheetPropType(TextStylePropTypes);

var viewConfig = {
  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
    isHighlighted: true,
    numberOfLines: true,
    ellipsizeMode: true,
    allowFontScaling: true,
    disabled: true,
    selectable: true,
    selectionColor: true,
    adjustsFontSizeToFit: true,
    minimumFontScale: true,
    textBreakStrategy: true
  }),
  uiViewClassName: 'RCTText'
};

var Text = createReactClass({
  displayName: 'Text',
  propTypes: {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),

    numberOfLines: PropTypes.number,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onLayout: PropTypes.func,

    onPress: PropTypes.func,

    onLongPress: PropTypes.func,

    pressRetentionOffset: EdgeInsetsPropType,

    selectable: PropTypes.bool,

    selectionColor: ColorPropType,

    suppressHighlighting: PropTypes.bool,
    style: stylePropType,

    testID: PropTypes.string,

    nativeID: PropTypes.string,

    allowFontScaling: PropTypes.bool,

    accessible: PropTypes.bool,

    adjustsFontSizeToFit: PropTypes.bool,

    minimumFontScale: PropTypes.number,

    disabled: PropTypes.bool
  },
  getDefaultProps: function getDefaultProps() {
    return {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail'
    };
  },

  getInitialState: function getInitialState() {
    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {
      isHighlighted: false
    });
  },
  mixins: [NativeMethodsMixin],
  viewConfig: viewConfig,
  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },
  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  _handlers: null,
  _hasPressHandler: function _hasPressHandler() {
    return !!this.props.onPress || !!this.props.onLongPress;
  },

  touchableHandleActivePressIn: null,
  touchableHandleActivePressOut: null,
  touchableHandlePress: null,
  touchableHandleLongPress: null,
  touchableGetPressRectOffset: null,
  render: function render() {
    var _this = this;

    var newProps = this.props;
    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {
      if (!this._handlers) {
        this._handlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var shouldSetFromProps = _this.props.onStartShouldSetResponder && _this.props.onStartShouldSetResponder();
            var setResponder = shouldSetFromProps || _this._hasPressHandler();
            if (setResponder && !_this.touchableHandleActivePressIn) {
              for (var key in Touchable.Mixin) {
                if (typeof Touchable.Mixin[key] === 'function') {
                  _this[key] = Touchable.Mixin[key].bind(_this);
                }
              }
              _this.touchableHandleActivePressIn = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: true
                });
              };

              _this.touchableHandleActivePressOut = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: false
                });
              };

              _this.touchableHandlePress = function (e) {
                _this.props.onPress && _this.props.onPress(e);
              };

              _this.touchableHandleLongPress = function (e) {
                _this.props.onLongPress && _this.props.onLongPress(e);
              };

              _this.touchableGetPressRectOffset = function () {
                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;
              };
            }

            return setResponder;
          },
          onResponderGrant: function (e, dispatchID) {
            this.touchableHandleResponderGrant(e, dispatchID);
            this.props.onResponderGrant && this.props.onResponderGrant.apply(this, arguments);
          }.bind(this),
          onResponderMove: function (e) {
            this.touchableHandleResponderMove(e);
            this.props.onResponderMove && this.props.onResponderMove.apply(this, arguments);
          }.bind(this),
          onResponderRelease: function (e) {
            this.touchableHandleResponderRelease(e);
            this.props.onResponderRelease && this.props.onResponderRelease.apply(this, arguments);
          }.bind(this),
          onResponderTerminate: function (e) {
            this.touchableHandleResponderTerminate(e);
            this.props.onResponderTerminate && this.props.onResponderTerminate.apply(this, arguments);
          }.bind(this),
          onResponderTerminationRequest: function () {
            var allowTermination = this.touchableHandleResponderTerminationRequest();
            if (allowTermination && this.props.onResponderTerminationRequest) {
              allowTermination = this.props.onResponderTerminationRequest.apply(this, arguments);
            }
            return allowTermination;
          }.bind(this)
        };
      }
      newProps = babelHelpers.extends({}, this.props, this._handlers, {
        isHighlighted: this.state.isHighlighted
      });
    }
    if (newProps.selectionColor != null) {
      newProps = babelHelpers.extends({}, newProps, {
        selectionColor: processColor(newProps.selectionColor)
      });
    }
    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {
      newProps = babelHelpers.extends({}, newProps, {
        style: [this.props.style, { color: 'magenta' }]
      });
    }
    if (this.context.isInAParentText) {
      return React.createElement(RCTVirtualText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 555
        }
      }));
    } else {
      return React.createElement(RCTText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 557
        }
      }));
    }
  }
});

var PRESS_RECT_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {
  return viewConfig;
});
var RCTVirtualText = RCTText;

if (Platform.OS === 'android') {
  RCTVirtualText = createReactNativeComponentClass('RCTVirtualText', function () {
    return {
      validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
        isHighlighted: true
      }),
      uiViewClassName: 'RCTVirtualText'
    };
  });
}

module.exports = Text;
}, 188, null, "Text");
__d(/* Touchable */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Touchable/Touchable.js';
var BoundingDimensions = require(190                 ); // 190 = BoundingDimensions
var Platform = require(53        ); // 53 = Platform
var Position = require(192       ); // 192 = Position
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative
var TVEventHandler = require(193             ); // 193 = TVEventHandler
var TouchEventUtils = require(194                       ); // 194 = fbjs/lib/TouchEventUtils
var UIManager = require(54         ); // 54 = UIManager
var View = require(156   ); // 156 = View

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror
var normalizeColor = require(119             ); // 119 = normalizeColor

var States = keyMirror({
  NOT_RESPONDER: null,
  RESPONDER_INACTIVE_PRESS_IN: null,
  RESPONDER_INACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_PRESS_IN: null,
  RESPONDER_ACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_LONG_PRESS_IN: null,
  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
  ERROR: null
});

var IsActive = {
  RESPONDER_ACTIVE_PRESS_OUT: true,
  RESPONDER_ACTIVE_PRESS_IN: true
};

var IsPressingIn = {
  RESPONDER_INACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var IsLongPressingIn = {
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var Signals = keyMirror({
  DELAY: null,
  RESPONDER_GRANT: null,
  RESPONDER_RELEASE: null,
  RESPONDER_TERMINATED: null,
  ENTER_PRESS_RECT: null,
  LEAVE_PRESS_RECT: null,
  LONG_PRESS_DETECTED: null
});

var Transitions = {
  NOT_RESPONDER: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.ERROR,
    RESPONDER_TERMINATED: States.ERROR,
    ENTER_PRESS_RECT: States.ERROR,
    LEAVE_PRESS_RECT: States.ERROR,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_IN: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_OUT: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_LONG_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_LONG_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  error: {
    DELAY: States.NOT_RESPONDER,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.NOT_RESPONDER,
    LEAVE_PRESS_RECT: States.NOT_RESPONDER,
    LONG_PRESS_DETECTED: States.NOT_RESPONDER
  }
};

var HIGHLIGHT_DELAY_MS = 130;

var PRESS_EXPAND_PX = 20;

var LONG_PRESS_THRESHOLD = 500;

var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT = 10;

var TouchableMixin = {
  componentDidMount: function componentDidMount() {
    if (!Platform.isTVOS) {
      return;
    }

    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      var myTag = ReactNative.findNodeHandle(cmp);
      evt.dispatchConfig = {};
      if (myTag === evt.tag) {
        if (evt.eventType === 'focus') {
          cmp.touchableHandleActivePressIn && cmp.touchableHandleActivePressIn(evt);
        } else if (evt.eventType === 'blur') {
          cmp.touchableHandleActivePressOut && cmp.touchableHandleActivePressOut(evt);
        } else if (evt.eventType === 'select') {
          cmp.touchableHandlePress && cmp.touchableHandlePress(evt);
        }
      }
    });
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
  },

  touchableGetInitialState: function touchableGetInitialState() {
    return {
      touchable: { touchState: undefined, responderID: null }
    };
  },

  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
    return !this.props.rejectResponderTermination;
  },

  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
    return !this.props.disabled;
  },

  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
    return true;
  },

  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var dispatchID = e.currentTarget;

    e.persist();

    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    this.pressOutDelayTimeout = null;

    this.state.touchable.touchState = States.NOT_RESPONDER;
    this.state.touchable.responderID = dispatchID;
    this._receiveSignal(Signals.RESPONDER_GRANT, e);
    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
    if (delayMS !== 0) {
      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
    } else {
      this._handleDelay(e);
    }

    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
  },

  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    this._receiveSignal(Signals.RESPONDER_RELEASE, e);
  },

  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
  },

  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {
      return;
    }

    if (!this.state.touchable.positionOnActivate) {
      return;
    }

    var positionOnActivate = this.state.touchable.positionOnActivate;
    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
      left: PRESS_EXPAND_PX,
      right: PRESS_EXPAND_PX,
      top: PRESS_EXPAND_PX,
      bottom: PRESS_EXPAND_PX
    };

    var pressExpandLeft = pressRectOffset.left;
    var pressExpandTop = pressRectOffset.top;
    var pressExpandRight = pressRectOffset.right;
    var pressExpandBottom = pressRectOffset.bottom;

    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

    if (hitSlop) {
      pressExpandLeft += hitSlop.left;
      pressExpandTop += hitSlop.top;
      pressExpandRight += hitSlop.right;
      pressExpandBottom += hitSlop.bottom;
    }

    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;

    if (this.pressInLocation) {
      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
        this._cancelLongPressDelayTimeout();
      }
    }

    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
    if (isTouchWithinActive) {
      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {
        this._cancelLongPressDelayTimeout();
      }
    } else {
      this._cancelLongPressDelayTimeout();
      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
    }
  },

  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
    var tag = this.state.touchable.responderID;
    if (tag == null) {
      return;
    }

    UIManager.measure(tag, this._handleQueryLayout);
  },

  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
    if (!l && !t && !w && !h && !globalX && !globalY) {
      return;
    }
    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
  },

  _handleDelay: function _handleDelay(e) {
    this.touchableDelayTimeout = null;
    this._receiveSignal(Signals.DELAY, e);
  },

  _handleLongDelay: function _handleLongDelay(e) {
    this.longPressDelayTimeout = null;
    var curState = this.state.touchable.touchState;
    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
    } else {
      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
    }
  },

  _receiveSignal: function _receiveSignal(signal, e) {
    var responderID = this.state.touchable.responderID;
    var curState = this.state.touchable.touchState;
    var nextState = Transitions[curState] && Transitions[curState][signal];
    if (!responderID && signal === Signals.RESPONDER_RELEASE) {
      return;
    }
    if (!nextState) {
      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
    }
    if (nextState === States.ERROR) {
      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
    }
    if (curState !== nextState) {
      this._performSideEffectsForTransition(curState, nextState, signal, e);
      this.state.touchable.touchState = nextState;
    }
  },

  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.longPressDelayTimeout = null;
  },

  _isHighlight: function _isHighlight(state) {
    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
  },

  _savePressInLocation: function _savePressInLocation(e) {
    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;
    var locationX = touch && touch.locationX;
    var locationY = touch && touch.locationY;
    this.pressInLocation = { pageX: pageX, pageY: pageY, locationX: locationX, locationY: locationY };
  },

  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
    var deltaX = aX - bX;
    var deltaY = aY - bY;
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  },

  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
    var curIsHighlight = this._isHighlight(curState);
    var newIsHighlight = this._isHighlight(nextState);

    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

    if (isFinalSignal) {
      this._cancelLongPressDelayTimeout();
    }

    if (!IsActive[curState] && IsActive[nextState]) {
      this._remeasureMetricsOnActivation();
    }

    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
      this.touchableHandleLongPress && this.touchableHandleLongPress(e);
    }

    if (newIsHighlight && !curIsHighlight) {
      this._startHighlight(e);
    } else if (!newIsHighlight && curIsHighlight) {
      this._endHighlight(e);
    }

    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
      var hasLongPressHandler = !!this.props.onLongPress;
      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());

      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
      if (shouldInvokePress && this.touchableHandlePress) {
        if (!newIsHighlight && !curIsHighlight) {
          this._startHighlight(e);
          this._endHighlight(e);
        }
        this.touchableHandlePress(e);
      }
    }

    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.touchableDelayTimeout = null;
  },

  _startHighlight: function _startHighlight(e) {
    this._savePressInLocation(e);
    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
  },

  _endHighlight: function _endHighlight(e) {
    var _this = this;

    if (this.touchableHandleActivePressOut) {
      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
        this.pressOutDelayTimeout = setTimeout(function () {
          _this.touchableHandleActivePressOut(e);
        }, this.touchableGetPressOutDelayMS());
      } else {
        this.touchableHandleActivePressOut(e);
      }
    }
  }

};

var Touchable = {
  Mixin: TouchableMixin,
  TOUCH_TARGET_DEBUG: false,
  renderDebugView: function renderDebugView(_ref) {
    var color = _ref.color,
        hitSlop = _ref.hitSlop;

    if (!Touchable.TOUCH_TARGET_DEBUG) {
      return null;
    }
    if (!__DEV__) {
      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
    }
    var debugHitSlopStyle = {};
    hitSlop = hitSlop || { top: 0, bottom: 0, left: 0, right: 0 };
    for (var key in hitSlop) {
      debugHitSlopStyle[key] = -hitSlop[key];
    }
    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);
    return React.createElement(View, {
      pointerEvents: 'none',
      style: babelHelpers.extends({
        position: 'absolute',
        borderColor: hexColor.slice(0, -2) + '55',
        borderWidth: 1,
        borderStyle: 'dashed',
        backgroundColor: hexColor.slice(0, -2) + '0F' }, debugHitSlopStyle),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 793
      }
    });
  }
};

module.exports = Touchable;
}, 189, null, "Touchable");
__d(/* BoundingDimensions */function(global, require, module, exports) {

'use strict';

var PooledClass = require(191          ); // 191 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function BoundingDimensions(width, height) {
  this.width = width;
  this.height = height;
}

BoundingDimensions.prototype.destructor = function () {
  this.width = null;
  this.height = null;
};

BoundingDimensions.getPooledFromElement = function (element) {
  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
};

PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
}, 190, null, "BoundingDimensions");
__d(/* PooledClass */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 191, null, "PooledClass");
__d(/* Position */function(global, require, module, exports) {

'use strict';

var PooledClass = require(191          ); // 191 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function Position(left, top) {
  this.left = left;
  this.top = top;
}

Position.prototype.destructor = function () {
  this.left = null;
  this.top = null;
};

PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
}, 192, null, "Position");
__d(/* TVEventHandler */function(global, require, module, exports) {
'use strict';

var React = require(134    ); // 134 = React
var TVNavigationEventEmitter = require(15             ).TVNavigationEventEmitter; // 15 = NativeModules
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter

function TVEventHandler() {
  this.__nativeTVNavigationEventListener = null;
  this.__nativeTVNavigationEventEmitter = null;
}

TVEventHandler.prototype.enable = function (component, callback) {
  if (!TVNavigationEventEmitter) {
    return;
  }

  this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(TVNavigationEventEmitter);
  this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onTVNavEvent', function (data) {
    if (callback) {
      callback(component, data);
    }
  });
};

TVEventHandler.prototype.disable = function () {
  if (this.__nativeTVNavigationEventListener) {
    this.__nativeTVNavigationEventListener.remove();
    delete this.__nativeTVNavigationEventListener;
  }
  if (this.__nativeTVNavigationEventEmitter) {
    delete this.__nativeTVNavigationEventEmitter;
  }
};

module.exports = TVEventHandler;
}, 193, null, "TVEventHandler");
__d(/* fbjs/lib/TouchEventUtils.js */function(global, require, module, exports) {"use strict";

var TouchEventUtils = {
  extractSingleTouch: function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;

    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  }
};

module.exports = TouchEventUtils;
}, 194, null, "fbjs/lib/TouchEventUtils.js");
__d(/* mergeFast */function(global, require, module, exports) {
'use strict';

var mergeFast = function mergeFast(one, two) {
  var ret = {};
  for (var keyOne in one) {
    ret[keyOne] = one[keyOne];
  }
  for (var keyTwo in two) {
    ret[keyTwo] = two[keyTwo];
  }
  return ret;
};

module.exports = mergeFast;
}, 195, null, "mergeFast");
__d(/* TouchableNativeFeedback */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.ios.js';
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var View = require(156   ); // 156 = View

var DummyTouchableNativeFeedback = function (_React$Component) {
  babelHelpers.inherits(DummyTouchableNativeFeedback, _React$Component);

  function DummyTouchableNativeFeedback() {
    babelHelpers.classCallCheck(this, DummyTouchableNativeFeedback);
    return babelHelpers.possibleConstructorReturn(this, (DummyTouchableNativeFeedback.__proto__ || Object.getPrototypeOf(DummyTouchableNativeFeedback)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTouchableNativeFeedback, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        React.createElement(
          Text,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          'TouchableNativeFeedback is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyTouchableNativeFeedback;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  info: {
    color: '#333333',
    margin: 20
  }
});

module.exports = DummyTouchableNativeFeedback;
}, 196, null, "TouchableNativeFeedback");
__d(/* TouchableOpacity */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js';


var Animated = require(198       ); // 198 = Animated
var Easing = require(223     ); // 223 = Easing
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var TimerMixin = require(239                ); // 239 = react-timer-mixin
var Touchable = require(189        ); // 189 = Touchable
var TouchableWithoutFeedback = require(240                       ); // 240 = TouchableWithoutFeedback

var createReactClass = require(168                 ); // 168 = create-react-class
var ensurePositiveDelayProps = require(241                       ); // 241 = ensurePositiveDelayProps
var flattenStyle = require(50            ); // 50 = flattenStyle

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = createReactClass({
  displayName: 'TouchableOpacity',
  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,

    hasTVPreferredFocus: PropTypes.bool,

    tvParallaxProperties: PropTypes.object
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2
    };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new Animated.Value(this._getChildStyleOpacityWithDefault())
    });
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    Animated.timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: Easing.inOut(Easing.quad),
      useNativeDriver: true
    }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
  },

  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
    var childStyle = flattenStyle(this.props.style) || {};
    return childStyle.opacity == undefined ? 1 : childStyle.opacity;
  },

  render: function render() {
    return React.createElement(
      Animated.View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        style: [this.props.style, { opacity: this.state.anim }],
        nativeID: this.props.nativeID,
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        hasTVPreferredFocus: this.props.hasTVPreferredFocus,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate, __source: {
          fileName: _jsxFileName,
          lineNumber: 245
        }
      },
      this.props.children,
      Touchable.renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop })
    );
  }
});

module.exports = TouchableOpacity;
}, 197, null, "TouchableOpacity");
__d(/* Animated */function(global, require, module, exports) {
'use strict';

var AnimatedImplementation = require(199                     ); // 199 = AnimatedImplementation
var Image = require(226    ); // 226 = Image
var Text = require(188   ); // 188 = Text
var View = require(156   ); // 156 = View

var AnimatedScrollView = void 0;

var Animated = {
  View: AnimatedImplementation.createAnimatedComponent(View),
  Text: AnimatedImplementation.createAnimatedComponent(Text),
  Image: AnimatedImplementation.createAnimatedComponent(Image),
  get ScrollView() {
    if (!AnimatedScrollView) {
      AnimatedScrollView = AnimatedImplementation.createAnimatedComponent(require(228         )); // 228 = ScrollView
    }
    return AnimatedScrollView;
  }
};

babelHelpers.extends(Animated, AnimatedImplementation);

module.exports = Animated;
}, 198, null, "Animated");
__d(/* AnimatedImplementation */function(global, require, module, exports) {
'use strict';

var _require = require(200              ), // 200 = ./AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent,
    attachNativeEvent = _require.attachNativeEvent;

var AnimatedAddition = require(208                       ); // 208 = ./nodes/AnimatedAddition
var AnimatedDiffClamp = require(209                        ); // 209 = ./nodes/AnimatedDiffClamp
var AnimatedDivision = require(210                       ); // 210 = ./nodes/AnimatedDivision
var AnimatedInterpolation = require(202                            ); // 202 = ./nodes/AnimatedInterpolation
var AnimatedModulo = require(211                     ); // 211 = ./nodes/AnimatedModulo
var AnimatedMultiplication = require(212                             ); // 212 = ./nodes/AnimatedMultiplication
var AnimatedNode = require(203                   ); // 203 = ./nodes/AnimatedNode
var AnimatedProps = require(213                    ); // 213 = ./nodes/AnimatedProps
var AnimatedTracking = require(216                       ); // 216 = ./nodes/AnimatedTracking
var AnimatedValue = require(201                    ); // 201 = ./nodes/AnimatedValue
var AnimatedValueXY = require(217                      ); // 217 = ./nodes/AnimatedValueXY
var DecayAnimation = require(218                          ); // 218 = ./animations/DecayAnimation
var SpringAnimation = require(220                           ); // 220 = ./animations/SpringAnimation
var TimingAnimation = require(222                           ); // 222 = ./animations/TimingAnimation

var createAnimatedComponent = require(225                        ); // 225 = ./createAnimatedComponent

var add = function add(a, b) {
  return new AnimatedAddition(a, b);
};

var divide = function divide(a, b) {
  return new AnimatedDivision(a, b);
};

var multiply = function multiply(a, b) {
  return new AnimatedMultiplication(a, b);
};

var modulo = function modulo(a, modulus) {
  return new AnimatedModulo(a, modulus);
};

var diffClamp = function diffClamp(a, min, max) {
  return new AnimatedDiffClamp(a, min, max);
};

var _combineCallbacks = function _combineCallbacks(callback, config) {
  if (callback && config.onComplete) {
    return function () {
      config.onComplete && config.onComplete.apply(config, arguments);
      callback && callback.apply(undefined, arguments);
    };
  } else {
    return callback || config.onComplete;
  }
};

var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
  if (value instanceof AnimatedValueXY) {
    var configX = babelHelpers.extends({}, config);
    var configY = babelHelpers.extends({}, config);
    for (var key in config) {
      var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;

      if (x !== undefined && y !== undefined) {
        configX[key] = x;
        configY[key] = y;
      }
    }
    var aX = anim(value.x, configX);
    var aY = anim(value.y, configY);

    return parallel([aX, aY], { stopTogether: false });
  }
  return null;
};

var spring = function spring(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof AnimatedNode) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new SpringAnimation(singleConfig), callback);
    }
  };
  return maybeVectorAnim(value, config, spring) || {
    start: function (_start) {
      function start(_x) {
        return _start.apply(this, arguments);
      }

      start.toString = function () {
        return _start.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var timing = function timing(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof AnimatedNode) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new TimingAnimation(singleConfig), callback);
    }
  };

  return maybeVectorAnim(value, config, timing) || {
    start: function (_start2) {
      function start(_x2) {
        return _start2.apply(this, arguments);
      }

      start.toString = function () {
        return _start2.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var decay = function decay(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    singleValue.animate(new DecayAnimation(singleConfig), callback);
  };

  return maybeVectorAnim(value, config, decay) || {
    start: function (_start3) {
      function start(_x3) {
        return _start3.apply(this, arguments);
      }

      start.toString = function () {
        return _start3.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var sequence = function sequence(animations) {
  var current = 0;
  return {
    start: function start(callback) {
      var onComplete = function onComplete(result) {
        if (!result.finished) {
          callback && callback(result);
          return;
        }

        current++;

        if (current === animations.length) {
          callback && callback(result);
          return;
        }

        animations[current].start(onComplete);
      };

      if (animations.length === 0) {
        callback && callback({ finished: true });
      } else {
        animations[current].start(onComplete);
      }
    },

    stop: function stop() {
      if (current < animations.length) {
        animations[current].stop();
      }
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        if (idx <= current) {
          animation.reset();
        }
      });
      current = 0;
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };
};

var parallel = function parallel(animations, config) {
  var doneCount = 0;

  var hasEnded = {};
  var stopTogether = !(config && config.stopTogether === false);

  var result = {
    start: function start(callback) {
      if (doneCount === animations.length) {
        callback && callback({ finished: true });
        return;
      }

      animations.forEach(function (animation, idx) {
        var cb = function cb(endResult) {
          hasEnded[idx] = true;
          doneCount++;
          if (doneCount === animations.length) {
            doneCount = 0;
            callback && callback(endResult);
            return;
          }

          if (!endResult.finished && stopTogether) {
            result.stop();
          }
        };

        if (!animation) {
          cb({ finished: true });
        } else {
          animation.start(cb);
        }
      });
    },

    stop: function stop() {
      animations.forEach(function (animation, idx) {
        !hasEnded[idx] && animation.stop();
        hasEnded[idx] = true;
      });
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        animation.reset();
        hasEnded[idx] = false;
        doneCount = 0;
      });
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  return result;
};

var delay = function delay(time) {
  return timing(new AnimatedValue(0), { toValue: 0, delay: time, duration: 0 });
};

var stagger = function stagger(time, animations) {
  return parallel(animations.map(function (animation, i) {
    return sequence([delay(time * i), animation]);
  }));
};

var loop = function loop(animation) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$iterations = _ref.iterations,
      iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

  var isFinished = false;
  var iterationsSoFar = 0;
  return {
    start: function start(callback) {
      var restart = function restart() {
        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { finished: true };

        if (isFinished || iterationsSoFar === iterations || result.finished === false) {
          callback && callback(result);
        } else {
          iterationsSoFar++;
          animation.reset();
          animation.start(restart);
        }
      };
      if (!animation || iterations === 0) {
        callback && callback({ finished: true });
      } else {
        if (animation._isUsingNativeDriver()) {
          animation._startNativeLoop(iterations);
        } else {
          restart();
        }
      }
    },

    stop: function stop() {
      isFinished = true;
      animation.stop();
    },

    reset: function reset() {
      iterationsSoFar = 0;
      isFinished = false;
      animation.reset();
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return animation._isUsingNativeDriver();
    }
  };
};

function forkEvent(event, listener) {
  if (!event) {
    return listener;
  } else if (event instanceof AnimatedEvent) {
    event.__addListener(listener);
    return event;
  } else {
    return function () {
      typeof event === 'function' && event.apply(undefined, arguments);
      listener.apply(undefined, arguments);
    };
  }
}

function unforkEvent(event, listener) {
  if (event && event instanceof AnimatedEvent) {
    event.__removeListener(listener);
  }
}

var event = function event(argMapping, config) {
  var animatedEvent = new AnimatedEvent(argMapping, config);
  if (animatedEvent.__isNative) {
    return animatedEvent;
  } else {
    return animatedEvent.__getHandler();
  }
};

module.exports = {
  Value: AnimatedValue,

  ValueXY: AnimatedValueXY,

  Interpolation: AnimatedInterpolation,

  Node: AnimatedNode,

  decay: decay,

  timing: timing,

  spring: spring,

  add: add,

  divide: divide,

  multiply: multiply,

  modulo: modulo,

  diffClamp: diffClamp,

  delay: delay,

  sequence: sequence,

  parallel: parallel,

  stagger: stagger,

  loop: loop,

  event: event,

  createAnimatedComponent: createAnimatedComponent,

  attachNativeEvent: attachNativeEvent,

  forkEvent: forkEvent,
  unforkEvent: unforkEvent,

  __PropsOnlyForTests: AnimatedProps
};
}, 199, null, "AnimatedImplementation");
__d(/* AnimatedEvent */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(201                    ); // 201 = ./nodes/AnimatedValue
var NativeAnimatedHelper = require(204                     ); // 204 = ./NativeAnimatedHelper
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(204                     ), // 204 = ./NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

function attachNativeEvent(viewRef, eventName, argMapping) {
  var eventMappings = [];

  var traverse = function traverse(value, path) {
    if (value instanceof AnimatedValue) {
      value.__makeNative();

      eventMappings.push({
        nativeEventPath: path,
        animatedValueTag: value.__getNativeTag()
      });
    } else if (typeof value === 'object') {
      for (var _key in value) {
        traverse(value[_key], path.concat(_key));
      }
    }
  };

  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');

  traverse(argMapping[0].nativeEvent, []);

  var viewTag = ReactNative.findNodeHandle(viewRef);

  eventMappings.forEach(function (mapping) {
    NativeAnimatedHelper.API.addAnimatedEventToView(viewTag, eventName, mapping);
  });

  return {
    detach: function detach() {
      eventMappings.forEach(function (mapping) {
        NativeAnimatedHelper.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
      });
    }
  };
}

var AnimatedEvent = function () {
  function AnimatedEvent(argMapping) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    babelHelpers.classCallCheck(this, AnimatedEvent);
    this._listeners = [];

    this._argMapping = argMapping;
    if (config.listener) {
      this.__addListener(config.listener);
    }
    this._callListeners = this._callListeners.bind(this);
    this._attachedEvent = null;
    this.__isNative = shouldUseNativeDriver(config);

    if (__DEV__) {
      this._validateMapping();
    }
  }

  babelHelpers.createClass(AnimatedEvent, [{
    key: '__addListener',
    value: function __addListener(callback) {
      this._listeners.push(callback);
    }
  }, {
    key: '__removeListener',
    value: function __removeListener(callback) {
      this._listeners = this._listeners.filter(function (listener) {
        return listener !== callback;
      });
    }
  }, {
    key: '__attach',
    value: function __attach(viewRef, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be attached.');

      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);
    }
  }, {
    key: '__detach',
    value: function __detach(viewTag, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be detached.');

      this._attachedEvent && this._attachedEvent.detach();
    }
  }, {
    key: '__getHandler',
    value: function __getHandler() {
      var _this = this;

      if (this.__isNative) {
        return this._callListeners;
      }

      return function () {
        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
          args[_key2] = arguments[_key2];
        }

        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
            recMapping.setValue(recEvt);
          } else if (typeof recMapping === 'object') {
            for (var mappingKey in recMapping) {
              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
            }
          }
        };

        if (!_this.__isNative) {
          _this._argMapping.forEach(function (mapping, idx) {
            traverse(mapping, args[idx], 'arg' + idx);
          });
        }
        _this._callListeners.apply(_this, babelHelpers.toConsumableArray(args));
      };
    }
  }, {
    key: '_callListeners',
    value: function _callListeners() {
      for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
        args[_key3] = arguments[_key3];
      }

      this._listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    }
  }, {
    key: '_validateMapping',
    value: function _validateMapping() {
      var traverse = function traverse(recMapping, recEvt, key) {
        if (typeof recEvt === 'number') {
          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
          return;
        }
        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);
        for (var mappingKey in recMapping) {
          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
        }
      };
    }
  }]);
  return AnimatedEvent;
}();

module.exports = { AnimatedEvent: AnimatedEvent, attachNativeEvent: attachNativeEvent };
}, 200, null, "AnimatedEvent");
__d(/* AnimatedValue */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren
var InteractionManager = require(206                 ); // 206 = InteractionManager
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var NativeAnimatedAPI = NativeAnimatedHelper.API;

var _uniqueId = 1;

function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {
    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {
    return animatedStyle.update();
  });
}

var AnimatedValue = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValue, _AnimatedWithChildren);

  function AnimatedValue(value) {
    babelHelpers.classCallCheck(this, AnimatedValue);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedValue.__proto__ || Object.getPrototypeOf(AnimatedValue)).call(this));

    _this._startingValue = _this._value = value;
    _this._offset = 0;
    _this._animation = null;
    _this._listeners = {};
    return _this;
  }

  babelHelpers.createClass(AnimatedValue, [{
    key: '__detach',
    value: function __detach() {
      this.stopAnimation();
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._value + this._offset;
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__makeNative', this).call(this);

      if (Object.keys(this._listeners).length) {
        this._startListeningToNativeValueUpdates();
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(value, !this.__isNative);
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var id = String(_uniqueId++);
      this._listeners[id] = callback;
      if (this.__isNative) {
        this._startListeningToNativeValueUpdates();
      }
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      delete this._listeners[id];
      if (this.__isNative && Object.keys(this._listeners).length === 0) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = {};
      if (this.__isNative) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: '_startListeningToNativeValueUpdates',
    value: function _startListeningToNativeValueUpdates() {
      var _this2 = this;

      if (this.__nativeAnimatedValueListener) {
        return;
      }

      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
        if (data.tag !== _this2.__getNativeTag()) {
          return;
        }
        _this2._updateValue(data.value, false);
      });
    }
  }, {
    key: '_stopListeningForNativeValueUpdates',
    value: function _stopListeningForNativeValueUpdates() {
      if (!this.__nativeAnimatedValueListener) {
        return;
      }

      this.__nativeAnimatedValueListener.remove();
      this.__nativeAnimatedValueListener = null;
      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.stopAnimation(callback);
      this._value = this._startingValue;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: 'animate',
    value: function animate(animation, callback) {
      var _this3 = this;

      var handle = null;
      if (animation.__isInteraction) {
        handle = InteractionManager.createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(this._value, function (value) {
        _this3._updateValue(value, true);
      }, function (result) {
        _this3._animation = null;
        if (handle !== null) {
          InteractionManager.clearInteractionHandle(handle);
        }
        callback && callback(result);
      }, previousAnimation, this);
    }
  }, {
    key: 'stopTracking',
    value: function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    }
  }, {
    key: 'track',
    value: function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    }
  }, {
    key: '_updateValue',
    value: function _updateValue(value, flush) {
      this._value = value;
      if (flush) {
        _flush(this);
      }
      for (var _key in this._listeners) {
        this._listeners[_key]({ value: this.__getValue() });
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset
      };
    }
  }]);
  return AnimatedValue;
}(AnimatedWithChildren);

module.exports = AnimatedValue;
}, 201, null, "AnimatedValue");
__d(/* AnimatedInterpolation */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var normalizeColor = require(119             ); // 119 = normalizeColor

var linear = function linear(t) {
  return t;
};

function createInterpolation(config) {
  if (config.outputRange && typeof config.outputRange[0] === 'string') {
    return createInterpolationFromStringOutputRange(config);
  }

  var outputRange = config.outputRange;
  checkInfiniteRange('outputRange', outputRange);

  var inputRange = config.inputRange;
  checkInfiniteRange('inputRange', inputRange);
  checkValidInputRange(inputRange);

  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');

  var easing = config.easing || linear;

  var extrapolateLeft = 'extend';
  if (config.extrapolateLeft !== undefined) {
    extrapolateLeft = config.extrapolateLeft;
  } else if (config.extrapolate !== undefined) {
    extrapolateLeft = config.extrapolate;
  }

  var extrapolateRight = 'extend';
  if (config.extrapolateRight !== undefined) {
    extrapolateRight = config.extrapolateRight;
  } else if (config.extrapolate !== undefined) {
    extrapolateRight = config.extrapolate;
  }

  return function (input) {
    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');

    var range = findRange(input, inputRange);
    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
  };
}

function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
  var result = input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') {
      return result;
    } else if (extrapolateLeft === 'clamp') {
      result = inputMin;
    } else if (extrapolateLeft === 'extend') {}
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') {
      return result;
    } else if (extrapolateRight === 'clamp') {
      result = inputMax;
    } else if (extrapolateRight === 'extend') {}
  }

  if (outputMin === outputMax) {
    return outputMin;
  }

  if (inputMin === inputMax) {
    if (input <= inputMin) {
      return outputMin;
    }
    return outputMax;
  }

  if (inputMin === -Infinity) {
    result = -result;
  } else if (inputMax === Infinity) {
    result = result - inputMin;
  } else {
    result = (result - inputMin) / (inputMax - inputMin);
  }

  result = easing(result);

  if (outputMin === -Infinity) {
    result = -result;
  } else if (outputMax === Infinity) {
    result = result + outputMin;
  } else {
    result = result * (outputMax - outputMin) + outputMin;
  }

  return result;
}

function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null) {
    return input;
  }

  int32Color = int32Color || 0;

  var r = (int32Color & 0xff000000) >>> 24;
  var g = (int32Color & 0x00ff0000) >>> 16;
  var b = (int32Color & 0x0000ff00) >>> 8;
  var a = (int32Color & 0x000000ff) / 255;

  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
}

var stringShapeRegex = /[0-9\.-]+/g;

function createInterpolationFromStringOutputRange(config) {
  var outputRange = config.outputRange;
  invariant(outputRange.length >= 2, 'Bad output range');
  outputRange = outputRange.map(colorToRgba);
  checkPattern(outputRange);

  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
    return [];
  });
  outputRange.forEach(function (value) {
    value.match(stringShapeRegex).forEach(function (number, i) {
      outputRanges[i].push(+number);
    });
  });

  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
    return createInterpolation(babelHelpers.extends({}, config, {
      outputRange: outputRanges[i]
    }));
  });

  var shouldRound = isRgbOrRgba(outputRange[0]);

  return function (input) {
    var i = 0;

    return outputRange[0].replace(stringShapeRegex, function () {
      var val = +interpolations[i++](input);
      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
      return String(rounded);
    });
  };
}

function isRgbOrRgba(range) {
  return typeof range === 'string' && range.startsWith('rgb');
}

function checkPattern(arr) {
  var pattern = arr[0].replace(stringShapeRegex, '');
  for (var i = 1; i < arr.length; ++i) {
    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
  }
}

function findRange(input, inputRange) {
  var i = void 0;
  for (i = 1; i < inputRange.length - 1; ++i) {
    if (inputRange[i] >= input) {
      break;
    }
  }
  return i - 1;
}

function checkValidInputRange(arr) {
  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
  for (var i = 1; i < arr.length; ++i) {
    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);
  }
}

function checkInfiniteRange(name, arr) {
  invariant(arr.length >= 2, name + ' must have at least 2 elements');
  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
}

var AnimatedInterpolation = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedInterpolation, _AnimatedWithChildren);

  function AnimatedInterpolation(parent, config) {
    babelHelpers.classCallCheck(this, AnimatedInterpolation);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedInterpolation.__proto__ || Object.getPrototypeOf(AnimatedInterpolation)).call(this));

    _this._parent = parent;
    _this._config = config;
    _this._interpolation = createInterpolation(config);
    return _this;
  }

  babelHelpers.createClass(AnimatedInterpolation, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._parent.__makeNative();
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var parentValue = this._parent.__getValue();
      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
      return this._interpolation(parentValue);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__transformDataType',
    value: function __transformDataType(range) {
      return range.map(function (value) {
        if (typeof value !== 'string') {
          return value;
        }
        if (/deg$/.test(value)) {
          var degrees = parseFloat(value) || 0;
          var radians = degrees * Math.PI / 180.0;
          return radians;
        } else {
          return parseFloat(value) || 0;
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      if (__DEV__) {
        NativeAnimatedHelper.validateInterpolation(this._config);
      }

      return {
        inputRange: this._config.inputRange,

        outputRange: this.__transformDataType(this._config.outputRange),
        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
        type: 'interpolation'
      };
    }
  }]);
  return AnimatedInterpolation;
}(AnimatedWithChildren);

AnimatedInterpolation.__createInterpolation = createInterpolation;


module.exports = AnimatedInterpolation;
}, 202, null, "AnimatedInterpolation");
__d(/* AnimatedNode */function(global, require, module, exports) {
'use strict';

var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AnimatedNode = function () {
  function AnimatedNode() {
    babelHelpers.classCallCheck(this, AnimatedNode);
  }

  babelHelpers.createClass(AnimatedNode, [{
    key: '__attach',
    value: function __attach() {}
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: '__getValue',
    value: function __getValue() {}
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {}
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {}
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return [];
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: '__getNativeTag',
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return AnimatedNode;
}();

module.exports = AnimatedNode;
}, 203, null, "AnimatedNode");
__d(/* NativeAnimatedHelper */function(global, require, module, exports) {
'use strict';

var NativeAnimatedModule = require(15             ).NativeAnimatedModule; // 15 = NativeModules
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var __nativeAnimatedNodeTagCount = 1;
var __nativeAnimationIdCount = 1;

var nativeEventEmitter = void 0;

var API = {
  createAnimatedNode: function createAnimatedNode(tag, config) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.createAnimatedNode(tag, config);
  },
  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
  },
  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
  },
  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
  },
  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
  },
  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
  },
  stopAnimation: function stopAnimation(animationId) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopAnimation(animationId);
  },
  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
  },
  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
  },
  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
  },
  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
  },
  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
  },
  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
  },
  dropAnimatedNode: function dropAnimatedNode(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.dropAnimatedNode(tag);
  },
  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
  },
  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
  }
};

var STYLES_WHITELIST = {
  opacity: true,
  transform: true,

  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};

var TRANSFORM_WHITELIST = {
  translateX: true,
  translateY: true,
  scale: true,
  scaleX: true,
  scaleY: true,
  rotate: true,
  rotateX: true,
  rotateY: true,
  perspective: true
};

function validateTransform(configs) {
  configs.forEach(function (config) {
    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
      throw new Error('Property \'' + config.property + '\' is not supported by native animated module');
    }
  });
}

function validateStyles(styles) {
  for (var key in styles) {
    if (!STYLES_WHITELIST.hasOwnProperty(key)) {
      throw new Error('Style property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function validateInterpolation(config) {
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };
  for (var key in config) {
    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
      throw new Error('Interpolation property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function generateNewNodeTag() {
  return __nativeAnimatedNodeTagCount++;
}

function generateNewAnimationId() {
  return __nativeAnimationIdCount++;
}

function assertNativeAnimatedModule() {
  invariant(NativeAnimatedModule, 'Native animated module is not available');
}

var _warnedMissingNativeAnimated = false;

function shouldUseNativeDriver(config) {
  if (config.useNativeDriver && !NativeAnimatedModule) {
    if (!_warnedMissingNativeAnimated) {
      console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420');
      _warnedMissingNativeAnimated = true;
    }
    return false;
  }

  return config.useNativeDriver || false;
}

module.exports = {
  API: API,
  validateStyles: validateStyles,
  validateTransform: validateTransform,
  validateInterpolation: validateInterpolation,
  generateNewNodeTag: generateNewNodeTag,
  generateNewAnimationId: generateNewAnimationId,
  assertNativeAnimatedModule: assertNativeAnimatedModule,
  shouldUseNativeDriver: shouldUseNativeDriver,
  get nativeEventEmitter() {
    if (!nativeEventEmitter) {
      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
    }
    return nativeEventEmitter;
  }
};
}, 204, null, "NativeAnimatedHelper");
__d(/* AnimatedWithChildren */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var AnimatedWithChildren = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedWithChildren, _AnimatedNode);

  function AnimatedWithChildren() {
    babelHelpers.classCallCheck(this, AnimatedWithChildren);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];
    return _this;
  }

  babelHelpers.createClass(AnimatedWithChildren, [{
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var child = _ref;

          child.__makeNative();
          NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {
        child.__makeNative();
        NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
    }
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn("Trying to remove a child that doesn't exist");
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    }
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return this._children;
    }
  }]);
  return AnimatedWithChildren;
}(AnimatedNode);

module.exports = AnimatedWithChildren;
}, 205, null, "AnimatedWithChildren");
__d(/* InteractionManager */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge
var EventEmitter = require(88            ); // 88 = EventEmitter
var Set = require(63   ); // 63 = Set
var TaskQueue = require(207        ); // 207 = TaskQueue

var infoLog = require(115      ); // 115 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror

var _emitter = new EventEmitter();

var DEBUG_DELAY = 0;
var DEBUG = false;

var InteractionManager = {
  Events: keyMirror({
    interactionStart: true,
    interactionComplete: true
  }),

  runAfterInteractions: function runAfterInteractions(task) {
    var tasks = [];
    var promise = new Promise(function (resolve) {
      _scheduleUpdate();
      if (task) {
        tasks.push(task);
      }
      tasks.push({ run: resolve, name: 'resolve ' + (task && task.name || '?') });
      _taskQueue.enqueueTasks(tasks);
    });
    return {
      then: promise.then.bind(promise),
      done: function done() {
        if (promise.done) {
          return promise.done.apply(promise, arguments);
        } else {
          console.warn('Tried to call done when not supported by current Promise implementation.');
        }
      },
      cancel: function cancel() {
        _taskQueue.cancelTasks(tasks);
      }
    };
  },
  createInteractionHandle: function createInteractionHandle() {
    DEBUG && infoLog('create interaction handle');
    _scheduleUpdate();
    var handle = ++_inc;
    _addInteractionSet.add(handle);
    return handle;
  },
  clearInteractionHandle: function clearInteractionHandle(handle) {
    DEBUG && infoLog('clear interaction handle');
    invariant(!!handle, 'Must provide a handle to clear.');
    _scheduleUpdate();
    _addInteractionSet.delete(handle);
    _deleteInteractionSet.add(handle);
  },


  addListener: _emitter.addListener.bind(_emitter),

  setDeadline: function setDeadline(deadline) {
    _deadline = deadline;
  }
};

var _interactionSet = new Set();
var _addInteractionSet = new Set();
var _deleteInteractionSet = new Set();
var _taskQueue = new TaskQueue({ onMoreTasks: _scheduleUpdate });
var _nextUpdateHandle = 0;
var _inc = 0;
var _deadline = -1;

function _scheduleUpdate() {
  if (!_nextUpdateHandle) {
    if (_deadline > 0) {
      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);
    } else {
      _nextUpdateHandle = setImmediate(_processUpdate);
    }
  }
}

function _processUpdate() {
  _nextUpdateHandle = 0;

  var interactionCount = _interactionSet.size;
  _addInteractionSet.forEach(function (handle) {
    return _interactionSet.add(handle);
  });
  _deleteInteractionSet.forEach(function (handle) {
    return _interactionSet.delete(handle);
  });
  var nextInteractionCount = _interactionSet.size;

  if (interactionCount !== 0 && nextInteractionCount === 0) {
    _emitter.emit(InteractionManager.Events.interactionComplete);
  } else if (interactionCount === 0 && nextInteractionCount !== 0) {
    _emitter.emit(InteractionManager.Events.interactionStart);
  }

  if (nextInteractionCount === 0) {
    while (_taskQueue.hasTasksToProcess()) {
      _taskQueue.processNext();
      if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
        _scheduleUpdate();
        break;
      }
    }
  }
  _addInteractionSet.clear();
  _deleteInteractionSet.clear();
}

module.exports = InteractionManager;
}, 206, null, "InteractionManager");
__d(/* TaskQueue */function(global, require, module, exports) {
'use strict';

var infoLog = require(115      ); // 115 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var DEBUG = false;

var TaskQueue = function () {
  function TaskQueue(_ref) {
    var onMoreTasks = _ref.onMoreTasks;
    babelHelpers.classCallCheck(this, TaskQueue);

    this._onMoreTasks = onMoreTasks;
    this._queueStack = [{ tasks: [], popable: false }];
  }

  babelHelpers.createClass(TaskQueue, [{
    key: 'enqueue',
    value: function enqueue(task) {
      this._getCurrentQueue().push(task);
    }
  }, {
    key: 'enqueueTasks',
    value: function enqueueTasks(tasks) {
      var _this = this;

      tasks.forEach(function (task) {
        return _this.enqueue(task);
      });
    }
  }, {
    key: 'cancelTasks',
    value: function cancelTasks(tasksToCancel) {
      this._queueStack = this._queueStack.map(function (queue) {
        return babelHelpers.extends({}, queue, {
          tasks: queue.tasks.filter(function (task) {
            return tasksToCancel.indexOf(task) === -1;
          })
        });
      }).filter(function (queue, idx) {
        return queue.tasks.length > 0 || idx === 0;
      });
    }
  }, {
    key: 'hasTasksToProcess',
    value: function hasTasksToProcess() {
      return this._getCurrentQueue().length > 0;
    }
  }, {
    key: 'processNext',
    value: function processNext() {
      var queue = this._getCurrentQueue();
      if (queue.length) {
        var task = queue.shift();
        try {
          if (task.gen) {
            DEBUG && infoLog('genPromise for task ' + task.name);
            this._genPromise(task);
          } else if (task.run) {
            DEBUG && infoLog('run task ' + task.name);
            task.run();
          } else {
            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
            DEBUG && infoLog('run anonymous task');
            task();
          }
        } catch (e) {
          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
          throw e;
        }
      }
    }
  }, {
    key: '_getCurrentQueue',
    value: function _getCurrentQueue() {
      var stackIdx = this._queueStack.length - 1;
      var queue = this._queueStack[stackIdx];
      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
        this._queueStack.pop();
        DEBUG && infoLog('popped queue: ', { stackIdx: stackIdx, queueStackSize: this._queueStack.length });
        return this._getCurrentQueue();
      } else {
        return queue.tasks;
      }
    }
  }, {
    key: '_genPromise',
    value: function _genPromise(task) {
      var _this2 = this;

      this._queueStack.push({ tasks: [], popable: false });
      var stackIdx = this._queueStack.length - 1;
      DEBUG && infoLog('push new queue: ', { stackIdx: stackIdx });
      DEBUG && infoLog('exec gen task ' + task.name);
      task.gen().then(function () {
        DEBUG && infoLog('onThen for gen task ' + task.name, { stackIdx: stackIdx, queueStackSize: _this2._queueStack.length });
        _this2._queueStack[stackIdx].popable = true;
        _this2.hasTasksToProcess() && _this2._onMoreTasks();
      }).catch(function (ex) {
        ex.message = 'TaskQueue: Error resolving Promise in task ' + task.name + ': ' + ex.message;
        throw ex;
      }).done();
    }
  }]);
  return TaskQueue;
}();

module.exports = TaskQueue;
}, 207, null, "TaskQueue");
__d(/* AnimatedAddition */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedValue = require(201              ); // 201 = ./AnimatedValue
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var AnimatedAddition = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedAddition, _AnimatedWithChildren);

  function AnimatedAddition(a, b) {
    babelHelpers.classCallCheck(this, AnimatedAddition);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedAddition.__proto__ || Object.getPrototypeOf(AnimatedAddition)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedAddition, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);

module.exports = AnimatedAddition;
}, 208, null, "AnimatedAddition");
__d(/* AnimatedDiffClamp */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var AnimatedDiffClamp = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedDiffClamp, _AnimatedWithChildren);

  function AnimatedDiffClamp(a, min, max) {
    babelHelpers.classCallCheck(this, AnimatedDiffClamp);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedDiffClamp.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp)).call(this));

    _this._a = a;
    _this._min = min;
    _this._max = max;
    _this._value = _this._lastValue = _this._a.__getValue();
    return _this;
  }

  babelHelpers.createClass(AnimatedDiffClamp, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var value = this._a.__getValue();
      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

module.exports = AnimatedDiffClamp;
}, 209, null, "AnimatedDiffClamp");
__d(/* AnimatedDivision */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedValue = require(201              ); // 201 = ./AnimatedValue
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var AnimatedDivision = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedDivision, _AnimatedWithChildren);

  function AnimatedDivision(a, b) {
    babelHelpers.classCallCheck(this, AnimatedDivision);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedDivision.__proto__ || Object.getPrototypeOf(AnimatedDivision)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedDivision, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var a = this._a.__getValue();
      var b = this._b.__getValue();
      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }
      return a / b;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

module.exports = AnimatedDivision;
}, 210, null, "AnimatedDivision");
__d(/* AnimatedModulo */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var AnimatedModulo = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedModulo, _AnimatedWithChildren);

  function AnimatedModulo(a, modulus) {
    babelHelpers.classCallCheck(this, AnimatedModulo);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedModulo.__proto__ || Object.getPrototypeOf(AnimatedModulo)).call(this));

    _this._a = a;
    _this._modulus = modulus;
    return _this;
  }

  babelHelpers.createClass(AnimatedModulo, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'modulus',
        input: this._a.__getNativeTag(),
        modulus: this._modulus
      };
    }
  }]);
  return AnimatedModulo;
}(AnimatedWithChildren);

module.exports = AnimatedModulo;
}, 211, null, "AnimatedModulo");
__d(/* AnimatedMultiplication */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(202                      ); // 202 = ./AnimatedInterpolation
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedValue = require(201              ); // 201 = ./AnimatedValue
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var AnimatedMultiplication = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedMultiplication, _AnimatedWithChildren);

  function AnimatedMultiplication(a, b) {
    babelHelpers.classCallCheck(this, AnimatedMultiplication);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedMultiplication.__proto__ || Object.getPrototypeOf(AnimatedMultiplication)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedMultiplication, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedMultiplication;
}(AnimatedWithChildren);

module.exports = AnimatedMultiplication;
}, 212, null, "AnimatedMultiplication");
__d(/* AnimatedProps */function(global, require, module, exports) {
'use strict';

var _require = require(200               ), // 200 = ../AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent;

var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedStyle = require(214              ); // 214 = ./AnimatedStyle
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AnimatedProps = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedProps, _AnimatedNode);

  function AnimatedProps(props, callback) {
    babelHelpers.classCallCheck(this, AnimatedProps);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedProps.__proto__ || Object.getPrototypeOf(AnimatedProps)).call(this));

    if (props.style) {
      props = babelHelpers.extends({}, props, {
        style: new AnimatedStyle(props.style)
      });
    }
    _this._props = props;
    _this._callback = callback;
    _this.__attach();
    return _this;
  }

  babelHelpers.createClass(AnimatedProps, [{
    key: '__getValue',
    value: function __getValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          if (!value.__isNative || value instanceof AnimatedStyle) {
            props[key] = value.__getValue();
          }
        } else if (value instanceof AnimatedEvent) {
          props[key] = value.__getHandler();
        } else {
          props[key] = value;
        }
      }
      return props;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          props[key] = value.__getAnimatedValue();
        }
      }
      return props;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this._animatedView) {
        this.__disconnectAnimatedView();
      }
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedProps.prototype.__proto__ || Object.getPrototypeOf(AnimatedProps.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._callback();
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var key in this._props) {
          var value = this._props[key];
          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }
        if (this._animatedView) {
          this.__connectAnimatedView();
        }
      }
    }
  }, {
    key: 'setNativeView',
    value: function setNativeView(animatedView) {
      if (this._animatedView === animatedView) {
        return;
      }
      this._animatedView = animatedView;
      if (this.__isNative) {
        this.__connectAnimatedView();
      }
    }
  }, {
    key: '__connectAnimatedView',
    value: function __connectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__disconnectAnimatedView',
    value: function __disconnectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var propsConfig = {};
      for (var propKey in this._props) {
        var value = this._props[propKey];
        if (value instanceof AnimatedNode) {
          propsConfig[propKey] = value.__getNativeTag();
        }
      }
      return {
        type: 'props',
        props: propsConfig
      };
    }
  }]);
  return AnimatedProps;
}(AnimatedNode);

module.exports = AnimatedProps;
}, 213, null, "AnimatedProps");
__d(/* AnimatedStyle */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedTransform = require(215                  ); // 215 = ./AnimatedTransform
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var flattenStyle = require(50            ); // 50 = flattenStyle

var AnimatedStyle = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedStyle, _AnimatedWithChildren);

  function AnimatedStyle(style) {
    babelHelpers.classCallCheck(this, AnimatedStyle);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));

    style = flattenStyle(style) || {};
    if (style.transform) {
      style = babelHelpers.extends({}, style, {
        transform: new AnimatedTransform(style.transform)
      });
    }
    _this._style = style;
    return _this;
  }

  babelHelpers.createClass(AnimatedStyle, [{
    key: '_walkStyleAndGetValues',
    value: function _walkStyleAndGetValues(style) {
      var updatedStyle = {};
      for (var key in style) {
        var value = style[key];
        if (value instanceof AnimatedNode) {
          if (!value.__isNative) {
            updatedStyle[key] = value.__getValue();
          }
        } else if (value && !Array.isArray(value) && typeof value === 'object') {
          updatedStyle[key] = this._walkStyleAndGetValues(value);
        } else {
          updatedStyle[key] = value;
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._walkStyleAndGetValues(this._style);
    }
  }, {
    key: '_walkStyleAndGetAnimatedValues',
    value: function _walkStyleAndGetAnimatedValues(style) {
      var updatedStyle = {};
      for (var key in style) {
        var value = style[key];
        if (value instanceof AnimatedNode) {
          updatedStyle[key] = value.__getAnimatedValue();
        } else if (value && !Array.isArray(value) && typeof value === 'object') {
          updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._walkStyleAndGetAnimatedValues(this._style);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__makeNative', this).call(this);
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__makeNative();
        }
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var styleConfig = {};
      for (var styleKey in this._style) {
        if (this._style[styleKey] instanceof AnimatedNode) {
          styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
        }
      }
      NativeAnimatedHelper.validateStyles(styleConfig);
      return {
        type: 'style',
        style: styleConfig
      };
    }
  }]);
  return AnimatedStyle;
}(AnimatedWithChildren);

module.exports = AnimatedStyle;
}, 214, null, "AnimatedStyle");
__d(/* AnimatedTransform */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(203             ); // 203 = ./AnimatedNode
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(204                      ); // 204 = ../NativeAnimatedHelper

var AnimatedTransform = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedTransform, _AnimatedWithChildren);

  function AnimatedTransform(transforms) {
    babelHelpers.classCallCheck(this, AnimatedTransform);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedTransform.__proto__ || Object.getPrototypeOf(AnimatedTransform)).call(this));

    _this._transforms = transforms;
    return _this;
  }

  babelHelpers.createClass(AnimatedTransform, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__makeNative', this).call(this);
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }
      });
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__attach',
    value: function __attach() {
      var _this2 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__addChild(_this2);
          }
        }
      });
    }
  }, {
    key: '__detach',
    value: function __detach() {
      var _this3 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__removeChild(_this3);
          }
        }
      });
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: value
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

module.exports = AnimatedTransform;
}, 215, null, "AnimatedTransform");
__d(/* AnimatedTracking */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(201              ); // 201 = ./AnimatedValue
var AnimatedNode = require(203             ); // 203 = ./AnimatedNode

var AnimatedTracking = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedTracking, _AnimatedNode);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    babelHelpers.classCallCheck(this, AnimatedTracking);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this._value = value;
    _this._parent = parent;
    _this._animationClass = animationClass;
    _this._animationConfig = animationConfig;
    _this._callback = callback;
    _this.__attach();
    return _this;
  }

  babelHelpers.createClass(AnimatedTracking, [{
    key: '__getValue',
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._value.animate(new this._animationClass(babelHelpers.extends({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }]);
  return AnimatedTracking;
}(AnimatedNode);

module.exports = AnimatedTracking;
}, 216, null, "AnimatedTracking");
__d(/* AnimatedValueXY */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(201              ); // 201 = ./AnimatedValue
var AnimatedWithChildren = require(205                     ); // 205 = ./AnimatedWithChildren

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _uniqueId = 1;

var AnimatedValueXY = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this.x = new AnimatedValue(value.x);
      _this.y = new AnimatedValue(value.y);
    } else {
      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initalized with an object of numbers or ' + 'AnimatedValues.');
      _this.x = value.x;
      _this.y = value.y;
    }
    _this._listeners = {};
    return _this;
  }

  babelHelpers.createClass(AnimatedValueXY, [{
    key: 'setValue',
    value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this.x.extractOffset();
      this.y.extractOffset();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue()
      };
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.x.resetAnimation();
      this.y.resetAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var _this2 = this;

      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref) {
        var number = _ref.value;

        callback(_this2.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback)
      };
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    }
  }, {
    key: 'getLayout',
    value: function getLayout() {
      return {
        left: this.x,
        top: this.y
      };
    }
  }, {
    key: 'getTranslateTransform',
    value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    }
  }]);
  return AnimatedValueXY;
}(AnimatedWithChildren);

module.exports = AnimatedValueXY;
}, 217, null, "AnimatedValueXY");
__d(/* DecayAnimation */function(global, require, module, exports) {
'use strict';

var Animation = require(219          ); // 219 = ./Animation

var _require = require(204                      ), // 204 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var DecayAnimation = function (_Animation) {
  babelHelpers.inherits(DecayAnimation, _Animation);

  function DecayAnimation(config) {
    babelHelpers.classCallCheck(this, DecayAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (DecayAnimation.__proto__ || Object.getPrototypeOf(DecayAnimation)).call(this));

    _this._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
    _this._velocity = config.velocity;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
    return _this;
  }

  babelHelpers.createClass(DecayAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();

      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._lastValue = value;
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(DecayAnimation.prototype.__proto__ || Object.getPrototypeOf(DecayAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return DecayAnimation;
}(Animation);

module.exports = DecayAnimation;
}, 218, null, "DecayAnimation");
__d(/* Animation */function(global, require, module, exports) {
'use strict';

var NativeAnimatedHelper = require(204                   ); // 204 = NativeAnimatedHelper

var Animation = function () {
  function Animation() {
    babelHelpers.classCallCheck(this, Animation);
  }

  babelHelpers.createClass(Animation, [{
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: 'stop',
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: '__debouncedOnEnd',
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: '__startNativeAnimation',
    value: function __startNativeAnimation(animatedValue) {
      animatedValue.__makeNative();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

module.exports = Animation;
}, 219, null, "Animation");
__d(/* SpringAnimation */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(201                     ); // 201 = ../nodes/AnimatedValue
var AnimatedValueXY = require(217                       ); // 217 = ../nodes/AnimatedValueXY
var Animation = require(219          ); // 219 = ./Animation
var SpringConfig = require(221              ); // 221 = ../SpringConfig

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(204                      ), // 204 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

function withDefault(value, defaultValue) {
  if (value === undefined || value === null) {
    return defaultValue;
  }
  return value;
}

var SpringAnimation = function (_Animation) {
  babelHelpers.inherits(SpringAnimation, _Animation);

  function SpringAnimation(config) {
    babelHelpers.classCallCheck(this, SpringAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (SpringAnimation.__proto__ || Object.getPrototypeOf(SpringAnimation)).call(this));

    _this._overshootClamping = withDefault(config.overshootClamping, false);
    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
    _this._initialVelocity = withDefault(config.velocity, 0);
    _this._lastVelocity = withDefault(config.velocity, 0);
    _this._toValue = config.toValue;
    _this._delay = withDefault(config.delay, 0);
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;

    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {
      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
      _this._stiffness = withDefault(config.stiffness, 100);
      _this._damping = withDefault(config.damping, 10);
      _this._mass = withDefault(config.mass, 1);
    } else if (config.bounciness !== undefined || config.speed !== undefined) {
      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
      _this._stiffness = springConfig.stiffness;
      _this._damping = springConfig.damping;
      _this._mass = 1;
    } else {
      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));
      _this._stiffness = _springConfig.stiffness;
      _this._damping = _springConfig.damping;
      _this._mass = 1;
    }

    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');
    invariant(_this._damping > 0, 'Damping value must be greater than 0');
    invariant(_this._mass > 0, 'Mass value must be greater than 0');
    return _this;
  }

  babelHelpers.createClass(SpringAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'spring',
        overshootClamping: this._overshootClamping,
        restDisplacementThreshold: this._restDisplacementThreshold,
        restSpeedThreshold: this._restSpeedThreshold,
        stiffness: this._stiffness,
        damping: this._damping,
        mass: this._mass,
        initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this2 = this;

      this.__active = true;
      this._startPosition = fromValue;
      this._lastPosition = this._startPosition;

      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._lastTime = Date.now();
      this._frameTime = 0.0;

      if (previousAnimation instanceof SpringAnimation) {
        var internalState = previousAnimation.getInternalState();
        this._lastPosition = internalState.lastPosition;
        this._lastVelocity = internalState.lastVelocity;

        this._initialVelocity = this._lastVelocity;
        this._lastTime = internalState.lastTime;
      }

      var start = function start() {
        if (_this2._useNativeDriver) {
          _this2.__startNativeAnimation(animatedValue);
        } else {
          _this2.onUpdate();
        }
      };

      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'getInternalState',
    value: function getInternalState() {
      return {
        lastPosition: this._lastPosition,
        lastVelocity: this._lastVelocity,
        lastTime: this._lastTime
      };
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var MAX_STEPS = 64;
      var now = Date.now();
      if (now > this._lastTime + MAX_STEPS) {
        now = this._lastTime + MAX_STEPS;
      }

      var deltaTime = (now - this._lastTime) / 1000;
      this._frameTime += deltaTime;

      var c = this._damping;
      var m = this._mass;
      var k = this._stiffness;
      var v0 = -this._initialVelocity;

      var zeta = c / (2 * Math.sqrt(k * m));
      var omega0 = Math.sqrt(k / m);
      var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);
      var x0 = this._toValue - this._startPosition;

      var position = 0.0;
      var velocity = 0.0;
      var t = this._frameTime;
      if (zeta < 1) {
        var envelope = Math.exp(-zeta * omega0 * t);
        position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));

        velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));
      } else {
        var _envelope = Math.exp(-omega0 * t);
        position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);
        velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));
      }

      this._lastTime = now;
      this._lastPosition = position;
      this._lastVelocity = velocity;

      this._onUpdate(position);
      if (!this.__active) {
        return;
      }

      var isOvershooting = false;
      if (this._overshootClamping && this._stiffness !== 0) {
        if (this._startPosition < this._toValue) {
          isOvershooting = position > this._toValue;
        } else {
          isOvershooting = position < this._toValue;
        }
      }
      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
      var isDisplacement = true;
      if (this._stiffness !== 0) {
        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
      }

      if (isOvershooting || isVelocity && isDisplacement) {
        if (this._stiffness !== 0) {
          this._lastPosition = this._toValue;
          this._lastVelocity = 0;
          this._onUpdate(this._toValue);
        }

        this.__debouncedOnEnd({ finished: true });
        return;
      }
      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(SpringAnimation.prototype.__proto__ || Object.getPrototypeOf(SpringAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return SpringAnimation;
}(Animation);

module.exports = SpringAnimation;
}, 220, null, "SpringAnimation");
__d(/* SpringConfig */function(global, require, module, exports) {

'use strict';

function stiffnessFromOrigamiValue(oValue) {
  return (oValue - 30) * 3.62 + 194;
}

function dampingFromOrigamiValue(oValue) {
  return (oValue - 8) * 3 + 25;
}

function fromOrigamiTensionAndFriction(tension, friction) {
  return {
    stiffness: stiffnessFromOrigamiValue(tension),
    damping: dampingFromOrigamiValue(friction)
  };
}

function fromBouncinessAndSpeed(bounciness, speed) {
  function normalize(value, startValue, endValue) {
    return (value - startValue) / (endValue - startValue);
  }

  function projectNormal(n, start, end) {
    return start + n * (end - start);
  }

  function linearInterpolation(t, start, end) {
    return t * end + (1 - t) * start;
  }

  function quadraticOutInterpolation(t, start, end) {
    return linearInterpolation(2 * t - t * t, start, end);
  }

  function b3Friction1(x) {
    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
  }

  function b3Friction2(x) {
    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
  }

  function b3Friction3(x) {
    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
  }

  function b3Nobounce(tension) {
    if (tension <= 18) {
      return b3Friction1(tension);
    } else if (tension > 18 && tension <= 44) {
      return b3Friction2(tension);
    } else {
      return b3Friction3(tension);
    }
  }

  var b = normalize(bounciness / 1.7, 0, 20);
  b = projectNormal(b, 0, 0.8);
  var s = normalize(speed / 1.7, 0, 20);
  var bouncyTension = projectNormal(s, 0.5, 200);
  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);

  return {
    stiffness: stiffnessFromOrigamiValue(bouncyTension),
    damping: dampingFromOrigamiValue(bouncyFriction)
  };
}

module.exports = {
  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
  fromBouncinessAndSpeed: fromBouncinessAndSpeed
};
}, 221, null, "SpringConfig");
__d(/* TimingAnimation */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(201                     ); // 201 = ../nodes/AnimatedValue
var AnimatedValueXY = require(217                       ); // 217 = ../nodes/AnimatedValueXY
var Animation = require(219          ); // 219 = ./Animation

var _require = require(204                      ), // 204 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var _easeInOut = void 0;
function easeInOut() {
  if (!_easeInOut) {
    var Easing = require(223     ); // 223 = Easing
    _easeInOut = Easing.inOut(Easing.ease);
  }
  return _easeInOut;
}

var TimingAnimation = function (_Animation) {
  babelHelpers.inherits(TimingAnimation, _Animation);

  function TimingAnimation(config) {
    babelHelpers.classCallCheck(this, TimingAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (TimingAnimation.__proto__ || Object.getPrototypeOf(TimingAnimation)).call(this));

    _this._toValue = config.toValue;
    _this._easing = config.easing !== undefined ? config.easing : easeInOut();
    _this._duration = config.duration !== undefined ? config.duration : 500;
    _this._delay = config.delay !== undefined ? config.delay : 0;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    return _this;
  }

  babelHelpers.createClass(TimingAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      var frameDuration = 1000.0 / 60.0;
      var frames = [];
      for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
        frames.push(this._easing(dt / this._duration));
      }
      frames.push(this._easing(1));
      return {
        type: 'frames',
        frames: frames,
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this2 = this;

      this.__active = true;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;

      var start = function start() {
        if (_this2._duration === 0 && !_this2._useNativeDriver) {
          _this2._onUpdate(_this2._toValue);
          _this2.__debouncedOnEnd({ finished: true });
        } else {
          _this2._startTime = Date.now();
          if (_this2._useNativeDriver) {
            _this2.__startNativeAnimation(animatedValue);
          } else {
            _this2._animationFrame = requestAnimationFrame(_this2.onUpdate.bind(_this2));
          }
        }
      };
      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();
      if (now >= this._startTime + this._duration) {
        if (this._duration === 0) {
          this._onUpdate(this._toValue);
        } else {
          this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
        }
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(TimingAnimation.prototype.__proto__ || Object.getPrototypeOf(TimingAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return TimingAnimation;
}(Animation);

module.exports = TimingAnimation;
}, 222, null, "TimingAnimation");
__d(/* Easing */function(global, require, module, exports) {
'use strict';

var _ease = void 0;

var Easing = function () {
  function Easing() {
    babelHelpers.classCallCheck(this, Easing);
  }

  babelHelpers.createClass(Easing, null, [{
    key: 'step0',
    value: function step0(n) {
      return n > 0 ? 1 : 0;
    }
  }, {
    key: 'step1',
    value: function step1(n) {
      return n >= 1 ? 1 : 0;
    }
  }, {
    key: 'linear',
    value: function linear(t) {
      return t;
    }
  }, {
    key: 'ease',
    value: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    }
  }, {
    key: 'quad',
    value: function quad(t) {
      return t * t;
    }
  }, {
    key: 'cubic',
    value: function cubic(t) {
      return t * t * t;
    }
  }, {
    key: 'poly',
    value: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    }
  }, {
    key: 'sin',
    value: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, {
    key: 'circle',
    value: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
  }, {
    key: 'exp',
    value: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    }
  }, {
    key: 'elastic',
    value: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    }
  }, {
    key: 'back',
    value: function back(s) {
      if (s === undefined) {
        s = 1.70158;
      }
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    }
  }, {
    key: 'bounce',
    value: function bounce(t) {
      if (t < 1 / 2.75) {
        return 7.5625 * t * t;
      }

      if (t < 2 / 2.75) {
        t -= 1.5 / 2.75;
        return 7.5625 * t * t + 0.75;
      }

      if (t < 2.5 / 2.75) {
        t -= 2.25 / 2.75;
        return 7.5625 * t * t + 0.9375;
      }

      t -= 2.625 / 2.75;
      return 7.5625 * t * t + 0.984375;
    }
  }, {
    key: 'bezier',
    value: function bezier(x1, y1, x2, y2) {
      var _bezier = require(224     ); // 224 = bezier
      return _bezier(x1, y1, x2, y2);
    }
  }, {
    key: 'in',
    value: function _in(easing) {
      return easing;
    }
  }, {
    key: 'out',
    value: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    }
  }, {
    key: 'inOut',
    value: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  }]);
  return Easing;
}();

module.exports = Easing;
}, 223, null, "Easing");
__d(/* bezier */function(global, require, module, exports) {
'use strict';

var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;

var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

var float32ArraySupported = typeof Float32Array === 'function';

function A(aA1, aA2) {
  return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
  return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
  return 3.0 * aA1;
}

function calcBezier(aT, aA1, aA2) {
  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}

function getSlope(aT, aA1, aA2) {
  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}

function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX,
      currentT,
      i = 0;
  do {
    currentT = aA + (aB - aA) / 2.0;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0.0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
  return currentT;
}

function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0.0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}

module.exports = function bezier(mX1, mY1, mX2, mY2) {
  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
    throw new Error('bezier x values must be in [0, 1] range');
  }

  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
  if (mX1 !== mY1 || mX2 !== mY2) {
    for (var i = 0; i < kSplineTableSize; ++i) {
      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
  }

  function getTForX(aX) {
    var intervalStart = 0.0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;

    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;

    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;

    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= NEWTON_MIN_SLOPE) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0.0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }

  return function BezierEasing(x) {
    if (mX1 === mY1 && mX2 === mY2) {
      return x;
    }

    if (x === 0) {
      return 0;
    }
    if (x === 1) {
      return 1;
    }
    return calcBezier(getTForX(x), mY1, mY2);
  };
};
}, 224, null, "bezier");
__d(/* createAnimatedComponent */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Animated/src/createAnimatedComponent.js';

var _require = require(200              ), // 200 = ./AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent;

var AnimatedProps = require(213                    ); // 213 = ./nodes/AnimatedProps
var React = require(134    ); // 134 = React
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

function createAnimatedComponent(Component) {
  var AnimatedComponent = function (_React$Component) {
    babelHelpers.inherits(AnimatedComponent, _React$Component);

    function AnimatedComponent(props) {
      babelHelpers.classCallCheck(this, AnimatedComponent);

      var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this, props));

      _this._eventDetachers = [];

      _this._setComponentRef = _this._setComponentRef.bind(_this);
      return _this;
    }

    babelHelpers.createClass(AnimatedComponent, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents();
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        this._component.setNativeProps(props);
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._attachProps(this.props);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._propsAnimated.setNativeView(this._component);
        this._attachNativeEvents();
      }
    }, {
      key: '_attachNativeEvents',
      value: function _attachNativeEvents() {
        var _this2 = this;

        var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        var _loop = function _loop(key) {
          var prop = _this2.props[key];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__attach(scrollableNode, key);
            _this2._eventDetachers.push(function () {
              return prop.__detach(scrollableNode, key);
            });
          }
        };

        for (var key in this.props) {
          _loop(key);
        }
      }
    }, {
      key: '_detachNativeEvents',
      value: function _detachNativeEvents() {
        this._eventDetachers.forEach(function (remove) {
          return remove();
        });
        this._eventDetachers = [];
      }
    }, {
      key: '_attachProps',
      value: function _attachProps(nextProps) {
        var _this3 = this;

        var oldPropsAnimated = this._propsAnimated;

        var callback = function callback() {
          if (!AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY && _this3._component.setNativeProps) {
            if (!_this3._propsAnimated.__isNative) {
              _this3._component.setNativeProps(_this3._propsAnimated.__getAnimatedValue());
            } else {
              throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to "native" earlier by starting an ' + 'animation with `useNativeDriver: true`');
            }
          } else {
            _this3.forceUpdate();
          }
        };

        this._propsAnimated = new AnimatedProps(nextProps, callback);

        oldPropsAnimated && oldPropsAnimated.__detach();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(newProps) {
        this._attachProps(newProps);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var props = this._propsAnimated.__getValue();
        return React.createElement(Component, babelHelpers.extends({}, props, {
          ref: this._setComponentRef,

          collapsable: this._propsAnimated.__isNative ? false : props.collapsable,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134
          }
        }));
      }
    }, {
      key: '_setComponentRef',
      value: function _setComponentRef(c) {
        this._prevComponent = this._component;
        this._component = c;
      }
    }, {
      key: 'getNode',
      value: function getNode() {
        return this._component;
      }
    }]);
    return AnimatedComponent;
  }(React.Component);

  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;

  var propTypes = Component.__propTypesSecretDontUseThesePlease || Component.propTypes;

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!propTypes) {
        return;
      }

      for (var key in ViewStylePropTypes) {
        if (!propTypes[key] && props[key] !== undefined) {
          console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
        }
      }
    }
  };

  return AnimatedComponent;
}

module.exports = createAnimatedComponent;
}, 225, null, "createAnimatedComponent");
__d(/* Image */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Image/Image.ios.js';
var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var ImageResizeMode = require(141              ); // 141 = ImageResizeMode
var ImageSourcePropType = require(227                  ); // 227 = ImageSourcePropType
var ImageStylePropTypes = require(140                  ); // 140 = ImageStylePropTypes
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var NativeModules = require(15             ); // 15 = NativeModules
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes
var StyleSheet = require(135         ); // 135 = StyleSheet
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType

var createReactClass = require(168                 ); // 168 = create-react-class
var flattenStyle = require(50            ); // 50 = flattenStyle
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent
var resolveAssetSource = require(176                 ); // 176 = resolveAssetSource

var ImageViewManager = NativeModules.ImageViewManager;

var Image = createReactClass({
  displayName: 'Image',
  propTypes: {
    style: StyleSheetPropType(ImageStylePropTypes),

    source: ImageSourcePropType,

    defaultSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number,
      scale: PropTypes.number
    }), PropTypes.number]),

    accessible: PropTypes.bool,

    accessibilityLabel: PropTypes.node,

    blurRadius: PropTypes.number,

    capInsets: EdgeInsetsPropType,

    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'repeat', 'center']),

    testID: PropTypes.string,

    onLayout: PropTypes.func,

    onLoadStart: PropTypes.func,

    onProgress: PropTypes.func,

    onError: PropTypes.func,

    onPartialLoad: PropTypes.func,

    onLoad: PropTypes.func,

    onLoadEnd: PropTypes.func
  },

  statics: {
    resizeMode: ImageResizeMode,

    getSize: function getSize(uri, success, failure) {
      ImageViewManager.getSize(uri, success, failure || function () {
        console.warn('Failed to get size for image: ' + uri);
      });
    },
    prefetch: function prefetch(url) {
      return ImageViewManager.prefetchImage(url);
    },

    resolveAssetSource: resolveAssetSource
  },

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'UIView',
    validAttributes: ReactNativeViewAttributes.UIView
  },

  render: function render() {
    var source = resolveAssetSource(this.props.source) || { uri: undefined, width: undefined, height: undefined };

    var sources = void 0;
    var style = void 0;
    if (Array.isArray(source)) {
      style = flattenStyle([styles.base, this.props.style]) || {};
      sources = source;
    } else {
      var _width = source.width,
          _height = source.height,
          uri = source.uri;

      style = flattenStyle([{ width: _width, height: _height }, styles.base, this.props.style]) || {};
      sources = [source];

      if (uri === '') {
        console.warn('source.uri should not be an empty string');
      }
    }

    var resizeMode = this.props.resizeMode || (style || {}).resizeMode || 'cover';
    var tintColor = (style || {}).tintColor;

    if (this.props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (this.props.children) {
      throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using aboslute positioning.');
    }

    return React.createElement(RCTImageView, babelHelpers.extends({}, this.props, {
      style: style,
      resizeMode: resizeMode,
      tintColor: tintColor,
      source: sources,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 381
      }
    }));
  }
});

var styles = StyleSheet.create({
  base: {
    overflow: 'hidden'
  }
});

var RCTImageView = requireNativeComponent('RCTImageView', Image);

module.exports = Image;
}, 226, null, "Image");
__d(/* ImageSourcePropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types

var ImageURISourcePropType = PropTypes.shape({
  uri: PropTypes.string,

  bundle: PropTypes.string,

  method: PropTypes.string,

  headers: PropTypes.objectOf(PropTypes.string),

  body: PropTypes.string,

  cache: PropTypes.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),

  width: PropTypes.number,
  height: PropTypes.number,

  scale: PropTypes.number
});

var ImageSourcePropType = PropTypes.oneOfType([ImageURISourcePropType, PropTypes.number, PropTypes.arrayOf(ImageURISourcePropType)]);

module.exports = ImageSourcePropType;
}, 227, null, "ImageSourcePropType");
__d(/* ScrollView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js';
var Animated = require(198       ); // 198 = Animated
var ColorPropType = require(130            ); // 130 = ColorPropType
var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var Platform = require(53        ); // 53 = Platform
var PointPropType = require(229            ); // 229 = PointPropType
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative
var ScrollResponder = require(230              ); // 230 = ScrollResponder
var ScrollViewStickyHeader = require(237                     ); // 237 = ScrollViewStickyHeader
var StyleSheet = require(135         ); // 135 = StyleSheet
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var dismissKeyboard = require(233              ); // 233 = dismissKeyboard
var flattenStyle = require(50            ); // 50 = flattenStyle
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processDecelerationRate = require(238                      ); // 238 = processDecelerationRate
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var warning = require(23                ); // 23 = fbjs/lib/warning

var ScrollView = createReactClass({
  displayName: 'ScrollView',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    automaticallyAdjustContentInsets: PropTypes.bool,

    contentInset: EdgeInsetsPropType,

    contentOffset: PointPropType,

    bounces: PropTypes.bool,

    bouncesZoom: PropTypes.bool,

    alwaysBounceHorizontal: PropTypes.bool,

    alwaysBounceVertical: PropTypes.bool,

    centerContent: PropTypes.bool,

    contentContainerStyle: StyleSheetPropType(ViewStylePropTypes),

    decelerationRate: PropTypes.oneOfType([PropTypes.oneOf(['fast', 'normal']), PropTypes.number]),

    horizontal: PropTypes.bool,

    indicatorStyle: PropTypes.oneOf(['default', 'black', 'white']),

    directionalLockEnabled: PropTypes.bool,

    canCancelContentTouches: PropTypes.bool,

    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag', 'interactive']),

    keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled', false, true]),

    maximumZoomScale: PropTypes.number,

    minimumZoomScale: PropTypes.number,

    onMomentumScrollBegin: PropTypes.func,

    onMomentumScrollEnd: PropTypes.func,

    onScroll: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    pagingEnabled: PropTypes.bool,

    pinchGestureEnabled: PropTypes.bool,

    scrollEnabled: PropTypes.bool,

    scrollEventThrottle: PropTypes.number,

    scrollIndicatorInsets: EdgeInsetsPropType,

    scrollsToTop: PropTypes.bool,

    showsHorizontalScrollIndicator: PropTypes.bool,

    showsVerticalScrollIndicator: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number),

    snapToInterval: PropTypes.number,

    snapToAlignment: PropTypes.oneOf(['start', 'center', 'end']),

    removeClippedSubviews: PropTypes.bool,

    zoomScale: PropTypes.number,

    contentInsetAdjustmentBehavior: PropTypes.oneOf(['automatic', 'scrollableAxes', 'never', 'always']),

    refreshControl: PropTypes.element,

    endFillColor: ColorPropType,

    scrollPerfTag: PropTypes.string,

    overScrollMode: PropTypes.oneOf(['auto', 'always', 'never']),

    DEPRECATED_sendUpdatedChildFrames: PropTypes.bool
  }),

  mixins: [ScrollResponder.Mixin],

  _scrollAnimatedValue: new Animated.Value(0),
  _scrollAnimatedValueAttachment: null,
  _stickyHeaderRefs: new Map(),
  _headerLayoutYs: new Map(),
  getInitialState: function getInitialState() {
    return this.scrollResponderMixinGetInitialState();
  },

  componentWillMount: function componentWillMount() {
    this._scrollAnimatedValue = new Animated.Value(this.props.contentOffset ? this.props.contentOffset.y : 0);
    this._scrollAnimatedValue.setOffset(this.props.contentInset ? this.props.contentInset.top : 0);
    this._stickyHeaderRefs = new Map();
    this._headerLayoutYs = new Map();
  },

  componentDidMount: function componentDidMount() {
    this._updateAnimatedNodeAttachment();
  },

  componentDidUpdate: function componentDidUpdate() {
    this._updateAnimatedNodeAttachment();
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
  },

  setNativeProps: function setNativeProps(props) {
    this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
  },

  getScrollResponder: function getScrollResponder() {
    return this;
  },

  getScrollableNode: function getScrollableNode() {
    return ReactNative.findNodeHandle(this._scrollViewRef);
  },

  getInnerViewNode: function getInnerViewNode() {
    return ReactNative.findNodeHandle(this._innerViewRef);
  },

  scrollTo: function scrollTo(y, x, animated) {
    if (typeof y === 'number') {
      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');
    } else {
      var _ref = y || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    this.getScrollResponder().scrollResponderScrollTo({ x: x || 0, y: y || 0, animated: animated !== false });
  },

  scrollToEnd: function scrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    this.getScrollResponder().scrollResponderScrollToEnd({
      animated: animated
    });
  },

  scrollWithoutAnimationTo: function scrollWithoutAnimationTo() {
    var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
    this.scrollTo({ x: x, y: y, animated: false });
  },

  flashScrollIndicators: function flashScrollIndicators() {
    this.getScrollResponder().scrollResponderFlashScrollIndicators();
  },

  _getKeyForIndex: function _getKeyForIndex(index, childArray) {
    var child = childArray[index];
    return child && child.key;
  },

  _updateAnimatedNodeAttachment: function _updateAnimatedNodeAttachment() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
    if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
      this._scrollAnimatedValueAttachment = Animated.attachNativeEvent(this._scrollViewRef, 'onScroll', [{ nativeEvent: { contentOffset: { y: this._scrollAnimatedValue } } }]);
    }
  },

  _setStickyHeaderRef: function _setStickyHeaderRef(key, ref) {
    if (ref) {
      this._stickyHeaderRefs.set(key, ref);
    } else {
      this._stickyHeaderRefs.delete(key);
    }
  },

  _onStickyHeaderLayout: function _onStickyHeaderLayout(index, event, key) {
    if (!this.props.stickyHeaderIndices) {
      return;
    }

    var childArray = React.Children.toArray(this.props.children);
    if (key !== this._getKeyForIndex(index, childArray)) {
      return;
    }

    var layoutY = event.nativeEvent.layout.y;
    this._headerLayoutYs.set(key, layoutY);

    var indexOfIndex = this.props.stickyHeaderIndices.indexOf(index);

    var previousHeaderIndex = this.props.stickyHeaderIndices[indexOfIndex - 1];
    if (previousHeaderIndex != null) {
      var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));
      previousHeader && previousHeader.setNextHeaderY(layoutY);
    }
  },

  _handleScroll: function _handleScroll(e) {
    if (__DEV__) {
      if (this.props.onScroll && this.props.scrollEventThrottle == null && Platform.OS === 'ios') {
        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + 'cause frame drops, use a bigger number if you don\'t need as ' + 'much precision.');
      }
    }
    if (Platform.OS === 'android') {
      if (this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }
    this.scrollResponderHandleScroll(e);
  },

  _handleContentOnLayout: function _handleContentOnLayout(e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        width = _e$nativeEvent$layout.width,
        height = _e$nativeEvent$layout.height;

    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _scrollViewRef: null,
  _setScrollViewRef: function _setScrollViewRef(ref) {
    this._scrollViewRef = ref;
  },

  _innerViewRef: null,
  _setInnerViewRef: function _setInnerViewRef(ref) {
    this._innerViewRef = ref;
  },

  render: function render() {
    var _this = this;

    var ScrollViewClass = void 0;
    var ScrollContentContainerViewClass = void 0;
    if (Platform.OS === 'ios') {
      ScrollViewClass = RCTScrollView;
      ScrollContentContainerViewClass = RCTScrollContentView;
      warning(!this.props.snapToInterval || !this.props.pagingEnabled, 'snapToInterval is currently ignored when pagingEnabled is true.');
    } else if (Platform.OS === 'android') {
      if (this.props.horizontal) {
        ScrollViewClass = AndroidHorizontalScrollView;
        ScrollContentContainerViewClass = AndroidHorizontalScrollContentView;
      } else {
        ScrollViewClass = AndroidScrollView;
        ScrollContentContainerViewClass = View;
      }
    }

    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');

    invariant(ScrollContentContainerViewClass !== undefined, 'ScrollContentContainerViewClass must not be undefined');

    var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
    var style = void 0,
        childLayoutProps = void 0;
    if (__DEV__ && this.props.style) {
      style = flattenStyle(this.props.style);
      childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {
        return style && style[prop] !== undefined;
      });
      invariant(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');
    }

    var contentSizeChangeProps = {};
    if (this.props.onContentSizeChange) {
      contentSizeChangeProps = {
        onLayout: this._handleContentOnLayout
      };
    }

    var stickyHeaderIndices = this.props.stickyHeaderIndices;

    var hasStickyHeaders = stickyHeaderIndices && stickyHeaderIndices.length > 0;

    var childArray = hasStickyHeaders && React.Children.toArray(this.props.children);
    var children = hasStickyHeaders ? childArray.map(function (child, index) {
      var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
      if (indexOfIndex > -1) {
        var key = child.key;

        var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
        return React.createElement(
          ScrollViewStickyHeader,
          {
            key: key,
            ref: function ref(_ref2) {
              return _this._setStickyHeaderRef(key, _ref2);
            },
            nextHeaderLayoutY: _this._headerLayoutYs.get(_this._getKeyForIndex(nextIndex, childArray)),
            onLayout: function onLayout(event) {
              return _this._onStickyHeaderLayout(index, event, key);
            },
            scrollAnimatedValue: _this._scrollAnimatedValue, __source: {
              fileName: _jsxFileName,
              lineNumber: 724
            }
          },
          child
        );
      } else {
        return child;
      }
    }) : this.props.children;
    var contentContainer = React.createElement(
      ScrollContentContainerViewClass,
      babelHelpers.extends({}, contentSizeChangeProps, {
        ref: this._setInnerViewRef,
        style: contentContainerStyle,
        removeClippedSubviews: Platform.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 748
        }
      }),
      children
    );

    var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;

    var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;

    var DEPRECATED_sendUpdatedChildFrames = !!this.props.DEPRECATED_sendUpdatedChildFrames;

    var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;
    var props = babelHelpers.extends({}, this.props, {
      alwaysBounceHorizontal: alwaysBounceHorizontal,
      alwaysBounceVertical: alwaysBounceVertical,
      style: [baseStyle, this.props.style],

      onContentSizeChange: null,
      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,
      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,
      onResponderGrant: this.scrollResponderHandleResponderGrant,
      onResponderReject: this.scrollResponderHandleResponderReject,
      onResponderRelease: this.scrollResponderHandleResponderRelease,

      onResponderTerminate: this.scrollResponderHandleTerminate,
      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,
      onScroll: this._handleScroll,
      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,
      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,
      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,
      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,
      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,
      onTouchEnd: this.scrollResponderHandleTouchEnd,
      onTouchMove: this.scrollResponderHandleTouchMove,
      onTouchStart: this.scrollResponderHandleTouchStart,
      onTouchCancel: this.scrollResponderHandleTouchCancel,
      scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
      sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,
      DEPRECATED_sendUpdatedChildFrames: DEPRECATED_sendUpdatedChildFrames
    });

    var decelerationRate = this.props.decelerationRate;

    if (decelerationRate) {
      props.decelerationRate = processDecelerationRate(decelerationRate);
    }

    var refreshControl = this.props.refreshControl;

    if (refreshControl) {
      if (Platform.OS === 'ios') {
        return React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 829
            }
          }),
          Platform.isTVOS ? null : refreshControl,
          contentContainer
        );
      } else if (Platform.OS === 'android') {

        return React.cloneElement(refreshControl, { style: props.style }, React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { style: baseStyle, ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 847
            }
          }),
          contentContainer
        ));
      }
    }
    return React.createElement(
      ScrollViewClass,
      babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 857
        }
      }),
      contentContainer
    );
  }
});

var styles = StyleSheet.create({
  baseVertical: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'column',
    overflow: 'scroll'
  },
  baseHorizontal: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'row',
    overflow: 'scroll'
  },
  contentContainerHorizontal: {
    flexDirection: 'row'
  }
});

var nativeOnlyProps = void 0,
    AndroidScrollView = void 0,
    AndroidHorizontalScrollContentView = void 0,
    AndroidHorizontalScrollView = void 0,
    RCTScrollView = void 0,
    RCTScrollContentView = void 0;
if (Platform.OS === 'android') {
  nativeOnlyProps = {
    nativeOnly: {
      sendMomentumEvents: true
    }
  };
  AndroidScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollContentView = requireNativeComponent('AndroidHorizontalScrollContentView');
} else if (Platform.OS === 'ios') {
  nativeOnlyProps = {
    nativeOnly: {
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true
    }
  };
  RCTScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  RCTScrollContentView = requireNativeComponent('RCTScrollContentView', View);
}

module.exports = ScrollView;
}, 228, null, "ScrollView");
__d(/* PointPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types

var createStrictShapeTypeChecker = require(160                           ); // 160 = createStrictShapeTypeChecker

var PointPropType = createStrictShapeTypeChecker({
  x: PropTypes.number,
  y: PropTypes.number
});

module.exports = PointPropType;
}, 229, null, "PointPropType");
__d(/* ScrollResponder */function(global, require, module, exports) {
'use strict';

var Dimensions = require(137         ); // 137 = Dimensions
var FrameRateLogger = require(231              ); // 231 = FrameRateLogger
var Keyboard = require(232       ); // 232 = Keyboard
var ReactNative = require(21           ); // 21 = ReactNative
var Subscribable = require(234           ); // 234 = Subscribable
var TextInputState = require(52              ); // 52 = TextInputState
var UIManager = require(54         ); // 54 = UIManager

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var nullthrows = require(235                  ); // 235 = fbjs/lib/nullthrows

var performanceNow = require(76                       ); // 76 = fbjs/lib/performanceNow

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(15             ), // 15 = NativeModules
    ScrollViewManager = _require.ScrollViewManager;

var _require2 = require(236                       ), // 236 = ReactNativeComponentTree
    getInstanceFromNode = _require2.getInstanceFromNode;

var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;

function isTagInstanceOfTextInput(tag) {
  var instance = getInstanceFromNode(tag);
  return instance && instance.viewConfig && (instance.viewConfig.uiViewClassName === 'AndroidTextInput' || instance.viewConfig.uiViewClassName === 'RCTTextView' || instance.viewConfig.uiViewClassName === 'RCTTextField');
}

var ScrollResponderMixin = {
  mixins: [Subscribable.Mixin],
  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
    return {
      isTouching: false,
      lastMomentumScrollBeginTime: 0,
      lastMomentumScrollEndTime: 0,

      observedScrollSinceBecomingResponder: false,
      becameResponderWhileAnimating: false
    };
  },

  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
    return this.state.isTouching;
  },

  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

    if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
      return true;
    }
    return false;
  },

  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
    if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && !isTagInstanceOfTextInput(e.target)) {
      return true;
    }
    return this.scrollResponderIsAnimating();
  },

  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},

  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
    return !this.state.observedScrollSinceBecomingResponder;
  },

  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
    var nativeEvent = e.nativeEvent;
    this.state.isTouching = nativeEvent.touches.length !== 0;
    this.props.onTouchEnd && this.props.onTouchEnd(e);
  },

  scrollResponderHandleTouchCancel: function scrollResponderHandleTouchCancel(e) {
    this.state.isTouching = false;
    this.props.onTouchCancel && this.props.onTouchCancel(e);
  },

  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
    this.props.onResponderRelease && this.props.onResponderRelease(e);

    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
      TextInputState.blurTextInput(currentlyFocusedTextInput);
    }
  },

  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
    this.state.observedScrollSinceBecomingResponder = true;
    this.props.onScroll && this.props.onScroll(e);
  },

  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
    this.state.observedScrollSinceBecomingResponder = false;
    this.props.onResponderGrant && this.props.onResponderGrant(e);
    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
  },

  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
    FrameRateLogger.beginScroll();
    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
  },

  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
    var velocity = e.nativeEvent.velocity;

    if (!this.scrollResponderIsAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
      FrameRateLogger.endScroll();
    }
    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
  },

  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
    this.state.lastMomentumScrollBeginTime = performanceNow();
    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
  },

  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
    FrameRateLogger.endScroll();
    this.state.lastMomentumScrollEndTime = performanceNow();
    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
  },

  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
    this.state.isTouching = true;
    this.props.onTouchStart && this.props.onTouchStart(e);
  },

  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
    this.props.onTouchMove && this.props.onTouchMove(e);
  },

  scrollResponderIsAnimating: function scrollResponderIsAnimating() {
    var now = performanceNow();
    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
    return isAnimating;
  },

  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
    return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
  },

  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
    if (typeof x === 'number') {
      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = x || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    UIManager.dispatchViewManagerCommand(nullthrows(this.scrollResponderGetScrollableNode()), UIManager.RCTScrollView.Commands.scrollTo, [x || 0, y || 0, animated !== false]);
  },

  scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollToEnd, [animated]);
  },

  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
    this.scrollResponderScrollTo({ x: offsetX, y: offsetY, animated: false });
  },

  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
    invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');
    if ('animated' in rect) {
      var animated = rect.animated,
          rect = babelHelpers.objectWithoutProperties(rect, ['animated']);
    } else if (typeof animated !== 'undefined') {
      console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
    }
    ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
  },

  scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.flashScrollIndicators, []);
  },

  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
    this.additionalScrollOffset = additionalOffset || 0;
    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
    UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
  },

  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
    var keyboardScreenY = Dimensions.get('window').height;
    if (this.keyboardWillOpenTo) {
      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
    }
    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

    if (this.preventNegativeScrollOffset) {
      scrollOffsetY = Math.max(0, scrollOffsetY);
    }
    this.scrollResponderScrollTo({ x: 0, y: scrollOffsetY, animated: true });

    this.additionalOffset = 0;
    this.preventNegativeScrollOffset = false;
  },

  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {
    console.error('Error measuring text field: ', e);
  },

  componentWillMount: function componentWillMount() {
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    warning(typeof keyboardShouldPersistTaps !== 'boolean', '\'keyboardShouldPersistTaps={' + keyboardShouldPersistTaps + '}\' is deprecated. ' + ('Use \'keyboardShouldPersistTaps="' + (keyboardShouldPersistTaps ? 'always' : 'never') + '"\' instead'));

    this.keyboardWillOpenTo = null;
    this.additionalScrollOffset = 0;
    this.addListenerOn(Keyboard, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
    this.addListenerOn(Keyboard, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
    this.addListenerOn(Keyboard, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
    this.addListenerOn(Keyboard, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
  },

  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
    this.keyboardWillOpenTo = e;
    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
  },

  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
  },

  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
    if (e) {
      this.keyboardWillOpenTo = e;
    }
    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
  },

  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
  }

};

var ScrollResponder = {
  Mixin: ScrollResponderMixin
};

module.exports = ScrollResponder;
}, 230, null, "ScrollResponder");
__d(/* FrameRateLogger */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var FrameRateLogger = {
  setGlobalOptions: function setGlobalOptions(options) {
    if (options.debug !== undefined) {
      invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
    }
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setGlobalOptions(options);
  },

  setContext: function setContext(context) {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
  },

  beginScroll: function beginScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
  },
  endScroll: function endScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
  }
};

module.exports = FrameRateLogger;
}, 231, null, "FrameRateLogger");
__d(/* Keyboard */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var KeyboardObserver = require(15             ).KeyboardObserver; // 15 = NativeModules
var dismissKeyboard = require(233              ); // 233 = dismissKeyboard
var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);

var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  }
};

Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

module.exports = Keyboard;
}, 232, null, "Keyboard");
__d(/* dismissKeyboard */function(global, require, module, exports) {
'use strict';

var TextInputState = require(52              ); // 52 = TextInputState

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = dismissKeyboard;
}, 233, null, "dismissKeyboard");
__d(/* Subscribable */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 234, null, "Subscribable");
__d(/* fbjs/lib/nullthrows.js */function(global, require, module, exports) {"use strict";

var nullthrows = function nullthrows(x) {
  if (x != null) {
    return x;
  }
  throw new Error("Got unexpected null or undefined");
};

module.exports = nullthrows;
}, 235, null, "fbjs/lib/nullthrows.js");
__d(/* ReactNativeComponentTree */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativeComponentTree;
}, 236, null, "ReactNativeComponentTree");
__d(/* ScrollViewStickyHeader */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js';
var Animated = require(198       ); // 198 = Animated
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet

var ScrollViewStickyHeader = function (_React$Component) {
  babelHelpers.inherits(ScrollViewStickyHeader, _React$Component);

  function ScrollViewStickyHeader(props, context) {
    babelHelpers.classCallCheck(this, ScrollViewStickyHeader);

    var _this = babelHelpers.possibleConstructorReturn(this, (ScrollViewStickyHeader.__proto__ || Object.getPrototypeOf(ScrollViewStickyHeader)).call(this, props, context));

    _this._onLayout = function (event) {
      _this.setState({
        measured: true,
        layoutY: event.nativeEvent.layout.y,
        layoutHeight: event.nativeEvent.layout.height
      });

      _this.props.onLayout(event);
      var child = React.Children.only(_this.props.children);
      if (child.props.onLayout) {
        child.props.onLayout(event);
      }
    };

    _this.state = {
      measured: false,
      layoutY: 0,
      layoutHeight: 0,
      nextHeaderLayoutY: props.nextHeaderLayoutY
    };
    return _this;
  }

  babelHelpers.createClass(ScrollViewStickyHeader, [{
    key: 'setNextHeaderY',
    value: function setNextHeaderY(y) {
      this.setState({ nextHeaderLayoutY: y });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          measured = _state.measured,
          layoutHeight = _state.layoutHeight,
          layoutY = _state.layoutY,
          nextHeaderLayoutY = _state.nextHeaderLayoutY;

      var inputRange = [-1, 0];
      var outputRange = [0, 0];

      if (measured) {
        inputRange.push(layoutY);
        outputRange.push(0);

        var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;
        if (collisionPoint >= layoutY) {
          inputRange.push(collisionPoint, collisionPoint + 1);
          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);
        } else {
          inputRange.push(layoutY + 1);
          outputRange.push(1);
        }
      }

      var translateY = this.props.scrollAnimatedValue.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });
      var child = React.Children.only(this.props.children);

      return React.createElement(
        Animated.View,
        {
          collapsable: false,
          onLayout: this._onLayout,
          style: [child.props.style, styles.header, { transform: [{ translateY: translateY }] }], __source: {
            fileName: _jsxFileName,
            lineNumber: 96
          }
        },
        React.cloneElement(child, {
          style: styles.fill,
          onLayout: undefined })
      );
    }
  }]);
  return ScrollViewStickyHeader;
}(React.Component);

var styles = StyleSheet.create({
  header: {
    zIndex: 10
  },
  fill: {
    flex: 1
  }
});

module.exports = ScrollViewStickyHeader;
}, 237, null, "ScrollViewStickyHeader");
__d(/* processDecelerationRate */function(global, require, module, exports) {
'use strict';

function processDecelerationRate(decelerationRate) {
  if (decelerationRate === 'normal') {
    decelerationRate = 0.998;
  } else if (decelerationRate === 'fast') {
    decelerationRate = 0.99;
  }
  return decelerationRate;
}

module.exports = processDecelerationRate;
}, 238, null, "processDecelerationRate");
__d(/* react-timer-mixin/TimerMixin.js */function(global, require, module, exports) {
'use strict';

var GLOBAL = typeof window === 'undefined' ? global : window;

var setter = function setter(_setter, _clearer, array) {
  return function (callback, delta) {
    var id = _setter(function () {
      _clearer.call(this, id);
      callback.apply(this, arguments);
    }.bind(this), delta);

    if (!this[array]) {
      this[array] = [id];
    } else {
      this[array].push(id);
    }
    return id;
  };
};

var clearer = function clearer(_clearer, array) {
  return function (id) {
    if (this[array]) {
      var index = this[array].indexOf(id);
      if (index !== -1) {
        this[array].splice(index, 1);
      }
    }
    _clearer(id);
  };
};

var _timeouts = 'TimerMixin_timeouts';
var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals = 'TimerMixin_intervals';
var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

var _immediates = 'TimerMixin_immediates';
var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs = 'TimerMixin_rafs';
var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin = {
  componentWillUnmount: function componentWillUnmount() {
    this[_timeouts] && this[_timeouts].forEach(function (id) {
      GLOBAL.clearTimeout(id);
    });
    this[_timeouts] = null;
    this[_intervals] && this[_intervals].forEach(function (id) {
      GLOBAL.clearInterval(id);
    });
    this[_intervals] = null;
    this[_immediates] && this[_immediates].forEach(function (id) {
      GLOBAL.clearImmediate(id);
    });
    this[_immediates] = null;
    this[_rafs] && this[_rafs].forEach(function (id) {
      GLOBAL.cancelAnimationFrame(id);
    });
    this[_rafs] = null;
  },

  setTimeout: _setTimeout,
  clearTimeout: _clearTimeout,

  setInterval: _setInterval,
  clearInterval: _clearInterval,

  setImmediate: _setImmediate,
  clearImmediate: _clearImmediate,

  requestAnimationFrame: _requestAnimationFrame,
  cancelAnimationFrame: _cancelAnimationFrame
};

module.exports = TimerMixin;
}, 239, null, "react-timer-mixin/TimerMixin.js");
__d(/* TouchableWithoutFeedback */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var Touchable = require(189        ); // 189 = Touchable

var createReactClass = require(168                 ); // 168 = create-react-class
var ensurePositiveDelayProps = require(241                       ); // 241 = ensurePositiveDelayProps

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(167                ), // 167 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableWithoutFeedback = createReactClass({
  displayName: 'TouchableWithoutFeedback',
  mixins: [TimerMixin, Touchable.Mixin],

  propTypes: {
    accessible: PropTypes.bool,
    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),
    accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

    disabled: PropTypes.bool,

    onPress: PropTypes.func,

    onPressIn: PropTypes.func,

    onPressOut: PropTypes.func,

    onLayout: PropTypes.func,

    onLongPress: PropTypes.func,

    delayPressIn: PropTypes.number,

    delayPressOut: PropTypes.number,

    delayLongPress: PropTypes.number,

    pressRetentionOffset: EdgeInsetsPropType,

    hitSlop: EdgeInsetsPropType
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut || 0;
  },

  render: function render() {
    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));
    if (Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {
      children = React.Children.toArray(children);
      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));
    }
    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [child.props.style, { color: 'red' }] : child.props.style;
    return React.cloneElement(child, {
      accessible: this.props.accessible !== false,

      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,

      nativeID: this.props.nativeID,

      testID: this.props.testID,
      onLayout: this.props.onLayout,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate,
      style: style,
      children: children
    });
  }
});

module.exports = TouchableWithoutFeedback;
}, 240, null, "TouchableWithoutFeedback");
__d(/* ensurePositiveDelayProps */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
  invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
};

module.exports = ensurePositiveDelayProps;
}, 241, null, "ensurePositiveDelayProps");
__d(/* CheckBox */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 242, null, "CheckBox");
__d(/* DatePickerIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js';
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var DatePickerIOS = createReactClass({
  displayName: 'DatePickerIOS',

  _picker: undefined,

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    date: PropTypes.instanceOf(Date).isRequired,

    onDateChange: PropTypes.func.isRequired,

    maximumDate: PropTypes.instanceOf(Date),

    minimumDate: PropTypes.instanceOf(Date),

    mode: PropTypes.oneOf(['date', 'time', 'datetime']),

    minuteInterval: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]),

    timeZoneOffsetInMinutes: PropTypes.number
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      mode: 'datetime'
    };
  },

  _onChange: function _onChange(event) {
    var nativeTimeStamp = event.nativeEvent.timestamp;
    this.props.onDateChange && this.props.onDateChange(new Date(nativeTimeStamp));

    this.props.onChange && this.props.onChange(event);

    var propsTimeStamp = this.props.date.getTime();
    if (this._picker && nativeTimeStamp !== propsTimeStamp) {
      this._picker.setNativeProps({
        date: propsTimeStamp
      });
    }
  },

  render: function render() {
    var _this = this;

    var props = this.props;
    return React.createElement(
      View,
      { style: props.style, __source: {
          fileName: _jsxFileName,
          lineNumber: 125
        }
      },
      React.createElement(RCTDatePickerIOS, {
        ref: function ref(picker) {
          _this._picker = picker;
        },
        style: styles.datePickerIOS,
        date: props.date.getTime(),
        maximumDate: props.maximumDate ? props.maximumDate.getTime() : undefined,
        minimumDate: props.minimumDate ? props.minimumDate.getTime() : undefined,
        mode: props.mode,
        minuteInterval: props.minuteInterval,
        timeZoneOffsetInMinutes: props.timeZoneOffsetInMinutes,
        onChange: this._onChange,
        onStartShouldSetResponder: function onStartShouldSetResponder() {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return false;
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126
        }
      })
    );
  }
});

var styles = StyleSheet.create({
  datePickerIOS: {
    height: 216
  }
});

var RCTDatePickerIOS = requireNativeComponent('RCTDatePicker', {
  propTypes: babelHelpers.extends({}, DatePickerIOS.propTypes, {
    date: PropTypes.number,
    minimumDate: PropTypes.number,
    maximumDate: PropTypes.number,
    onDateChange: function onDateChange() {
      return null;
    },
    onChange: PropTypes.func
  })
});

module.exports = DatePickerIOS;
}, 243, null, "DatePickerIOS");
__d(/* DrawerLayoutAndroid */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 244, null, "DrawerLayoutAndroid");
__d(/* FlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/FlatList.js';
var MetroListView = require(246            ); // 246 = MetroListView
var React = require(134    ); // 134 = React
var View = require(156   ); // 156 = View
var VirtualizedList = require(253              ); // 253 = VirtualizedList

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  numColumns: 1
});

var FlatList = function (_React$PureComponent) {
  babelHelpers.inherits(FlatList, _React$PureComponent);
  babelHelpers.createClass(FlatList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      this._listRef.scrollToEnd(params);
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      this._listRef.scrollToIndex(params);
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      this._listRef.scrollToItem(params);
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      this._listRef.scrollToOffset(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listRef) {
        return this._listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._listRef) {
        return this._listRef.getScrollableNode();
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._checkProps(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');
      invariant(nextProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');
      invariant(nextProps.viewabilityConfig === this.props.viewabilityConfig, 'Changing viewabilityConfig on the fly is not supported');
      invariant(nextProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');

      this._checkProps(nextProps);
    }
  }]);

  function FlatList(props) {
    babelHelpers.classCallCheck(this, FlatList);

    var _this = babelHelpers.possibleConstructorReturn(this, (FlatList.__proto__ || Object.getPrototypeOf(FlatList)).call(this, props));

    _this._hasWarnedLegacy = false;
    _this._virtualizedListPairs = [];

    _this._captureRef = function (ref) {
      _this._listRef = ref;
    };

    _this._getItem = function (data, index) {
      var numColumns = _this.props.numColumns;

      if (numColumns > 1) {
        var ret = [];
        for (var kk = 0; kk < numColumns; kk++) {
          var _item = data[index * numColumns + kk];
          _item && ret.push(_item);
        }
        return ret;
      } else {
        return data[index];
      }
    };

    _this._getItemCount = function (data) {
      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;
    };

    _this._keyExtractor = function (items, index) {
      var _this$props = _this.props,
          keyExtractor = _this$props.keyExtractor,
          numColumns = _this$props.numColumns;

      if (numColumns > 1) {
        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);
        return items.map(function (it, kk) {
          return keyExtractor(it, index * numColumns + kk);
        }).join(':');
      } else {
        return keyExtractor(items, index);
      }
    };

    _this._renderItem = function (info) {
      var _this$props2 = _this.props,
          renderItem = _this$props2.renderItem,
          numColumns = _this$props2.numColumns,
          columnWrapperStyle = _this$props2.columnWrapperStyle;

      if (numColumns > 1) {
        var _item2 = info.item,
            _index = info.index;

        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
        return React.createElement(
          View,
          { style: [{ flexDirection: 'row' }, columnWrapperStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 595
            }
          },
          _item2.map(function (it, kk) {
            var element = renderItem({
              item: it,
              index: _index * numColumns + kk,
              separators: info.separators
            });
            return element && React.cloneElement(element, { key: kk });
          })
        );
      } else {
        return renderItem(info);
      }
    };

    if (_this.props.viewabilityConfigCallbackPairs) {
      _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
        return {
          viewabilityConfig: pair.viewabilityConfig,
          onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)
        };
      });
    } else if (_this.props.onViewableItemsChanged) {
      _this._virtualizedListPairs.push({
        viewabilityConfig: _this.props.viewabilityConfig,
        onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)
      });
    }
    return _this;
  }

  babelHelpers.createClass(FlatList, [{
    key: '_checkProps',
    value: function _checkProps(props) {
      var getItem = props.getItem,
          getItemCount = props.getItemCount,
          horizontal = props.horizontal,
          legacyImplementation = props.legacyImplementation,
          numColumns = props.numColumns,
          columnWrapperStyle = props.columnWrapperStyle,
          onViewableItemsChanged = props.onViewableItemsChanged,
          viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;

      invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');
      if (numColumns > 1) {
        invariant(!horizontal, 'numColumns does not support horizontal.');
      } else {
        invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
      }
      if (legacyImplementation) {
        invariant(numColumns === 1, 'Legacy list does not support multiple columns.');

        if (!this._hasWarnedLegacy) {
          console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');
          this._hasWarnedLegacy = true;
        }
      }
      invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');
    }
  }, {
    key: '_pushMultiColumnViewable',
    value: function _pushMultiColumnViewable(arr, v) {
      var _props = this.props,
          numColumns = _props.numColumns,
          keyExtractor = _props.keyExtractor;

      v.item.forEach(function (item, ii) {
        invariant(v.index != null, 'Missing index!');
        var index = v.index * numColumns + ii;
        arr.push(babelHelpers.extends({}, v, { item: item, key: keyExtractor(item, index), index: index }));
      });
    }
  }, {
    key: '_createOnViewableItemsChanged',
    value: function _createOnViewableItemsChanged(onViewableItemsChanged) {
      var _this2 = this;

      return function (info) {
        var numColumns = _this2.props.numColumns;

        if (onViewableItemsChanged) {
          if (numColumns > 1) {
            var _changed = [];
            var _viewableItems = [];
            info.viewableItems.forEach(function (v) {
              return _this2._pushMultiColumnViewable(_viewableItems, v);
            });
            info.changed.forEach(function (v) {
              return _this2._pushMultiColumnViewable(_changed, v);
            });
            onViewableItemsChanged({ viewableItems: _viewableItems, changed: _changed });
          } else {
            onViewableItemsChanged(info);
          }
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.legacyImplementation) {
        return React.createElement(MetroListView, babelHelpers.extends({}, this.props, {
          items: this.props.data,
          ref: this._captureRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 614
          }
        }));
      } else {
        return React.createElement(VirtualizedList, babelHelpers.extends({}, this.props, {
          renderItem: this._renderItem,
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          viewabilityConfigCallbackPairs: this._virtualizedListPairs,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 622
          }
        }));
      }
    }
  }]);
  return FlatList;
}(React.PureComponent);

FlatList.defaultProps = defaultProps;


module.exports = FlatList;
}, 245, null, "FlatList");
__d(/* MetroListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/MetroListView.js';
var ListView = require(247       ); // 247 = ListView
var React = require(134    ); // 134 = React
var RefreshControl = require(252             ); // 252 = RefreshControl
var ScrollView = require(228         ); // 228 = ScrollView

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MetroListView = function (_React$Component) {
  babelHelpers.inherits(MetroListView, _React$Component);

  function MetroListView() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, MetroListView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MetroListView.__proto__ || Object.getPrototypeOf(MetroListView)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this._computeState(_this.props, {
      ds: new ListView.DataSource({
        rowHasChanged: function rowHasChanged(itemA, itemB) {
          return true;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged() {
          return true;
        },
        getSectionHeaderData: function getSectionHeaderData(dataBlob, sectionID) {
          return _this.state.sectionHeaderData[sectionID];
        }
      }),
      sectionHeaderData: {}
    }), _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._renderFooter = function () {
      return React.createElement(_this2.props.FooterComponent, { key: '$footer', __source: {
          fileName: _jsxFileName,
          lineNumber: 195
        }
      });
    }, _this._renderRow = function (item, sectionID, rowID, highlightRow) {
      return _this.props.renderItem({ item: item, index: rowID });
    }, _this._renderSectionHeader = function (section, sectionID) {
      var renderSectionHeader = _this.props.renderSectionHeader;

      invariant(renderSectionHeader, 'Must provide renderSectionHeader with sections prop');
      return renderSectionHeader({ section: section });
    }, _this._renderSeparator = function (sID, rID) {
      return React.createElement(_this2.props.SeparatorComponent, { key: sID + rID, __source: {
          fileName: _jsxFileName,
          lineNumber: 211
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(MetroListView, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      throw new Error('scrollToEnd not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      throw new Error('scrollToIndex not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      throw new Error('scrollToItem not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      throw new Error('scrollToLocation not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._listRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var _this3 = this;

      this.setState(function (state) {
        return _this3._computeState(newProps, state);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        dataSource: this.state.ds,
        ref: this._captureRef,
        renderRow: this._renderRow,
        renderFooter: this.props.FooterComponent && this._renderFooter,
        renderSectionHeader: this.props.sections && this._renderSectionHeader,
        renderSeparator: this.props.SeparatorComponent && this._renderSeparator,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 152
        }
      }));
    }
  }, {
    key: '_computeState',
    value: function _computeState(props, state) {
      var sectionHeaderData = {};
      if (props.sections) {
        invariant(!props.items, 'Cannot have both sections and items props.');
        var _sections = {};
        props.sections.forEach(function (sectionIn, ii) {
          var sectionID = 's' + ii;
          _sections[sectionID] = sectionIn.data;
          sectionHeaderData[sectionID] = sectionIn;
        });
        return {
          ds: state.ds.cloneWithRowsAndSections(_sections),
          sectionHeaderData: sectionHeaderData
        };
      } else {
        invariant(!props.sections, 'Cannot have both sections and items props.');
        return {
          ds: state.ds.cloneWithRows(props.items),
          sectionHeaderData: sectionHeaderData
        };
      }
    }
  }]);
  return MetroListView;
}(React.Component);

MetroListView.defaultProps = {
  keyExtractor: function keyExtractor(item, index) {
    return item.key || String(index);
  },
  renderScrollComponent: function renderScrollComponent(props) {
    if (props.onRefresh) {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 113
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 131
        }
      }));
    }
  }
};


module.exports = MetroListView;
}, 246, null, "MetroListView");
__d(/* ListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/ListView/ListView.js';
var ListViewDataSource = require(248                 ); // 248 = ListViewDataSource
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var RCTScrollViewManager = require(15             ).ScrollViewManager; // 15 = NativeModules
var ScrollView = require(228         ); // 228 = ScrollView
var ScrollResponder = require(230              ); // 230 = ScrollResponder
var StaticRenderer = require(250             ); // 250 = StaticRenderer

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var View = require(156   ); // 156 = View

var cloneReferencedElement = require(251                             ); // 251 = react-clone-referenced-element
var createReactClass = require(168                 ); // 168 = create-react-class
var isEmpty = require(249      ); // 249 = isEmpty
var merge = require(161    ); // 161 = merge

var DEFAULT_PAGE_SIZE = 1;
var DEFAULT_INITIAL_ROWS = 10;
var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
var DEFAULT_END_REACHED_THRESHOLD = 1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;

var ListView = createReactClass({
  displayName: 'ListView',
  _childFrames: [],
  _sentEndForContentLength: null,
  _scrollComponent: null,
  _prevRenderedRowsCount: 0,
  _visibleRows: {},
  scrollProperties: {},

  mixins: [ScrollResponder.Mixin, TimerMixin],

  statics: {
    DataSource: ListViewDataSource
  },

  propTypes: babelHelpers.extends({}, ScrollView.propTypes, {
    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,

    renderSeparator: PropTypes.func,

    renderRow: PropTypes.func.isRequired,

    initialListSize: PropTypes.number.isRequired,

    onEndReached: PropTypes.func,

    onEndReachedThreshold: PropTypes.number.isRequired,

    pageSize: PropTypes.number.isRequired,

    renderFooter: PropTypes.func,
    renderHeader: PropTypes.func,

    renderSectionHeader: PropTypes.func,

    renderScrollComponent: PropTypes.func.isRequired,

    scrollRenderAheadDistance: PropTypes.number.isRequired,

    onChangeVisibleRows: PropTypes.func,

    removeClippedSubviews: PropTypes.bool,

    stickySectionHeadersEnabled: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,

    enableEmptySections: PropTypes.bool
  }),

  getMetrics: function getMetrics() {
    return {
      contentLength: this.scrollProperties.contentLength,
      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
      renderedRows: this.state.curRenderedRowsCount,
      visibleRows: Object.keys(this._visibleRows).length
    };
  },

  getScrollResponder: function getScrollResponder() {
    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
      return this._scrollComponent.getScrollResponder();
    }
  },

  getScrollableNode: function getScrollableNode() {
    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
      return this._scrollComponent.getScrollableNode();
    } else {
      return ReactNative.findNodeHandle(this._scrollComponent);
    }
  },

  scrollTo: function scrollTo() {
    if (this._scrollComponent && this._scrollComponent.scrollTo) {
      var _scrollComponent;

      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);
    }
  },

  scrollToEnd: function scrollToEnd(options) {
    if (this._scrollComponent) {
      if (this._scrollComponent.scrollToEnd) {
        this._scrollComponent.scrollToEnd(options);
      } else {
        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');
      }
    }
  },

  flashScrollIndicators: function flashScrollIndicators() {
    if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {
      this._scrollComponent.flashScrollIndicators();
    }
  },

  setNativeProps: function setNativeProps(props) {
    if (this._scrollComponent) {
      this._scrollComponent.setNativeProps(props);
    }
  },

  getDefaultProps: function getDefaultProps() {
    return {
      initialListSize: DEFAULT_INITIAL_ROWS,
      pageSize: DEFAULT_PAGE_SIZE,
      renderScrollComponent: function renderScrollComponent(props) {
        return React.createElement(ScrollView, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 341
          }
        }));
      },
      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
      stickySectionHeadersEnabled: Platform.OS === 'ios',
      stickyHeaderIndices: []
    };
  },

  getInitialState: function getInitialState() {
    return {
      curRenderedRowsCount: this.props.initialListSize,
      highlightedRow: {}
    };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this._scrollComponent.getInnerViewNode();
  },

  componentWillMount: function componentWillMount() {
    this.scrollProperties = {
      visibleLength: null,
      contentLength: null,
      offset: 0
    };
    this._childFrames = [];
    this._visibleRows = {};
    this._prevRenderedRowsCount = 0;
    this._sentEndForContentLength = null;
  },

  componentDidMount: function componentDidMount() {
    var _this = this;

    this.requestAnimationFrame(function () {
      _this._measureAndUpdateScrollProps();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
      this.setState(function (state, props) {
        _this2._prevRenderedRowsCount = 0;
        return {
          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
        };
      }, function () {
        return _this2._renderMoreRowsIfNeeded();
      });
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var _this3 = this;

    this.requestAnimationFrame(function () {
      _this3._measureAndUpdateScrollProps();
    });
  },

  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });
  },

  render: function render() {
    var bodyComponents = [];

    var dataSource = this.props.dataSource;
    var allRowIDs = dataSource.rowIdentities;
    var rowCount = 0;
    var stickySectionHeaderIndices = [];

    var renderSectionHeader = this.props.renderSectionHeader;


    var header = this.props.renderHeader && this.props.renderHeader();
    var footer = this.props.renderFooter && this.props.renderFooter();
    var totalIndex = header ? 1 : 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        if (this.props.enableEmptySections === undefined) {
          var warning = require(23                ); // 23 = fbjs/lib/warning
          warning(false, 'In next release empty section headers will be rendered.' + " In this release you can use 'enableEmptySections' flag to render empty section headers.");
          continue;
        } else {
          var invariant = require(13                  ); // 13 = fbjs/lib/invariant
          invariant(this.props.enableEmptySections, "In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered." + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + " In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.");
        }
      }

      if (renderSectionHeader) {
        var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);
        if (element) {
          bodyComponents.push(React.cloneElement(element, { key: 's_' + sectionID }));
          if (this.props.stickySectionHeadersEnabled) {
            stickySectionHeaderIndices.push(totalIndex);
          }
          totalIndex++;
        }
      }

      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var comboID = sectionID + '_' + rowID;
        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
        var row = React.createElement(StaticRenderer, {
          key: 'r_' + comboID,
          shouldUpdate: !!shouldUpdateRow,
          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 476
          }
        });
        bodyComponents.push(row);
        totalIndex++;

        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);
          if (separator) {
            bodyComponents.push(React.createElement(
              View,
              { key: 's_' + comboID, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 505
                }
              },
              separator
            ));
            totalIndex++;
          }
        }
        if (++rowCount === this.state.curRenderedRowsCount) {
          break;
        }
      }
      if (rowCount >= this.state.curRenderedRowsCount) {
        break;
      }
    }

    var _props = this.props,
        renderScrollComponent = _props.renderScrollComponent,
        props = babelHelpers.objectWithoutProperties(_props, ['renderScrollComponent']);

    if (!props.scrollEventThrottle) {
      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
    }
    if (props.removeClippedSubviews === undefined) {
      props.removeClippedSubviews = true;
    }

    babelHelpers.extends(props, {
      onScroll: this._onScroll,

      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),

      onKeyboardWillShow: undefined,
      onKeyboardWillHide: undefined,
      onKeyboardDidShow: undefined,
      onKeyboardDidHide: undefined
    });

    return cloneReferencedElement(renderScrollComponent(props), {
      ref: this._setScrollComponentRef,
      onContentSizeChange: this._onContentSizeChange,
      onLayout: this._onLayout,
      DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined
    }, header, bodyComponents, footer);
  },

  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
    var scrollComponent = this.getScrollResponder();
    if (!scrollComponent || !scrollComponent.getInnerViewNode) {
      return;
    }

    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
  },

  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
    this._scrollComponent = scrollComponent;
  },

  _onContentSizeChange: function _onContentSizeChange(width, height) {
    var contentLength = !this.props.horizontal ? height : width;
    if (contentLength !== this.scrollProperties.contentLength) {
      this.scrollProperties.contentLength = contentLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _onLayout: function _onLayout(event) {
    var _event$nativeEvent$la = event.nativeEvent.layout,
        width = _event$nativeEvent$la.width,
        height = _event$nativeEvent$la.height;

    var visibleLength = !this.props.horizontal ? height : width;
    if (visibleLength !== this.scrollProperties.visibleLength) {
      this.scrollProperties.visibleLength = visibleLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._sentEndForContentLength = this.scrollProperties.contentLength;
      this.props.onEndReached(event);
      return true;
    }
    return false;
  },

  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._maybeCallOnEndReached();
      return;
    }

    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);
    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
      this._pageInNewRows();
    }
  },

  _pageInNewRows: function _pageInNewRows() {
    var _this4 = this;

    this.setState(function (state, props) {
      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;
      return {
        curRenderedRowsCount: rowsToRender
      };
    }, function () {
      _this4._measureAndUpdateScrollProps();
      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;
    });
  },

  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
  },

  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
    var _this5 = this;

    if (!this.props.onChangeVisibleRows) {
      return;
    }
    if (updatedFrames) {
      updatedFrames.forEach(function (newFrame) {
        _this5._childFrames[newFrame.index] = merge(newFrame);
      });
    }
    var isVertical = !this.props.horizontal;
    var dataSource = this.props.dataSource;
    var visibleMin = this.scrollProperties.offset;
    var visibleMax = visibleMin + this.scrollProperties.visibleLength;
    var allRowIDs = dataSource.rowIdentities;

    var header = this.props.renderHeader && this.props.renderHeader();
    var totalIndex = header ? 1 : 0;
    var visibilityChanged = false;
    var changedRows = {};
    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        continue;
      }
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      if (this.props.renderSectionHeader) {
        totalIndex++;
      }
      var visibleSection = this._visibleRows[sectionID];
      if (!visibleSection) {
        visibleSection = {};
      }
      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var frame = this._childFrames[totalIndex];
        totalIndex++;
        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          totalIndex++;
        }
        if (!frame) {
          break;
        }
        var rowVisible = visibleSection[rowID];
        var min = isVertical ? frame.y : frame.x;
        var max = min + (isVertical ? frame.height : frame.width);
        if (!min && !max || min === max) {
          break;
        }
        if (min > visibleMax || max < visibleMin) {
          if (rowVisible) {
            visibilityChanged = true;
            delete visibleSection[rowID];
            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }
            changedRows[sectionID][rowID] = false;
          }
        } else if (!rowVisible) {
          visibilityChanged = true;
          visibleSection[rowID] = true;
          if (!changedRows[sectionID]) {
            changedRows[sectionID] = {};
          }
          changedRows[sectionID][rowID] = true;
        }
      }
      if (!isEmpty(visibleSection)) {
        this._visibleRows[sectionID] = visibleSection;
      } else if (this._visibleRows[sectionID]) {
        delete this._visibleRows[sectionID];
      }
    }
    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
  },

  _onScroll: function _onScroll(e) {
    var isVertical = !this.props.horizontal;
    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];
    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
    if (!this._maybeCallOnEndReached(e)) {
      this._renderMoreRowsIfNeeded();
    }

    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
      this._sentEndForContentLength = null;
    }

    this.props.onScroll && this.props.onScroll(e);
  }
});

module.exports = ListView;
}, 247, null, "ListView");
__d(/* ListViewDataSource */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var isEmpty = require(249      ); // 249 = isEmpty

var warning = require(23                ); // 23 = fbjs/lib/warning

function defaultGetRowData(dataBlob, sectionID, rowID) {
  return dataBlob[sectionID][rowID];
}

function defaultGetSectionHeaderData(dataBlob, sectionID) {
  return dataBlob[sectionID];
}

var ListViewDataSource = function () {
  function ListViewDataSource(params) {
    babelHelpers.classCallCheck(this, ListViewDataSource);

    invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
    this._rowHasChanged = params.rowHasChanged;
    this._getRowData = params.getRowData || defaultGetRowData;
    this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
    this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;

    this._dataBlob = null;
    this._dirtyRows = [];
    this._dirtySections = [];
    this._cachedRowCount = 0;

    this.rowIdentities = [];
    this.sectionIdentities = [];
  }

  babelHelpers.createClass(ListViewDataSource, [{
    key: 'cloneWithRows',
    value: function cloneWithRows(dataBlob, rowIdentities) {
      var rowIds = rowIdentities ? [[].concat(babelHelpers.toConsumableArray(rowIdentities))] : null;
      if (!this._sectionHeaderHasChanged) {
        this._sectionHeaderHasChanged = function () {
          return false;
        };
      }
      return this.cloneWithRowsAndSections({ s1: dataBlob }, ['s1'], rowIds);
    }
  }, {
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
      invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');

      var newSource = new ListViewDataSource({
        getRowData: this._getRowData,
        getSectionHeaderData: this._getSectionHeaderData,
        rowHasChanged: this._rowHasChanged,
        sectionHeaderHasChanged: this._sectionHeaderHasChanged
      });
      newSource._dataBlob = dataBlob;
      if (sectionIdentities) {
        newSource.sectionIdentities = sectionIdentities;
      } else {
        newSource.sectionIdentities = Object.keys(dataBlob);
      }
      if (rowIdentities) {
        newSource.rowIdentities = rowIdentities;
      } else {
        newSource.rowIdentities = [];
        newSource.sectionIdentities.forEach(function (sectionID) {
          newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
        });
      }
      newSource._cachedRowCount = countRows(newSource.rowIdentities);

      newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return newSource;
    }
  }, {
    key: 'getRowCount',
    value: function getRowCount() {
      return this._cachedRowCount;
    }
  }, {
    key: 'getRowAndSectionCount',
    value: function getRowAndSectionCount() {
      return this._cachedRowCount + this.sectionIdentities.length;
    }
  }, {
    key: 'rowShouldUpdate',
    value: function rowShouldUpdate(sectionIndex, rowIndex) {
      var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
      return needsUpdate;
    }
  }, {
    key: 'getRowData',
    value: function getRowData(sectionIndex, rowIndex) {
      var sectionID = this.sectionIdentities[sectionIndex];
      var rowID = this.rowIdentities[sectionIndex][rowIndex];
      warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
      return this._getRowData(this._dataBlob, sectionID, rowID);
    }
  }, {
    key: 'getRowIDForFlatIndex',
    value: function getRowIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.rowIdentities[ii][accessIndex];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionIDForFlatIndex',
    value: function getSectionIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.sectionIdentities[ii];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionLengths',
    value: function getSectionLengths() {
      var results = [];
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        results.push(this.rowIdentities[ii].length);
      }
      return results;
    }
  }, {
    key: 'sectionHeaderShouldUpdate',
    value: function sectionHeaderShouldUpdate(sectionIndex) {
      var needsUpdate = this._dirtySections[sectionIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
      return needsUpdate;
    }
  }, {
    key: 'getSectionHeaderData',
    value: function getSectionHeaderData(sectionIndex) {
      if (!this._getSectionHeaderData) {
        return null;
      }
      var sectionID = this.sectionIdentities[sectionIndex];
      warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
      return this._getSectionHeaderData(this._dataBlob, sectionID);
    }
  }, {
    key: '_calculateDirtyArrays',
    value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
      var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
      var prevRowsHash = {};
      for (var ii = 0; ii < prevRowIDs.length; ii++) {
        var sectionID = prevSectionIDs[ii];
        warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
        prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
      }

      this._dirtySections = [];
      this._dirtyRows = [];

      var dirty;
      for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
        var sectionID = this.sectionIdentities[sIndex];

        dirty = !prevSectionsHash[sectionID];
        var sectionHeaderHasChanged = this._sectionHeaderHasChanged;
        if (!dirty && sectionHeaderHasChanged) {
          dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, sectionID), this._getSectionHeaderData(this._dataBlob, sectionID));
        }
        this._dirtySections.push(!!dirty);

        this._dirtyRows[sIndex] = [];
        for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
          var rowID = this.rowIdentities[sIndex][rIndex];

          dirty = !prevSectionsHash[sectionID] || !prevRowsHash[sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, sectionID, rowID), this._getRowData(this._dataBlob, sectionID, rowID));
          this._dirtyRows[sIndex].push(!!dirty);
        }
      }
    }
  }]);
  return ListViewDataSource;
}();

function countRows(allRowIDs) {
  var totalRows = 0;
  for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
    var rowIDs = allRowIDs[sectionIdx];
    totalRows += rowIDs.length;
  }
  return totalRows;
}

function keyedDictionaryFromArray(arr) {
  if (isEmpty(arr)) {
    return {};
  }
  var result = {};
  for (var ii = 0; ii < arr.length; ii++) {
    var key = arr[ii];
    warning(!result[key], 'Value appears more than once in array: ' + key);
    result[key] = true;
  }
  return result;
}

module.exports = ListViewDataSource;
}, 248, null, "ListViewDataSource");
__d(/* isEmpty */function(global, require, module, exports) {
'use strict';

function isEmpty(obj) {
  if (Array.isArray(obj)) {
    return obj.length === 0;
  } else if (typeof obj === 'object') {
    for (var i in obj) {
      return false;
    }
    return true;
  } else {
    return !obj;
  }
}

module.exports = isEmpty;
}, 249, null, "isEmpty");
__d(/* StaticRenderer */function(global, require, module, exports) {
'use strict';

var React = require(134    ); // 134 = React

var PropTypes = require(144         ); // 144 = prop-types

var StaticRenderer = function (_React$Component) {
  babelHelpers.inherits(StaticRenderer, _React$Component);

  function StaticRenderer() {
    babelHelpers.classCallCheck(this, StaticRenderer);
    return babelHelpers.possibleConstructorReturn(this, (StaticRenderer.__proto__ || Object.getPrototypeOf(StaticRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.render();
    }
  }]);
  return StaticRenderer;
}(React.Component);

StaticRenderer.propTypes = {
  shouldUpdate: PropTypes.bool.isRequired,
  render: PropTypes.func.isRequired
};


module.exports = StaticRenderer;
}, 250, null, "StaticRenderer");
__d(/* react-clone-referenced-element/cloneReferencedElement.js */function(global, require, module, exports) {'use strict';

var React = require(35     ); // 35 = react

function cloneReferencedElement(element, config) {
  var cloneRef = config.ref;
  var originalRef = element.ref;

  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  if (originalRef == null || cloneRef == null) {
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  if (typeof originalRef !== 'function') {
    if (__DEV__) {
      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);
    }
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  return React.cloneElement.apply(React, [element, babelHelpers.extends({}, config, {
    ref: function ref(component) {
      cloneRef(component);
      originalRef(component);
    }
  })].concat(children));
}

module.exports = cloneReferencedElement;
}, 251, null, "react-clone-referenced-element/cloneReferencedElement.js");
__d(/* RefreshControl */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

if (Platform.OS === 'android') {
  var RefreshLayoutConsts = require(54         ).AndroidSwipeRefreshLayout.Constants; // 54 = UIManager
} else {
  var RefreshLayoutConsts = { SIZE: {} };
}

var RefreshControl = createReactClass({
  displayName: 'RefreshControl',
  statics: {
    SIZE: RefreshLayoutConsts.SIZE
  },

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    onRefresh: PropTypes.func,

    refreshing: PropTypes.bool.isRequired,

    tintColor: ColorPropType,

    titleColor: ColorPropType,

    title: PropTypes.string,

    enabled: PropTypes.bool,

    colors: PropTypes.arrayOf(ColorPropType),

    progressBackgroundColor: ColorPropType,

    size: PropTypes.oneOf([RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE]),

    progressViewOffset: PropTypes.number
  }),

  _nativeRef: null,
  _lastNativeRefreshing: false,

  componentDidMount: function componentDidMount() {
    this._lastNativeRefreshing = this.props.refreshing;
  },
  componentDidUpdate: function componentDidUpdate(prevProps) {
    if (this.props.refreshing !== prevProps.refreshing) {
      this._lastNativeRefreshing = this.props.refreshing;
    } else if (this.props.refreshing !== this._lastNativeRefreshing) {
      this._nativeRef.setNativeProps({ refreshing: this.props.refreshing });
      this._lastNativeRefreshing = this.props.refreshing;
    }
  },
  render: function render() {
    var _this = this;

    return React.createElement(NativeRefreshControl, babelHelpers.extends({}, this.props, {
      ref: function ref(_ref) {
        _this._nativeRef = _ref;
      },
      onRefresh: this._onRefresh,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 156
      }
    }));
  },
  _onRefresh: function _onRefresh() {
    this._lastNativeRefreshing = true;

    this.props.onRefresh && this.props.onRefresh();

    this.forceUpdate();
  }
});

if (Platform.OS === 'ios') {
  var NativeRefreshControl = requireNativeComponent('RCTRefreshControl', RefreshControl);
} else if (Platform.OS === 'android') {
  var NativeRefreshControl = requireNativeComponent('AndroidSwipeRefreshLayout', RefreshControl);
}

module.exports = RefreshControl;
}, 252, null, "RefreshControl");
__d(/* VirtualizedList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/VirtualizedList.js';
var Batchinator = require(254          ); // 254 = Batchinator
var FillRateHelper = require(255             ); // 255 = FillRateHelper
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative
var RefreshControl = require(252             ); // 252 = RefreshControl
var ScrollView = require(228         ); // 228 = ScrollView
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View
var ViewabilityHelper = require(256                ); // 256 = ViewabilityHelper

var flattenStyle = require(50            ); // 50 = flattenStyle
var infoLog = require(115      ); // 115 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(257              ), // 257 = VirtualizeUtils
    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;

var _usedIndexForKey = false;

var VirtualizedList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      var animated = params ? params.animated : true;
      var veryLast = this.props.getItemCount(this.props.data) - 1;
      var frame = this._getFrameMetricsApprox(veryLast);
      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      var _props = this.props,
          data = _props.data,
          horizontal = _props.horizontal,
          getItemCount = _props.getItemCount,
          getItemLayout = _props.getItemLayout,
          onScrollToIndexFailed = _props.onScrollToIndexFailed;
      var animated = params.animated,
          index = params.index,
          viewOffset = params.viewOffset,
          viewPosition = params.viewPosition;

      invariant(index >= 0 && index < getItemCount(data), 'scrollToIndex out of range: ' + index + ' vs ' + (getItemCount(data) - 1));
      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {
        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');
        onScrollToIndexFailed({
          averageItemLength: this._averageCellLength,
          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,
          index: index
        });
        return;
      }
      var frame = this._getFrameMetricsApprox(index);
      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);

      this._scrollRef.scrollTo(horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      var item = params.item;
      var _props2 = this.props,
          data = _props2.data,
          getItem = _props2.getItem,
          getItemCount = _props2.getItemCount;

      var itemCount = getItemCount(data);
      for (var _index = 0; _index < itemCount; _index++) {
        if (getItem(data, _index) === item) {
          this.scrollToIndex(babelHelpers.extends({}, params, { index: _index }));
          break;
        }
      }
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._viewabilityTuples.forEach(function (t) {
        t.viewabilityHelper.recordInteraction();
      });
      this._updateViewableItems(this.props.data);
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._scrollRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._scrollRef && this._scrollRef.getScrollResponder) {
        return this._scrollRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._scrollRef && this._scrollRef.getScrollableNode) {
        return this._scrollRef.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollRef);
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._scrollRef) {
        this._scrollRef.setNativeProps(props);
      }
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        virtualizedList: {
          horizontal: this.props.horizontal
        }
      };
    }
  }]);

  function VirtualizedList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedList.__proto__ || Object.getPrototypeOf(VirtualizedList)).call(this, props, context));

    _initialiseProps.call(_this);

    invariant(!props.onScroll || !props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');
    invariant(!(_this._isNestedWithSameOrientation() && props.onViewableItemsChanged), 'Nesting lists that scroll in the same direction does not support onViewableItemsChanged' + 'on the inner list.');

    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);
    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);

    if (_this.props.viewabilityConfigCallbackPairs) {
      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
        return {
          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),
          onViewableItemsChanged: pair.onViewableItemsChanged
        };
      });
    } else if (_this.props.onViewableItemsChanged) {
      _this._viewabilityTuples.push({
        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),
        onViewableItemsChanged: _this.props.onViewableItemsChanged
      });
    }

    _this.state = {
      first: _this.props.initialScrollIndex || 0,
      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1
    };
    return _this;
  }

  babelHelpers.createClass(VirtualizedList, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.initialScrollIndex) {
        this._initialScrollIndexTimeout = setTimeout(function () {
          return _this2.scrollToIndex({
            animated: false,
            index: _this2.props.initialScrollIndex
          });
        }, 0);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._updateViewableItems(null);
      this._updateCellsToRenderBatcher.dispose();
      this._viewabilityTuples.forEach(function (tuple) {
        tuple.viewabilityHelper.dispose();
      });
      this._fillRateHelper.deactivateAndFlush();
      clearTimeout(this._initialScrollIndexTimeout);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var data = newProps.data,
          extraData = newProps.extraData,
          getItemCount = newProps.getItemCount,
          maxToRenderPerBatch = newProps.maxToRenderPerBatch;

      this.setState({
        first: Math.max(0, Math.min(this.state.first, getItemCount(data) - 1 - maxToRenderPerBatch)),
        last: Math.max(0, Math.min(this.state.last, getItemCount(data) - 1))
      });
      if (data !== this.props.data || extraData !== this.props.extraData) {
        this._hasDataChangedSinceEndReached = true;

        this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.resetViewableIndices();
        });
      }
    }
  }, {
    key: '_pushCells',
    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {
      var _this3 = this;

      var _props3 = this.props,
          CellRendererComponent = _props3.CellRendererComponent,
          ItemSeparatorComponent = _props3.ItemSeparatorComponent,
          data = _props3.data,
          getItem = _props3.getItem,
          getItemCount = _props3.getItemCount,
          horizontal = _props3.horizontal,
          keyExtractor = _props3.keyExtractor;

      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;
      var end = getItemCount(data) - 1;
      var prevCellKey = void 0;
      last = Math.min(end, last);

      var _loop = function _loop(ii) {
        var item = getItem(data, ii);
        var key = keyExtractor(item, ii);
        if (stickyIndicesFromProps.has(ii + stickyOffset)) {
          stickyHeaderIndices.push(cells.length);
        }
        cells.push(React.createElement(CellRenderer, {
          CellRendererComponent: CellRendererComponent,
          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,
          cellKey: key,
          fillRateHelper: _this3._fillRateHelper,
          horizontal: horizontal,
          index: ii,
          inversionStyle: inversionStyle,
          item: item,
          key: key,
          prevCellKey: prevCellKey,
          onUpdateSeparators: _this3._onUpdateSeparators,
          onLayout: function onLayout(e) {
            return _this3._onCellLayout(e, key, ii);
          },
          onUnmount: _this3._onCellUnmount,
          parentProps: _this3.props,
          ref: function ref(_ref) {
            _this3._cellRefs[key] = _ref;
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 556
          }
        }));
        prevCellKey = key;
      };

      for (var ii = first; ii <= last; ii++) {
        _loop(ii);
      }
    }
  }, {
    key: '_isVirtualizationDisabled',
    value: function _isVirtualizationDisabled() {
      return this.props.disableVirtualization || this._isNestedWithSameOrientation();
    }
  }, {
    key: '_isNestedWithSameOrientation',
    value: function _isNestedWithSameOrientation() {
      var nestedContext = this.context.virtualizedList;
      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);
    }
  }, {
    key: 'render',
    value: function render() {
      if (__DEV__) {
        var flatStyles = flattenStyle(this.props.contentContainerStyle);
        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');
      }

      var _props4 = this.props,
          ListEmptyComponent = _props4.ListEmptyComponent,
          ListFooterComponent = _props4.ListFooterComponent,
          ListHeaderComponent = _props4.ListHeaderComponent;
      var _props5 = this.props,
          data = _props5.data,
          horizontal = _props5.horizontal;

      var isVirtualizationDisabled = this._isVirtualizationDisabled();
      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;
      var cells = [];
      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
      var stickyHeaderIndices = [];
      if (ListHeaderComponent) {
        if (stickyIndicesFromProps.has(0)) {
          stickyHeaderIndices.push(0);
        }
        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 633
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$header',
            onLayout: this._onLayoutHeader,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 636
            }
          },
          element
        ));
      }
      var itemCount = this.props.getItemCount(data);
      if (itemCount > 0) {
        _usedIndexForKey = false;
        var spacerKey = !horizontal ? 'height' : 'width';
        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;
        var _state = this.state,
            _first = _state.first,
            _last = _state.last;

        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);
        var firstAfterInitial = Math.max(lastInitialIndex + 1, _first);
        if (!isVirtualizationDisabled && _first > lastInitialIndex + 1) {
          var insertedStickySpacer = false;
          if (stickyIndicesFromProps.size > 0) {
            var stickyOffset = ListHeaderComponent ? 1 : 0;

            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {
              if (stickyIndicesFromProps.has(ii + stickyOffset)) {
                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);
                var stickyBlock = this._getFrameMetricsApprox(ii);
                var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_lead', style: babelHelpers.defineProperty({}, spacerKey, leadSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 673
                  }
                }));
                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);
                var trailSpace = this._getFrameMetricsApprox(_first).offset - (stickyBlock.offset + stickyBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_trail', style: babelHelpers.defineProperty({}, spacerKey, trailSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 687
                  }
                }));
                insertedStickySpacer = true;
                break;
              }
            }
          }
          if (!insertedStickySpacer) {
            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);
            var firstSpace = this._getFrameMetricsApprox(_first).offset - (_initBlock.offset + _initBlock.length);
            cells.push(React.createElement(View, { key: '$lead_spacer', style: babelHelpers.defineProperty({}, spacerKey, firstSpace), __source: {
                fileName: _jsxFileName,
                lineNumber: 700
              }
            }));
          }
        }
        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, _last, inversionStyle);
        if (!this._hasWarned.keys && _usedIndexForKey) {
          console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');
          this._hasWarned.keys = true;
        }
        if (!isVirtualizationDisabled && _last < itemCount - 1) {
          var lastFrame = this._getFrameMetricsApprox(_last);

          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);
          var endFrame = this._getFrameMetricsApprox(end);
          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);
          cells.push(React.createElement(View, { key: '$tail_spacer', style: babelHelpers.defineProperty({}, spacerKey, tailSpacerLength), __source: {
              fileName: _jsxFileName,
              lineNumber: 733
            }
          }));
        }
      } else if (ListEmptyComponent) {
        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 741
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$empty',
            onLayout: this._onLayoutEmpty,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 744
            }
          },
          _element
        ));
      }
      if (ListFooterComponent) {
        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 757
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$footer',
            onLayout: this._onLayoutFooter,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 760
            }
          },
          _element2
        ));
      }
      var scrollProps = babelHelpers.extends({}, this.props, {
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        onScroll: this._onScroll,
        onScrollBeginDrag: this._onScrollBeginDrag,
        onScrollEndDrag: this._onScrollEndDrag,
        onMomentumScrollEnd: this._onMomentumScrollEnd,
        scrollEventThrottle: this.props.scrollEventThrottle,
        stickyHeaderIndices: stickyHeaderIndices
      });
      if (inversionStyle) {
        scrollProps.style = [inversionStyle, this.props.style];
      }
      var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {
        ref: this._captureScrollRef
      }, cells);
      if (this.props.debug) {
        return React.createElement(
          View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 793
            }
          },
          ret,
          this._renderDebugOverlay()
        );
      } else {
        return ret;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._scheduleCellsToRenderUpdate();
    }
  }, {
    key: '_computeBlankness',
    value: function _computeBlankness() {
      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);
    }
  }, {
    key: '_onCellLayout',
    value: function _onCellLayout(e, cellKey, index) {
      var layout = e.nativeEvent.layout;
      var next = {
        offset: this._selectOffset(layout),
        length: this._selectLength(layout),
        index: index,
        inLayout: true
      };
      var curr = this._frames[cellKey];
      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {
        this._totalCellLength += next.length - (curr ? curr.length : 0);
        this._totalCellsMeasured += curr ? 0 : 1;
        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;
        this._frames[cellKey] = next;
        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);
        this._scheduleCellsToRenderUpdate();
      } else {
        this._frames[cellKey].inLayout = true;
      }
      this._computeBlankness();
    }
  }, {
    key: '_renderDebugOverlay',
    value: function _renderDebugOverlay() {
      var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;
      var framesInLayout = [];
      var itemCount = this.props.getItemCount(this.props.data);
      for (var ii = 0; ii < itemCount; ii++) {
        var frame = this._getFrameMetricsApprox(ii);
        if (frame.inLayout) {
          framesInLayout.push(frame);
        }
      }
      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;
      var frameLast = this._getFrameMetricsApprox(this.state.last);
      var windowLen = frameLast.offset + frameLast.length - windowTop;
      var visTop = this._scrollMetrics.offset;
      var visLen = this._scrollMetrics.visibleLength;
      var baseStyle = { position: 'absolute', top: 0, right: 0 };
      return React.createElement(
        View,
        {
          style: babelHelpers.extends({}, baseStyle, {
            bottom: 0,
            width: 20,
            borderColor: 'blue',
            borderWidth: 1
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 958
          }
        },
        framesInLayout.map(function (f, ii) {
          return React.createElement(View, {
            key: 'f' + ii,
            style: babelHelpers.extends({}, baseStyle, {
              left: 0,
              top: f.offset * normalize,
              height: f.length * normalize,
              backgroundColor: 'orange'
            }),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 967
            }
          });
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: windowTop * normalize,
            height: windowLen * normalize,
            borderColor: 'green',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 978
          }
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: visTop * normalize,
            height: visLen * normalize,
            borderColor: 'red',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 988
          }
        })
      );
    }
  }, {
    key: '_selectLength',
    value: function _selectLength(metrics) {
      return !this.props.horizontal ? metrics.height : metrics.width;
    }
  }, {
    key: '_selectOffset',
    value: function _selectOffset(metrics) {
      return !this.props.horizontal ? metrics.y : metrics.x;
    }
  }, {
    key: '_maybeCallOnEndReached',
    value: function _maybeCallOnEndReached() {
      var _props6 = this.props,
          data = _props6.data,
          getItemCount = _props6.getItemCount,
          onEndReached = _props6.onEndReached,
          onEndReachedThreshold = _props6.onEndReachedThreshold;
      var _scrollMetrics = this._scrollMetrics,
          contentLength = _scrollMetrics.contentLength,
          visibleLength = _scrollMetrics.visibleLength,
          offset = _scrollMetrics.offset;

      var distanceFromEnd = contentLength - visibleLength - offset;
      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {
        this._hasDataChangedSinceEndReached = false;
        this._sentEndForContentLength = this._scrollMetrics.contentLength;
        onEndReached({ distanceFromEnd: distanceFromEnd });
      }
    }
  }, {
    key: '_scheduleCellsToRenderUpdate',
    value: function _scheduleCellsToRenderUpdate() {
      var _state2 = this.state,
          first = _state2.first,
          last = _state2.last;
      var _scrollMetrics2 = this._scrollMetrics,
          offset = _scrollMetrics2.offset,
          visibleLength = _scrollMetrics2.visibleLength,
          velocity = _scrollMetrics2.velocity;

      var itemCount = this.props.getItemCount(this.props.data);
      var hiPri = false;
      if (first > 0 || last < itemCount - 1) {
        var distTop = offset - this._getFrameMetricsApprox(first).offset;
        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);
        var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;
        hiPri = Math.min(distTop, distBottom) < 0 || velocity < -2 && distTop < scrollingThreshold || velocity > 2 && distBottom < scrollingThreshold;
      }

      if (hiPri && this._averageCellLength) {
        this._updateCellsToRenderBatcher.dispose({ abort: true });
        this._updateCellsToRender();
        return;
      } else {
        this._updateCellsToRenderBatcher.schedule();
      }
    }
  }, {
    key: '_updateViewableItems',
    value: function _updateViewableItems(data) {
      var _this4 = this;

      var getItemCount = this.props.getItemCount;


      this._viewabilityTuples.forEach(function (tuple) {
        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this4._scrollMetrics.offset, _this4._scrollMetrics.visibleLength, _this4._getFrameMetrics, _this4._createViewToken, tuple.onViewableItemsChanged, _this4.state);
      });
    }
  }]);
  return VirtualizedList;
}(React.PureComponent);

VirtualizedList.defaultProps = {
  disableVirtualization: false,
  horizontal: false,
  initialNumToRender: 10,
  keyExtractor: function keyExtractor(item, index) {
    if (item.key != null) {
      return item.key;
    }
    _usedIndexForKey = true;
    return String(index);
  },
  maxToRenderPerBatch: 10,
  onEndReachedThreshold: 2,
  scrollEventThrottle: 50,
  updateCellsBatchingPeriod: 50,
  windowSize: 21 };
VirtualizedList.contextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};
VirtualizedList.childContextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};

var _initialiseProps = function _initialiseProps() {
  var _this6 = this;

  this._onUpdateSeparators = function (keys, newProps) {
    keys.forEach(function (key) {
      var ref = key != null && _this6._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    });
  };

  this._averageCellLength = 0;
  this._cellRefs = {};
  this._hasDataChangedSinceEndReached = true;
  this._hasWarned = {};
  this._highestMeasuredFrameIndex = 0;
  this._headerLength = 0;
  this._initialScrollIndexTimeout = 0;
  this._frames = {};
  this._footerLength = 0;
  this._scrollMetrics = {
    contentLength: 0,
    dOffset: 0,
    dt: 10,
    offset: 0,
    timestamp: 0,
    velocity: 0,
    visibleLength: 0
  };
  this._scrollRef = null;
  this._sentEndForContentLength = 0;
  this._totalCellLength = 0;
  this._totalCellsMeasured = 0;
  this._viewabilityTuples = [];

  this._captureScrollRef = function (ref) {
    _this6._scrollRef = ref;
  };

  this._defaultRenderScrollComponent = function (props) {
    if (_this6._isNestedWithSameOrientation()) {
      return React.createElement(View, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 847
        }
      }));
    } else if (props.onRefresh) {
      invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          progressViewOffset: props.progressViewOffset,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 865
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 859
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 877
        }
      }));
    }
  };

  this._onCellUnmount = function (cellKey) {
    var curr = _this6._frames[cellKey];
    if (curr) {
      _this6._frames[cellKey] = babelHelpers.extends({}, curr, { inLayout: false });
    }
  };

  this._onLayout = function (e) {
    _this6._scrollMetrics.visibleLength = _this6._selectLength(e.nativeEvent.layout);
    _this6.props.onLayout && _this6.props.onLayout(e);
    _this6._scheduleCellsToRenderUpdate();
    _this6._maybeCallOnEndReached();
  };

  this._onLayoutEmpty = function (e) {
    _this6.props.onLayout && _this6.props.onLayout(e);
  };

  this._onLayoutFooter = function (e) {
    _this6._footerLength = _this6._selectLength(e.nativeEvent.layout);
  };

  this._onLayoutHeader = function (e) {
    _this6._headerLength = _this6._selectLength(e.nativeEvent.layout);
  };

  this._onContentSizeChange = function (width, height) {
    if (_this6.props.onContentSizeChange) {
      _this6.props.onContentSizeChange(width, height);
    }
    _this6._scrollMetrics.contentLength = _this6._selectLength({ height: height, width: width });
    _this6._scheduleCellsToRenderUpdate();
    _this6._maybeCallOnEndReached();
  };

  this._onScroll = function (e) {
    if (_this6.props.onScroll) {
      _this6.props.onScroll(e);
    }
    var timestamp = e.timeStamp;
    var visibleLength = _this6._selectLength(e.nativeEvent.layoutMeasurement);
    var contentLength = _this6._selectLength(e.nativeEvent.contentSize);
    var offset = _this6._selectOffset(e.nativeEvent.contentOffset);
    var dt = _this6._scrollMetrics.timestamp ? Math.max(1, timestamp - _this6._scrollMetrics.timestamp) : 1;
    if (dt > 500 && _this6._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this6._hasWarned.perf) {
      infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', { dt: dt, prevDt: _this6._scrollMetrics.dt, contentLength: contentLength });
      _this6._hasWarned.perf = true;
    }
    var dOffset = offset - _this6._scrollMetrics.offset;
    var velocity = dOffset / dt;
    _this6._scrollMetrics = {
      contentLength: contentLength,
      dt: dt,
      dOffset: dOffset,
      offset: offset,
      timestamp: timestamp,
      velocity: velocity,
      visibleLength: visibleLength
    };
    _this6._updateViewableItems(_this6.props.data);
    if (!_this6.props) {
      return;
    }
    _this6._maybeCallOnEndReached();
    if (velocity !== 0) {
      _this6._fillRateHelper.activate();
    }
    _this6._computeBlankness();
    _this6._scheduleCellsToRenderUpdate();
  };

  this._onScrollBeginDrag = function (e) {
    _this6._viewabilityTuples.forEach(function (tuple) {
      tuple.viewabilityHelper.recordInteraction();
    });
    _this6.props.onScrollBeginDrag && _this6.props.onScrollBeginDrag(e);
  };

  this._onScrollEndDrag = function (e) {
    var velocity = e.nativeEvent.velocity;

    if (velocity) {
      _this6._scrollMetrics.velocity = _this6._selectOffset(velocity);
    }
    _this6._computeBlankness();
    _this6.props.onScrollEndDrag && _this6.props.onScrollEndDrag(e);
  };

  this._onMomentumScrollEnd = function (e) {
    _this6._scrollMetrics.velocity = 0;
    _this6._computeBlankness();
    _this6.props.onMomentumScrollEnd && _this6.props.onMomentumScrollEnd(e);
  };

  this._updateCellsToRender = function () {
    var _props8 = _this6.props,
        data = _props8.data,
        getItemCount = _props8.getItemCount,
        onEndReachedThreshold = _props8.onEndReachedThreshold;

    var isVirtualizationDisabled = _this6._isVirtualizationDisabled();
    _this6._updateViewableItems(data);
    if (!data) {
      return;
    }
    _this6.setState(function (state) {
      var newState = void 0;
      if (!isVirtualizationDisabled) {
        if (_this6._scrollMetrics.visibleLength) {
          if (!_this6.props.initialScrollIndex || _this6._scrollMetrics.offset) {
            newState = computeWindowedRenderLimits(_this6.props, state, _this6._getFrameMetricsApprox, _this6._scrollMetrics);
          }
        }
      } else {
        var _scrollMetrics3 = _this6._scrollMetrics,
            contentLength = _scrollMetrics3.contentLength,
            _offset = _scrollMetrics3.offset,
            visibleLength = _scrollMetrics3.visibleLength;

        var _distanceFromEnd = contentLength - visibleLength - _offset;
        var renderAhead = _distanceFromEnd < onEndReachedThreshold * visibleLength ? _this6.props.maxToRenderPerBatch : 0;
        newState = {
          first: 0,
          last: Math.min(state.last + renderAhead, getItemCount(data) - 1)
        };
      }
      return newState;
    });
  };

  this._createViewToken = function (index, isViewable) {
    var _props9 = _this6.props,
        data = _props9.data,
        getItem = _props9.getItem,
        keyExtractor = _props9.keyExtractor;

    var item = getItem(data, index);
    return { index: index, item: item, key: keyExtractor(item, index), isViewable: isViewable };
  };

  this._getFrameMetricsApprox = function (index) {
    var frame = _this6._getFrameMetrics(index);
    if (frame && frame.index === index) {
      return frame;
    } else {
      var _getItemLayout = _this6.props.getItemLayout;

      invariant(!_getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');
      return {
        length: _this6._averageCellLength,
        offset: _this6._averageCellLength * index
      };
    }
  };

  this._getFrameMetrics = function (index) {
    var _props10 = _this6.props,
        data = _props10.data,
        getItem = _props10.getItem,
        getItemCount = _props10.getItemCount,
        getItemLayout = _props10.getItemLayout,
        keyExtractor = _props10.keyExtractor;

    invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);
    var item = getItem(data, index);
    var frame = item && _this6._frames[keyExtractor(item, index)];
    if (!frame || frame.index !== index) {
      if (getItemLayout) {
        frame = getItemLayout(data, index);
        if (__DEV__) {
          var frameType = PropTypes.shape({
            length: PropTypes.number.isRequired,
            offset: PropTypes.number.isRequired,
            index: PropTypes.number.isRequired
          }).isRequired;
          PropTypes.checkPropTypes({ frame: frameType }, { frame: frame }, 'frame', 'VirtualizedList.getItemLayout');
        }
      }
    }
    return frame;
  };
};

var CellRenderer = function (_React$Component) {
  babelHelpers.inherits(CellRenderer, _React$Component);

  function CellRenderer() {
    var _ref6;

    var _temp, _this5, _ret2;

    babelHelpers.classCallCheck(this, CellRenderer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret2 = (_temp = (_this5 = babelHelpers.possibleConstructorReturn(this, (_ref6 = CellRenderer.__proto__ || Object.getPrototypeOf(CellRenderer)).call.apply(_ref6, [this].concat(args))), _this5), _this5.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this5.props.item
      }
    }, _this5._separators = {
      highlight: function highlight() {
        var _this5$props = _this5.props,
            cellKey = _this5$props.cellKey,
            prevCellKey = _this5$props.prevCellKey;

        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: true
        });
      },
      unhighlight: function unhighlight() {
        var _this5$props2 = _this5.props,
            cellKey = _this5$props2.cellKey,
            prevCellKey = _this5$props2.prevCellKey;

        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: false
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this5$props3 = _this5.props,
            cellKey = _this5$props3.cellKey,
            prevCellKey = _this5$props3.prevCellKey;

        _this5.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this5, _ret2);
  }

  babelHelpers.createClass(CellRenderer, [{
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.onUnmount(this.props.cellKey);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props7 = this.props,
          CellRendererComponent = _props7.CellRendererComponent,
          ItemSeparatorComponent = _props7.ItemSeparatorComponent,
          fillRateHelper = _props7.fillRateHelper,
          horizontal = _props7.horizontal,
          item = _props7.item,
          index = _props7.index,
          inversionStyle = _props7.inversionStyle,
          parentProps = _props7.parentProps;
      var renderItem = parentProps.renderItem,
          getItemLayout = parentProps.getItemLayout;

      invariant(renderItem, 'no renderItem!');
      var element = renderItem({
        item: item,
        index: index,
        separators: this._separators
      });
      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;

      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1360
        }
      }));
      var cellStyle = inversionStyle ? horizontal ? [{ flexDirection: 'row-reverse' }, inversionStyle] : [{ flexDirection: 'column-reverse' }, inversionStyle] : horizontal ? [{ flexDirection: 'row' }, inversionStyle] : inversionStyle;
      if (!CellRendererComponent) {
        return React.createElement(
          View,
          { style: cellStyle, onLayout: onLayout, __source: {
              fileName: _jsxFileName,
              lineNumber: 1369
            }
          },
          element,
          itemSeparator
        );
      }
      return React.createElement(
        CellRendererComponent,
        babelHelpers.extends({}, this.props, {
          style: cellStyle,
          onLayout: onLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 1376
          }
        }),
        element,
        itemSeparator
      );
    }
  }]);
  return CellRenderer;
}(React.Component);

var styles = StyleSheet.create({
  verticallyInverted: {
    transform: [{ scaleY: -1 }]
  },
  horizontallyInverted: {
    transform: [{ scaleX: -1 }]
  }
});

module.exports = VirtualizedList;
}, 253, null, "VirtualizedList");
__d(/* Batchinator */function(global, require, module, exports) {
'use strict';

var InteractionManager = require(206                 ); // 206 = InteractionManager

var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    babelHelpers.classCallCheck(this, Batchinator);

    this._delay = delayMS;
    this._callback = callback;
  }

  babelHelpers.createClass(Batchinator, [{
    key: 'dispose',
    value: function dispose() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { abort: false };

      if (this._taskHandle) {
        this._taskHandle.cancel();
        if (!options.abort) {
          this._callback();
        }
        this._taskHandle = null;
      }
    }
  }, {
    key: 'schedule',
    value: function schedule() {
      var _this = this;

      if (this._taskHandle) {
        return;
      }
      var timeoutHandle = setTimeout(function () {
        _this._taskHandle = InteractionManager.runAfterInteractions(function () {
          _this._taskHandle = null;
          _this._callback();
        });
      }, this._delay);
      this._taskHandle = { cancel: function cancel() {
          return clearTimeout(timeoutHandle);
        } };
    }
  }]);
  return Batchinator;
}();

module.exports = Batchinator;
}, 254, null, "Batchinator");
__d(/* FillRateHelper */function(global, require, module, exports) {

'use strict';

var performanceNow = require(76                       ); // 76 = fbjs/lib/performanceNow

var warning = require(23                ); // 23 = fbjs/lib/warning

var Info = function Info() {
  babelHelpers.classCallCheck(this, Info);
  this.any_blank_count = 0;
  this.any_blank_ms = 0;
  this.any_blank_speed_sum = 0;
  this.mostly_blank_count = 0;
  this.mostly_blank_ms = 0;
  this.pixels_blank = 0;
  this.pixels_sampled = 0;
  this.pixels_scrolled = 0;
  this.total_time_spent = 0;
  this.sample_count = 0;
};

var DEBUG = false;

var _listeners = [];
var _minSampleCount = 10;
var _sampleRate = DEBUG ? 1 : null;

var FillRateHelper = function () {
  babelHelpers.createClass(FillRateHelper, null, [{
    key: 'addListener',
    value: function addListener(callback) {
      warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');
      _listeners.push(callback);
      return {
        remove: function remove() {
          _listeners = _listeners.filter(function (listener) {
            return callback !== listener;
          });
        }
      };
    }
  }, {
    key: 'setSampleRate',
    value: function setSampleRate(sampleRate) {
      _sampleRate = sampleRate;
    }
  }, {
    key: 'setMinSampleCount',
    value: function setMinSampleCount(minSampleCount) {
      _minSampleCount = minSampleCount;
    }
  }]);

  function FillRateHelper(getFrameMetrics) {
    babelHelpers.classCallCheck(this, FillRateHelper);
    this._anyBlankStartTime = null;
    this._enabled = false;
    this._info = new Info();
    this._mostlyBlankStartTime = null;
    this._samplesStartTime = null;

    this._getFrameMetrics = getFrameMetrics;
    this._enabled = (_sampleRate || 0) > Math.random();
    this._resetData();
  }

  babelHelpers.createClass(FillRateHelper, [{
    key: 'activate',
    value: function activate() {
      if (this._enabled && this._samplesStartTime == null) {
        DEBUG && console.debug('FillRateHelper: activate');
        this._samplesStartTime = performanceNow();
      }
    }
  }, {
    key: 'deactivateAndFlush',
    value: function deactivateAndFlush() {
      if (!this._enabled) {
        return;
      }
      var start = this._samplesStartTime;
      if (start == null) {
        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');
        return;
      }
      if (this._info.sample_count < _minSampleCount) {
        this._resetData();
        return;
      }
      var total_time_spent = performanceNow() - start;
      var info = babelHelpers.extends({}, this._info, {
        total_time_spent: total_time_spent
      });
      if (DEBUG) {
        var derived = {
          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,
          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),
          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,
          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),
          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,
          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),
          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent
        };
        for (var key in derived) {
          derived[key] = Math.round(1000 * derived[key]) / 1000;
        }
        console.debug('FillRateHelper deactivateAndFlush: ', { derived: derived, info: info });
      }
      _listeners.forEach(function (listener) {
        return listener(info);
      });
      this._resetData();
    }
  }, {
    key: 'computeBlankness',
    value: function computeBlankness(props, state, scrollMetrics) {
      if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {
        return 0;
      }
      var dOffset = scrollMetrics.dOffset,
          offset = scrollMetrics.offset,
          velocity = scrollMetrics.velocity,
          visibleLength = scrollMetrics.visibleLength;

      this._info.sample_count++;
      this._info.pixels_sampled += Math.round(visibleLength);
      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
      var scrollSpeed = Math.round(Math.abs(velocity) * 1000);
      var now = performanceNow();
      if (this._anyBlankStartTime != null) {
        this._info.any_blank_ms += now - this._anyBlankStartTime;
      }
      this._anyBlankStartTime = null;
      if (this._mostlyBlankStartTime != null) {
        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
      }
      this._mostlyBlankStartTime = null;

      var blankTop = 0;
      var first = state.first;
      var firstFrame = this._getFrameMetrics(first);
      while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {
        firstFrame = this._getFrameMetrics(first);
        first++;
      }

      if (firstFrame && first > 0) {
        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));
      }
      var blankBottom = 0;
      var last = state.last;
      var lastFrame = this._getFrameMetrics(last);
      while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {
        lastFrame = this._getFrameMetrics(last);
        last--;
      }

      if (lastFrame && last < props.getItemCount(props.data) - 1) {
        var bottomEdge = lastFrame.offset + lastFrame.length;
        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));
      }
      var pixels_blank = Math.round(blankTop + blankBottom);
      var blankness = pixels_blank / visibleLength;
      if (blankness > 0) {
        this._anyBlankStartTime = now;
        this._info.any_blank_speed_sum += scrollSpeed;
        this._info.any_blank_count++;
        this._info.pixels_blank += pixels_blank;
        if (blankness > 0.5) {
          this._mostlyBlankStartTime = now;
          this._info.mostly_blank_count++;
        }
      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
        this.deactivateAndFlush();
      }
      return blankness;
    }
  }, {
    key: 'enabled',
    value: function enabled() {
      return this._enabled;
    }
  }, {
    key: '_resetData',
    value: function _resetData() {
      this._anyBlankStartTime = null;
      this._info = new Info();
      this._mostlyBlankStartTime = null;
      this._samplesStartTime = null;
    }
  }]);
  return FillRateHelper;
}();

module.exports = FillRateHelper;
}, 255, null, "FillRateHelper");
__d(/* ViewabilityHelper */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ViewabilityHelper = function () {
  function ViewabilityHelper() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { viewAreaCoveragePercentThreshold: 0 };
    babelHelpers.classCallCheck(this, ViewabilityHelper);
    this._hasInteracted = false;
    this._lastUpdateTime = 0;
    this._timers = new Set();
    this._viewableIndices = [];
    this._viewableItems = new Map();

    this._config = config;
  }

  babelHelpers.createClass(ViewabilityHelper, [{
    key: 'dispose',
    value: function dispose() {
      this._timers.forEach(clearTimeout);
    }
  }, {
    key: 'computeViewableItems',
    value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {
      var _config = this._config,
          itemVisiblePercentThreshold = _config.itemVisiblePercentThreshold,
          viewAreaCoveragePercentThreshold = _config.viewAreaCoveragePercentThreshold;

      var viewAreaMode = viewAreaCoveragePercentThreshold != null;
      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
      invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
      var viewableIndices = [];
      if (itemCount === 0) {
        return viewableIndices;
      }
      var firstVisible = -1;

      var _ref = renderRange || { first: 0, last: itemCount - 1 },
          first = _ref.first,
          last = _ref.last;

      invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({ renderRange: renderRange, itemCount: itemCount }));
      for (var idx = first; idx <= last; idx++) {
        var metrics = getFrameMetrics(idx);
        if (!metrics) {
          continue;
        }
        var top = metrics.offset - scrollOffset;
        var bottom = top + metrics.length;
        if (top < viewportHeight && bottom > 0) {
          firstVisible = idx;
          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
            viewableIndices.push(idx);
          }
        } else if (firstVisible >= 0) {
          break;
        }
      }
      return viewableIndices;
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {
      var _this = this;

      var updateTime = Date.now();
      if (this._lastUpdateTime === 0 && itemCount > 0 && getFrameMetrics(0)) {
        this._lastUpdateTime = updateTime;
      }
      var updateElapsed = this._lastUpdateTime ? updateTime - this._lastUpdateTime : 0;
      if (this._config.waitForInteraction && !this._hasInteracted) {
        return;
      }
      var viewableIndices = [];
      if (itemCount) {
        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);
      }
      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
        return v === viewableIndices[ii];
      })) {
        return;
      }
      this._viewableIndices = viewableIndices;
      this._lastUpdateTime = updateTime;
      if (this._config.minimumViewTime && updateElapsed < this._config.minimumViewTime) {
        var handle = setTimeout(function () {
          _this._timers.delete(handle);
          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
        }, this._config.minimumViewTime);
        this._timers.add(handle);
      } else {
        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
      }
    }
  }, {
    key: 'resetViewableIndices',
    value: function resetViewableIndices() {
      this._viewableIndices = [];
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._hasInteracted = true;
    }
  }, {
    key: '_onUpdateSync',
    value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
      var _this2 = this;

      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
        return _this2._viewableIndices.includes(ii);
      });
      var prevItems = this._viewableItems;
      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
        var viewable = createViewToken(ii, true);
        return [viewable.key, viewable];
      }));

      var changed = [];
      for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref4;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref4 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref4 = _i.value;
        }

        var _ref2 = _ref4;

        var _ref3 = babelHelpers.slicedToArray(_ref2, 2);

        var _key = _ref3[0];
        var viewable = _ref3[1];

        if (!prevItems.has(_key)) {
          changed.push(viewable);
        }
      }
      for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref7;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref7 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref7 = _i2.value;
        }

        var _ref5 = _ref7;

        var _ref6 = babelHelpers.slicedToArray(_ref5, 2);

        var _key2 = _ref6[0];
        var _viewable = _ref6[1];

        if (!nextItems.has(_key2)) {
          changed.push(babelHelpers.extends({}, _viewable, { isViewable: false }));
        }
      }
      if (changed.length > 0) {
        this._viewableItems = nextItems;
        onViewableItemsChanged({
          viewableItems: Array.from(nextItems.values()),
          changed: changed,
          viewabilityConfig: this._config
        });
      }
    }
  }]);
  return ViewabilityHelper;
}();

function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
  if (_isEntirelyVisible(top, bottom, viewportHeight)) {
    return true;
  } else {
    var pixels = _getPixelsVisible(top, bottom, viewportHeight);
    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
    return percent >= viewablePercentThreshold;
  }
}

function _getPixelsVisible(top, bottom, viewportHeight) {
  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
  return Math.max(0, visibleHeight);
}

function _isEntirelyVisible(top, bottom, viewportHeight) {
  return top >= 0 && bottom <= viewportHeight && bottom > top;
}

module.exports = ViewabilityHelper;
}, 256, null, "ViewabilityHelper");
__d(/* VirtualizeUtils */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {
  var out = [];
  for (var ii = 0; ii < itemCount; ii++) {
    var frame = getFrameMetrics(ii);
    var trailingOffset = frame.offset + frame.length;
    for (var kk = 0; kk < offsets.length; kk++) {
      if (out[kk] == null && trailingOffset >= offsets[kk]) {
        out[kk] = ii;
        if (kk === offsets.length - 1) {
          invariant(out.length === offsets.length, 'bad offsets input, should be in increasing order ' + JSON.stringify(offsets));
          return out;
        }
      }
    }
  }
  return out;
}

function newRangeCount(prev, next) {
  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
}

function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {
  var data = props.data,
      getItemCount = props.getItemCount,
      maxToRenderPerBatch = props.maxToRenderPerBatch,
      windowSize = props.windowSize;

  var itemCount = getItemCount(data);
  if (itemCount === 0) {
    return prev;
  }
  var offset = scrollMetrics.offset,
      velocity = scrollMetrics.velocity,
      visibleLength = scrollMetrics.visibleLength;

  var visibleBegin = Math.max(0, offset);
  var visibleEnd = visibleBegin + visibleLength;
  var overscanLength = (windowSize - 1) * visibleLength;

  var leadFactor = 0.5;

  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';

  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);
  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);

  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),
      _elementsThatOverlapO2 = babelHelpers.slicedToArray(_elementsThatOverlapO, 4),
      overscanFirst = _elementsThatOverlapO2[0],
      first = _elementsThatOverlapO2[1],
      last = _elementsThatOverlapO2[2],
      overscanLast = _elementsThatOverlapO2[3];

  overscanFirst = overscanFirst == null ? 0 : overscanFirst;
  first = first == null ? Math.max(0, overscanFirst) : first;
  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
  var visible = { first: first, last: last };

  var newCellCount = newRangeCount(prev, visible);

  while (true) {
    if (first <= overscanFirst && last >= overscanLast) {
      break;
    }
    var maxNewCells = newCellCount >= maxToRenderPerBatch;
    var firstWillAddMore = first <= prev.first || first > prev.last;
    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
    var lastWillAddMore = last >= prev.last || last < prev.first;
    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);
    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
      break;
    }
    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {
      if (firstWillAddMore) {
        newCellCount++;
      }
      first--;
    }
    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {
      if (lastWillAddMore) {
        newCellCount++;
      }
      last++;
    }
  }
  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
    throw new Error('Bad window calculation ' + JSON.stringify({
      first: first,
      last: last,
      itemCount: itemCount,
      overscanFirst: overscanFirst,
      overscanLast: overscanLast,
      visible: visible
    }));
  }
  return { first: first, last: last };
}

var VirtualizeUtils = {
  computeWindowedRenderLimits: computeWindowedRenderLimits,
  elementsThatOverlapOffsets: elementsThatOverlapOffsets,
  newRangeCount: newRangeCount
};

module.exports = VirtualizeUtils;
}, 257, null, "VirtualizeUtils");
__d(/* ImageBackground */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Image/ImageBackground.js';
var Image = require(226    ); // 226 = Image
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View

var ensureComponentIsNative = require(259                      ); // 259 = ensureComponentIsNative

var ImageBackground = function (_React$Component) {
  babelHelpers.inherits(ImageBackground, _React$Component);

  function ImageBackground() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ImageBackground);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ImageBackground.__proto__ || Object.getPrototypeOf(ImageBackground)).call.apply(_ref, [this].concat(args))), _this), _this._viewRef = null, _this._captureRef = function (ref) {
      _this._viewRef = ref;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ImageBackground, [{
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      var viewRef = this._viewRef;
      if (viewRef) {
        ensureComponentIsNative(viewRef);
        viewRef.setNativeProps(props);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          imageStyle = _props.imageStyle,
          imageRef = _props.imageRef,
          props = babelHelpers.objectWithoutProperties(_props, ['children', 'style', 'imageStyle', 'imageRef']);


      return React.createElement(
        View,
        { style: style, ref: this._captureRef, __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        React.createElement(Image, babelHelpers.extends({}, props, {
          style: [StyleSheet.absoluteFill, {
            width: style.width,
            height: style.height
          }, imageStyle],
          ref: imageRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        })),
        children
      );
    }
  }]);
  return ImageBackground;
}(React.Component);

module.exports = ImageBackground;
}, 258, null, "ImageBackground");
__d(/* ensureComponentIsNative */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ensureComponentIsNative = function ensureComponentIsNative(component) {
  invariant(component && typeof component.setNativeProps === 'function', 'Touchable child must either be native or forward setNativeProps to a ' + 'native component');
};

module.exports = ensureComponentIsNative;
}, 259, null, "ensureComponentIsNative");
__d(/* ImageEditor */function(global, require, module, exports) {
'use strict';

var RCTImageEditingManager = require(15             ).ImageEditingManager; // 15 = NativeModules

var ImageEditor = function () {
  function ImageEditor() {
    babelHelpers.classCallCheck(this, ImageEditor);
  }

  babelHelpers.createClass(ImageEditor, null, [{
    key: 'cropImage',
    value: function cropImage(uri, cropData, success, failure) {
      RCTImageEditingManager.cropImage(uri, cropData, success, failure);
    }
  }]);
  return ImageEditor;
}();

module.exports = ImageEditor;
}, 260, null, "ImageEditor");
__d(/* ImageStore */function(global, require, module, exports) {
'use strict';

var RCTImageStoreManager = require(15             ).ImageStoreManager; // 15 = NativeModules

var ImageStore = function () {
  function ImageStore() {
    babelHelpers.classCallCheck(this, ImageStore);
  }

  babelHelpers.createClass(ImageStore, null, [{
    key: 'hasImageForTag',
    value: function hasImageForTag(uri, callback) {
      if (RCTImageStoreManager.hasImageForTag) {
        RCTImageStoreManager.hasImageForTag(uri, callback);
      } else {
        console.warn('hasImageForTag() not implemented');
      }
    }
  }, {
    key: 'removeImageForTag',
    value: function removeImageForTag(uri) {
      if (RCTImageStoreManager.removeImageForTag) {
        RCTImageStoreManager.removeImageForTag(uri);
      } else {
        console.warn('removeImageForTag() not implemented');
      }
    }
  }, {
    key: 'addImageFromBase64',
    value: function addImageFromBase64(base64ImageData, success, failure) {
      RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
    }
  }, {
    key: 'getBase64ForTag',
    value: function getBase64ForTag(uri, success, failure) {
      RCTImageStoreManager.getBase64ForTag(uri, success, failure);
    }
  }]);
  return ImageStore;
}();

module.exports = ImageStore;
}, 261, null, "ImageStore");
__d(/* KeyboardAvoidingView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js';
var createReactClass = require(168                 ); // 168 = create-react-class
var Keyboard = require(232       ); // 232 = Keyboard
var LayoutAnimation = require(263              ); // 263 = LayoutAnimation
var Platform = require(53        ); // 53 = Platform
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var viewRef = 'VIEW';

var KeyboardAvoidingView = createReactClass({
  displayName: 'KeyboardAvoidingView',
  mixins: [TimerMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    behavior: PropTypes.oneOf(['height', 'position', 'padding']),

    contentContainerStyle: ViewPropTypes.style,

    keyboardVerticalOffset: PropTypes.number.isRequired
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      keyboardVerticalOffset: 0
    };
  },
  getInitialState: function getInitialState() {
    return {
      bottom: 0
    };
  },


  subscriptions: [],
  frame: null,

  relativeKeyboardHeight: function relativeKeyboardHeight(keyboardFrame) {
    var frame = this.frame;
    if (!frame || !keyboardFrame) {
      return 0;
    }

    var keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;

    return Math.max(frame.y + frame.height - keyboardY, 0);
  },
  onKeyboardChange: function onKeyboardChange(event) {
    if (!event) {
      this.setState({ bottom: 0 });
      return;
    }

    var duration = event.duration,
        easing = event.easing,
        endCoordinates = event.endCoordinates;

    var height = this.relativeKeyboardHeight(endCoordinates);

    if (duration && easing) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
    this.setState({ bottom: height });
  },
  onLayout: function onLayout(event) {
    this.frame = event.nativeEvent.layout;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState, nextContext) {
    if (nextState.bottom === this.state.bottom && this.props.behavior === 'height' && nextProps.behavior === 'height') {
      nextState.bottom = 0;
    }
  },
  componentWillMount: function componentWillMount() {
    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange)];
    } else {
      this.subscriptions = [Keyboard.addListener('keyboardDidHide', this.onKeyboardChange), Keyboard.addListener('keyboardDidShow', this.onKeyboardChange)];
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },
  render: function render() {
    var _props = this.props,
        behavior = _props.behavior,
        children = _props.children,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['behavior', 'children', 'style']);


    switch (behavior) {
      case 'height':
        var heightStyle = void 0;
        if (this.frame) {
          heightStyle = { height: this.frame.height - this.state.bottom, flex: 0 };
        }
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, heightStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 164
            }
          }),
          children
        );

      case 'position':
        var positionStyle = { bottom: this.state.bottom };
        var contentContainerStyle = this.props.contentContainerStyle;


        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: style, onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 174
            }
          }),
          React.createElement(
            View,
            { style: [contentContainerStyle, positionStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 175
              }
            },
            children
          )
        );

      case 'padding':
        var paddingStyle = { paddingBottom: this.state.bottom };
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, paddingStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 184
            }
          }),
          children
        );

      default:
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, onLayout: this.onLayout, style: style }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 191
            }
          }),
          children
        );
    }
  }
});

module.exports = KeyboardAvoidingView;
}, 262, null, "KeyboardAvoidingView");
__d(/* LayoutAnimation */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types
var UIManager = require(54         ); // 54 = UIManager

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror

var checkPropTypes = PropTypes.checkPropTypes;


var TypesEnum = {
  spring: true,
  linear: true,
  easeInEaseOut: true,
  easeIn: true,
  easeOut: true,
  keyboard: true
};
var Types = keyMirror(TypesEnum);

var PropertiesEnum = {
  opacity: true,
  scaleXY: true
};
var Properties = keyMirror(PropertiesEnum);

var animType = PropTypes.shape({
  duration: PropTypes.number,
  delay: PropTypes.number,
  springDamping: PropTypes.number,
  initialVelocity: PropTypes.number,
  type: PropTypes.oneOf(Object.keys(Types)).isRequired,
  property: PropTypes.oneOf(Object.keys(Properties))
});

var configType = PropTypes.shape({
  duration: PropTypes.number.isRequired,
  create: animType,
  update: animType,
  delete: animType
});

function checkConfig(config, location, name) {
  checkPropTypes({ config: configType }, { config: config }, location, name);
}

function configureNext(config, onAnimationDidEnd) {
  if (__DEV__) {
    checkConfig(config, 'config', 'LayoutAnimation.configureNext');
  }
  UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd || function () {}, function () {});
}

function create(duration, type, creationProp) {
  return {
    duration: duration,
    create: {
      type: type,
      property: creationProp
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: creationProp
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),
  linear: create(500, Types.linear, Properties.opacity),
  spring: {
    duration: 700,
    create: {
      type: Types.linear,
      property: Properties.opacity
    },
    update: {
      type: Types.spring,
      springDamping: 0.4
    },
    delete: {
      type: Types.linear,
      property: Properties.opacity
    }
  }
};

var LayoutAnimation = {
  configureNext: configureNext,

  create: create,
  Types: Types,
  Properties: Properties,
  checkConfig: checkConfig,
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};

module.exports = LayoutAnimation;
}, 263, null, "LayoutAnimation");
__d(/* MaskedViewIOS */function(global, require, module, exports) {var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/MaskedView/MaskedViewIOS.ios.js';


var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var MaskedViewIOS = function (_React$Component) {
  babelHelpers.inherits(MaskedViewIOS, _React$Component);

  function MaskedViewIOS() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, MaskedViewIOS);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MaskedViewIOS.__proto__ || Object.getPrototypeOf(MaskedViewIOS)).call.apply(_ref, [this].concat(args))), _this), _this._hasWarnedInvalidRenderMask = false, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(MaskedViewIOS, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          maskElement = _props.maskElement,
          children = _props.children,
          otherViewProps = babelHelpers.objectWithoutProperties(_props, ['maskElement', 'children']);


      if (!React.isValidElement(maskElement)) {
        if (!this._hasWarnedInvalidRenderMask) {
          console.warn('MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' + 'Expected a React Element. No mask will render.');
          this._hasWarnedInvalidRenderMask = true;
        }
        return React.createElement(
          View,
          babelHelpers.extends({}, otherViewProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 86
            }
          }),
          children
        );
      }

      return React.createElement(
        RCTMaskedView,
        babelHelpers.extends({}, otherViewProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 90
          }
        }),
        React.createElement(
          View,
          { pointerEvents: 'none', style: StyleSheet.absoluteFill, __source: {
              fileName: _jsxFileName,
              lineNumber: 91
            }
          },
          maskElement
        ),
        children
      );
    }
  }]);
  return MaskedViewIOS;
}(React.Component);

MaskedViewIOS.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  maskElement: PropTypes.element.isRequired
});


var RCTMaskedView = requireNativeComponent('RCTMaskedView', {
  name: 'RCTMaskedView',
  displayName: 'RCTMaskedView',
  propTypes: babelHelpers.extends({}, ViewPropTypes)
});

module.exports = MaskedViewIOS;
}, 264, null, "MaskedViewIOS");
__d(/* Modal */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Modal/Modal.js',
    _container;

var AppContainer = require(266           ); // 266 = AppContainer
var I18nManager = require(286          ); // 286 = I18nManager
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View

var deprecatedPropType = require(149                 ); // 149 = deprecatedPropType
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent
var RCTModalHostView = requireNativeComponent('RCTModalHostView', null);
var ModalEventEmitter = Platform.OS === 'ios' && NativeModules.ModalManager ? new NativeEventEmitter(NativeModules.ModalManager) : null;

var uniqueModalIdentifier = 0;

var Modal = function (_React$Component) {
  babelHelpers.inherits(Modal, _React$Component);

  function Modal(props) {
    babelHelpers.classCallCheck(this, Modal);

    var _this = babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

    Modal._confirmProps(props);
    _this._identifier = uniqueModalIdentifier++;
    return _this;
  }

  babelHelpers.createClass(Modal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (ModalEventEmitter) {
        this._eventSubscription = ModalEventEmitter.addListener('modalDismissed', function (event) {
          if (event.modalID === _this2._identifier && _this2.props.onDismiss) {
            _this2.props.onDismiss();
          }
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._eventSubscription) {
        this._eventSubscription.remove();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      Modal._confirmProps(nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.visible === false) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white'
      };

      var animationType = this.props.animationType;
      if (!animationType) {
        animationType = 'none';
        if (this.props.animated) {
          animationType = 'slide';
        }
      }

      var presentationStyle = this.props.presentationStyle;
      if (!presentationStyle) {
        presentationStyle = 'fullScreen';
        if (this.props.transparent) {
          presentationStyle = 'overFullScreen';
        }
      }

      var innerChildren = __DEV__ ? React.createElement(
        AppContainer,
        { rootTag: this.context.rootTag, __source: {
            fileName: _jsxFileName,
            lineNumber: 238
          }
        },
        this.props.children
      ) : this.props.children;

      return React.createElement(
        RCTModalHostView,
        {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          identifier: this._identifier,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 244
          }
        },
        React.createElement(
          View,
          { style: [styles.container, containerStyles], __source: {
              fileName: _jsxFileName,
              lineNumber: 257
            }
          },
          innerChildren
        )
      );
    }
  }, {
    key: '_shouldSetResponder',
    value: function _shouldSetResponder() {
      return true;
    }
  }], [{
    key: '_confirmProps',
    value: function _confirmProps(props) {
      if (props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent) {
        console.warn('Modal with \'' + props.presentationStyle + '\' presentation style and \'transparent\' value is not supported.');
      }
    }
  }]);
  return Modal;
}(React.Component);

Modal.propTypes = {
  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),

  presentationStyle: PropTypes.oneOf(['fullScreen', 'pageSheet', 'formSheet', 'overFullScreen']),

  transparent: PropTypes.bool,

  hardwareAccelerated: PropTypes.bool,

  visible: PropTypes.bool,

  onRequestClose: Platform.isTVOS || Platform.OS === 'android' ? PropTypes.func.isRequired : PropTypes.func,

  onShow: PropTypes.func,

  onDismiss: PropTypes.func,
  animated: deprecatedPropType(PropTypes.bool, 'Use the `animationType` prop instead.'),

  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),

  onOrientationChange: PropTypes.func
};
Modal.defaultProps = {
  visible: true,
  hardwareAccelerated: false
};
Modal.contextTypes = {
  rootTag: PropTypes.number
};


var side = I18nManager.isRTL ? 'right' : 'left';
var styles = StyleSheet.create({
  modal: {
    position: 'absolute'
  },
  container: (_container = {
    position: 'absolute'
  }, babelHelpers.defineProperty(_container, side, 0), babelHelpers.defineProperty(_container, 'top', 0), _container)
});

module.exports = Modal;
}, 265, null, "Modal");
__d(/* AppContainer */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/ReactNative/AppContainer.js';
var EmitterSubscription = require(86                   ); // 86 = EmitterSubscription
var PropTypes = require(144         ); // 144 = prop-types
var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View

var AppContainer = function (_React$Component) {
  babelHelpers.inherits(AppContainer, _React$Component);

  function AppContainer() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, AppContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inspector: null,
      mainKey: 1
    }, _this._subscription = null, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(AppContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        rootTag: this.props.rootTag
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          this._subscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', function () {
            var Inspector = require(267        ); // 267 = Inspector
            var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
              inspectedViewTag: ReactNative.findNodeHandle(_this2._mainRef),
              onRequestRerenderApp: function onRequestRerenderApp(updateInspectedViewTag) {
                _this2.setState(function (s) {
                  return { mainKey: s.mainKey + 1 };
                }, function () {
                  return updateInspectedViewTag(ReactNative.findNodeHandle(_this2._mainRef));
                });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            });
            _this2.setState({ inspector: inspector });
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subscription) {
        this._subscription.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var yellowBox = null;
      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          var YellowBox = require(284        ); // 284 = YellowBox
          yellowBox = React.createElement(YellowBox, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 97
            }
          });
        }
      }

      var innerView = React.createElement(
        View,
        {
          collapsable: !this.state.inspector,
          key: this.state.mainKey,
          pointerEvents: 'box-none',
          style: styles.appContainer,
          ref: function ref(_ref2) {
            _this3._mainRef = _ref2;
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 102
          }
        },
        this.props.children
      );

      var Wrapper = this.props.WrapperComponent;
      if (Wrapper) {
        innerView = React.createElement(
          Wrapper,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          },
          innerView
        );
      }
      return React.createElement(
        View,
        { style: styles.appContainer, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 122
          }
        },
        innerView,
        yellowBox,
        this.state.inspector
      );
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.childContextTypes = {
  rootTag: PropTypes.number
};


var styles = StyleSheet.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
}, 266, null, "AppContainer");
__d(/* Inspector */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/Inspector.js';
var Dimensions = require(137         ); // 137 = Dimensions
var InspectorOverlay = require(268               ); // 268 = InspectorOverlay
var InspectorPanel = require(272             ); // 272 = InspectorPanel
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(135         ); // 135 = StyleSheet
var Touchable = require(189        ); // 189 = Touchable
var UIManager = require(54         ); // 54 = UIManager
var View = require(156   ); // 156 = View

var emptyObject = require(34                    ); // 34 = fbjs/lib/emptyObject
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
var renderer = findRenderer();

hook.resolveRNStyle = require(50            ); // 50 = flattenStyle

function findRenderer() {
  var renderers = hook._renderers;
  var keys = Object.keys(renderers);
  invariant(keys.length === 1, 'Expected to find exactly one React Native renderer on DevTools hook.');
  return renderers[keys[0]];
}

var Inspector = function (_React$Component) {
  babelHelpers.inherits(Inspector, _React$Component);

  function Inspector(props) {
    babelHelpers.classCallCheck(this, Inspector);

    var _this = babelHelpers.possibleConstructorReturn(this, (Inspector.__proto__ || Object.getPrototypeOf(Inspector)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      devtoolsAgent: null,
      hierarchy: null,
      panelPos: 'bottom',
      inspecting: true,
      perfing: false,
      inspected: null,
      selection: null,
      inspectedViewTag: _this.props.inspectedViewTag,
      networking: false
    };
    return _this;
  }

  babelHelpers.createClass(Inspector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      hook.on('react-devtools', this.attachToDevtools);

      if (hook.reactDevtoolsAgent) {
        this.attachToDevtools(hook.reactDevtoolsAgent);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subs) {
        this._subs.map(function (fn) {
          return fn();
        });
      }
      hook.off('react-devtools', this.attachToDevtools);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ inspectedViewTag: newProps.inspectedViewTag });
    }
  }, {
    key: 'setSelection',
    value: function setSelection(i) {
      var _this2 = this;

      var hierarchyItem = this.state.hierarchy[i];

      var _hierarchyItem$getIns = hierarchyItem.getInspectorData(ReactNative.findNodeHandle),
          measure = _hierarchyItem$getIns.measure,
          props = _hierarchyItem$getIns.props,
          source = _hierarchyItem$getIns.source;

      measure(function (x, y, width, height, left, top) {
        _this2.setState({
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props.style,
            source: source
          },
          selection: i
        });
      });
    }
  }, {
    key: 'onTouchViewTag',
    value: function onTouchViewTag(touchedViewTag, frame, pointerY) {
      var _renderer$getInspecto = renderer.getInspectorDataForViewTag(touchedViewTag),
          hierarchy = _renderer$getInspecto.hierarchy,
          props = _renderer$getInspecto.props,
          selection = _renderer$getInspecto.selection,
          source = _renderer$getInspecto.source;

      if (this.state.devtoolsAgent) {
        var offsetFromLeaf = hierarchy.length - 1 - selection;
        this.state.devtoolsAgent.selectFromDOMNode(touchedViewTag, true, offsetFromLeaf);
      }

      this.setState({
        panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',
        selection: selection,
        hierarchy: hierarchy,
        inspected: {
          style: props.style,
          frame: frame,
          source: source
        }
      });
    }
  }, {
    key: 'setPerfing',
    value: function setPerfing(val) {
      this.setState({
        perfing: val,
        inspecting: false,
        inspected: null,
        networking: false
      });
    }
  }, {
    key: 'setInspecting',
    value: function setInspecting(val) {
      this.setState({
        inspecting: val,
        inspected: null
      });
    }
  }, {
    key: 'setTouchTargetting',
    value: function setTouchTargetting(val) {
      var _this3 = this;

      Touchable.TOUCH_TARGET_DEBUG = val;
      this.props.onRequestRerenderApp(function (inspectedViewTag) {
        _this3.setState({ inspectedViewTag: inspectedViewTag });
      });
    }
  }, {
    key: 'setNetworking',
    value: function setNetworking(val) {
      this.setState({
        networking: val,
        perfing: false,
        inspecting: false,
        inspected: null
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var panelContainerStyle = this.state.panelPos === 'bottom' ? { bottom: 0 } : { top: Platform.OS === 'ios' ? 20 : 0 };
      return React.createElement(
        View,
        { style: styles.container, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        this.state.inspecting && React.createElement(InspectorOverlay, {
          inspected: this.state.inspected,
          inspectedViewTag: this.state.inspectedViewTag,
          onTouchViewTag: this.onTouchViewTag.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 233
          }
        }),
        React.createElement(
          View,
          { style: [styles.panelContainer, panelContainerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 238
            }
          },
          React.createElement(InspectorPanel, {
            devtoolsIsOpen: !!this.state.devtoolsAgent,
            inspecting: this.state.inspecting,
            perfing: this.state.perfing,
            setPerfing: this.setPerfing.bind(this),
            setInspecting: this.setInspecting.bind(this),
            inspected: this.state.inspected,
            hierarchy: this.state.hierarchy,
            selection: this.state.selection,
            setSelection: this.setSelection.bind(this),
            touchTargetting: Touchable.TOUCH_TARGET_DEBUG,
            setTouchTargetting: this.setTouchTargetting.bind(this),
            networking: this.state.networking,
            setNetworking: this.setNetworking.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 239
            }
          })
        )
      );
    }
  }]);
  return Inspector;
}(React.Component);

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.attachToDevtools = function (agent) {
    var _hideWait = null;
    var hlSub = agent.sub('highlight', function (_ref) {
      var node = _ref.node,
          name = _ref.name,
          props = _ref.props;

      clearTimeout(_hideWait);

      if (typeof node !== 'number') {
        node = ReactNative.findNodeHandle(node);
      }

      UIManager.measure(node, function (x, y, width, height, left, top) {
        _this4.setState({
          hierarchy: [],
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props ? props.style : emptyObject
          }
        });
      });
    });
    var hideSub = agent.sub('hideHighlight', function () {
      if (_this4.state.inspected === null) {
        return;
      }

      _hideWait = setTimeout(function () {
        _this4.setState({
          inspected: null
        });
      }, 100);
    });
    _this4._subs = [hlSub, hideSub];

    agent.on('shutdown', function () {
      _this4.setState({ devtoolsAgent: null });
      _this4._subs = null;
    });
    _this4.setState({
      devtoolsAgent: agent
    });
  };
};

var styles = StyleSheet.create({
  container: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  panelContainer: {
    position: 'absolute',
    left: 0,
    right: 0
  }
});

module.exports = Inspector;
}, 267, null, "Inspector");
__d(/* InspectorOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js';
var Dimensions = require(137         ); // 137 = Dimensions
var ElementBox = require(269         ); // 269 = ElementBox
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var UIManager = require(54         ); // 54 = UIManager
var View = require(156   ); // 156 = View

var InspectorOverlay = function (_React$Component) {
  babelHelpers.inherits(InspectorOverlay, _React$Component);

  function InspectorOverlay() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, InspectorOverlay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = InspectorOverlay.__proto__ || Object.getPrototypeOf(InspectorOverlay)).call.apply(_ref, [this].concat(args))), _this), _this.findViewForTouchEvent = function (e) {
      var _e$nativeEvent$touche = e.nativeEvent.touches[0],
          locationX = _e$nativeEvent$touche.locationX,
          locationY = _e$nativeEvent$touche.locationY;

      UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {
        _this.props.onTouchViewTag(nativeViewTag, { left: left, top: top, width: width, height: height }, locationY);
      });
    }, _this.shouldSetResponser = function (e) {
      _this.findViewForTouchEvent(e);
      return true;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(InspectorOverlay, [{
    key: 'render',
    value: function render() {
      var content = null;
      if (this.props.inspected) {
        content = React.createElement(ElementBox, { frame: this.props.inspected.frame, style: this.props.inspected.style, __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        });
      }

      return React.createElement(
        View,
        {
          onStartShouldSetResponder: this.shouldSetResponser,
          onResponderMove: this.findViewForTouchEvent,
          style: [styles.inspector, { height: Dimensions.get('window').height }], __source: {
            fileName: _jsxFileName,
            lineNumber: 66
          }
        },
        content
      );
    }
  }]);
  return InspectorOverlay;
}(React.Component);

InspectorOverlay.propTypes = {
  inspected: PropTypes.shape({
    frame: PropTypes.object,
    style: PropTypes.any
  }),
  inspectedViewTag: PropTypes.number,
  onTouchViewTag: PropTypes.func.isRequired
};


var styles = StyleSheet.create({
  inspector: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0
  }
});

module.exports = InspectorOverlay;
}, 268, null, "InspectorOverlay");
__d(/* ElementBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/ElementBox.js';
var React = require(134    ); // 134 = React
var View = require(156   ); // 156 = View
var StyleSheet = require(135         ); // 135 = StyleSheet
var BorderBox = require(270        ); // 270 = BorderBox
var resolveBoxStyle = require(271              ); // 271 = resolveBoxStyle

var flattenStyle = require(50            ); // 50 = flattenStyle

var ElementBox = function (_React$Component) {
  babelHelpers.inherits(ElementBox, _React$Component);

  function ElementBox() {
    babelHelpers.classCallCheck(this, ElementBox);
    return babelHelpers.possibleConstructorReturn(this, (ElementBox.__proto__ || Object.getPrototypeOf(ElementBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementBox, [{
    key: 'render',
    value: function render() {
      var style = flattenStyle(this.props.style) || {};
      var margin = resolveBoxStyle('margin', style);
      var padding = resolveBoxStyle('padding', style);
      var frameStyle = this.props.frame;
      if (margin) {
        frameStyle = {
          top: frameStyle.top - margin.top,
          left: frameStyle.left - margin.left,
          height: frameStyle.height + margin.top + margin.bottom,
          width: frameStyle.width + margin.left + margin.right
        };
      }
      var contentStyle = {
        width: this.props.frame.width,
        height: this.props.frame.height
      };
      if (padding) {
        contentStyle = {
          width: contentStyle.width - padding.left - padding.right,
          height: contentStyle.height - padding.top - padding.bottom
        };
      }
      return React.createElement(
        View,
        { style: [styles.frame, frameStyle], pointerEvents: 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        React.createElement(
          BorderBox,
          { box: margin, style: styles.margin, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          React.createElement(
            BorderBox,
            { box: padding, style: styles.padding, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            React.createElement(View, { style: [styles.content, contentStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            })
          )
        )
      );
    }
  }]);
  return ElementBox;
}(React.Component);

var styles = StyleSheet.create({
  frame: {
    position: 'absolute'
  },
  content: {
    backgroundColor: 'rgba(200, 230, 255, 0.8)'
  },
  padding: {
    borderColor: 'rgba(77, 255, 0, 0.3)'
  },
  margin: {
    borderColor: 'rgba(255, 132, 0, 0.3)'
  }
});

module.exports = ElementBox;
}, 269, null, "ElementBox");
__d(/* BorderBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/BorderBox.js';
var React = require(134    ); // 134 = React
var View = require(156   ); // 156 = View

var BorderBox = function (_React$Component) {
  babelHelpers.inherits(BorderBox, _React$Component);

  function BorderBox() {
    babelHelpers.classCallCheck(this, BorderBox);
    return babelHelpers.possibleConstructorReturn(this, (BorderBox.__proto__ || Object.getPrototypeOf(BorderBox)).apply(this, arguments));
  }

  babelHelpers.createClass(BorderBox, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      if (!box) {
        return this.props.children;
      }
      var style = {
        borderTopWidth: box.top,
        borderBottomWidth: box.bottom,
        borderLeftWidth: box.left,
        borderRightWidth: box.right
      };
      return React.createElement(
        View,
        { style: [style, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.props.children
      );
    }
  }]);
  return BorderBox;
}(React.Component);

module.exports = BorderBox;
}, 270, null, "BorderBox");
__d(/* resolveBoxStyle */function(global, require, module, exports) {
'use strict';

function resolveBoxStyle(prefix, style) {
  var res = {};
  var subs = ['top', 'left', 'bottom', 'right'];
  var set = false;
  subs.forEach(function (sub) {
    res[sub] = style[prefix] || 0;
  });
  if (style[prefix]) {
    set = true;
  }
  if (style[prefix + 'Vertical']) {
    res.top = res.bottom = style[prefix + 'Vertical'];
    set = true;
  }
  if (style[prefix + 'Horizontal']) {
    res.left = res.right = style[prefix + 'Horizontal'];
    set = true;
  }
  subs.forEach(function (sub) {
    var val = style[prefix + capFirst(sub)];
    if (val) {
      res[sub] = val;
      set = true;
    }
  });
  if (!set) {
    return;
  }
  return res;
}

function capFirst(text) {
  return text[0].toUpperCase() + text.slice(1);
}

module.exports = resolveBoxStyle;
}, 271, null, "resolveBoxStyle");
__d(/* InspectorPanel */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/InspectorPanel.js';
var ElementProperties = require(273                ); // 273 = ElementProperties
var NetworkOverlay = require(280             ); // 280 = NetworkOverlay
var PerformanceOverlay = require(283                 ); // 283 = PerformanceOverlay
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ScrollView = require(228         ); // 228 = ScrollView
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
var View = require(156   ); // 156 = View

var InspectorPanel = function (_React$Component) {
  babelHelpers.inherits(InspectorPanel, _React$Component);

  function InspectorPanel() {
    babelHelpers.classCallCheck(this, InspectorPanel);
    return babelHelpers.possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).apply(this, arguments));
  }

  babelHelpers.createClass(InspectorPanel, [{
    key: 'renderWaiting',
    value: function renderWaiting() {
      if (this.props.inspecting) {
        return React.createElement(
          Text,
          { style: styles.waitingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          'Tap something to inspect it'
        );
      }
      return React.createElement(
        Text,
        { style: styles.waitingText, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        'Nothing is inspected'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var contents = void 0;
      if (this.props.inspected) {
        contents = React.createElement(
          ScrollView,
          { style: styles.properties, __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          React.createElement(ElementProperties, {
            style: this.props.inspected.style,
            frame: this.props.inspected.frame,
            source: this.props.inspected.source,
            hierarchy: this.props.hierarchy,
            selection: this.props.selection,
            setSelection: this.props.setSelection,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          })
        );
      } else if (this.props.perfing) {
        contents = React.createElement(PerformanceOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        });
      } else if (this.props.networking) {
        contents = React.createElement(NetworkOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58
          }
        });
      } else {
        contents = React.createElement(
          View,
          { style: styles.waiting, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          this.renderWaiting()
        );
      }
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        !this.props.devtoolsIsOpen && contents,
        React.createElement(
          View,
          { style: styles.buttonRow, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          },
          React.createElement(Button, {
            title: 'Inspect',
            pressed: this.props.inspecting,
            onClick: this.props.setInspecting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          }),
          React.createElement(Button, { title: 'Perf',
            pressed: this.props.perfing,
            onClick: this.props.setPerfing,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          }),
          React.createElement(Button, { title: 'Network',
            pressed: this.props.networking,
            onClick: this.props.setNetworking,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          }),
          React.createElement(Button, { title: 'Touchables',
            pressed: this.props.touchTargetting,
            onClick: this.props.setTouchTargetting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          })
        )
      );
    }
  }]);
  return InspectorPanel;
}(React.Component);

InspectorPanel.propTypes = {
  devtoolsIsOpen: PropTypes.bool,
  inspecting: PropTypes.bool,
  setInspecting: PropTypes.func,
  inspected: PropTypes.object,
  perfing: PropTypes.bool,
  setPerfing: PropTypes.func,
  touchTargetting: PropTypes.bool,
  setTouchTargetting: PropTypes.func,
  networking: PropTypes.bool,
  setNetworking: PropTypes.func
};

var Button = function (_React$Component2) {
  babelHelpers.inherits(Button, _React$Component2);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            return _this3.props.onClick(!_this3.props.pressed);
          }, style: [styles.button, this.props.pressed && styles.buttonPressed], __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        React.createElement(
          Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          this.props.title
        )
      );
    }
  }]);
  return Button;
}(React.Component);

var styles = StyleSheet.create({
  buttonRow: {
    flexDirection: 'row'
  },
  button: {
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    margin: 2,
    height: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonPressed: {
    backgroundColor: 'rgba(255, 255, 255, 0.3)'
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
    margin: 5
  },
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.7)'
  },
  properties: {
    height: 200
  },
  waiting: {
    height: 100
  },
  waitingText: {
    fontSize: 20,
    textAlign: 'center',
    marginVertical: 20,
    color: 'white'
  }
});

module.exports = InspectorPanel;
}, 272, null, "InspectorPanel");
__d(/* ElementProperties */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/ElementProperties.js';
var BoxInspector = require(274           ); // 274 = BoxInspector
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var StyleInspector = require(275             ); // 275 = StyleInspector
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
var TouchableWithoutFeedback = require(240                       ); // 240 = TouchableWithoutFeedback
var View = require(156   ); // 156 = View

var flattenStyle = require(50            ); // 50 = flattenStyle
var mapWithSeparator = require(278               ); // 278 = mapWithSeparator
var openFileInEditor = require(279               ); // 279 = openFileInEditor

var ElementProperties = function (_React$Component) {
  babelHelpers.inherits(ElementProperties, _React$Component);

  function ElementProperties() {
    babelHelpers.classCallCheck(this, ElementProperties);
    return babelHelpers.possibleConstructorReturn(this, (ElementProperties.__proto__ || Object.getPrototypeOf(ElementProperties)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementProperties, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = flattenStyle(this.props.style);

      var selection = this.props.selection;
      var openFileButton = void 0;
      var source = this.props.source;

      var _ref = source || {},
          fileName = _ref.fileName,
          lineNumber = _ref.lineNumber;

      if (fileName && lineNumber) {
        var parts = fileName.split('/');
        var fileNameShort = parts[parts.length - 1];
        openFileButton = React.createElement(
          TouchableHighlight,
          {
            style: styles.openButton,
            onPress: openFileInEditor.bind(null, fileName, lineNumber), __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          },
          React.createElement(
            Text,
            { style: styles.openButtonTitle, numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 63
              }
            },
            fileNameShort,
            ':',
            lineNumber
          )
        );
      }

      return React.createElement(
        TouchableWithoutFeedback,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 72
          }
        },
        React.createElement(
          View,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 73
            }
          },
          React.createElement(
            View,
            { style: styles.breadcrumb, __source: {
                fileName: _jsxFileName,
                lineNumber: 74
              }
            },
            mapWithSeparator(this.props.hierarchy, function (hierarchyItem, i) {
              return React.createElement(
                TouchableHighlight,
                {
                  key: 'item-' + i,
                  style: [styles.breadItem, i === selection && styles.selected],

                  onPress: function onPress() {
                    return _this2.props.setSelection(i);
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                  }
                },
                React.createElement(
                  Text,
                  { style: styles.breadItemText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 83
                    }
                  },
                  hierarchyItem.name
                )
              );
            }, function (i) {
              return React.createElement(
                Text,
                { key: 'sep-' + i, style: styles.breadSep, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 89
                  }
                },
                '\u25B8'
              );
            })
          ),
          React.createElement(
            View,
            { style: styles.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            React.createElement(
              View,
              { style: styles.col, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 96
                }
              },
              React.createElement(StyleInspector, { style: style, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              }),
              openFileButton
            ),
            React.createElement(BoxInspector, { style: style, frame: this.props.frame, __source: {
                fileName: _jsxFileName,
                lineNumber: 102
              }
            })
          )
        )
      );
    }
  }]);
  return ElementProperties;
}(React.Component);

ElementProperties.propTypes = {
  hierarchy: PropTypes.array.isRequired,
  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),
  source: PropTypes.shape({
    fileName: PropTypes.string,
    lineNumber: PropTypes.number
  })
};


var styles = StyleSheet.create({
  breadSep: {
    fontSize: 8,
    color: 'white'
  },
  breadcrumb: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'flex-start',
    marginBottom: 5
  },
  selected: {
    borderColor: 'white',
    borderRadius: 5
  },
  breadItem: {
    borderWidth: 1,
    borderColor: 'transparent',
    marginHorizontal: 2
  },
  breadItemText: {
    fontSize: 10,
    color: 'white',
    marginHorizontal: 5
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  col: {
    flex: 1
  },
  info: {
    padding: 10
  },
  openButton: {
    padding: 10,
    backgroundColor: '#000',
    marginVertical: 5,
    marginRight: 5,
    borderRadius: 2
  },
  openButtonTitle: {
    color: 'white',
    fontSize: 8
  }
});

module.exports = ElementProperties;
}, 273, null, "ElementProperties");
__d(/* BoxInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/BoxInspector.js';
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var View = require(156   ); // 156 = View
var resolveBoxStyle = require(271              ); // 271 = resolveBoxStyle

var blank = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};

var BoxInspector = function (_React$Component) {
  babelHelpers.inherits(BoxInspector, _React$Component);

  function BoxInspector() {
    babelHelpers.classCallCheck(this, BoxInspector);
    return babelHelpers.possibleConstructorReturn(this, (BoxInspector.__proto__ || Object.getPrototypeOf(BoxInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxInspector, [{
    key: 'render',
    value: function render() {
      var frame = this.props.frame;
      var style = this.props.style;
      var margin = style && resolveBoxStyle('margin', style) || blank;
      var padding = style && resolveBoxStyle('padding', style) || blank;
      return React.createElement(
        BoxContainer,
        { title: 'margin', titleStyle: styles.marginLabel, box: margin, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        React.createElement(
          BoxContainer,
          { title: 'padding', box: padding, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              '(',
              (frame.left || 0).toFixed(1),
              ', ',
              (frame.top || 0).toFixed(1),
              ')'
            ),
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              (frame.width || 0).toFixed(1),
              ' \xD7 ',
              (frame.height || 0).toFixed(1)
            )
          )
        )
      );
    }
  }]);
  return BoxInspector;
}(React.Component);

var BoxContainer = function (_React$Component2) {
  babelHelpers.inherits(BoxContainer, _React$Component2);

  function BoxContainer() {
    babelHelpers.classCallCheck(this, BoxContainer);
    return babelHelpers.possibleConstructorReturn(this, (BoxContainer.__proto__ || Object.getPrototypeOf(BoxContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxContainer, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      return React.createElement(
        View,
        { style: styles.box, __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          React.createElement(
            Text,
            { style: [this.props.titleStyle, styles.label], __source: {
                fileName: _jsxFileName,
                lineNumber: 58
              }
            },
            this.props.title
          ),
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            box.top
          )
        ),
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          },
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            box.left
          ),
          this.props.children,
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            },
            box.right
          )
        ),
        React.createElement(
          Text,
          { style: styles.boxText, __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          },
          box.bottom
        )
      );
    }
  }]);
  return BoxContainer;
}(React.Component);

var styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  marginLabel: {
    width: 60
  },
  label: {
    fontSize: 10,
    color: 'rgb(255,100,0)',
    marginLeft: 5,
    flex: 1,
    textAlign: 'left',
    top: -3
  },
  buffer: {
    fontSize: 10,
    color: 'yellow',
    flex: 1,
    textAlign: 'center'
  },
  innerText: {
    color: 'yellow',
    fontSize: 12,
    textAlign: 'center',
    width: 70
  },
  box: {
    borderWidth: 1,
    borderColor: 'grey'
  },
  boxText: {
    color: 'white',
    fontSize: 12,
    marginHorizontal: 3,
    marginVertical: 2,
    textAlign: 'center'
  }
});

module.exports = BoxInspector;
}, 274, null, "BoxInspector");
__d(/* StyleInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/StyleInspector.js';
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var View = require(156   ); // 156 = View

var StyleInspector = function (_React$Component) {
  babelHelpers.inherits(StyleInspector, _React$Component);

  function StyleInspector() {
    babelHelpers.classCallCheck(this, StyleInspector);
    return babelHelpers.possibleConstructorReturn(this, (StyleInspector.__proto__ || Object.getPrototypeOf(StyleInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(StyleInspector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (!this.props.style) {
        return React.createElement(
          Text,
          { style: styles.noStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          'No style'
        );
      }
      var names = Object.keys(this.props.style);
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          names.map(function (name) {
            return React.createElement(
              Text,
              { key: name, style: styles.attr, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              name,
              ':'
            );
          })
        ),
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          names.map(function (name) {
            var value = typeof _this2.props.style[name] === 'object' ? JSON.stringify(_this2.props.style[name]) : _this2.props.style[name];
            return React.createElement(
              Text,
              { key: name, style: styles.value, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              value
            );
          })
        )
      );
    }
  }]);
  return StyleInspector;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  attr: {
    fontSize: 10,
    color: '#ccc'
  },
  value: {
    fontSize: 10,
    color: 'white',
    marginLeft: 10
  },
  noStyle: {
    color: 'white',
    fontSize: 10
  }
});

module.exports = StyleInspector;
}, 275, null, "StyleInspector");
__d(/* TouchableHighlight */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes
var StyleSheet = require(135         ); // 135 = StyleSheet

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var Touchable = require(189        ); // 189 = Touchable
var TouchableWithoutFeedback = require(240                       ); // 240 = TouchableWithoutFeedback
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var ensureComponentIsNative = require(259                      ); // 259 = ensureComponentIsNative
var ensurePositiveDelayProps = require(241                       ); // 241 = ensurePositiveDelayProps

var keyOf = require(277             ); // 277 = fbjs/lib/keyOf
var merge = require(161    ); // 161 = merge

var DEFAULT_PROPS = {
  activeOpacity: 0.85,
  underlayColor: 'black'
};

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableHighlight = createReactClass({
  displayName: 'TouchableHighlight',
  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,

    underlayColor: ColorPropType,
    style: ViewPropTypes.style,

    onShowUnderlay: PropTypes.func,

    onHideUnderlay: PropTypes.func,

    hasTVPreferredFocus: PropTypes.bool,

    tvParallaxProperties: PropTypes.object
  }),

  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return DEFAULT_PROPS;
  },

  _computeSyntheticState: function _computeSyntheticState(props) {
    return {
      activeProps: {
        style: {
          opacity: props.activeOpacity
        }
      },
      activeUnderlayProps: {
        style: {
          backgroundColor: props.underlayColor
        }
      },
      underlayStyle: [INACTIVE_UNDERLAY_PROPS.style, props.style],
      hasTVPreferredFocus: props.hasTVPreferredFocus
    };
  },

  getInitialState: function getInitialState() {
    this._isMounted = false;
    return merge(this.touchableGetInitialState(), this._computeSyntheticState(this.props));
  },

  componentDidMount: function componentDidMount() {
    this._isMounted = true;
    ensurePositiveDelayProps(this.props);
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillUnmount: function componentWillUnmount() {
    this._isMounted = false;
  },

  componentDidUpdate: function componentDidUpdate() {
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
    if (nextProps.activeOpacity !== this.props.activeOpacity || nextProps.underlayColor !== this.props.underlayColor || nextProps.style !== this.props.style) {
      this.setState(this._computeSyntheticState(nextProps));
    }
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.clearTimeout(this._hideTimeout);

    this._hideTimeout = null;
    this._showUnderlay();
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    if (!this._hideTimeout) {
      this._hideUnderlay();
    }
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.clearTimeout(this._hideTimeout);
    this._showUnderlay();

    this._hideTimeout = this.setTimeout(this._hideUnderlay, this.props.delayPressOut || 100);
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _showUnderlay: function _showUnderlay() {
    if (!this._isMounted || !this._hasPressHandler()) {
      return;
    }

    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
    this.props.onShowUnderlay && this.props.onShowUnderlay();
  },

  _hideUnderlay: function _hideUnderlay() {
    this.clearTimeout(this._hideTimeout);

    this._hideTimeout = null;
    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {
      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
      this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({}, INACTIVE_UNDERLAY_PROPS, {
        style: this.state.underlayStyle
      }));
      this.props.onHideUnderlay && this.props.onHideUnderlay();
    }
  },

  _hasPressHandler: function _hasPressHandler() {
    return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
  },

  render: function render() {
    return React.createElement(
      View,
      {
        accessible: this.props.accessible !== false,

        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        ref: UNDERLAY_REF,
        style: this.state.underlayStyle,
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.state.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,

        nativeID: this.props.nativeID,

        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 349
        }
      },
      React.cloneElement(React.Children.only(this.props.children), {
        ref: CHILD_REF
      }),
      Touchable.renderDebugView({ color: 'green', hitSlop: this.props.hitSlop })
    );
  }
});

var CHILD_REF = keyOf({ childRef: null });
var UNDERLAY_REF = keyOf({ underlayRef: null });
var INACTIVE_CHILD_PROPS = {
  style: StyleSheet.create({ x: { opacity: 1.0 } }).x
};
var INACTIVE_UNDERLAY_PROPS = {
  style: StyleSheet.create({ x: { backgroundColor: 'transparent' } }).x
};

module.exports = TouchableHighlight;
}, 276, null, "TouchableHighlight");
__d(/* fbjs/lib/keyOf.js */function(global, require, module, exports) {"use strict";

var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
}, 277, null, "fbjs/lib/keyOf.js");
__d(/* mapWithSeparator */function(global, require, module, exports) {
'use strict';

function mapWithSeparator(items, itemRenderer, spacerRenderer) {
  var mapped = [];
  if (items.length > 0) {
    mapped.push(itemRenderer(items[0], 0, items));
    for (var ii = 1; ii < items.length; ii++) {
      mapped.push(spacerRenderer(ii - 1), itemRenderer(items[ii], ii, items));
    }
  }
  return mapped;
}

module.exports = mapWithSeparator;
}, 278, null, "mapWithSeparator");
__d(/* openFileInEditor */function(global, require, module, exports) {
'use strict';

var getDevServer = require(30            ); // 30 = getDevServer

function openFileInEditor(file, lineNumber) {
  fetch(getDevServer().url + 'open-stack-frame', {
    method: 'POST',
    body: JSON.stringify({ file: file, lineNumber: lineNumber })
  });
}

module.exports = openFileInEditor;
}, 279, null, "openFileInEditor");
__d(/* NetworkOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js';
var ListView = require(247       ); // 247 = ListView
var React = require(134    ); // 134 = React
var ScrollView = require(228         ); // 228 = ScrollView
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
var View = require(156   ); // 156 = View
var WebSocketInterceptor = require(281                   ); // 281 = WebSocketInterceptor
var XHRInterceptor = require(282             ); // 282 = XHRInterceptor

var LISTVIEW_CELL_HEIGHT = 15;
var SEPARATOR_THICKNESS = 2;

var nextXHRId = 0;

var NetworkOverlay = function (_React$Component) {
  babelHelpers.inherits(NetworkOverlay, _React$Component);

  function NetworkOverlay(props) {
    babelHelpers.classCallCheck(this, NetworkOverlay);

    var _this = babelHelpers.possibleConstructorReturn(this, (NetworkOverlay.__proto__ || Object.getPrototypeOf(NetworkOverlay)).call(this, props));

    _this._requests = [];
    _this._detailViewItems = [];
    _this._listViewDataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      dataSource: _this._listViewDataSource.cloneWithRows([]),
      newDetailInfo: false,
      detailRowID: null
    };
    _this._listViewHighlighted = false;
    _this._listViewHeight = 0;
    _this._captureRequestListView = _this._captureRequestListView.bind(_this);
    _this._captureDetailScrollView = _this._captureDetailScrollView.bind(_this);
    _this._listViewOnLayout = _this._listViewOnLayout.bind(_this);
    _this._renderRow = _this._renderRow.bind(_this);
    _this._closeButtonClicked = _this._closeButtonClicked.bind(_this);
    _this._socketIdMap = {};
    _this._xhrIdMap = {};
    return _this;
  }

  babelHelpers.createClass(NetworkOverlay, [{
    key: '_enableXHRInterception',
    value: function _enableXHRInterception() {
      var _this2 = this;

      if (XHRInterceptor.isInterceptorEnabled()) {
        return;
      }

      XHRInterceptor.setOpenCallback(function (method, url, xhr) {
        xhr._index = nextXHRId++;
        var xhrIndex = _this2._requests.length;
        _this2._xhrIdMap[xhr._index] = xhrIndex;

        var _xhr = {
          'type': 'XMLHttpRequest',
          'method': method,
          'url': url
        };
        _this2._requests.push(_xhr);
        _this2._detailViewItems.push([]);
        _this2._genDetailViewItem(xhrIndex);
        _this2.setState({ dataSource: _this2._listViewDataSource.cloneWithRows(_this2._requests) }, _this2._scrollToBottom());
      });

      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        if (!networkInfo.requestHeaders) {
          networkInfo.requestHeaders = {};
        }
        networkInfo.requestHeaders[header] = value;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setSendCallback(function (data, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        _this2._requests[xhrIndex].dataSent = data;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.responseContentType = type;
        networkInfo.responseSize = size;
        networkInfo.responseHeaders = responseHeaders;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.status = status;
        networkInfo.timeout = timeout;
        networkInfo.response = response;
        networkInfo.responseURL = responseURL;
        networkInfo.responseType = responseType;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.enableInterception();
    }
  }, {
    key: '_enableWebSocketInterception',
    value: function _enableWebSocketInterception() {
      var _this3 = this;

      if (WebSocketInterceptor.isInterceptorEnabled()) {
        return;
      }

      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {
        var socketIndex = _this3._requests.length;
        _this3._socketIdMap[socketId] = socketIndex;
        var _webSocket = {
          'type': 'WebSocket',
          'url': url,
          'protocols': protocols
        };
        _this3._requests.push(_webSocket);
        _this3._detailViewItems.push([]);
        _this3._genDetailViewItem(socketIndex);
        _this3.setState({ dataSource: _this3._listViewDataSource.cloneWithRows(_this3._requests) }, _this3._scrollToBottom());
      });

      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (statusCode !== null && closeReason !== null) {
          _this3._requests[socketIndex].status = statusCode;
          _this3._requests[socketIndex].closeReason = closeReason;
        }
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setSendCallback(function (data, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Sent: ' + JSON.stringify(data) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Received: ' + JSON.stringify(message) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverClose = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverError = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.enableInterception();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._enableXHRInterception();
      this._enableWebSocketInterception();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      XHRInterceptor.disableInterception();
      WebSocketInterceptor.disableInterception();
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this4 = this;

      var urlCellViewStyle = styles.urlEvenCellView;
      var methodCellViewStyle = styles.methodEvenCellView;
      if (rowID % 2 === 1) {
        urlCellViewStyle = styles.urlOddCellView;
        methodCellViewStyle = styles.methodOddCellView;
      }
      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            _this4._pressRow(rowID);
            highlightRow(sectionID, rowID);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 300
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 304
            }
          },
          React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 305
              }
            },
            React.createElement(
              View,
              { style: urlCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 306
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 307
                  }
                },
                rowData.url
              )
            ),
            React.createElement(
              View,
              { style: methodCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 311
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 312
                  }
                },
                this._getTypeShortName(rowData.type)
              )
            )
          )
        )
      );
    }
  }, {
    key: '_renderSeperator',
    value: function _renderSeperator(sectionID, rowID, adjacentRowHighlighted) {
      return React.createElement(View, {
        key: sectionID + '-' + rowID,
        style: {
          height: adjacentRowHighlighted ? SEPARATOR_THICKNESS : 0,
          backgroundColor: adjacentRowHighlighted ? '#3B5998' : '#CCCCCC'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 327
        }
      });
    }
  }, {
    key: '_scrollToBottom',
    value: function _scrollToBottom() {
      if (this._listView) {
        var scrollResponder = this._listView.getScrollResponder();
        if (scrollResponder) {
          var scrollY = Math.max(this._requests.length * LISTVIEW_CELL_HEIGHT + (this._listViewHighlighted ? 2 * SEPARATOR_THICKNESS : 0) - this._listViewHeight, 0);
          scrollResponder.scrollResponderScrollTo({
            x: 0,
            y: scrollY,
            animated: true
          });
        }
      }
    }
  }, {
    key: '_captureRequestListView',
    value: function _captureRequestListView(listRef) {
      this._listView = listRef;
    }
  }, {
    key: '_listViewOnLayout',
    value: function _listViewOnLayout(event) {
      var height = event.nativeEvent.layout.height;

      this._listViewHeight = height;
    }
  }, {
    key: '_pressRow',
    value: function _pressRow(rowID) {
      this._listViewHighlighted = true;
      this.setState({ detailRowID: rowID }, this._scrollToTop());
    }
  }, {
    key: '_scrollToTop',
    value: function _scrollToTop() {
      if (this._scrollView) {
        this._scrollView.scrollTo({
          y: 0,
          animated: false
        });
      }
    }
  }, {
    key: '_captureDetailScrollView',
    value: function _captureDetailScrollView(scrollRef) {
      this._scrollView = scrollRef;
    }
  }, {
    key: '_closeButtonClicked',
    value: function _closeButtonClicked() {
      this.setState({ detailRowID: null });
    }
  }, {
    key: '_getStringByValue',
    value: function _getStringByValue(value) {
      if (value === undefined) {
        return 'undefined';
      }
      if (typeof value === 'object') {
        return JSON.stringify(value);
      }
      if (typeof value === 'string' && value.length > 500) {
        return String(value).substr(0, 500).concat('\n***TRUNCATED TO 500 CHARACTERS***');
      }
      return value;
    }
  }, {
    key: '_getRequestIndexByXHRID',
    value: function _getRequestIndexByXHRID(index) {
      if (index === undefined) {
        return -1;
      }
      var xhrIndex = this._xhrIdMap[index];
      if (xhrIndex === undefined) {
        return -1;
      } else {
        return xhrIndex;
      }
    }
  }, {
    key: '_getTypeShortName',
    value: function _getTypeShortName(type) {
      if (type === 'XMLHttpRequest') {
        return 'XHR';
      } else if (type === 'WebSocket') {
        return 'WS';
      }

      return '';
    }
  }, {
    key: '_genDetailViewItem',
    value: function _genDetailViewItem(index) {
      this._detailViewItems[index] = [];
      var detailViewItem = this._detailViewItems[index];
      var requestItem = this._requests[index];
      for (var _key in requestItem) {
        detailViewItem.push(React.createElement(
          View,
          { style: styles.detailViewRow, key: _key, __source: {
              fileName: _jsxFileName,
              lineNumber: 442
            }
          },
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailKeyCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 443
              }
            },
            _key
          ),
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailValueCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 446
              }
            },
            this._getStringByValue(requestItem[_key])
          )
        ));
      }

      if (this.state.detailRowID != null && Number(this.state.detailRowID) === index) {
        this.setState({ newDetailInfo: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 461
          }
        },
        this.state.detailRowID != null && React.createElement(
          TouchableHighlight,
          {
            style: styles.closeButton,
            onPress: this._closeButtonClicked, __source: {
              fileName: _jsxFileName,
              lineNumber: 463
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 466
              }
            },
            React.createElement(
              Text,
              { style: styles.clostButtonText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 467
                }
              },
              'v'
            )
          )
        ),
        this.state.detailRowID != null && React.createElement(
          ScrollView,
          {
            style: styles.detailScrollView,
            ref: this._captureDetailScrollView, __source: {
              fileName: _jsxFileName,
              lineNumber: 471
            }
          },
          this._detailViewItems[this.state.detailRowID]
        ),
        React.createElement(
          View,
          { style: styles.listViewTitle, __source: {
              fileName: _jsxFileName,
              lineNumber: 476
            }
          },
          this._requests.length > 0 && React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 478
              }
            },
            React.createElement(
              View,
              { style: styles.urlTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 479
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 480
                  }
                },
                'URL'
              )
            ),
            React.createElement(
              View,
              { style: styles.methodTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 482
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 483
                  }
                },
                'Type'
              )
            )
          )
        ),
        React.createElement(ListView, {
          style: styles.listView,
          ref: this._captureRequestListView,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow,
          enableEmptySections: true,
          renderSeparator: this._renderSeperator,
          onLayout: this._listViewOnLayout,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 487
          }
        })
      );
    }
  }]);
  return NetworkOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    paddingTop: 10,
    paddingBottom: 10,
    paddingLeft: 5,
    paddingRight: 5
  },
  listViewTitle: {
    height: 20
  },
  listView: {
    flex: 1,
    height: 60
  },
  tableRow: {
    flexDirection: 'row',
    flex: 1
  },
  cellText: {
    color: 'white',
    fontSize: 12
  },
  methodTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 1
  },
  urlTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 5,
    paddingLeft: 3
  },
  methodOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 1
  },
  urlOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 5,
    paddingLeft: 3
  },
  methodEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 1
  },
  urlEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 5,
    paddingLeft: 3
  },
  detailScrollView: {
    flex: 1,
    height: 180,
    marginTop: 5,
    marginBottom: 5
  },
  detailKeyCellView: {
    flex: 1.3
  },
  detailValueCellView: {
    flex: 2
  },
  detailViewRow: {
    flexDirection: 'row',
    paddingHorizontal: 3
  },
  detailViewText: {
    color: 'white',
    fontSize: 11
  },
  clostButtonText: {
    color: 'white',
    fontSize: 10
  },
  closeButton: {
    marginTop: 5,
    backgroundColor: '#888',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

module.exports = NetworkOverlay;
}, 280, null, "NetworkOverlay");
__d(/* WebSocketInterceptor */function(global, require, module, exports) {
'use strict';

var RCTWebSocketModule = require(15             ).WebSocketModule; // 15 = NativeModules
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter

var base64 = require(94         ); // 94 = base64-js

var originalRCTWebSocketConnect = RCTWebSocketModule.connect;
var originalRCTWebSocketSend = RCTWebSocketModule.send;
var originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;
var originalRCTWebSocketClose = RCTWebSocketModule.close;

var eventEmitter = void 0;
var subscriptions = void 0;

var closeCallback = void 0;
var sendCallback = void 0;
var connectCallback = void 0;
var onOpenCallback = void 0;
var onMessageCallback = void 0;
var onErrorCallback = void 0;
var onCloseCallback = void 0;

var _isInterceptorEnabled = false;

var WebSocketInterceptor = {
  setCloseCallback: function setCloseCallback(callback) {
    closeCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setConnectCallback: function setConnectCallback(callback) {
    connectCallback = callback;
  },
  setOnOpenCallback: function setOnOpenCallback(callback) {
    onOpenCallback = callback;
  },
  setOnMessageCallback: function setOnMessageCallback(callback) {
    onMessageCallback = callback;
  },
  setOnErrorCallback: function setOnErrorCallback(callback) {
    onErrorCallback = callback;
  },
  setOnCloseCallback: function setOnCloseCallback(callback) {
    onCloseCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  _unregisterEvents: function _unregisterEvents() {
    subscriptions.forEach(function (e) {
      return e.remove();
    });
    subscriptions = [];
  },
  _registerEvents: function _registerEvents() {
    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {
      if (onMessageCallback) {
        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);
      }
    }), eventEmitter.addListener('websocketOpen', function (ev) {
      if (onOpenCallback) {
        onOpenCallback(ev.id);
      }
    }), eventEmitter.addListener('websocketClosed', function (ev) {
      if (onCloseCallback) {
        onCloseCallback(ev.id, { code: ev.code, reason: ev.reason });
      }
    }), eventEmitter.addListener('websocketFailed', function (ev) {
      if (onErrorCallback) {
        onErrorCallback(ev.id, { message: ev.message });
      }
    })];
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }
    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    WebSocketInterceptor._registerEvents();

    RCTWebSocketModule.connect = function (url, protocols, options, socketId) {
      if (connectCallback) {
        connectCallback(url, protocols, options, socketId);
      }
      originalRCTWebSocketConnect.apply(this, arguments);
    };

    RCTWebSocketModule.send = function (data, socketId) {
      if (sendCallback) {
        sendCallback(data, socketId);
      }
      originalRCTWebSocketSend.apply(this, arguments);
    };

    RCTWebSocketModule.sendBinary = function (data, socketId) {
      if (sendCallback) {
        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);
      }
      originalRCTWebSocketSendBinary.apply(this, arguments);
    };

    RCTWebSocketModule.close = function () {
      if (closeCallback) {
        if (arguments.length === 3) {
          closeCallback(arguments[0], arguments[1], arguments[2]);
        } else {
          closeCallback(null, null, arguments[0]);
        }
      }
      originalRCTWebSocketClose.apply(this, arguments);
    };

    _isInterceptorEnabled = true;
  },
  _arrayBufferToString: function _arrayBufferToString(data) {
    var value = base64.toByteArray(data).buffer;
    if (value === undefined || value === null) {
      return '(no value)';
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {
      return 'ArrayBuffer {' + String(Array.from(new Uint8Array(value))) + '}';
    }
    return value;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    RCTWebSocketModule.send = originalRCTWebSocketSend;
    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;
    RCTWebSocketModule.close = originalRCTWebSocketClose;
    RCTWebSocketModule.connect = originalRCTWebSocketConnect;

    connectCallback = null;
    closeCallback = null;
    sendCallback = null;
    onOpenCallback = null;
    onMessageCallback = null;
    onCloseCallback = null;
    onErrorCallback = null;

    WebSocketInterceptor._unregisterEvents();
  }
};

module.exports = WebSocketInterceptor;
}, 281, null, "WebSocketInterceptor");
__d(/* XHRInterceptor */function(global, require, module, exports) {
'use strict';

var XMLHttpRequest = require(79              ); // 79 = XMLHttpRequest
var originalXHROpen = XMLHttpRequest.prototype.open;
var originalXHRSend = XMLHttpRequest.prototype.send;
var originalXHRSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;

var openCallback;
var sendCallback;
var requestHeaderCallback;
var headerReceivedCallback;
var responseCallback;

var _isInterceptorEnabled = false;

var XHRInterceptor = {
  setOpenCallback: function setOpenCallback(callback) {
    openCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {
    headerReceivedCallback = callback;
  },
  setResponseCallback: function setResponseCallback(callback) {
    responseCallback = callback;
  },
  setRequestHeaderCallback: function setRequestHeaderCallback(callback) {
    requestHeaderCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }

    XMLHttpRequest.prototype.open = function (method, url) {
      if (openCallback) {
        openCallback(method, url, this);
      }
      originalXHROpen.apply(this, arguments);
    };

    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {
      if (requestHeaderCallback) {
        requestHeaderCallback(header, value, this);
      }
      originalXHRSetRequestHeader.apply(this, arguments);
    };

    XMLHttpRequest.prototype.send = function (data) {
      var _this = this;

      if (sendCallback) {
        sendCallback(data, this);
      }
      if (this.addEventListener) {
        this.addEventListener('readystatechange', function () {
          if (!_isInterceptorEnabled) {
            return;
          }
          if (_this.readyState === _this.HEADERS_RECEIVED) {
            var contentTypeString = _this.getResponseHeader('Content-Type');
            var contentLengthString = _this.getResponseHeader('Content-Length');
            var responseContentType = void 0,
                responseSize = void 0;
            if (contentTypeString) {
              responseContentType = contentTypeString.split(';')[0];
            }
            if (contentLengthString) {
              responseSize = parseInt(contentLengthString, 10);
            }
            if (headerReceivedCallback) {
              headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);
            }
          }
          if (_this.readyState === _this.DONE) {
            if (responseCallback) {
              responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);
            }
          }
        }, false);
      }
      originalXHRSend.apply(this, arguments);
    };
    _isInterceptorEnabled = true;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    XMLHttpRequest.prototype.send = originalXHRSend;
    XMLHttpRequest.prototype.open = originalXHROpen;
    XMLHttpRequest.prototype.setRequestHeader = originalXHRSetRequestHeader;
    responseCallback = null;
    openCallback = null;
    sendCallback = null;
    headerReceivedCallback = null;
    requestHeaderCallback = null;
  }
};

module.exports = XHRInterceptor;
}, 282, null, "XHRInterceptor");
__d(/* PerformanceOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Inspector/PerformanceOverlay.js';
var PerformanceLogger = require(114                ); // 114 = PerformanceLogger
var React = require(134    ); // 134 = React
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var View = require(156   ); // 156 = View

var PerformanceOverlay = function (_React$Component) {
  babelHelpers.inherits(PerformanceOverlay, _React$Component);

  function PerformanceOverlay() {
    babelHelpers.classCallCheck(this, PerformanceOverlay);
    return babelHelpers.possibleConstructorReturn(this, (PerformanceOverlay.__proto__ || Object.getPrototypeOf(PerformanceOverlay)).apply(this, arguments));
  }

  babelHelpers.createClass(PerformanceOverlay, [{
    key: 'render',
    value: function render() {
      var perfLogs = PerformanceLogger.getTimespans();
      var items = [];

      for (var key in perfLogs) {
        if (perfLogs[key].totalTime) {
          var unit = key === 'BundleSize' ? 'b' : 'ms';
          items.push(React.createElement(
            View,
            { style: styles.row, key: key, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            },
            React.createElement(
              Text,
              { style: [styles.text, styles.label], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 30
                }
              },
              key
            ),
            React.createElement(
              Text,
              { style: [styles.text, styles.totalTime], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              perfLogs[key].totalTime + unit
            )
          ));
        }
      }

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        },
        items
      );
    }
  }]);
  return PerformanceOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    paddingTop: 10
  },
  label: {
    flex: 1
  },
  row: {
    flexDirection: 'row',
    paddingHorizontal: 10
  },
  text: {
    color: 'white',
    fontSize: 12
  },
  totalTime: {
    paddingRight: 100
  }
});

module.exports = PerformanceOverlay;
}, 283, null, "PerformanceOverlay");
__d(/* YellowBox */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/ReactNative/YellowBox.js';
var EventEmitter = require(88            ); // 88 = EventEmitter
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var SafeAreaView = require(285           ); // 285 = SafeAreaView
var StyleSheet = require(135         ); // 135 = StyleSheet
var RCTLog = require(112     ); // 112 = RCTLog

var infoLog = require(115      ); // 115 = infoLog
var openFileInEditor = require(279               ); // 279 = openFileInEditor
var parseErrorStack = require(26               ); // 26 = parseErrorStack
var stringifySafe = require(33             ); // 33 = stringifySafe
var symbolicateStackTrace = require(29                     ); // 29 = symbolicateStackTrace

var _warningEmitter = new EventEmitter();
var _warningMap = new Map();
var IGNORED_WARNINGS = [];

if (__DEV__) {
  var _console = console,
      error = _console.error,
      warn = _console.warn;


  console.error = function () {
    error.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('Warning: ')) {
      updateWarningMap.apply(null, arguments);
    }
  };

  console.warn = function () {
    warn.apply(console, arguments);
    updateWarningMap.apply(null, arguments);
  };

  if (Platform.isTesting) {
    console.disableYellowBox = true;
  }

  RCTLog.setWarningHandler(function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    updateWarningMap.apply(null, args);
  });
}

function sprintf(format) {
  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  var index = 0;
  return format.replace(/%s/g, function (match) {
    return args[index++];
  });
}

function updateWarningMap() {
  if (console.disableYellowBox) {
    return;
  }

  var warning = void 0;

  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  if (typeof args[0] === 'string') {
    var format = args[0],
        formatArgs = args.slice(1);

    var argCount = (format.match(/%s/g) || []).length;
    warning = [sprintf.apply(undefined, [format].concat(babelHelpers.toConsumableArray(formatArgs.slice(0, argCount).map(stringifySafe))))].concat(babelHelpers.toConsumableArray(formatArgs.slice(argCount).map(stringifySafe))).join(' ');
  } else {
    warning = args.map(stringifySafe).join(' ');
  }

  if (warning.startsWith('(ADVICE)')) {
    return;
  }

  var warningInfo = _warningMap.get(warning);
  if (warningInfo) {
    warningInfo.count += 1;
  } else {
    var _error = new Error();
    _error.framesToPop = 2;

    _warningMap.set(warning, {
      count: 1,
      stacktrace: parseErrorStack(_error),
      symbolicated: false
    });
  }

  _warningEmitter.emit('warning', _warningMap);
}

function ensureSymbolicatedWarning(warning) {
  var prevWarningInfo = _warningMap.get(warning);
  if (!prevWarningInfo || prevWarningInfo.symbolicated) {
    return;
  }
  prevWarningInfo.symbolicated = true;

  symbolicateStackTrace(prevWarningInfo.stacktrace).then(function (stack) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      nextWarningInfo.stacktrace = stack;
      _warningEmitter.emit('warning', _warningMap);
    }
  }, function (error) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      infoLog('Failed to symbolicate warning, "%s":', warning, error);
      _warningEmitter.emit('warning', _warningMap);
    }
  });
}

function isWarningIgnored(warning) {
  var isIgnored = IGNORED_WARNINGS.some(function (ignoredWarning) {
    return warning.startsWith(ignoredWarning);
  });

  if (isIgnored) {
    return true;
  }

  return Array.isArray(console.ignoredYellowBox) && console.ignoredYellowBox.some(function (ignorePrefix) {
    return warning.startsWith(String(ignorePrefix));
  });
}

var WarningRow = function WarningRow(_ref) {
  var count = _ref.count,
      warning = _ref.warning,
      onPress = _ref.onPress;

  var Text = require(188   ); // 188 = Text
  var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
  var View = require(156   ); // 156 = View

  var countText = count > 1 ? React.createElement(
    Text,
    { style: styles.listRowCount, __source: {
        fileName: _jsxFileName,
        lineNumber: 197
      }
    },
    '(' + count + ') '
  ) : null;

  return React.createElement(
    View,
    { style: styles.listRow, __source: {
        fileName: _jsxFileName,
        lineNumber: 201
      }
    },
    React.createElement(
      TouchableHighlight,
      {
        activeOpacity: 0.5,
        onPress: onPress,
        style: styles.listRowContent,
        underlayColor: 'transparent', __source: {
          fileName: _jsxFileName,
          lineNumber: 202
        }
      },
      React.createElement(
        Text,
        { style: styles.listRowText, numberOfLines: 2, __source: {
            fileName: _jsxFileName,
            lineNumber: 207
          }
        },
        countText,
        warning
      )
    )
  );
};

var StackRow = function StackRow(_ref2) {
  var frame = _ref2.frame;

  var Text = require(188   ); // 188 = Text
  var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
  var file = frame.file,
      lineNumber = frame.lineNumber;

  var fileName = void 0;
  if (file) {
    var fileParts = file.split('/');
    fileName = fileParts[fileParts.length - 1];
  } else {
    fileName = '<unknown file>';
  }

  return React.createElement(
    TouchableHighlight,
    {
      activeOpacity: 0.5,
      style: styles.openInEditorButton,
      underlayColor: 'transparent',
      onPress: openFileInEditor.bind(null, file, lineNumber), __source: {
        fileName: _jsxFileName,
        lineNumber: 230
      }
    },
    React.createElement(
      Text,
      { style: styles.inspectorCountText, __source: {
          fileName: _jsxFileName,
          lineNumber: 235
        }
      },
      fileName,
      ':',
      lineNumber
    )
  );
};

var WarningInspector = function WarningInspector(_ref3) {
  var warningInfo = _ref3.warningInfo,
      warning = _ref3.warning,
      stacktraceVisible = _ref3.stacktraceVisible,
      onDismiss = _ref3.onDismiss,
      onDismissAll = _ref3.onDismissAll,
      onMinimize = _ref3.onMinimize,
      toggleStacktrace = _ref3.toggleStacktrace;

  var ScrollView = require(228         ); // 228 = ScrollView
  var Text = require(188   ); // 188 = Text
  var TouchableHighlight = require(276                 ); // 276 = TouchableHighlight
  var View = require(156   ); // 156 = View

  var _ref4 = warningInfo || {},
      count = _ref4.count,
      stacktrace = _ref4.stacktrace;

  var countSentence = 'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';

  var stacktraceList = void 0;
  if (stacktraceVisible && stacktrace) {
    stacktraceList = React.createElement(
      View,
      { style: styles.stacktraceList, __source: {
          fileName: _jsxFileName,
          lineNumber: 263
        }
      },
      stacktrace.map(function (frame, ii) {
        return React.createElement(StackRow, { frame: frame, key: ii, __source: {
            fileName: _jsxFileName,
            lineNumber: 264
          }
        });
      })
    );
  }

  return React.createElement(
    View,
    { style: styles.inspector, __source: {
        fileName: _jsxFileName,
        lineNumber: 270
      }
    },
    React.createElement(
      SafeAreaView,
      { style: styles.safeArea, __source: {
          fileName: _jsxFileName,
          lineNumber: 271
        }
      },
      React.createElement(
        View,
        { style: styles.inspectorCount, __source: {
            fileName: _jsxFileName,
            lineNumber: 272
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorCountText, __source: {
              fileName: _jsxFileName,
              lineNumber: 273
            }
          },
          countSentence
        ),
        React.createElement(
          TouchableHighlight,
          {
            onPress: toggleStacktrace,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 274
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 277
              }
            },
            stacktraceVisible ? '\u25BC' : '\u25B6',
            ' Stacktrace'
          )
        )
      ),
      React.createElement(
        ScrollView,
        { style: styles.inspectorWarning, __source: {
            fileName: _jsxFileName,
            lineNumber: 282
          }
        },
        stacktraceList,
        React.createElement(
          Text,
          { style: styles.inspectorWarningText, __source: {
              fileName: _jsxFileName,
              lineNumber: 284
            }
          },
          warning
        )
      ),
      React.createElement(
        View,
        { style: styles.inspectorButtons, __source: {
            fileName: _jsxFileName,
            lineNumber: 286
          }
        },
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onMinimize,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 287
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 292
              }
            },
            'Minimize'
          )
        ),
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onDismiss,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 294
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 299
              }
            },
            'Dismiss'
          )
        ),
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onDismissAll,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 301
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 306
              }
            },
            'Dismiss All'
          )
        )
      )
    )
  );
};

var YellowBox = function (_React$Component) {
  babelHelpers.inherits(YellowBox, _React$Component);

  function YellowBox(props, context) {
    babelHelpers.classCallCheck(this, YellowBox);

    var _this = babelHelpers.possibleConstructorReturn(this, (YellowBox.__proto__ || Object.getPrototypeOf(YellowBox)).call(this, props, context));

    _this.state = {
      inspecting: null,
      stacktraceVisible: false,
      warningMap: _warningMap
    };
    _this.dismissWarning = function (warning) {
      var _this$state = _this.state,
          inspecting = _this$state.inspecting,
          warningMap = _this$state.warningMap;

      if (warning) {
        warningMap.delete(warning);
      } else {
        warningMap.clear();
      }
      _this.setState({
        inspecting: warning && inspecting !== warning ? inspecting : null,
        warningMap: warningMap
      });
    };
    return _this;
  }

  babelHelpers.createClass(YellowBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var scheduled = null;
      this._listener = _warningEmitter.addListener('warning', function (warningMap) {
        scheduled = scheduled || setImmediate(function () {
          scheduled = null;
          _this2.setState({
            warningMap: warningMap
          });
        });
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var inspecting = this.state.inspecting;

      if (inspecting != null) {
        ensureSymbolicatedWarning(inspecting);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._listener) {
        this._listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (console.disableYellowBox || this.state.warningMap.size === 0) {
        return null;
      }
      var ScrollView = require(228         ); // 228 = ScrollView
      var View = require(156   ); // 156 = View

      var _state = this.state,
          inspecting = _state.inspecting,
          stacktraceVisible = _state.stacktraceVisible;

      var inspector = inspecting !== null ? React.createElement(WarningInspector, {
        warningInfo: this.state.warningMap.get(inspecting),
        warning: inspecting,
        stacktraceVisible: stacktraceVisible,
        onDismiss: function onDismiss() {
          return _this3.dismissWarning(inspecting);
        },
        onDismissAll: function onDismissAll() {
          return _this3.dismissWarning(null);
        },
        onMinimize: function onMinimize() {
          return _this3.setState({ inspecting: null });
        },
        toggleStacktrace: function toggleStacktrace() {
          return _this3.setState({ stacktraceVisible: !stacktraceVisible });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 393
        }
      }) : null;

      var rows = [];
      this.state.warningMap.forEach(function (warningInfo, warning) {
        if (!isWarningIgnored(warning)) {
          rows.push(React.createElement(WarningRow, {
            key: warning,
            count: warningInfo.count,
            warning: warning,
            onPress: function onPress() {
              return _this3.setState({ inspecting: warning });
            },
            onDismiss: function onDismiss() {
              return _this3.dismissWarning(warning);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 409
            }
          }));
        }
      });

      var listStyle = [styles.list, { height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight) }];
      return React.createElement(
        View,
        { style: inspector ? styles.fullScreen : listStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 426
          }
        },
        React.createElement(
          ScrollView,
          { style: listStyle, scrollsToTop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 427
            }
          },
          rows
        ),
        inspector
      );
    }
  }], [{
    key: 'ignoreWarnings',
    value: function ignoreWarnings(warnings) {
      warnings.forEach(function (warning) {
        if (IGNORED_WARNINGS.indexOf(warning) === -1) {
          IGNORED_WARNINGS.push(warning);
        }
      });
    }
  }]);
  return YellowBox;
}(React.Component);

var backgroundColor = function backgroundColor(opacity) {
  return 'rgba(250, 186, 48, ' + opacity + ')';
};
var textColor = 'white';
var rowGutter = 1;
var rowHeight = 46;

var elevation = Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;

var styles = StyleSheet.create({
  fullScreen: {
    height: '100%',
    width: '100%',
    elevation: elevation,
    position: 'absolute'
  },
  inspector: {
    backgroundColor: backgroundColor(0.95),
    height: '100%',
    paddingTop: 5,
    elevation: elevation
  },
  inspectorButtons: {
    flexDirection: 'row'
  },
  inspectorButton: {
    flex: 1,
    paddingVertical: 22,
    backgroundColor: backgroundColor(1)
  },
  safeArea: {
    flex: 1
  },
  stacktraceList: {
    paddingBottom: 5
  },
  inspectorButtonText: {
    color: textColor,
    fontSize: 14,
    opacity: 0.8,
    textAlign: 'center'
  },
  openInEditorButton: {
    paddingTop: 5,
    paddingBottom: 5
  },
  inspectorCount: {
    padding: 15,
    paddingBottom: 0,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inspectorCountText: {
    color: textColor,
    fontSize: 14
  },
  inspectorWarning: {
    flex: 1,
    paddingHorizontal: 15
  },
  inspectorWarningText: {
    color: textColor,
    fontSize: 16,
    fontWeight: '600'
  },
  list: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    elevation: elevation
  },
  listRow: {
    backgroundColor: backgroundColor(0.95),
    height: rowHeight,
    marginTop: rowGutter
  },
  listRowContent: {
    flex: 1
  },
  listRowCount: {
    color: 'rgba(255, 255, 255, 0.5)'
  },
  listRowText: {
    color: textColor,
    position: 'absolute',
    left: 0,
    top: Platform.OS === 'android' ? 5 : 7,
    marginLeft: 15,
    marginRight: 15
  }
});

module.exports = YellowBox;
}, 284, null, "YellowBox");
__d(/* SafeAreaView */function(global, require, module, exports) {var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.ios.js';


var React = require(134    ); // 134 = React
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var SafeAreaView = function (_React$Component) {
  babelHelpers.inherits(SafeAreaView, _React$Component);

  function SafeAreaView() {
    babelHelpers.classCallCheck(this, SafeAreaView);
    return babelHelpers.possibleConstructorReturn(this, (SafeAreaView.__proto__ || Object.getPrototypeOf(SafeAreaView)).apply(this, arguments));
  }

  babelHelpers.createClass(SafeAreaView, [{
    key: 'render',
    value: function render() {
      return React.createElement(RCTSafeAreaView, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 36
        }
      }));
    }
  }]);
  return SafeAreaView;
}(React.Component);

SafeAreaView.propTypes = babelHelpers.extends({}, ViewPropTypes);


var RCTSafeAreaView = requireNativeComponent('RCTSafeAreaView', {
  name: 'RCTSafeAreaView',
  displayName: 'RCTSafeAreaView',
  propTypes: babelHelpers.extends({}, ViewPropTypes)
});

module.exports = SafeAreaView;
}, 285, null, "SafeAreaView");
__d(/* I18nManager */function(global, require, module, exports) {
'use strict';

var I18nManager = require(15             ).I18nManager || { // 15 = NativeModules
  isRTL: false,
  doLeftAndRightSwapInRTL: true,
  allowRTL: function allowRTL() {},
  forceRTL: function forceRTL() {},
  swapLeftAndRightInRTL: function swapLeftAndRightInRTL() {}
};

module.exports = I18nManager;
}, 286, null, "I18nManager");
__d(/* NavigatorIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js';
var EventEmitter = require(88            ); // 88 = EventEmitter
var Image = require(226    ); // 226 = Image
var RCTNavigatorManager = require(15             ).NavigatorManager; // 15 = NativeModules
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StaticContainer = require(288                    ); // 288 = StaticContainer.react
var StyleSheet = require(135         ); // 135 = StyleSheet
var TVEventHandler = require(193             ); // 193 = TVEventHandler
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror

var TRANSITIONER_REF = 'transitionerRef';

var __uid = 0;
function getuid() {
  return __uid++;
}

var NavigatorTransitionerIOS = function (_React$Component) {
  babelHelpers.inherits(NavigatorTransitionerIOS, _React$Component);

  function NavigatorTransitionerIOS() {
    babelHelpers.classCallCheck(this, NavigatorTransitionerIOS);
    return babelHelpers.possibleConstructorReturn(this, (NavigatorTransitionerIOS.__proto__ || Object.getPrototypeOf(NavigatorTransitionerIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(NavigatorTransitionerIOS, [{
    key: 'requestSchedulingNavigation',
    value: function requestSchedulingNavigation(cb) {
      RCTNavigatorManager.requestSchedulingJavaScriptNavigation(ReactNative.findNodeHandle(this), cb);
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(RCTNavigator, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52
        }
      }));
    }
  }]);
  return NavigatorTransitionerIOS;
}(React.Component);

var SystemIconLabels = {
  done: true,
  cancel: true,
  edit: true,
  save: true,
  add: true,
  compose: true,
  reply: true,
  action: true,
  organize: true,
  bookmarks: true,
  search: true,
  refresh: true,
  stop: true,
  camera: true,
  trash: true,
  play: true,
  pause: true,
  rewind: true,
  'fast-forward': true,
  undo: true,
  redo: true,
  'page-curl': true
};
var SystemIcons = keyMirror(SystemIconLabels);

var NavigatorIOS = createReactClass({
  displayName: 'NavigatorIOS',

  propTypes: {
    initialRoute: PropTypes.shape({
      component: PropTypes.func.isRequired,

      title: PropTypes.string.isRequired,

      titleImage: Image.propTypes.source,

      passProps: PropTypes.object,

      backButtonIcon: Image.propTypes.source,

      backButtonTitle: PropTypes.string,

      leftButtonIcon: Image.propTypes.source,

      leftButtonTitle: PropTypes.string,

      leftButtonSystemIcon: PropTypes.oneOf(Object.keys(SystemIcons)),

      onLeftButtonPress: PropTypes.func,

      rightButtonIcon: Image.propTypes.source,

      rightButtonTitle: PropTypes.string,

      rightButtonSystemIcon: PropTypes.oneOf(Object.keys(SystemIcons)),

      onRightButtonPress: PropTypes.func,

      wrapperStyle: ViewPropTypes.style,

      navigationBarHidden: PropTypes.bool,

      shadowHidden: PropTypes.bool,

      tintColor: PropTypes.string,

      barTintColor: PropTypes.string,

      barStyle: PropTypes.oneOf(['default', 'black']),

      titleTextColor: PropTypes.string,

      translucent: PropTypes.bool

    }).isRequired,

    navigationBarHidden: PropTypes.bool,

    shadowHidden: PropTypes.bool,

    itemWrapperStyle: ViewPropTypes.style,

    tintColor: PropTypes.string,

    barTintColor: PropTypes.string,

    barStyle: PropTypes.oneOf(['default', 'black']),

    titleTextColor: PropTypes.string,

    translucent: PropTypes.bool,

    interactivePopGestureEnabled: PropTypes.bool

  },

  navigator: undefined,

  componentWillMount: function componentWillMount() {
    this.navigator = {
      push: this.push,
      pop: this.pop,
      popN: this.popN,
      replace: this.replace,
      replaceAtIndex: this.replaceAtIndex,
      replacePrevious: this.replacePrevious,
      replacePreviousAndPop: this.replacePreviousAndPop,
      resetTo: this.resetTo,
      popToRoute: this.popToRoute,
      popToTop: this.popToTop
    };
  },

  componentDidMount: function componentDidMount() {
    this._enableTVEventHandler();
  },

  componentWillUnmount: function componentWillUnmount() {
    this._disableTVEventHandler();
  },

  getDefaultProps: function getDefaultProps() {
    return {
      translucent: true
    };
  },

  getInitialState: function getInitialState() {
    return {
      idStack: [getuid()],
      routeStack: [this.props.initialRoute],

      requestedTopOfStack: 0,

      observedTopOfStack: 0,
      progress: 1,
      fromIndex: 0,
      toIndex: 0,

      makingNavigatorRequest: false,

      updatingAllIndicesAtOrBeyond: 0
    };
  },

  _toFocusOnNavigationComplete: undefined,

  _handleFocusRequest: function _handleFocusRequest(item) {
    if (this.state.makingNavigatorRequest) {
      this._toFocusOnNavigationComplete = item;
    } else {
      this._getFocusEmitter().emit('focus', item);
    }
  },

  _focusEmitter: undefined,

  _getFocusEmitter: function _getFocusEmitter() {
    var focusEmitter = this._focusEmitter;
    if (!focusEmitter) {
      focusEmitter = new EventEmitter();
      this._focusEmitter = focusEmitter;
    }
    return focusEmitter;
  },

  getChildContext: function getChildContext() {
    return {
      onFocusRequested: this._handleFocusRequest,
      focusEmitter: this._getFocusEmitter()
    };
  },

  childContextTypes: {
    onFocusRequested: PropTypes.func,
    focusEmitter: PropTypes.instanceOf(EventEmitter)
  },

  _tryLockNavigator: function _tryLockNavigator(cb) {
    this.refs[TRANSITIONER_REF].requestSchedulingNavigation(function (acquiredLock) {
      return acquiredLock && cb();
    });
  },

  _handleNavigatorStackChanged: function _handleNavigatorStackChanged(e) {
    var newObservedTopOfStack = e.nativeEvent.stackLength - 1;

    invariant(newObservedTopOfStack <= this.state.requestedTopOfStack, 'No navigator item should be pushed without JS knowing about it %s %s', newObservedTopOfStack, this.state.requestedTopOfStack);
    var wasWaitingForConfirmation = this.state.requestedTopOfStack !== this.state.observedTopOfStack;
    if (wasWaitingForConfirmation) {
      invariant(newObservedTopOfStack === this.state.requestedTopOfStack, 'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 'the only valid observedTopOfStack should be requestedTopOfStack.');
    }

    var nextState = {
      observedTopOfStack: newObservedTopOfStack,
      makingNavigatorRequest: false,
      updatingAllIndicesAtOrBeyond: null,
      progress: 1,
      toIndex: newObservedTopOfStack,
      fromIndex: newObservedTopOfStack
    };
    this.setState(nextState, this._eliminateUnneededChildren);
  },

  _eliminateUnneededChildren: function _eliminateUnneededChildren() {
    var updatingAllIndicesAtOrBeyond = this.state.routeStack.length > this.state.observedTopOfStack + 1 ? this.state.observedTopOfStack + 1 : null;
    this.setState({
      idStack: this.state.idStack.slice(0, this.state.observedTopOfStack + 1),
      routeStack: this.state.routeStack.slice(0, this.state.observedTopOfStack + 1),

      requestedTopOfStack: this.state.observedTopOfStack,
      makingNavigatorRequest: true,
      updatingAllIndicesAtOrBeyond: updatingAllIndicesAtOrBeyond
    });
  },

  push: function push(route) {
    var _this2 = this;

    invariant(!!route, 'Must supply route to push');

    if (this.state.requestedTopOfStack === this.state.observedTopOfStack) {
      this._tryLockNavigator(function () {

        var nextStack = _this2.state.routeStack.concat([route]);
        var nextIDStack = _this2.state.idStack.concat([getuid()]);
        _this2.setState({
          idStack: nextIDStack,
          routeStack: nextStack,
          requestedTopOfStack: nextStack.length - 1,
          makingNavigatorRequest: true,
          updatingAllIndicesAtOrBeyond: nextStack.length - 1
        });
      });
    }
  },

  popN: function popN(n) {
    var _this3 = this;

    if (n === 0) {
      return;
    }

    if (this.state.requestedTopOfStack === this.state.observedTopOfStack) {
      if (this.state.requestedTopOfStack > 0) {
        this._tryLockNavigator(function () {
          var newRequestedTopOfStack = _this3.state.requestedTopOfStack - n;
          invariant(newRequestedTopOfStack >= 0, 'Cannot pop below 0');
          _this3.setState({
            requestedTopOfStack: newRequestedTopOfStack,
            makingNavigatorRequest: true,
            updatingAllIndicesAtOrBeyond: _this3.state.requestedTopOfStack - n
          });
        });
      }
    }
  },

  pop: function pop() {
    this.popN(1);
  },

  replaceAtIndex: function replaceAtIndex(route, index) {
    invariant(!!route, 'Must supply route to replace');
    if (index < 0) {
      index += this.state.routeStack.length;
    }

    if (this.state.routeStack.length <= index) {
      return;
    }

    var nextIDStack = this.state.idStack.slice();
    var nextRouteStack = this.state.routeStack.slice();
    nextIDStack[index] = getuid();
    nextRouteStack[index] = route;

    this.setState({
      idStack: nextIDStack,
      routeStack: nextRouteStack,
      makingNavigatorRequest: false,
      updatingAllIndicesAtOrBeyond: index
    });
  },

  replace: function replace(route) {
    this.replaceAtIndex(route, -1);
  },

  replacePrevious: function replacePrevious(route) {
    this.replaceAtIndex(route, -2);
  },

  popToTop: function popToTop() {
    this.popToRoute(this.state.routeStack[0]);
  },

  popToRoute: function popToRoute(route) {
    var indexOfRoute = this.state.routeStack.indexOf(route);
    invariant(indexOfRoute !== -1, 'Calling pop to route for a route that doesn\'t exist!');
    var numToPop = this.state.routeStack.length - indexOfRoute - 1;
    this.popN(numToPop);
  },

  replacePreviousAndPop: function replacePreviousAndPop(route) {
    var _this4 = this;

    if (this.state.requestedTopOfStack !== this.state.observedTopOfStack) {
      return;
    }
    if (this.state.routeStack.length < 2) {
      return;
    }
    this._tryLockNavigator(function () {
      _this4.replacePrevious(route);
      _this4.setState({
        requestedTopOfStack: _this4.state.requestedTopOfStack - 1,
        makingNavigatorRequest: true
      });
    });
  },

  resetTo: function resetTo(route) {
    invariant(!!route, 'Must supply route to push');

    if (this.state.requestedTopOfStack !== this.state.observedTopOfStack) {
      return;
    }
    this.replaceAtIndex(route, 0);
    this.popToRoute(route);
  },

  _handleNavigationComplete: function _handleNavigationComplete(e) {
    e.stopPropagation();

    if (this._toFocusOnNavigationComplete) {
      this._getFocusEmitter().emit('focus', this._toFocusOnNavigationComplete);
      this._toFocusOnNavigationComplete = null;
    }
    this._handleNavigatorStackChanged(e);
  },

  _routeToStackItem: function _routeToStackItem(routeArg, i) {
    var component = routeArg.component,
        wrapperStyle = routeArg.wrapperStyle,
        passProps = routeArg.passProps,
        route = babelHelpers.objectWithoutProperties(routeArg, ['component', 'wrapperStyle', 'passProps']);
    var _props = this.props,
        itemWrapperStyle = _props.itemWrapperStyle,
        props = babelHelpers.objectWithoutProperties(_props, ['itemWrapperStyle']);

    var shouldUpdateChild = this.state.updatingAllIndicesAtOrBeyond != null && this.state.updatingAllIndicesAtOrBeyond >= i;
    var Component = component;
    return React.createElement(
      StaticContainer,
      { key: 'nav' + i, shouldUpdate: shouldUpdateChild, __source: {
          fileName: _jsxFileName,
          lineNumber: 853
        }
      },
      React.createElement(
        RCTNavigatorItem,
        babelHelpers.extends({}, props, route, {
          style: [styles.stackItem, itemWrapperStyle, wrapperStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 854
          }
        }),
        React.createElement(Component, babelHelpers.extends({
          navigator: this.navigator,
          route: route
        }, passProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 862
          }
        }))
      )
    );
  },

  _renderNavigationStackItems: function _renderNavigationStackItems() {
    var shouldRecurseToNavigator = this.state.makingNavigatorRequest || this.state.updatingAllIndicesAtOrBeyond !== null;

    var items = shouldRecurseToNavigator ? this.state.routeStack.map(this._routeToStackItem) : null;
    return React.createElement(
      StaticContainer,
      { shouldUpdate: shouldRecurseToNavigator, __source: {
          fileName: _jsxFileName,
          lineNumber: 881
        }
      },
      React.createElement(
        NavigatorTransitionerIOS,
        {
          ref: TRANSITIONER_REF,
          style: styles.transitioner,

          vertical: this.props.vertical,
          requestedTopOfStack: this.state.requestedTopOfStack,
          onNavigationComplete: this._handleNavigationComplete,
          interactivePopGestureEnabled: this.props.interactivePopGestureEnabled, __source: {
            fileName: _jsxFileName,
            lineNumber: 882
          }
        },
        items
      )
    );
  },

  _tvEventHandler: undefined,

  _enableTVEventHandler: function _enableTVEventHandler() {
    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      if (evt && evt.eventType === 'menu') {
        cmp.pop();
      }
    });
  },

  _disableTVEventHandler: function _disableTVEventHandler() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
  },

  render: function render() {
    return React.createElement(
      View,
      { style: this.props.style, __source: {
          fileName: _jsxFileName,
          lineNumber: 917
        }
      },
      this._renderNavigationStackItems()
    );
  }
});

var styles = StyleSheet.create({
  stackItem: {
    backgroundColor: 'white',
    overflow: 'hidden',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  transitioner: {
    flex: 1
  }
});

var RCTNavigator = requireNativeComponent('RCTNavigator');
var RCTNavigatorItem = requireNativeComponent('RCTNavItem');

module.exports = NavigatorIOS;
}, 287, null, "NavigatorIOS");
__d(/* StaticContainer.react */function(global, require, module, exports) {
'use strict';

var React = require(134    ); // 134 = React

var StaticContainer = function (_React$Component) {
  babelHelpers.inherits(StaticContainer, _React$Component);

  function StaticContainer() {
    babelHelpers.classCallCheck(this, StaticContainer);
    return babelHelpers.possibleConstructorReturn(this, (StaticContainer.__proto__ || Object.getPrototypeOf(StaticContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticContainer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !!nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      var child = this.props.children;
      return child === null || child === false ? null : React.Children.only(child);
    }
  }]);
  return StaticContainer;
}(React.Component);

module.exports = StaticContainer;
}, 288, null, "StaticContainer.react");
__d(/* Picker */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Picker/Picker.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var PickerIOS = require(290        ); // 290 = PickerIOS
var PickerAndroid = require(291            ); // 291 = PickerAndroid
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var UnimplementedView = require(133                ); // 133 = UnimplementedView
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var ViewStylePropTypes = require(151                 ); // 151 = ViewStylePropTypes

var itemStylePropType = StyleSheetPropType(TextStylePropTypes);

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var MODE_DIALOG = 'dialog';
var MODE_DROPDOWN = 'dropdown';

var PickerItem = function (_React$Component) {
  babelHelpers.inherits(PickerItem, _React$Component);

  function PickerItem() {
    babelHelpers.classCallCheck(this, PickerItem);
    return babelHelpers.possibleConstructorReturn(this, (PickerItem.__proto__ || Object.getPrototypeOf(PickerItem)).apply(this, arguments));
  }

  babelHelpers.createClass(PickerItem, [{
    key: 'render',
    value: function render() {
      throw null;
    }
  }]);
  return PickerItem;
}(React.Component);

PickerItem.propTypes = {
  label: PropTypes.string.isRequired,

  value: PropTypes.any,

  color: ColorPropType,

  testID: PropTypes.string
};

var Picker = function (_React$Component2) {
  babelHelpers.inherits(Picker, _React$Component2);

  function Picker() {
    babelHelpers.classCallCheck(this, Picker);
    return babelHelpers.possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
  }

  babelHelpers.createClass(Picker, [{
    key: 'render',
    value: function render() {
      if (Platform.OS === 'ios') {
        return React.createElement(
          PickerIOS,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 157
            }
          }),
          this.props.children
        );
      } else if (Platform.OS === 'android') {
        return React.createElement(
          PickerAndroid,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 160
            }
          }),
          this.props.children
        );
      } else {
        return React.createElement(UnimplementedView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 162
          }
        });
      }
    }
  }]);
  return Picker;
}(React.Component);

Picker.MODE_DIALOG = MODE_DIALOG;
Picker.MODE_DROPDOWN = MODE_DROPDOWN;
Picker.Item = PickerItem;
Picker.defaultProps = {
  mode: MODE_DIALOG
};
Picker.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,

  selectedValue: PropTypes.any,

  onValueChange: PropTypes.func,

  enabled: PropTypes.bool,

  mode: PropTypes.oneOf(['dialog', 'dropdown']),

  itemStyle: itemStylePropType,

  prompt: PropTypes.string,

  testID: PropTypes.string
});


module.exports = Picker;
}, 289, null, "Picker");
__d(/* PickerIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Picker/PickerIOS.ios.js',
    _class,
    _temp;

var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var StyleSheetPropType = require(166                 ); // 166 = StyleSheetPropType
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var processColor = require(118           ); // 118 = processColor

var createReactClass = require(168                 ); // 168 = create-react-class
var itemStylePropType = StyleSheetPropType(TextStylePropTypes);
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var PickerIOS = createReactClass({
  displayName: 'PickerIOS',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    itemStyle: itemStylePropType,
    onValueChange: PropTypes.func,
    selectedValue: PropTypes.any }),

  getInitialState: function getInitialState() {
    return this._stateFromProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this.setState(this._stateFromProps(nextProps));
  },

  _stateFromProps: function _stateFromProps(props) {
    var selectedIndex = 0;
    var items = [];
    React.Children.toArray(props.children).forEach(function (child, index) {
      if (child.props.value === props.selectedValue) {
        selectedIndex = index;
      }
      items.push({
        value: child.props.value,
        label: child.props.label,
        textColor: processColor(child.props.color)
      });
    });
    return { selectedIndex: selectedIndex, items: items };
  },

  render: function render() {
    var _this = this;

    return React.createElement(
      View,
      { style: this.props.style, __source: {
          fileName: _jsxFileName,
          lineNumber: 67
        }
      },
      React.createElement(RCTPickerIOS, {
        ref: function ref(picker) {
          return _this._picker = picker;
        },
        style: [styles.pickerIOS, this.props.itemStyle],
        items: this.state.items,
        selectedIndex: this.state.selectedIndex,
        onChange: this._onChange,
        onStartShouldSetResponder: function onStartShouldSetResponder() {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return false;
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68
        }
      })
    );
  },

  _onChange: function _onChange(event) {
    if (this.props.onChange) {
      this.props.onChange(event);
    }
    if (this.props.onValueChange) {
      this.props.onValueChange(event.nativeEvent.newValue, event.nativeEvent.newIndex);
    }

    if (this._picker && this.state.selectedIndex !== event.nativeEvent.newIndex) {
      this._picker.setNativeProps({
        selectedIndex: this.state.selectedIndex
      });
    }
  }
});

PickerIOS.Item = (_temp = _class = function (_React$Component) {
  babelHelpers.inherits(_class, _React$Component);

  function _class() {
    babelHelpers.classCallCheck(this, _class);
    return babelHelpers.possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
  }

  babelHelpers.createClass(_class, [{
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return _class;
}(React.Component), _class.propTypes = {
  value: PropTypes.any,
  label: PropTypes.string,
  color: PropTypes.string
}, _temp);

var styles = StyleSheet.create({
  pickerIOS: {
    height: 216
  }
});

var RCTPickerIOS = requireNativeComponent('RCTPicker', {
  propTypes: {
    style: itemStylePropType
  }
}, {
  nativeOnly: {
    items: true,
    onChange: true,
    selectedIndex: true
  }
});

module.exports = PickerIOS;
}, 290, null, "PickerIOS");
__d(/* PickerAndroid */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 291, null, "PickerAndroid");
__d(/* ProgressViewIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.ios.js';
var Image = require(226    ); // 226 = Image
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var ProgressViewIOS = createReactClass({
  displayName: 'ProgressViewIOS',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    progressViewStyle: PropTypes.oneOf(['default', 'bar']),

    progress: PropTypes.number,

    progressTintColor: PropTypes.string,

    trackTintColor: PropTypes.string,

    progressImage: Image.propTypes.source,

    trackImage: Image.propTypes.source
  }),

  render: function render() {
    return React.createElement(RCTProgressView, babelHelpers.extends({}, this.props, {
      style: [styles.progressView, this.props.style],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 66
      }
    }));
  }
});

var styles = StyleSheet.create({
  progressView: {
    height: 2
  }
});

var RCTProgressView = requireNativeComponent('RCTProgressView', ProgressViewIOS);

module.exports = ProgressViewIOS;
}, 292, null, "ProgressViewIOS");
__d(/* SectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/SectionList.js';
var MetroListView = require(246            ); // 246 = MetroListView
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var ScrollView = require(228         ); // 228 = ScrollView
var VirtualizedSectionList = require(294                     ); // 294 = VirtualizedSectionList

var defaultProps = babelHelpers.extends({}, VirtualizedSectionList.defaultProps, {
  stickySectionHeadersEnabled: Platform.OS === 'ios'
});

var SectionList = function (_React$PureComponent) {
  babelHelpers.inherits(SectionList, _React$PureComponent);

  function SectionList() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SectionList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = SectionList.__proto__ || Object.getPrototypeOf(SectionList)).call.apply(_ref, [this].concat(args))), _this), _this._captureRef = function (ref) {
      _this._wrapperListRef = ref;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      this._wrapperListRef.scrollToLocation(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollableNode();
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var List = this.props.legacyImplementation ? MetroListView : VirtualizedSectionList;
      return React.createElement(List, babelHelpers.extends({}, this.props, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 331
        }
      }));
    }
  }]);
  return SectionList;
}(React.PureComponent);

SectionList.defaultProps = defaultProps;


module.exports = SectionList;
}, 293, null, "SectionList");
__d(/* VirtualizedSectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js';
var React = require(134    ); // 134 = React
var View = require(156   ); // 156 = View
var VirtualizedList = require(253              ); // 253 = VirtualizedList

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var VirtualizedSectionList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedSectionList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      var index = params.itemIndex + 1;
      for (var ii = 0; ii < params.sectionIndex; ii++) {
        index += this.props.sections[ii].data.length + 2;
      }
      var toIndexParams = babelHelpers.extends({}, params, {
        index: index
      });
      this._listRef.scrollToIndex(toIndexParams);
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: '_subExtractor',
    value: function _subExtractor(index) {
      var itemIndex = index;
      var defaultKeyExtractor = this.props.keyExtractor;
      for (var ii = 0; ii < this.props.sections.length; ii++) {
        var _section = this.props.sections[ii];
        var _key = _section.key || String(ii);
        itemIndex -= 1;
        if (itemIndex >= _section.data.length + 1) {
          itemIndex -= _section.data.length + 1;
        } else if (itemIndex === -1) {
          return {
            section: _section,
            key: _key + ':header',
            index: null,
            header: true,
            trailingSection: this.props.sections[ii + 1]
          };
        } else if (itemIndex === _section.data.length) {
          return {
            section: _section,
            key: _key + ':footer',
            index: null,
            header: false,
            trailingSection: this.props.sections[ii + 1]
          };
        } else {
          var _keyExtractor = _section.keyExtractor || defaultKeyExtractor;
          return {
            section: _section,
            key: _key + ':' + _keyExtractor(_section.data[itemIndex], itemIndex),
            index: itemIndex,
            leadingItem: _section.data[itemIndex - 1],
            leadingSection: this.props.sections[ii - 1],
            trailingItem: _section.data[itemIndex + 1],
            trailingSection: this.props.sections[ii + 1]
          };
        }
      }
    }
  }, {
    key: '_getSeparatorComponent',
    value: function _getSeparatorComponent(index, info) {
      info = info || this._subExtractor(index);
      if (!info) {
        return null;
      }
      var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
      var SectionSeparatorComponent = this.props.SectionSeparatorComponent;

      var isLastItemInList = index === this.state.childProps.getItemCount() - 1;
      var isLastItemInSection = info.index === info.section.data.length - 1;
      if (SectionSeparatorComponent && isLastItemInSection) {
        return SectionSeparatorComponent;
      }
      if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
        return ItemSeparatorComponent;
      }
      return null;
    }
  }, {
    key: '_computeState',
    value: function _computeState(props) {
      var offset = props.ListHeaderComponent ? 1 : 0;
      var stickyHeaderIndices = [];
      var itemCount = props.sections.reduce(function (v, section) {
        stickyHeaderIndices.push(v + offset);
        return v + section.data.length + 2;
      }, 0);

      return {
        childProps: babelHelpers.extends({}, props, {
          renderItem: this._renderItem,
          ItemSeparatorComponent: undefined,
          data: props.sections,
          getItemCount: function getItemCount() {
            return itemCount;
          },
          getItem: getItem,
          keyExtractor: this._keyExtractor,
          onViewableItemsChanged: props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
          stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined
        })
      };
    }
  }]);

  function VirtualizedSectionList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedSectionList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedSectionList.__proto__ || Object.getPrototypeOf(VirtualizedSectionList)).call(this, props, context));

    _this._keyExtractor = function (item, index) {
      var info = _this._subExtractor(index);
      return info && info.key || String(index);
    };

    _this._convertViewable = function (viewable) {
      invariant(viewable.index != null, 'Received a broken ViewToken');
      var info = _this._subExtractor(viewable.index);
      if (!info) {
        return null;
      }
      var keyExtractor = info.section.keyExtractor || _this.props.keyExtractor;
      return babelHelpers.extends({}, viewable, {
        index: info.index,
        key: keyExtractor(viewable.item, info.index),
        section: info.section
      });
    };

    _this._onViewableItemsChanged = function (_ref) {
      var viewableItems = _ref.viewableItems,
          changed = _ref.changed;

      if (_this.props.onViewableItemsChanged) {
        _this.props.onViewableItemsChanged({
          viewableItems: viewableItems.map(_this._convertViewable, _this).filter(Boolean),
          changed: changed.map(_this._convertViewable, _this).filter(Boolean)
        });
      }
    };

    _this._renderItem = function (_ref2) {
      var item = _ref2.item,
          index = _ref2.index;

      var info = _this._subExtractor(index);
      if (!info) {
        return null;
      }
      var infoIndex = info.index;
      if (infoIndex == null) {
        var _section2 = info.section;

        if (info.header === true) {
          var _renderSectionHeader = _this.props.renderSectionHeader;

          return _renderSectionHeader ? _renderSectionHeader({ section: _section2 }) : null;
        } else {
          var _renderSectionFooter = _this.props.renderSectionFooter;

          return _renderSectionFooter ? _renderSectionFooter({ section: _section2 }) : null;
        }
      } else {
        var _renderItem = info.section.renderItem || _this.props.renderItem;
        var _SeparatorComponent = _this._getSeparatorComponent(index, info);
        invariant(_renderItem, 'no renderItem!');
        return React.createElement(ItemWithSeparator, {
          SeparatorComponent: _SeparatorComponent,
          LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,
          cellKey: info.key,
          index: infoIndex,
          item: item,
          leadingItem: info.leadingItem,
          leadingSection: info.leadingSection,
          onUpdateSeparator: _this._onUpdateSeparator,
          prevCellKey: (_this._subExtractor(index - 1) || {}).key,
          ref: function ref(_ref3) {
            _this._cellRefs[info.key] = _ref3;
          },
          renderItem: _renderItem,
          section: info.section,
          trailingItem: info.trailingItem,
          trailingSection: info.trailingSection,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 278
          }
        });
      }
    };

    _this._onUpdateSeparator = function (key, newProps) {
      var ref = _this._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    };

    _this._cellRefs = {};

    _this._captureRef = function (ref) {
      _this._listRef = ref;
    };

    _this.state = _this._computeState(props);
    return _this;
  }

  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._computeState(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(VirtualizedList, babelHelpers.extends({}, this.state.childProps, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 367
        }
      }));
    }
  }]);
  return VirtualizedSectionList;
}(React.PureComponent);

VirtualizedSectionList.defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  data: []
});

var ItemWithSeparator = function (_React$Component) {
  babelHelpers.inherits(ItemWithSeparator, _React$Component);

  function ItemWithSeparator() {
    var _ref4;

    var _temp, _this2, _ret;

    babelHelpers.classCallCheck(this, ItemWithSeparator);

    for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret = (_temp = (_this2 = babelHelpers.possibleConstructorReturn(this, (_ref4 = ItemWithSeparator.__proto__ || Object.getPrototypeOf(ItemWithSeparator)).call.apply(_ref4, [this].concat(args))), _this2), _this2.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this2.props.item,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.trailingItem,
        trailingSection: _this2.props.trailingSection
      },
      leadingSeparatorProps: {
        highlighted: false,
        leadingItem: _this2.props.leadingItem,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.item,
        trailingSection: _this2.props.trailingSection
      }
    }, _this2._separators = {
      highlight: function highlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: true });
        });
      },
      unhighlight: function unhighlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: false });
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this2$props = _this2.props,
            LeadingSeparatorComponent = _this2$props.LeadingSeparatorComponent,
            cellKey = _this2$props.cellKey,
            prevCellKey = _this2$props.prevCellKey;

        if (select === 'leading' && LeadingSeparatorComponent) {
          _this2.setState(function (state) {
            return {
              leadingSeparatorProps: babelHelpers.extends({}, state.leadingSeparatorProps, newProps)
            };
          });
        } else {
          _this2.props.onUpdateSeparator(select === 'leading' && prevCellKey || cellKey, newProps);
        }
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this2, _ret);
  }

  babelHelpers.createClass(ItemWithSeparator, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this3 = this;

      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, _this3.state.separatorProps, {
            leadingItem: props.item,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.trailingItem,
            trailingSection: props.trailingSection
          }),
          leadingSeparatorProps: babelHelpers.extends({}, _this3.state.leadingSeparatorProps, {
            leadingItem: props.leadingItem,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.item,
            trailingSection: props.trailingSection
          })
        };
      });
    }
  }, {
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          LeadingSeparatorComponent = _props.LeadingSeparatorComponent,
          SeparatorComponent = _props.SeparatorComponent,
          item = _props.item,
          index = _props.index,
          section = _props.section;

      var element = this.props.renderItem({
        item: item,
        index: index,
        section: section,
        separators: this._separators
      });
      var leadingSeparator = LeadingSeparatorComponent && React.createElement(LeadingSeparatorComponent, babelHelpers.extends({}, this.state.leadingSeparatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 488
        }
      }));
      var separator = SeparatorComponent && React.createElement(SeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 491
        }
      }));
      return leadingSeparator || separator ? React.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 494
          }
        },
        leadingSeparator,
        element,
        separator
      ) : element;
    }
  }]);
  return ItemWithSeparator;
}(React.Component);

function getItem(sections, index) {
  if (!sections) {
    return null;
  }
  var itemIdx = index - 1;
  for (var ii = 0; ii < sections.length; ii++) {
    if (itemIdx === -1 || itemIdx === sections[ii].data.length) {
      return sections[ii];
    } else if (itemIdx < sections[ii].data.length) {
      return sections[ii].data[itemIdx];
    } else {
      itemIdx -= sections[ii].data.length + 2;
    }
  }
  return null;
}

module.exports = VirtualizedSectionList;
}, 294, null, "VirtualizedSectionList");
__d(/* SegmentedControlIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/SegmentedControlIOS/SegmentedControlIOS.ios.js';
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var SEGMENTED_CONTROL_REFERENCE = 'segmentedcontrol';

var SegmentedControlIOS = createReactClass({
  displayName: 'SegmentedControlIOS',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    values: PropTypes.arrayOf(PropTypes.string),

    selectedIndex: PropTypes.number,

    onValueChange: PropTypes.func,

    onChange: PropTypes.func,

    enabled: PropTypes.bool,

    tintColor: PropTypes.string,

    momentary: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      values: [],
      enabled: true
    };
  },

  _onChange: function _onChange(event) {
    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    return React.createElement(RCTSegmentedControl, babelHelpers.extends({}, this.props, {
      ref: SEGMENTED_CONTROL_REFERENCE,
      style: [styles.segmentedControl, this.props.style],
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112
      }
    }));
  }
});

var styles = StyleSheet.create({
  segmentedControl: {
    height: 28
  }
});

var RCTSegmentedControl = requireNativeComponent('RCTSegmentedControl', SegmentedControlIOS);

module.exports = SegmentedControlIOS;
}, 295, null, "SegmentedControlIOS");
__d(/* Slider */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Slider/Slider.js';
var Image = require(226    ); // 226 = Image
var ColorPropType = require(130            ); // 130 = ColorPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var ReactNativeViewAttributes = require(157                        ); // 157 = ReactNativeViewAttributes
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var Slider = createReactClass({
  displayName: 'Slider',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: ViewPropTypes.style,

    value: PropTypes.number,

    step: PropTypes.number,

    minimumValue: PropTypes.number,

    maximumValue: PropTypes.number,

    minimumTrackTintColor: ColorPropType,

    maximumTrackTintColor: ColorPropType,

    disabled: PropTypes.bool,

    trackImage: Image.propTypes.source,

    minimumTrackImage: Image.propTypes.source,

    maximumTrackImage: Image.propTypes.source,

    thumbImage: Image.propTypes.source,

    thumbTintColor: ColorPropType,

    onValueChange: PropTypes.func,

    onSlidingComplete: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      value: 0,
      minimumValue: 0,
      maximumValue: 1,
      step: 0
    };
  },

  viewConfig: {
    uiViewClassName: 'RCTSlider',
    validAttributes: babelHelpers.extends({}, ReactNativeViewAttributes.RCTView, {
      value: true
    })
  },

  render: function render() {
    var _props = this.props,
        style = _props.style,
        onValueChange = _props.onValueChange,
        onSlidingComplete = _props.onSlidingComplete,
        props = babelHelpers.objectWithoutProperties(_props, ['style', 'onValueChange', 'onSlidingComplete']);

    props.style = [styles.slider, style];

    props.onValueChange = onValueChange && function (event) {
      var userEvent = true;
      if (Platform.OS === 'android') {
        userEvent = event.nativeEvent.fromUser;
      }
      onValueChange && userEvent && onValueChange(event.nativeEvent.value);
    };

    props.onChange = props.onValueChange;

    props.onSlidingComplete = onSlidingComplete && function (event) {
      onSlidingComplete && onSlidingComplete(event.nativeEvent.value);
    };

    return React.createElement(RCTSlider, babelHelpers.extends({}, props, {
      enabled: !this.props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 191
      }
    }));
  }
});

var styles = void 0;
if (Platform.OS === 'ios') {
  styles = StyleSheet.create({
    slider: {
      height: 40
    }
  });
} else {
  styles = StyleSheet.create({
    slider: {}
  });
}

var options = {};
if (Platform.OS === 'android') {
  options = {
    nativeOnly: {
      enabled: true
    }
  };
}
var RCTSlider = requireNativeComponent('RCTSlider', Slider, options);

module.exports = Slider;
}, 296, null, "Slider");
__d(/* SnapshotViewIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/RCTTest/SnapshotViewIOS.ios.js';
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet

var _require = require(15             ), // 15 = NativeModules
    TestModule = _require.TestModule;

var UIManager = require(54         ); // 54 = UIManager
var View = require(156   ); // 156 = View

var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var SnapshotViewIOS = function (_React$Component) {
  babelHelpers.inherits(SnapshotViewIOS, _React$Component);

  function SnapshotViewIOS() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SnapshotViewIOS);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = SnapshotViewIOS.__proto__ || Object.getPrototypeOf(SnapshotViewIOS)).call.apply(_ref, [this].concat(args))), _this), _this.onDefaultAction = function (event) {
      TestModule.verifySnapshot(TestModule.markTestPassed);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SnapshotViewIOS, [{
    key: 'render',
    value: function render() {
      var testIdentifier = this.props.testIdentifier || 'test';
      var onSnapshotReady = this.props.onSnapshotReady || this.onDefaultAction;
      return React.createElement(RCTSnapshot, babelHelpers.extends({
        style: style.snapshot
      }, this.props, {
        onSnapshotReady: onSnapshotReady,
        testIdentifier: testIdentifier,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      }));
    }
  }]);
  return SnapshotViewIOS;
}(React.Component);

SnapshotViewIOS.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  onSnapshotReady: PropTypes.func,

  testIdentifier: PropTypes.string
});


var style = StyleSheet.create({
  snapshot: {
    flex: 1
  }
});

var RCTSnapshot = UIManager.RCTSnapshot ? requireNativeComponent('RCTSnapshot', SnapshotViewIOS) : View;

module.exports = SnapshotViewIOS;
}, 297, null, "SnapshotViewIOS");
__d(/* Switch */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/Switch/Switch.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var createReactClass = require(168                 ); // 168 = create-react-class
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var Switch = createReactClass({
  displayName: 'Switch',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onValueChange: PropTypes.func,

    testID: PropTypes.string,

    tintColor: ColorPropType,

    onTintColor: ColorPropType,

    thumbTintColor: ColorPropType
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctSwitch: {},
  _onChange: function _onChange(event) {
    if (Platform.OS === 'android') {
      this._rctSwitch.setNativeProps({ on: this.props.value });
    } else {
      this._rctSwitch.setNativeProps({ value: this.props.value });
    }

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    if (Platform.OS === 'android') {
      props.enabled = !this.props.disabled;
      props.on = this.props.value;
      props.style = this.props.style;
      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;
    } else if (Platform.OS === 'ios') {
      props.style = [styles.rctSwitchIOS, this.props.style];
    }
    return React.createElement(RCTSwitch, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctSwitch = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 115
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctSwitchIOS: {
    height: 31,
    width: 51
  }
});

if (Platform.OS === 'android') {
  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {
    nativeOnly: {
      onChange: true,
      on: true,
      enabled: true,
      trackTintColor: true
    }
  });
} else {
  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {
    nativeOnly: {
      onChange: true
    }
  });
}

module.exports = Switch;
}, 298, null, "Switch");
__d(/* StatusBar */function(global, require, module, exports) {
'use strict';

var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ColorPropType = require(130            ); // 130 = ColorPropType
var Platform = require(53        ); // 53 = Platform

var processColor = require(118           ); // 118 = processColor

var StatusBarManager = require(15             ).StatusBarManager; // 15 = NativeModules

function mergePropsStack(propsStack, defaultValues) {
  return propsStack.reduce(function (prev, cur) {
    for (var prop in cur) {
      if (cur[prop] != null) {
        prev[prop] = cur[prop];
      }
    }
    return prev;
  }, babelHelpers.extends({}, defaultValues));
}

function createStackEntry(props) {
  return {
    backgroundColor: props.backgroundColor != null ? {
      value: props.backgroundColor,
      animated: props.animated
    } : null,
    barStyle: props.barStyle != null ? {
      value: props.barStyle,
      animated: props.animated
    } : null,
    translucent: props.translucent,
    hidden: props.hidden != null ? {
      value: props.hidden,
      animated: props.animated,
      transition: props.showHideTransition
    } : null,
    networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
  };
}

var StatusBar = function (_React$Component) {
  babelHelpers.inherits(StatusBar, _React$Component);

  function StatusBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, StatusBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = StatusBar.__proto__ || Object.getPrototypeOf(StatusBar)).call.apply(_ref, [this].concat(args))), _this), _this._stackEntry = null, _this._updatePropsStack = function () {
      clearImmediate(StatusBar._updateImmediate);
      StatusBar._updateImmediate = setImmediate(function () {
        var oldProps = StatusBar._currentValues;
        var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);

        if (Platform.OS === 'ios') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
          }

          if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
            StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
          }
        } else if (Platform.OS === 'android') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value);
          }
          if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
            StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value);
          }
          if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
            StatusBarManager.setTranslucent(mergedProps.translucent);
          }
        }

        StatusBar._currentValues = mergedProps;
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(StatusBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack.push(this._stackEntry);
      this._updatePropsStack();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      StatusBar._propsStack.splice(index, 1);

      this._updatePropsStack();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack[index] = this._stackEntry;

      this._updatePropsStack();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'setHidden',
    value: function setHidden(hidden, animation) {
      animation = animation || 'none';
      StatusBar._defaultProps.hidden.value = hidden;
      if (Platform.OS === 'ios') {
        StatusBarManager.setHidden(hidden, animation);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setHidden(hidden);
      }
    }
  }, {
    key: 'setBarStyle',
    value: function setBarStyle(style, animated) {
      animated = animated || false;
      StatusBar._defaultProps.barStyle.value = style;
      if (Platform.OS === 'ios') {
        StatusBarManager.setStyle(style, animated);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setStyle(style);
      }
    }
  }, {
    key: 'setNetworkActivityIndicatorVisible',
    value: function setNetworkActivityIndicatorVisible(visible) {
      if (Platform.OS !== 'ios') {
        console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
        return;
      }
      StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
      StatusBarManager.setNetworkActivityIndicatorVisible(visible);
    }
  }, {
    key: 'setBackgroundColor',
    value: function setBackgroundColor(color, animated) {
      if (Platform.OS !== 'android') {
        console.warn('`setBackgroundColor` is only available on Android');
        return;
      }
      animated = animated || false;
      StatusBar._defaultProps.backgroundColor.value = color;
      StatusBarManager.setColor(processColor(color), animated);
    }
  }, {
    key: 'setTranslucent',
    value: function setTranslucent(translucent) {
      if (Platform.OS !== 'android') {
        console.warn('`setTranslucent` is only available on Android');
        return;
      }
      StatusBar._defaultProps.translucent = translucent;
      StatusBarManager.setTranslucent(translucent);
    }
  }]);
  return StatusBar;
}(React.Component);

StatusBar._propsStack = [];
StatusBar._defaultProps = createStackEntry({
  animated: false,
  showHideTransition: 'fade',
  backgroundColor: 'black',
  barStyle: 'default',
  translucent: false,
  hidden: false,
  networkActivityIndicatorVisible: false
});
StatusBar._updateImmediate = null;
StatusBar._currentValues = null;
StatusBar.currentHeight = StatusBarManager.HEIGHT;
StatusBar.propTypes = {
  hidden: PropTypes.bool,

  animated: PropTypes.bool,

  backgroundColor: ColorPropType,

  translucent: PropTypes.bool,

  barStyle: PropTypes.oneOf(['default', 'light-content', 'dark-content']),

  networkActivityIndicatorVisible: PropTypes.bool,

  showHideTransition: PropTypes.oneOf(['fade', 'slide'])
};
StatusBar.defaultProps = {
  animated: false,
  showHideTransition: 'fade'
};


module.exports = StatusBar;
}, 299, null, "StatusBar");
__d(/* SwipeableFlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js';


var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var SwipeableRow = require(301           ); // 301 = SwipeableRow
var FlatList = require(245       ); // 245 = FlatList

var SwipeableFlatList = function (_React$Component) {
  babelHelpers.inherits(SwipeableFlatList, _React$Component);

  function SwipeableFlatList(props, context) {
    babelHelpers.classCallCheck(this, SwipeableFlatList);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableFlatList.__proto__ || Object.getPrototypeOf(SwipeableFlatList)).call(this, props, context));

    _this._flatListRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.state.openRowKey) {
        _this.setState({
          openRowKey: null
        });
      }

      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderItem = function (info) {
      var slideoutView = _this.props.renderQuickActions(info);
      var key = _this.props.keyExtractor(info.item, info.index);

      if (!slideoutView) {
        return _this.props.renderItem(info);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = true;
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: key === _this.state.openRowKey,
          maxSwipeDistance: _this._getMaxSwipeDistance(info),
          onOpen: function onOpen() {
            return _this._onOpen(key);
          },
          onClose: function onClose() {
            return _this._onClose(key);
          },
          shouldBounceOnMount: shouldBounceOnMount,
          onSwipeEnd: _this._setListViewScrollable,
          onSwipeStart: _this._setListViewNotScrollable, __source: {
            fileName: _jsxFileName,
            lineNumber: 137
          }
        },
        _this.props.renderItem(info)
      );
    };

    _this._setListViewScrollable = function () {
      _this._setListViewScrollableTo(true);
    };

    _this._setListViewNotScrollable = function () {
      _this._setListViewScrollableTo(false);
    };

    _this.state = {
      openRowKey: null
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    return _this;
  }

  babelHelpers.createClass(SwipeableFlatList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(FlatList, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._flatListRef = _ref;
        },
        onScroll: this._onScroll,
        renderItem: this._renderItem,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }));
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(info) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(info);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_setListViewScrollableTo',
    value: function _setListViewScrollableTo(value) {
      if (this._flatListRef) {
        this._flatListRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(key) {
      this.setState({
        openRowKey: key
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(key) {
      this.setState({
        openRowKey: null
      });
    }
  }]);
  return SwipeableFlatList;
}(React.Component);

SwipeableFlatList.propTypes = babelHelpers.extends({}, FlatList.propTypes, {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderQuickActions: PropTypes.func.isRequired
});
SwipeableFlatList.defaultProps = babelHelpers.extends({}, FlatList.defaultProps, {
  bounceFirstRowOnMount: true,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
});


module.exports = SwipeableFlatList;
}, 300, null, "SwipeableFlatList");
__d(/* SwipeableRow */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableRow.js';
var Animated = require(198       ); // 198 = Animated
var I18nManager = require(286          ); // 286 = I18nManager
var PanResponder = require(302           ); // 302 = PanResponder
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var View = require(156   ); // 156 = View

var createReactClass = require(168                 ); // 168 = create-react-class

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction

var IS_RTL = I18nManager.isRTL;

var CLOSED_LEFT_POSITION = 0;

var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;

var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;

var SLOW_SPEED_SWIPE_FACTOR = 4;

var SWIPE_DURATION = 300;

var ON_MOUNT_BOUNCE_DELAY = 700;
var ON_MOUNT_BOUNCE_DURATION = 400;

var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;

var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

var SwipeableRow = createReactClass({
  displayName: 'SwipeableRow',
  _panResponder: {},
  _previousLeft: CLOSED_LEFT_POSITION,

  mixins: [TimerMixin],

  propTypes: {
    children: PropTypes.any,
    isOpen: PropTypes.bool,
    preventSwipeRight: PropTypes.bool,
    maxSwipeDistance: PropTypes.number.isRequired,
    onOpen: PropTypes.func.isRequired,
    onClose: PropTypes.func.isRequired,
    onSwipeEnd: PropTypes.func.isRequired,
    onSwipeStart: PropTypes.func.isRequired,

    shouldBounceOnMount: PropTypes.bool,

    slideoutView: PropTypes.node.isRequired,

    swipeThreshold: PropTypes.number.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      currentLeft: new Animated.Value(this._previousLeft),

      isSwipeableViewRendered: false,
      rowHeight: null
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      preventSwipeRight: false,
      maxSwipeDistance: 0,
      onOpen: emptyFunction,
      onClose: emptyFunction,
      onSwipeEnd: emptyFunction,
      onSwipeStart: emptyFunction,
      swipeThreshold: 30
    };
  },
  componentWillMount: function componentWillMount() {
    this._panResponder = PanResponder.create({
      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,
      onPanResponderGrant: this._handlePanResponderGrant,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderRelease: this._handlePanResponderEnd,
      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,
      onPanResponderTerminate: this._handlePanResponderEnd,
      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
        return false;
      }
    });
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.props.shouldBounceOnMount) {
      this.setTimeout(function () {
        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
      }, ON_MOUNT_BOUNCE_DELAY);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.isOpen && !nextProps.isOpen) {
      this._animateToClosedPosition();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
      return false;
    }

    return true;
  },
  render: function render() {
    var slideOutView = void 0;
    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
      slideOutView = React.createElement(
        View,
        { style: [styles.slideOutContainer, { height: this.state.rowHeight }], __source: {
            fileName: _jsxFileName,
            lineNumber: 176
          }
        },
        this.props.slideoutView
      );
    }

    var swipeableView = React.createElement(
      Animated.View,
      {
        onLayout: this._onSwipeableViewLayout,
        style: { transform: [{ translateX: this.state.currentLeft }] }, __source: {
          fileName: _jsxFileName,
          lineNumber: 187
        }
      },
      this.props.children
    );

    return React.createElement(
      View,
      babelHelpers.extends({}, this._panResponder.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 195
        }
      }),
      slideOutView,
      swipeableView
    );
  },
  close: function close() {
    this.props.onClose();
    this._animateToClosedPosition();
  },
  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {
    this.setState({
      isSwipeableViewRendered: true,
      rowHeight: event.nativeEvent.layout.height
    });
  },
  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
    return gestureState.dy < 10 && this._isValidSwipe(gestureState);
  },
  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},
  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {
    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
      return;
    }

    this.props.onSwipeStart();

    if (this._isSwipingRightFromClosed(gestureState)) {
      this._swipeSlowSpeed(gestureState);
    } else {
      this._swipeFullSpeed(gestureState);
    }
  },
  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
  },
  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
  },
  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
  },
  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
  },
  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {
    return false;
  },
  _animateTo: function _animateTo(toValue) {
    var _this2 = this;

    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;

    Animated.timing(this.state.currentLeft, {
      duration: duration,
      toValue: toValue,
      useNativeDriver: true
    }).start(function () {
      _this2._previousLeft = toValue;
      callback();
    });
  },
  _animateToOpenPosition: function _animateToOpenPosition() {
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance);
  },
  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {
    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;

    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance, duration);
  },
  _animateToClosedPosition: function _animateToClosedPosition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

    this._animateTo(CLOSED_LEFT_POSITION, duration);
  },
  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {
    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
  },
  _animateBounceBack: function _animateBounceBack(duration) {
    var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;
    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
  },
  _isValidSwipe: function _isValidSwipe(gestureState) {
    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {
      return false;
    }

    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
  },
  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {
    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
  },
  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {
    var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;
    if (this._isSwipingRightFromClosed(gestureState)) {
      this.props.onOpen();
      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
    } else if (this._shouldAnimateRemainder(gestureState)) {
      if (horizontalDistance < 0) {
        this.props.onOpen();
        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
      } else {
        this.props.onClose();
        this._animateToClosedPosition();
      }
    } else {
      if (this._previousLeft === CLOSED_LEFT_POSITION) {
        this._animateToClosedPosition();
      } else {
        this._animateToOpenPosition();
      }
    }

    this.props.onSwipeEnd();
  }
});

var styles = StyleSheet.create({
  slideOutContainer: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    top: 0
  }
});

module.exports = SwipeableRow;
}, 301, null, "SwipeableRow");
__d(/* PanResponder */function(global, require, module, exports) {

'use strict';

var InteractionManager = require(206                   ); // 206 = ./InteractionManager
var TouchHistoryMath = require(303               ); // 303 = TouchHistoryMath

var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX = TouchHistoryMath.currentCentroidX;
var currentCentroidY = TouchHistoryMath.currentCentroidY;

var PanResponder = {

  _initializeGestureState: function _initializeGestureState(gestureState) {
    gestureState.moveX = 0;
    gestureState.moveY = 0;
    gestureState.x0 = 0;
    gestureState.y0 = 0;
    gestureState.dx = 0;
    gestureState.dy = 0;
    gestureState.vx = 0;
    gestureState.vy = 0;
    gestureState.numberActiveTouches = 0;

    gestureState._accountsForMovesUpTo = 0;
  },

  _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    var movedAfter = gestureState._accountsForMovesUpTo;
    var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var nextDX = gestureState.dx + (x - prevX);
    var nextDY = gestureState.dy + (y - prevY);

    var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
    gestureState.vx = (nextDX - gestureState.dx) / dt;
    gestureState.vy = (nextDY - gestureState.dy) / dt;

    gestureState.dx = nextDX;
    gestureState.dy = nextDY;
    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
  },

  create: function create(config) {
    var interactionState = {
      handle: null
    };
    var gestureState = {
      stateID: Math.random()
    };
    PanResponder._initializeGestureState(gestureState);
    var panHandlers = {
      onStartShouldSetResponder: function onStartShouldSetResponder(e) {
        return config.onStartShouldSetPanResponder === undefined ? false : config.onStartShouldSetPanResponder(e, gestureState);
      },
      onMoveShouldSetResponder: function onMoveShouldSetResponder(e) {
        return config.onMoveShouldSetPanResponder === undefined ? false : config.onMoveShouldSetPanResponder(e, gestureState);
      },
      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(e) {
        if (e.nativeEvent.touches.length === 1) {
          PanResponder._initializeGestureState(gestureState);
        }
        gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
        return config.onStartShouldSetPanResponderCapture !== undefined ? config.onStartShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return false;
        }
        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onResponderGrant: function onResponderGrant(e) {
        if (!interactionState.handle) {
          interactionState.handle = InteractionManager.createInteractionHandle();
        }
        gestureState.x0 = currentCentroidX(e.touchHistory);
        gestureState.y0 = currentCentroidY(e.touchHistory);
        gestureState.dx = 0;
        gestureState.dy = 0;
        if (config.onPanResponderGrant) {
          config.onPanResponderGrant(e, gestureState);
        }

        return config.onShouldBlockNativeResponder === undefined ? true : config.onShouldBlockNativeResponder();
      },

      onResponderReject: function onResponderReject(e) {
        clearInteractionHandle(interactionState, config.onPanResponderReject, e, gestureState);
      },

      onResponderRelease: function onResponderRelease(e) {
        clearInteractionHandle(interactionState, config.onPanResponderRelease, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderStart: function onResponderStart(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        if (config.onPanResponderStart) {
          config.onPanResponderStart(e, gestureState);
        }
      },

      onResponderMove: function onResponderMove(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return;
        }

        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        if (config.onPanResponderMove) {
          config.onPanResponderMove(e, gestureState);
        }
      },

      onResponderEnd: function onResponderEnd(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        clearInteractionHandle(interactionState, config.onPanResponderEnd, e, gestureState);
      },

      onResponderTerminate: function onResponderTerminate(e) {
        clearInteractionHandle(interactionState, config.onPanResponderTerminate, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderTerminationRequest: function onResponderTerminationRequest(e) {
        return config.onPanResponderTerminationRequest === undefined ? true : config.onPanResponderTerminationRequest(e, gestureState);
      }
    };
    return {
      panHandlers: panHandlers,
      getInteractionHandle: function getInteractionHandle() {
        return interactionState.handle;
      }
    };
  }
};

function clearInteractionHandle(interactionState, callback, event, gestureState) {
  if (interactionState.handle) {
    InteractionManager.clearInteractionHandle(interactionState.handle);
    interactionState.handle = null;
  }
  if (callback) {
    callback(event, gestureState);
  }
}

module.exports = PanResponder;
}, 302, null, "PanResponder");
__d(/* TouchHistoryMath */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.TouchHistoryMath;
}, 303, null, "TouchHistoryMath");
__d(/* SwipeableListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableListView.js';
var ListView = require(247       ); // 247 = ListView
var PropTypes = require(144         ); // 144 = prop-types
var React = require(134    ); // 134 = React
var SwipeableListViewDataSource = require(305                          ); // 305 = SwipeableListViewDataSource
var SwipeableRow = require(301           ); // 301 = SwipeableRow

var SwipeableListView = function (_React$Component) {
  babelHelpers.inherits(SwipeableListView, _React$Component);
  babelHelpers.createClass(SwipeableListView, null, [{
    key: 'getNewDataSource',
    value: function getNewDataSource() {
      return new SwipeableListViewDataSource({
        getRowData: function getRowData(data, sectionID, rowID) {
          return data[sectionID][rowID];
        },
        getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
          return data[sectionID];
        },
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1 !== row2;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
          return s1 !== s2;
        }
      });
    }
  }]);

  function SwipeableListView(props, context) {
    babelHelpers.classCallCheck(this, SwipeableListView);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

    _this._listViewRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.props.dataSource.getOpenRowID()) {
        _this.setState({
          dataSource: _this.state.dataSource.setOpenRowID(null)
        });
      }
      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderRow = function (rowData, sectionID, rowID) {
      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

      if (!slideoutView) {
        return _this.props.renderRow(rowData, sectionID, rowID);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount, __source: {
            fileName: _jsxFileName,
            lineNumber: 191
          }
        },
        _this.props.renderRow(rowData, sectionID, rowID)
      );
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    _this.state = {
      dataSource: _this.props.dataSource
    };
    return _this;
  }

  babelHelpers.createClass(SwipeableListView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
        this.setState({
          dataSource: nextProps.dataSource
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._listViewRef = _ref;
        },
        dataSource: this.state.dataSource.getDataSource(),
        onScroll: this._onScroll,
        renderRow: this._renderRow,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121
        }
      }));
    }
  }, {
    key: '_setListViewScrollable',
    value: function _setListViewScrollable(value) {
      if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
        this._listViewRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
        return this._listViewRef.getScrollResponder();
      }
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(rowData, sectionID, rowID);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(rowID)
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(null)
      });
    }
  }]);
  return SwipeableListView;
}(React.Component);

SwipeableListView.propTypes = {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderRow: PropTypes.func.isRequired,

  renderQuickActions: PropTypes.func.isRequired
};
SwipeableListView.defaultProps = {
  bounceFirstRowOnMount: false,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
};


module.exports = SwipeableListView;
}, 304, null, "SwipeableListView");
__d(/* SwipeableListViewDataSource */function(global, require, module, exports) {
'use strict';

var ListViewDataSource = require(248                 ); // 248 = ListViewDataSource

var SwipeableListViewDataSource = function () {
  function SwipeableListViewDataSource(params) {
    var _this = this;

    babelHelpers.classCallCheck(this, SwipeableListViewDataSource);

    this._dataSource = new ListViewDataSource({
      getRowData: params.getRowData,
      getSectionHeaderData: params.getSectionHeaderData,
      rowHasChanged: function rowHasChanged(row1, row2) {
        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
      },
      sectionHeaderHasChanged: params.sectionHeaderHasChanged
    });
  }

  babelHelpers.createClass(SwipeableListViewDataSource, [{
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);

      this._dataBlob = dataBlob;
      this.rowIdentities = this._dataSource.rowIdentities;
      this.sectionIdentities = this._dataSource.sectionIdentities;

      return this;
    }
  }, {
    key: 'getDataSource',
    value: function getDataSource() {
      return this._dataSource;
    }
  }, {
    key: 'getOpenRowID',
    value: function getOpenRowID() {
      return this._openRowID;
    }
  }, {
    key: 'getFirstRowID',
    value: function getFirstRowID() {
      if (this.rowIdentities) {
        return this.rowIdentities[0] && this.rowIdentities[0][0];
      }
      return Object.keys(this._dataBlob)[0];
    }
  }, {
    key: 'setOpenRowID',
    value: function setOpenRowID(rowID) {
      this._previousOpenRowID = this._openRowID;
      this._openRowID = rowID;

      this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return this;
    }
  }]);
  return SwipeableListViewDataSource;
}();

module.exports = SwipeableListViewDataSource;
}, 305, null, "SwipeableListViewDataSource");
__d(/* TabBarIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.ios.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StyleSheet = require(135         ); // 135 = StyleSheet
var TabBarItemIOS = require(307            ); // 307 = TabBarItemIOS
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var TabBarIOS = function (_React$Component) {
  babelHelpers.inherits(TabBarIOS, _React$Component);

  function TabBarIOS() {
    babelHelpers.classCallCheck(this, TabBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (TabBarIOS.__proto__ || Object.getPrototypeOf(TabBarIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBarIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        RCTTabBar,
        {
          style: [styles.tabGroup, this.props.style],
          unselectedTintColor: this.props.unselectedTintColor,
          unselectedItemTintColor: this.props.unselectedItemTintColor,
          tintColor: this.props.tintColor,
          barTintColor: this.props.barTintColor,
          barStyle: this.props.barStyle,
          itemPositioning: this.props.itemPositioning,
          translucent: this.props.translucent !== false, __source: {
            fileName: _jsxFileName,
            lineNumber: 79
          }
        },
        this.props.children
      );
    }
  }]);
  return TabBarIOS;
}(React.Component);

TabBarIOS.Item = TabBarItemIOS;
TabBarIOS.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: ViewPropTypes.style,

  unselectedTintColor: ColorPropType,

  tintColor: ColorPropType,

  unselectedItemTintColor: ColorPropType,

  barTintColor: ColorPropType,

  barStyle: PropTypes.oneOf(['default', 'black']),

  translucent: PropTypes.bool,

  itemPositioning: PropTypes.oneOf(['fill', 'center', 'auto'])
});


var styles = StyleSheet.create({
  tabGroup: {
    flex: 1
  }
});

var RCTTabBar = requireNativeComponent('RCTTabBar', TabBarIOS);

module.exports = TabBarIOS;
}, 306, null, "TabBarIOS");
__d(/* TabBarItemIOS */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var Image = require(226    ); // 226 = Image
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var StaticContainer = require(288                    ); // 288 = StaticContainer.react
var StyleSheet = require(135         ); // 135 = StyleSheet
var View = require(156   ); // 156 = View

var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var TabBarItemIOS = function (_React$Component) {
  babelHelpers.inherits(TabBarItemIOS, _React$Component);

  function TabBarItemIOS() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarItemIOS);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarItemIOS.__proto__ || Object.getPrototypeOf(TabBarItemIOS)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hasBeenSelected: false
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarItemIOS, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.selected) {
        this.setState({ hasBeenSelected: true });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.hasBeenSelected || nextProps.selected) {
        this.setState({ hasBeenSelected: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          children = _props.children,
          props = babelHelpers.objectWithoutProperties(_props, ['style', 'children']);

      if (this.state.hasBeenSelected) {
        var tabContents = React.createElement(
          StaticContainer,
          { shouldUpdate: this.props.selected, __source: {
              fileName: _jsxFileName,
              lineNumber: 124
            }
          },
          children
        );
      } else {
        var tabContents = React.createElement(View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 128
          }
        });
      }

      return React.createElement(
        RCTTabBarItem,
        babelHelpers.extends({}, props, {
          style: [styles.tab, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 132
          }
        }),
        tabContents
      );
    }
  }]);
  return TabBarItemIOS;
}(React.Component);

TabBarItemIOS.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  badgeColor: ColorPropType,

  systemIcon: PropTypes.oneOf(['bookmarks', 'contacts', 'downloads', 'favorites', 'featured', 'history', 'more', 'most-recent', 'most-viewed', 'recents', 'search', 'top-rated']),

  icon: Image.propTypes.source,

  selectedIcon: Image.propTypes.source,

  onPress: PropTypes.func,

  renderAsOriginal: PropTypes.bool,

  selected: PropTypes.bool,

  style: ViewPropTypes.style,

  title: PropTypes.string,

  isTVSelectable: PropTypes.bool
});


var styles = StyleSheet.create({
  tab: {
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  }
});

var RCTTabBarItem = requireNativeComponent('RCTTabBarItem', TabBarItemIOS);

module.exports = TabBarItemIOS;
}, 307, null, "TabBarItemIOS");
__d(/* TextInput */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/TextInput/TextInput.js';
var ColorPropType = require(130            ); // 130 = ColorPropType
var DocumentSelectionState = require(309                     ); // 309 = DocumentSelectionState
var EventEmitter = require(88            ); // 88 = EventEmitter
var NativeMethodsMixin = require(131                 ); // 131 = NativeMethodsMixin
var Platform = require(53        ); // 53 = Platform
var React = require(134    ); // 134 = React
var createReactClass = require(168                 ); // 168 = create-react-class
var PropTypes = require(144         ); // 144 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var TextInputState = require(52              ); // 52 = TextInputState

var TimerMixin = require(239                ); // 239 = react-timer-mixin
var TouchableWithoutFeedback = require(240                       ); // 240 = TouchableWithoutFeedback
var UIManager = require(54         ); // 54 = UIManager
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent

var warning = require(23                ); // 23 = fbjs/lib/warning

var onlyMultiline = {
  onTextInput: true,
  children: true
};

if (Platform.OS === 'android') {
  var AndroidTextInput = requireNativeComponent('AndroidTextInput', null);
} else if (Platform.OS === 'ios') {
  var RCTTextView = requireNativeComponent('RCTTextView', null);
  var RCTTextField = requireNativeComponent('RCTTextField', null);
}

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var TextInput = createReactClass({
  displayName: 'TextInput',
  statics: {
    State: TextInputState
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),

    autoCorrect: PropTypes.bool,

    spellCheck: PropTypes.bool,

    autoFocus: PropTypes.bool,

    autoGrow: PropTypes.bool,

    allowFontScaling: PropTypes.bool,

    editable: PropTypes.bool,

    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),

    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),

    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),

    returnKeyLabel: PropTypes.string,

    maxLength: PropTypes.number,

    maxHeight: PropTypes.number,

    numberOfLines: PropTypes.number,

    disableFullscreenUI: PropTypes.bool,

    enablesReturnKeyAutomatically: PropTypes.bool,

    multiline: PropTypes.bool,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onBlur: PropTypes.func,

    onFocus: PropTypes.func,

    onChange: PropTypes.func,

    onChangeText: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    onEndEditing: PropTypes.func,

    onSelectionChange: PropTypes.func,

    onSubmitEditing: PropTypes.func,

    onKeyPress: PropTypes.func,

    onLayout: PropTypes.func,

    onScroll: PropTypes.func,

    placeholder: PropTypes.string,

    placeholderTextColor: ColorPropType,

    secureTextEntry: PropTypes.bool,

    selectionColor: ColorPropType,

    selectionState: PropTypes.instanceOf(DocumentSelectionState),

    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),

    value: PropTypes.string,

    defaultValue: PropTypes.string,

    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),

    clearTextOnFocus: PropTypes.bool,

    selectTextOnFocus: PropTypes.bool,

    blurOnSubmit: PropTypes.bool,

    style: Text.propTypes.style,

    underlineColorAndroid: ColorPropType,

    inlineImageLeft: PropTypes.string,

    inlineImagePadding: PropTypes.number,

    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),

    caretHidden: PropTypes.bool
  }),
  getDefaultProps: function getDefaultProps() {
    return {
      allowFontScaling: true
    };
  },

  mixins: [NativeMethodsMixin, TimerMixin],

  getInitialState: function getInitialState() {
    return { layoutHeight: this._layoutHeight };
  },

  isFocused: function isFocused() {
    return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
  },

  contextTypes: {
    onFocusRequested: PropTypes.func,
    focusEmitter: PropTypes.instanceOf(EventEmitter)
  },

  _inputRef: undefined,
  _focusSubscription: undefined,
  _lastNativeText: undefined,
  _lastNativeSelection: undefined,
  _layoutHeight: -1,

  componentDidMount: function componentDidMount() {
    var _this = this;

    this._lastNativeText = this.props.value;
    if (!this.context.focusEmitter) {
      if (this.props.autoFocus) {
        this.requestAnimationFrame(this.focus);
      }
      return;
    }
    this._focusSubscription = this.context.focusEmitter.addListener('focus', function (el) {
      if (_this === el) {
        _this.requestAnimationFrame(_this.focus);
      } else if (_this.isFocused()) {
        _this.blur();
      }
    });
    if (this.props.autoFocus) {
      this.context.onFocusRequested(this);
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._focusSubscription && this._focusSubscription.remove();
    if (this.isFocused()) {
      this.blur();
    }
  },

  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },

  clear: function clear() {
    this.setNativeProps({ text: '' });
  },

  render: function render() {
    if (Platform.OS === 'ios') {
      return this._renderIOS();
    } else if (Platform.OS === 'android') {
      return this._renderAndroid();
    }
  },

  _getText: function _getText() {
    return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
  },

  _setNativeRef: function _setNativeRef(ref) {
    this._inputRef = ref;
  },

  _renderIOS: function _renderIOS() {
    var textContainer;

    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    if (!props.multiline) {
      if (__DEV__) {
        for (var propKey in onlyMultiline) {
          if (props[propKey]) {
            var error = new Error('TextInput prop `' + propKey + '` is only supported with multiline.');
            warning(false, '%s', error.stack);
          }
        }
      }
      textContainer = React.createElement(RCTTextField, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 727
        }
      }));
    } else {
      var children = props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(props.value && childCount), 'Cannot specify both value and children.');
      if (childCount >= 1) {
        children = React.createElement(
          Text,
          { style: props.style, allowFontScaling: props.allowFontScaling, __source: {
              fileName: _jsxFileName,
              lineNumber: 746
            }
          },
          children
        );
      }
      if (props.inputView) {
        children = [children, props.inputView];
      }
      props.style.unshift(styles.multilineInput);
      textContainer = React.createElement(RCTTextView, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        children: children,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 753
        }
      }));
    }
    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityTraits: props.accessibilityTraits,
        nativeID: this.props.nativeID,
        testID: props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 770
        }
      },
      textContainer
    );
  },

  _renderAndroid: function _renderAndroid() {
    var props = babelHelpers.extends({}, this.props);
    props.style = this.props.style;
    if (this.state.layoutHeight >= 0) {
      props.style = [props.style, { height: this.state.layoutHeight }];
    }
    props.autoCapitalize = UIManager.AndroidTextInput.Constants.AutoCapitalizationType[props.autoCapitalize || 'sentences'];

    var children = this.props.children;
    var childCount = 0;
    React.Children.forEach(children, function () {
      return ++childCount;
    });
    invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');
    if (childCount > 1) {
      children = React.createElement(
        Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 805
          }
        },
        children
      );
    }
    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }
    var textContainer = React.createElement(AndroidTextInput, babelHelpers.extends({
      ref: this._setNativeRef
    }, props, {
      mostRecentEventCount: 0,
      onFocus: this._onFocus,
      onBlur: this._onBlur,
      onChange: this._onChange,
      onContentSizeChange: this._onContentSizeChange,
      onSelectionChange: this._onSelectionChange,
      onTextInput: this._onTextInput,
      text: this._getText(),
      children: children,
      disableFullscreenUI: this.props.disableFullscreenUI,
      textBreakStrategy: this.props.textBreakStrategy,
      onScroll: this._onScroll,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 811
      }
    }));

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: this._onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        nativeID: this.props.nativeID,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 829
        }
      },
      textContainer
    );
  },

  _onFocus: function _onFocus(event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.focus();
    }
  },

  _onPress: function _onPress(event) {
    if (this.props.editable || this.props.editable === undefined) {
      this.focus();
    }
  },

  _onChange: function _onChange(event) {
    if (this._inputRef) {
      this._inputRef.setNativeProps({
        mostRecentEventCount: event.nativeEvent.eventCount
      });
    }

    var text = event.nativeEvent.text;
    this.props.onChange && this.props.onChange(event);
    this.props.onChangeText && this.props.onChangeText(text);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeText = text;
    this.forceUpdate();
  },

  _onContentSizeChange: function _onContentSizeChange(event) {
    var contentHeight = event.nativeEvent.contentSize.height;
    if (this.props.autoGrow) {
      if (this.props.maxHeight) {
        contentHeight = Math.min(this.props.maxHeight, contentHeight);
      }
      this.setState({ layoutHeight: Math.max(this._layoutHeight, contentHeight) });
    }

    this.props.onContentSizeChange && this.props.onContentSizeChange(event);
  },

  _onLayout: function _onLayout(event) {
    var height = event.nativeEvent.layout.height;
    if (height) {
      this._layoutHeight = event.nativeEvent.layout.height;
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _onSelectionChange: function _onSelectionChange(event) {
    this.props.onSelectionChange && this.props.onSelectionChange(event);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeSelection = event.nativeEvent.selection;

    if (this.props.selection || this.props.selectionState) {
      this.forceUpdate();
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var nativeProps = {};

    if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
      nativeProps.text = this.props.value;
    }

    var selection = this.props.selection;

    if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
      nativeProps.selection = this.props.selection;
    }

    if (Object.keys(nativeProps).length > 0 && this._inputRef) {
      this._inputRef.setNativeProps(nativeProps);
    }

    if (this.props.selectionState && selection) {
      this.props.selectionState.update(selection.start, selection.end);
    }
  },

  _onBlur: function _onBlur(event) {
    this.blur();
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.blur();
    }
  },

  _onTextInput: function _onTextInput(event) {
    this.props.onTextInput && this.props.onTextInput(event);
  },

  _onScroll: function _onScroll(event) {
    this.props.onScroll && this.props.onScroll(event);
  }
});

var styles = StyleSheet.create({
  multilineInput: {
    paddingTop: 5
  }
});

module.exports = TextInput;
}, 308, null, "TextInput");
__d(/* DocumentSelectionState */function(global, require, module, exports) {

'use strict';

var mixInEventEmitter = require(310                ); // 310 = mixInEventEmitter

var DocumentSelectionState = function () {
  function DocumentSelectionState(anchor, focus) {
    babelHelpers.classCallCheck(this, DocumentSelectionState);

    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }

  babelHelpers.createClass(DocumentSelectionState, [{
    key: 'update',
    value: function update(anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    }
  }, {
    key: 'constrainLength',
    value: function constrainLength(maxLength) {
      this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this._hasFocus;
    }
  }, {
    key: 'isCollapsed',
    value: function isCollapsed() {
      return this._anchorOffset === this._focusOffset;
    }
  }, {
    key: 'isBackward',
    value: function isBackward() {
      return this._anchorOffset > this._focusOffset;
    }
  }, {
    key: 'getAnchorOffset',
    value: function getAnchorOffset() {
      return this._hasFocus ? this._anchorOffset : null;
    }
  }, {
    key: 'getFocusOffset',
    value: function getFocusOffset() {
      return this._hasFocus ? this._focusOffset : null;
    }
  }, {
    key: 'getStartOffset',
    value: function getStartOffset() {
      return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'getEndOffset',
    value: function getEndOffset() {
      return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'overlaps',
    value: function overlaps(start, end) {
      return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
    }
  }]);
  return DocumentSelectionState;
}();

mixInEventEmitter(DocumentSelectionState, {
  'blur': true,
  'focus': true,
  'update': true
});

module.exports = DocumentSelectionState;
}, 309, null, "DocumentSelectionState");
__d(/* mixInEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(88            ); // 88 = EventEmitter
var EventEmitterWithHolding = require(311                      ); // 311 = EventEmitterWithHolding
var EventHolder = require(312          ); // 312 = EventHolder

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var keyOf = require(277             ); // 277 = fbjs/lib/keyOf

var TYPES_KEY = keyOf({ __types: true });

function mixInEventEmitter(cls, types) {
  invariant(types, 'Must supply set of valid event types');

  var target = cls.prototype || cls;

  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');

  var ctor = cls.constructor;
  if (ctor) {
    invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
  }

  if (target.hasOwnProperty(TYPES_KEY)) {
    babelHelpers.extends(target.__types, types);
  } else if (target.__types) {
    target.__types = babelHelpers.extends({}, target.__types, types);
  } else {
    target.__types = types;
  }
  babelHelpers.extends(target, EventEmitterMixin);
}

var EventEmitterMixin = {
  emit: function emit(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
  },

  emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
  },

  addListener: function addListener(eventType, listener, context) {
    return this.__getEventEmitter().addListener(eventType, listener, context);
  },

  once: function once(eventType, listener, context) {
    return this.__getEventEmitter().once(eventType, listener, context);
  },

  addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
    return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
  },

  addListenerMap: function addListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  removeAllListeners: function removeAllListeners() {
    this.__getEventEmitter().removeAllListeners();
  },

  removeCurrentListener: function removeCurrentListener() {
    this.__getEventEmitter().removeCurrentListener();
  },

  releaseHeldEventType: function releaseHeldEventType(eventType) {
    this.__getEventEmitter().releaseHeldEventType(eventType);
  },

  __getEventEmitter: function __getEventEmitter() {
    if (!this.__eventEmitter) {
      var emitter = new EventEmitter();
      if (__DEV__) {
        var EventValidator = require(313             ); // 313 = EventValidator
        emitter = EventValidator.addValidation(emitter, this.__types);
      }

      var holder = new EventHolder();
      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
    }
    return this.__eventEmitter;
  }
};

module.exports = mixInEventEmitter;
}, 310, null, "mixInEventEmitter");
__d(/* EventEmitterWithHolding */function(global, require, module, exports) {
'use strict';

var EventEmitterWithHolding = function () {
  function EventEmitterWithHolding(emitter, holder) {
    babelHelpers.classCallCheck(this, EventEmitterWithHolding);

    this._emitter = emitter;
    this._eventHolder = holder;
    this._currentEventToken = null;
    this._emittingHeldEvents = false;
  }

  babelHelpers.createClass(EventEmitterWithHolding, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      return this._emitter.addListener(eventType, listener, context);
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      return this._emitter.once(eventType, listener, context);
    }
  }, {
    key: 'addRetroactiveListener',
    value: function addRetroactiveListener(eventType, listener, context) {
      var subscription = this._emitter.addListener(eventType, listener, context);

      this._emittingHeldEvents = true;
      this._eventHolder.emitToListener(eventType, listener, context);
      this._emittingHeldEvents = false;

      return subscription;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._emitter.removeAllListeners(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      this._emitter.removeCurrentListener();
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      return this._emitter.listeners(eventType);
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var _emitter;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_emitter = this._emitter).emit.apply(_emitter, [eventType].concat(babelHelpers.toConsumableArray(args)));
    }
  }, {
    key: 'emitAndHold',
    value: function emitAndHold(eventType) {
      var _eventHolder, _emitter2;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this._currentEventToken = (_eventHolder = this._eventHolder).holdEvent.apply(_eventHolder, [eventType].concat(babelHelpers.toConsumableArray(args)));
      (_emitter2 = this._emitter).emit.apply(_emitter2, [eventType].concat(babelHelpers.toConsumableArray(args)));
      this._currentEventToken = null;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      if (this._currentEventToken) {
        this._eventHolder.releaseEvent(this._currentEventToken);
      } else if (this._emittingHeldEvents) {
        this._eventHolder.releaseCurrentEvent();
      }
    }
  }, {
    key: 'releaseHeldEventType',
    value: function releaseHeldEventType(eventType) {
      this._eventHolder.releaseEventType(eventType);
    }
  }]);
  return EventEmitterWithHolding;
}();

module.exports = EventEmitterWithHolding;
}, 311, null, "EventEmitterWithHolding");
__d(/* EventHolder */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventHolder = function () {
  function EventHolder() {
    babelHelpers.classCallCheck(this, EventHolder);

    this._heldEvents = {};
    this._currentEventKey = null;
  }

  babelHelpers.createClass(EventHolder, [{
    key: 'holdEvent',
    value: function holdEvent(eventType) {
      this._heldEvents[eventType] = this._heldEvents[eventType] || [];
      var eventsOfType = this._heldEvents[eventType];
      var key = {
        eventType: eventType,
        index: eventsOfType.length
      };

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      eventsOfType.push(args);
      return key;
    }
  }, {
    key: 'emitToListener',
    value: function emitToListener(eventType, listener, context) {
      var _this = this;

      var eventsOfType = this._heldEvents[eventType];
      if (!eventsOfType) {
        return;
      }
      var origEventKey = this._currentEventKey;
      eventsOfType.forEach(function (eventHeld, index) {
        if (!eventHeld) {
          return;
        }
        _this._currentEventKey = {
          eventType: eventType,
          index: index
        };
        listener.apply(context, eventHeld);
      });
      this._currentEventKey = origEventKey;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
      this._currentEventKey && this.releaseEvent(this._currentEventKey);
    }
  }, {
    key: 'releaseEvent',
    value: function releaseEvent(token) {
      delete this._heldEvents[token.eventType][token.index];
    }
  }, {
    key: 'releaseEventType',
    value: function releaseEventType(type) {
      this._heldEvents[type] = [];
    }
  }]);
  return EventHolder;
}();

module.exports = EventHolder;
}, 312, null, "EventHolder");
__d(/* EventValidator */function(global, require, module, exports) {
'use strict';

var EventValidator = {
  addValidation: function addValidation(emitter, types) {
    var eventTypes = Object.keys(types);
    var emitterWithValidation = Object.create(emitter);

    babelHelpers.extends(emitterWithValidation, {
      emit: function emit(type, a, b, c, d, e, _) {
        assertAllowsEventType(type, eventTypes);
        return emitter.emit.call(this, type, a, b, c, d, e, _);
      }
    });

    return emitterWithValidation;
  }
};

function assertAllowsEventType(type, allowedTypes) {
  if (allowedTypes.indexOf(type) === -1) {
    throw new TypeError(errorMessageFor(type, allowedTypes));
  }
}

function errorMessageFor(type, allowedTypes) {
  var message = 'Unknown event type "' + type + '". ';
  if (__DEV__) {
    message += recommendationFor(type, allowedTypes);
  }
  message += 'Known event types: ' + allowedTypes.join(', ') + '.';
  return message;
}

if (__DEV__) {
  var recommendationFor = function recommendationFor(type, allowedTypes) {
    var closestTypeRecommendation = closestTypeFor(type, allowedTypes);
    if (isCloseEnough(closestTypeRecommendation, type)) {
      return 'Did you mean "' + closestTypeRecommendation.type + '"? ';
    } else {
      return '';
    }
  };

  var closestTypeFor = function closestTypeFor(type, allowedTypes) {
    var typeRecommendations = allowedTypes.map(typeRecommendationFor.bind(this, type));
    return typeRecommendations.sort(recommendationSort)[0];
  };

  var typeRecommendationFor = function typeRecommendationFor(type, recomendedType) {
    return {
      type: recomendedType,
      distance: damerauLevenshteinDistance(type, recomendedType)
    };
  };

  var recommendationSort = function recommendationSort(recommendationA, recommendationB) {
    if (recommendationA.distance < recommendationB.distance) {
      return -1;
    } else if (recommendationA.distance > recommendationB.distance) {
      return 1;
    } else {
      return 0;
    }
  };

  var isCloseEnough = function isCloseEnough(closestType, actualType) {
    return closestType.distance / actualType.length < 0.334;
  };

  var damerauLevenshteinDistance = function damerauLevenshteinDistance(a, b) {
    var i = void 0,
        j = void 0;
    var d = [];

    for (i = 0; i <= a.length; i++) {
      d[i] = [i];
    }

    for (j = 1; j <= b.length; j++) {
      d[0][j] = j;
    }

    for (i = 1; i <= a.length; i++) {
      for (j = 1; j <= b.length; j++) {
        var cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;

        d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);

        if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
        }
      }
    }

    return d[a.length][b.length];
  };
}

module.exports = EventValidator;
}, 313, null, "EventValidator");
__d(/* ToastAndroid */function(global, require, module, exports) {
'use strict';

var warning = require(23                ); // 23 = fbjs/lib/warning

var ToastAndroid = {

  show: function show(message, duration) {
    warning(false, 'ToastAndroid is not supported on this platform.');
  }

};

module.exports = ToastAndroid;
}, 314, null, "ToastAndroid");
__d(/* ToolbarAndroid */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 315, null, "ToolbarAndroid");
__d(/* ViewPagerAndroid */function(global, require, module, exports) {
'use strict';

module.exports = require(133                ); // 133 = UnimplementedView
}, 316, null, "ViewPagerAndroid");
__d(/* WebView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js';
var ActivityIndicator = require(129                ); // 129 = ActivityIndicator
var EdgeInsetsPropType = require(159                 ); // 159 = EdgeInsetsPropType
var React = require(134    ); // 134 = React
var PropTypes = require(144         ); // 144 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(135         ); // 135 = StyleSheet
var Text = require(188   ); // 188 = Text
var UIManager = require(54         ); // 54 = UIManager
var View = require(156   ); // 156 = View
var ViewPropTypes = require(158            ); // 158 = ViewPropTypes
var ScrollView = require(228         ); // 228 = ScrollView

var deprecatedPropType = require(149                 ); // 149 = deprecatedPropType
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var keyMirror = require(142                 ); // 142 = fbjs/lib/keyMirror
var processDecelerationRate = require(238                      ); // 238 = processDecelerationRate
var requireNativeComponent = require(170                     ); // 170 = requireNativeComponent
var resolveAssetSource = require(176                 ); // 176 = resolveAssetSource

var RCTWebViewManager = require(15             ).WebViewManager; // 15 = NativeModules

var BGWASH = 'rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF = 'webview';

var WebViewState = keyMirror({
  IDLE: null,
  LOADING: null,
  ERROR: null
});

var NavigationType = keyMirror({
  click: true,
  formsubmit: true,
  backforward: true,
  reload: true,
  formresubmit: true,
  other: true
});

var JSNavigationScheme = 'react-js-navigation';

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var defaultRenderLoading = function defaultRenderLoading() {
  return React.createElement(
    View,
    { style: styles.loadingView, __source: {
        fileName: _jsxFileName,
        lineNumber: 73
      }
    },
    React.createElement(ActivityIndicator, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 74
      }
    })
  );
};
var defaultRenderError = function defaultRenderError(errorDomain, errorCode, errorDesc) {
  return React.createElement(
    View,
    { style: styles.errorContainer, __source: {
        fileName: _jsxFileName,
        lineNumber: 78
      }
    },
    React.createElement(
      Text,
      { style: styles.errorTextTitle, __source: {
          fileName: _jsxFileName,
          lineNumber: 79
        }
      },
      'Error loading page'
    ),
    React.createElement(
      Text,
      { style: styles.errorText, __source: {
          fileName: _jsxFileName,
          lineNumber: 82
        }
      },
      'Domain: ' + errorDomain
    ),
    React.createElement(
      Text,
      { style: styles.errorText, __source: {
          fileName: _jsxFileName,
          lineNumber: 85
        }
      },
      'Error Code: ' + errorCode
    ),
    React.createElement(
      Text,
      { style: styles.errorText, __source: {
          fileName: _jsxFileName,
          lineNumber: 88
        }
      },
      'Description: ' + errorDesc
    )
  );
};

var WebView = function (_React$Component) {
  babelHelpers.inherits(WebView, _React$Component);

  function WebView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, WebView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = WebView.__proto__ || Object.getPrototypeOf(WebView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      viewState: WebViewState.IDLE,
      lastErrorEvent: null,
      startInLoadingState: true
    }, _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goForward, null);
    }, _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goBack, null);
    }, _this.reload = function () {
      _this.setState({ viewState: WebViewState.LOADING });
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.reload, null);
    }, _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.stopLoading, null);
    }, _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.postMessage, [String(data)]);
    }, _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.injectJavaScript, [data]);
    }, _this._updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    }, _this.getWebViewHandle = function () {
      return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
    }, _this._onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      onLoadStart && onLoadStart(event);
      _this._updateNavigationState(event);
    }, _this._onLoadingError = function (event) {
      event.persist();var _this$props = _this.props,
          onError = _this$props.onError,
          onLoadEnd = _this$props.onLoadEnd;

      onError && onError(event);
      onLoadEnd && onLoadEnd(event);
      console.warn('Encountered an error loading page', event.nativeEvent);

      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: WebViewState.ERROR
      });
    }, _this._onLoadingFinish = function (event) {
      var _this$props2 = _this.props,
          onLoad = _this$props2.onLoad,
          onLoadEnd = _this$props2.onLoadEnd;

      onLoad && onLoad(event);
      onLoadEnd && onLoadEnd(event);
      _this.setState({
        viewState: WebViewState.IDLE
      });
      _this._updateNavigationState(event);
    }, _this._onMessage = function (event) {
      var onMessage = _this.props.onMessage;

      onMessage && onMessage(event);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(WebView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startInLoadingState) {
        this.setState({ viewState: WebViewState.LOADING });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var otherView = null;

      if (this.state.viewState === WebViewState.LOADING) {
        otherView = (this.props.renderLoading || defaultRenderLoading)();
      } else if (this.state.viewState === WebViewState.ERROR) {
        var errorEvent = this.state.lastErrorEvent;
        invariant(errorEvent != null, 'lastErrorEvent expected to be non-null');
        otherView = (this.props.renderError || defaultRenderError)(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== WebViewState.IDLE) {
        console.error('RCTWebView invalid state encountered: ' + this.state.loading);
      }

      var webViewStyles = [styles.container, styles.webView, this.props.style];
      if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
        webViewStyles.push(styles.hidden);
      }

      var nativeConfig = this.props.nativeConfig || {};

      var viewManager = nativeConfig.viewManager || RCTWebViewManager;

      var onShouldStartLoadWithRequest = this.props.onShouldStartLoadWithRequest && function (event) {
        var shouldStart = _this2.props.onShouldStartLoadWithRequest && _this2.props.onShouldStartLoadWithRequest(event.nativeEvent);
        viewManager.startLoadWithResult(!!shouldStart, event.nativeEvent.lockIdentifier);
      };

      var decelerationRate = processDecelerationRate(this.props.decelerationRate);

      var source = this.props.source || {};
      if (this.props.html) {
        source.html = this.props.html;
      } else if (this.props.url) {
        source.uri = this.props.url;
      }

      var messagingEnabled = typeof this.props.onMessage === 'function';

      var NativeWebView = nativeConfig.component || RCTWebView;

      var webView = React.createElement(NativeWebView, babelHelpers.extends({
        ref: RCT_WEBVIEW_REF,
        key: 'webViewKey',
        style: webViewStyles,
        source: resolveAssetSource(source),
        injectedJavaScript: this.props.injectedJavaScript,
        bounces: this.props.bounces,
        scrollEnabled: this.props.scrollEnabled,
        decelerationRate: decelerationRate,
        contentInset: this.props.contentInset,
        automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
        onLoadingStart: this._onLoadingStart,
        onLoadingFinish: this._onLoadingFinish,
        onLoadingError: this._onLoadingError,
        messagingEnabled: messagingEnabled,
        onMessage: this._onMessage,
        onShouldStartLoadWithRequest: onShouldStartLoadWithRequest,
        scalesPageToFit: this.props.scalesPageToFit,
        allowsInlineMediaPlayback: this.props.allowsInlineMediaPlayback,
        mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
        dataDetectorTypes: this.props.dataDetectorTypes
      }, nativeConfig.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 472
        }
      }));

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 497
          }
        },
        webView,
        otherView
      );
    }
  }], [{
    key: 'extraNativeComponentConfig',
    get: function get() {
      return {
        nativeOnly: {
          onLoadingStart: true,
          onLoadingError: true,
          onLoadingFinish: true,
          onMessage: true,
          messagingEnabled: PropTypes.bool
        }
      };
    }
  }]);
  return WebView;
}(React.Component);

WebView.JSNavigationScheme = JSNavigationScheme;
WebView.NavigationType = NavigationType;
WebView.propTypes = babelHelpers.extends({}, ViewPropTypes, {

  html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  source: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,

    method: PropTypes.string,

    headers: PropTypes.object,

    body: PropTypes.string
  }), PropTypes.shape({
    html: PropTypes.string,

    baseUrl: PropTypes.string
  }), PropTypes.number]),

  renderError: PropTypes.func,
  renderLoading: PropTypes.func,

  onLoad: PropTypes.func,

  onLoadEnd: PropTypes.func,

  onLoadStart: PropTypes.func,

  onError: PropTypes.func,

  bounces: PropTypes.bool,

  decelerationRate: ScrollView.propTypes.decelerationRate,

  scrollEnabled: PropTypes.bool,

  automaticallyAdjustContentInsets: PropTypes.bool,

  contentInset: EdgeInsetsPropType,

  onNavigationStateChange: PropTypes.func,

  onMessage: PropTypes.func,

  startInLoadingState: PropTypes.bool,

  style: ViewPropTypes.style,

  dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),

  javaScriptEnabled: PropTypes.bool,

  thirdPartyCookiesEnabled: PropTypes.bool,

  domStorageEnabled: PropTypes.bool,

  injectedJavaScript: PropTypes.string,

  userAgent: PropTypes.string,

  scalesPageToFit: PropTypes.bool,

  onShouldStartLoadWithRequest: PropTypes.func,

  allowsInlineMediaPlayback: PropTypes.bool,

  mediaPlaybackRequiresUserAction: PropTypes.bool,

  injectJavaScript: PropTypes.func,

  mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility']),

  nativeConfig: PropTypes.shape({
    component: PropTypes.any,

    props: PropTypes.object,

    viewManager: PropTypes.object
  })
});
WebView.defaultProps = {
  scalesPageToFit: true
};


var RCTWebView = requireNativeComponent('RCTWebView', WebView, WebView.extraNativeComponentConfig);

var styles = StyleSheet.create({
  container: {
    flex: 1
  },
  errorContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: BGWASH
  },
  errorText: {
    fontSize: 14,
    textAlign: 'center',
    marginBottom: 2
  },
  errorTextTitle: {
    fontSize: 15,
    fontWeight: '500',
    marginBottom: 10
  },
  hidden: {
    height: 0,
    flex: 0 },
  loadingView: {
    backgroundColor: BGWASH,
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    height: 100
  },
  webView: {
    backgroundColor: '#ffffff'
  }
});

module.exports = WebView;
}, 317, null, "WebView");
__d(/* ActionSheetIOS */function(global, require, module, exports) {
'use strict';

var RCTActionSheetManager = require(15             ).ActionSheetManager; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processColor = require(118           ); // 118 = processColor

var ActionSheetIOS = {
  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof callback === 'function', 'Must provide a valid callback');
    RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), callback);
  },
  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
    invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
    RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), failureCallback, successCallback);
  }
};

module.exports = ActionSheetIOS;
}, 318, null, "ActionSheetIOS");
__d(/* AppRegistry */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge
var BugReporting = require(320           ); // 320 = BugReporting
var NativeModules = require(15             ); // 15 = NativeModules
var ReactNative = require(21           ); // 21 = ReactNative
var SceneTracker = require(322           ); // 322 = SceneTracker

var infoLog = require(115      ); // 115 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var renderApplication = require(323                ); // 323 = renderApplication

var runnables = {};
var runCount = 1;
var sections = {};
var tasks = new Map();
var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
  return component();
};

var wrapperComponentProvider = void 0;

var AppRegistry = {
  setWrapperComponentProvider: function setWrapperComponentProvider(provider) {
    wrapperComponentProvider = provider;
  },
  registerConfig: function registerConfig(config) {
    config.forEach(function (appConfig) {
      if (appConfig.run) {
        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
      } else {
        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);
        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
      }
    });
  },
  registerComponent: function registerComponent(appKey, componentProvider, section) {
    runnables[appKey] = {
      componentProvider: componentProvider,
      run: function run(appParameters) {
        return renderApplication(componentProviderInstrumentationHook(componentProvider), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters));
      }
    };
    if (section) {
      sections[appKey] = runnables[appKey];
    }
    return appKey;
  },
  registerRunnable: function registerRunnable(appKey, run) {
    runnables[appKey] = { run: run };
    return appKey;
  },
  registerSection: function registerSection(appKey, component) {
    AppRegistry.registerComponent(appKey, component, true);
  },
  getAppKeys: function getAppKeys() {
    return Object.keys(runnables);
  },
  getSectionKeys: function getSectionKeys() {
    return Object.keys(sections);
  },
  getSections: function getSections() {
    return babelHelpers.extends({}, sections);
  },
  getRunnable: function getRunnable(appKey) {
    return runnables[appKey];
  },
  getRegistry: function getRegistry() {
    return {
      sections: AppRegistry.getSectionKeys(),
      runnables: babelHelpers.extends({}, runnables)
    };
  },
  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
    componentProviderInstrumentationHook = hook;
  },
  runApplication: function runApplication(appKey, appParameters) {
    var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(__DEV__) + ', development-level warning are ' + (__DEV__ ? 'ON' : 'OFF') + ', performance optimizations are ' + (__DEV__ ? 'OFF' : 'ON');
    infoLog(msg);
    BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
      return msg;
    });
    invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered.\n\n' + "Hint: This error often happens when you're running the packager " + '(local dev server) from a wrong folder. For example you have ' + 'multiple apps and the packager is still running for the app you ' + 'were working on before.\nIf this is the case, simply kill the old ' + 'packager instance (e.g. close the packager terminal window) ' + 'and start the packager in the correct app folder (e.g. cd into app ' + "folder and run 'npm start').\n\n" + 'This error can also happen due to a require() error during ' + 'initialization or failure to call AppRegistry.registerComponent.\n\n');

    SceneTracker.setActiveScene({ name: appKey });
    runnables[appKey].run(appParameters);
  },
  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
  },
  registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
    if (tasks.has(taskKey)) {
      console.warn('registerHeadlessTask called multiple times for same key \'' + taskKey + '\'');
    }
    tasks.set(taskKey, task);
  },
  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
    var taskProvider = tasks.get(taskKey);
    if (!taskProvider) {
      throw new Error('No task registered for key ' + taskKey);
    }
    taskProvider()(data).then(function () {
      return NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    }).catch(function (reason) {
      console.error(reason);
      NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    });
  }
};

BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);

module.exports = AppRegistry;
}, 319, null, "AppRegistry");
__d(/* BugReporting */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter
var Map = require(59   ); // 59 = Map
var infoLog = require(115      ); // 115 = infoLog

function defaultExtras() {
  BugReporting.addFileSource('react_hierarchy.txt', function () {
    return require(321            )(); // 321 = dumpReactTree
  });
}

var BugReporting = function () {
  function BugReporting() {
    babelHelpers.classCallCheck(this, BugReporting);
  }

  babelHelpers.createClass(BugReporting, null, [{
    key: '_maybeInit',
    value: function _maybeInit() {
      if (!BugReporting._subscription) {
        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
        defaultExtras();
      }
    }
  }, {
    key: 'addSource',
    value: function addSource(key, callback) {
      return this._addSource(key, callback, BugReporting._extraSources);
    }
  }, {
    key: 'addFileSource',
    value: function addFileSource(key, callback) {
      return this._addSource(key, callback, BugReporting._fileSources);
    }
  }, {
    key: '_addSource',
    value: function _addSource(key, callback, source) {
      BugReporting._maybeInit();
      if (source.has(key)) {
        console.warn('BugReporting.add* called multiple times for same key \'' + key + '\'');
      }
      source.set(key, callback);
      return { remove: function remove() {
          source.delete(key);
        } };
    }
  }, {
    key: 'collectExtraData',
    value: function collectExtraData() {
      var extraData = {};
      for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var _key = _ref2[0];
        var callback = _ref2[1];

        extraData[_key] = callback();
      }
      var fileData = {};
      for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref6;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref6 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref6 = _i2.value;
        }

        var _ref4 = _ref6;

        var _ref5 = babelHelpers.slicedToArray(_ref4, 2);

        var _key2 = _ref5[0];
        var _callback = _ref5[1];

        fileData[_key2] = _callback();
      }
      infoLog('BugReporting extraData:', extraData);
      var BugReportingNativeModule = require(15             ).BugReporting; // 15 = NativeModules
      BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

      return { extras: extraData, files: fileData };
    }
  }]);
  return BugReporting;
}();

BugReporting._extraSources = new Map();
BugReporting._fileSources = new Map();
BugReporting._subscription = null;


module.exports = BugReporting;
}, 320, null, "BugReporting");
__d(/* dumpReactTree */function(global, require, module, exports) {
'use strict';

function dumpReactTree() {
  try {
    return getReactTree();
  } catch (e) {
    return 'Failed to dump react tree: ' + e;
  }
}

function getReactTree() {
  return 'React tree dumps have been temporarily disabled while React is ' + 'upgraded to Fiber.';
}

module.exports = dumpReactTree;
}, 321, null, "dumpReactTree");
__d(/* SceneTracker */function(global, require, module, exports) {

'use strict';

var _listeners = [];

var _activeScene = { name: 'default' };

var SceneTracker = {
  setActiveScene: function setActiveScene(scene) {
    _activeScene = scene;
    _listeners.forEach(function (listener) {
      return listener(_activeScene);
    });
  },
  getActiveScene: function getActiveScene() {
    return _activeScene;
  },
  addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {
    _listeners.push(callback);
    return {
      remove: function remove() {
        _listeners = _listeners.filter(function (listener) {
          return callback !== listener;
        });
      }
    };
  }
};

module.exports = SceneTracker;
}, 322, null, "SceneTracker");
__d(/* renderApplication */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native/Libraries/ReactNative/renderApplication.js';
var AppContainer = require(266           ); // 266 = AppContainer
var React = require(134    ); // 134 = React
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

require(324          ); // 324 = BackHandler

function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);

  ReactNative.render(React.createElement(
    AppContainer,
    { rootTag: rootTag, WrapperComponent: WrapperComponent, __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      }
    },
    React.createElement(RootComponent, babelHelpers.extends({}, initialProps, { rootTag: rootTag, __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }))
  ), rootTag);
}

module.exports = renderApplication;
}, 323, null, "renderApplication");
__d(/* BackHandler */function(global, require, module, exports) {

'use strict';

var Platform = require(53        ); // 53 = Platform
var TVEventHandler = require(193             ); // 193 = TVEventHandler

function emptyFunction() {}

var BackHandler = void 0;

if (Platform.isTVOS) {
  var _tvEventHandler = new TVEventHandler();
  var _backPressSubscriptions = new Set();

  _tvEventHandler.enable(this, function (cmp, evt) {
    if (evt && evt.eventType === 'menu') {
      var invokeDefault = true;
      var subscriptions = Array.from(_backPressSubscriptions.values()).reverse();

      for (var i = 0; i < subscriptions.length; ++i) {
        if (subscriptions[i]()) {
          invokeDefault = false;
          break;
        }
      }

      if (invokeDefault) {
        BackHandler.exitApp();
      }
    }
  });

  BackHandler = {
    exitApp: emptyFunction,

    addEventListener: function addEventListener(eventName, handler) {
      _backPressSubscriptions.add(handler);
      return {
        remove: function remove() {
          return BackHandler.removeEventListener(eventName, handler);
        }
      };
    },

    removeEventListener: function removeEventListener(eventName, handler) {
      _backPressSubscriptions.delete(handler);
    }

  };
} else {

  BackHandler = {
    exitApp: emptyFunction,
    addEventListener: function addEventListener() {
      return {
        remove: emptyFunction
      };
    },

    removeEventListener: emptyFunction
  };
}

module.exports = BackHandler;
}, 324, null, "BackHandler");
__d(/* AsyncStorage */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var RCTAsyncStorage = NativeModules.AsyncRocksDBStorage || NativeModules.AsyncSQLiteDBStorage || NativeModules.AsyncLocalStorage;

var AsyncStorage = {
  _getRequests: [],
  _getKeys: [],
  _immediate: null,

  getItem: function getItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiGet([key], function (errors, result) {
        var value = result && result[0] && result[0][1] ? result[0][1] : null;
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0], value);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(value);
        }
      });
    });
  },

  setItem: function setItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  removeItem: function removeItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove([key], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  mergeItem: function mergeItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  clear: function clear(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.clear(function (error) {
        callback && callback(convertError(error));
        if (error && convertError(error)) {
          reject(convertError(error));
        } else {
          resolve(null);
        }
      });
    });
  },

  getAllKeys: function getAllKeys(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.getAllKeys(function (error, keys) {
        callback && callback(convertError(error), keys);
        if (error) {
          reject(convertError(error));
        } else {
          resolve(keys);
        }
      });
    });
  },

  flushGetRequests: function flushGetRequests() {
    var getRequests = this._getRequests;
    var getKeys = this._getKeys;

    this._getRequests = [];
    this._getKeys = [];

    RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
      var map = {};
      result && result.forEach(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        map[key] = value;return value;
      });
      var reqLength = getRequests.length;
      for (var i = 0; i < reqLength; i++) {
        var request = getRequests[i];
        var requestKeys = request.keys;
        var requestResult = requestKeys.map(function (key) {
          return [key, map[key]];
        });
        request.callback && request.callback(null, requestResult);
        request.resolve && request.resolve(requestResult);
      }
    });
  },

  multiGet: function multiGet(keys, callback) {
    var _this = this;

    if (!this._immediate) {
      this._immediate = setImmediate(function () {
        _this._immediate = null;
        _this.flushGetRequests();
      });
    }

    var getRequest = {
      keys: keys,
      callback: callback,

      keyIndex: this._getKeys.length,
      resolve: null,
      reject: null
    };

    var promiseResult = new Promise(function (resolve, reject) {
      getRequest.resolve = resolve;
      getRequest.reject = reject;
    });

    this._getRequests.push(getRequest);

    keys.forEach(function (key) {
      if (_this._getKeys.indexOf(key) === -1) {
        _this._getKeys.push(key);
      }
    });

    return promiseResult;
  },

  multiSet: function multiSet(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiRemove: function multiRemove(keys, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove(keys, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiMerge: function multiMerge(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  }
};

if (!RCTAsyncStorage.multiMerge) {
  delete AsyncStorage.mergeItem;
  delete AsyncStorage.multiMerge;
}

function convertErrors(errs) {
  if (!errs) {
    return null;
  }
  return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
    return convertError(e);
  });
}

function convertError(error) {
  if (!error) {
    return null;
  }
  var out = new Error(error.message);
  out.key = error.key;
  return out;
}

module.exports = AsyncStorage;
}, 325, null, "AsyncStorage");
__d(/* BackAndroid */function(global, require, module, exports) {

'use strict';

var BackHandler = require(324          ); // 324 = BackHandler

var warning = require(23                ); // 23 = fbjs/lib/warning

var BackAndroid = {

  exitApp: function exitApp() {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.exitApp();
  },

  addEventListener: function addEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    return BackHandler.addEventListener(eventName, handler);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.removeEventListener(eventName, handler);
  }

};

module.exports = BackAndroid;
}, 326, null, "BackAndroid");
__d(/* CameraRoll */function(global, require, module, exports) {
'use strict';

var PropTypes = require(144         ); // 144 = prop-types
var checkPropTypes = PropTypes.checkPropTypes;

var RCTCameraRollManager = require(15             ).CameraRollManager; // 15 = NativeModules

var createStrictShapeTypeChecker = require(160                           ); // 160 = createStrictShapeTypeChecker
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var GROUP_TYPES_OPTIONS = {
  Album: 'Album',
  All: 'All',
  Event: 'Event',
  Faces: 'Faces',
  Library: 'Library',
  PhotoStream: 'PhotoStream',
  SavedPhotos: 'SavedPhotos' };

var ASSET_TYPE_OPTIONS = {
  All: 'All',
  Videos: 'Videos',
  Photos: 'Photos'
};

var getPhotosParamChecker = createStrictShapeTypeChecker({
  first: PropTypes.number.isRequired,

  after: PropTypes.string,

  groupTypes: PropTypes.oneOf(Object.keys(GROUP_TYPES_OPTIONS)),

  groupName: PropTypes.string,

  assetType: PropTypes.oneOf(Object.keys(ASSET_TYPE_OPTIONS)),

  mimeTypes: PropTypes.arrayOf(PropTypes.string)
});

var getPhotosReturnChecker = createStrictShapeTypeChecker({
  edges: PropTypes.arrayOf(createStrictShapeTypeChecker({
    node: createStrictShapeTypeChecker({
      type: PropTypes.string.isRequired,
      group_name: PropTypes.string.isRequired,
      image: createStrictShapeTypeChecker({
        uri: PropTypes.string.isRequired,
        height: PropTypes.number.isRequired,
        width: PropTypes.number.isRequired,
        isStored: PropTypes.bool,
        playableDuration: PropTypes.number.isRequired
      }).isRequired,
      timestamp: PropTypes.number.isRequired,
      location: createStrictShapeTypeChecker({
        latitude: PropTypes.number,
        longitude: PropTypes.number,
        altitude: PropTypes.number,
        heading: PropTypes.number,
        speed: PropTypes.number
      })
    }).isRequired
  })).isRequired,
  page_info: createStrictShapeTypeChecker({
    has_next_page: PropTypes.bool.isRequired,
    start_cursor: PropTypes.string,
    end_cursor: PropTypes.string
  }).isRequired
});

var CameraRoll = function () {
  function CameraRoll() {
    babelHelpers.classCallCheck(this, CameraRoll);
  }

  babelHelpers.createClass(CameraRoll, null, [{
    key: 'saveImageWithTag',
    value: function saveImageWithTag(tag) {
      console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');
      return this.saveToCameraRoll(tag, 'photo');
    }
  }, {
    key: 'saveToCameraRoll',
    value: function saveToCameraRoll(tag, type) {
      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');

      invariant(type === 'photo' || type === 'video' || type === undefined, 'The second argument to saveToCameraRoll must be \'photo\' or \'video\'. You passed ' + type);

      var mediaType = 'photo';
      if (type) {
        mediaType = type;
      } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
        mediaType = 'video';
      }

      return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
    }
  }, {
    key: 'getPhotos',
    value: function getPhotos(params) {
      if (__DEV__) {
        checkPropTypes({ params: getPhotosParamChecker }, { params: params }, 'params', 'CameraRoll.getPhotos');
      }
      if (arguments.length > 1) {
        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
        var successCallback = arguments[1];
        if (__DEV__) {
          var callback = arguments[1];
          successCallback = function successCallback(response) {
            checkPropTypes({ response: getPhotosReturnChecker }, { response: response }, 'response', 'CameraRoll.getPhotos callback');
            callback(response);
          };
        }
        var errorCallback = arguments[2] || function () {};
        RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
      }

      return RCTCameraRollManager.getPhotos(params);
    }
  }]);
  return CameraRoll;
}();

CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;


module.exports = CameraRoll;
}, 327, null, "CameraRoll");
__d(/* Clipboard */function(global, require, module, exports) {
'use strict';

var Clipboard = require(15             ).Clipboard; // 15 = NativeModules

module.exports = {
  getString: function getString() {
    return Clipboard.getString();
  },
  setString: function setString(content) {
    Clipboard.setString(content);
  }
};
}, 328, null, "Clipboard");
__d(/* DatePickerAndroid */function(global, require, module, exports) {
'use strict';

var DatePickerAndroid = {
  open: function open(options) {
    return regeneratorRuntime.async(function open$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt('return', Promise.reject({
              message: 'DatePickerAndroid is not supported on this platform.'
            }));

          case 1:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  }
};

module.exports = DatePickerAndroid;
}, 329, null, "DatePickerAndroid");
__d(/* ImagePickerIOS */function(global, require, module, exports) {
'use strict';

var RCTImagePicker = require(15             ).ImagePickerIOS; // 15 = NativeModules

var ImagePickerIOS = {
  canRecordVideos: function canRecordVideos(callback) {
    return RCTImagePicker.canRecordVideos(callback);
  },
  canUseCamera: function canUseCamera(callback) {
    return RCTImagePicker.canUseCamera(callback);
  },
  openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      videoMode: false
    }, config);
    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
  },
  openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      showImages: true,
      showVideos: false
    }, config);
    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
  }
};

module.exports = ImagePickerIOS;
}, 330, null, "ImagePickerIOS");
__d(/* Linking */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;

var Linking = function (_NativeEventEmitter) {
  babelHelpers.inherits(Linking, _NativeEventEmitter);

  function Linking() {
    babelHelpers.classCallCheck(this, Linking);
    return babelHelpers.possibleConstructorReturn(this, (Linking.__proto__ || Object.getPrototypeOf(Linking)).call(this, LinkingManager));
  }

  babelHelpers.createClass(Linking, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      this.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      this.removeListener(type, handler);
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      this._validateURL(url);
      return LinkingManager.openURL(url);
    }
  }, {
    key: 'canOpenURL',
    value: function canOpenURL(url) {
      this._validateURL(url);
      return LinkingManager.canOpenURL(url);
    }
  }, {
    key: 'getInitialURL',
    value: function getInitialURL() {
      return LinkingManager.getInitialURL();
    }
  }, {
    key: '_validateURL',
    value: function _validateURL(url) {
      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
      invariant(url, 'Invalid URL: cannot be empty');
    }
  }]);
  return Linking;
}(NativeEventEmitter);

module.exports = new Linking();
}, 331, null, "Linking");
__d(/* NetInfo */function(global, require, module, exports) {
'use strict';

var Map = require(59   ); // 59 = Map
var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform
var RCTNetInfo = NativeModules.NetInfo;

var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);

var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

var _subscriptions = new Map();

var _isConnectedDeprecated = void 0;
if (Platform.OS === 'ios') {
  _isConnectedDeprecated = function _isConnectedDeprecated(reachability) {
    return reachability !== 'none' && reachability !== 'unknown';
  };
} else if (Platform.OS === 'android') {
  _isConnectedDeprecated = function _isConnectedDeprecated(connectionType) {
    return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
  };
}

function _isConnected(connection) {
  return connection.type !== 'none' && connection.type !== 'unknown';
}

var _isConnectedSubscriptions = new Map();

var NetInfo = {
  addEventListener: function addEventListener(eventName, handler) {
    var listener = void 0;
    if (eventName === 'connectionChange') {
      listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
        handler({
          type: appStateData.connectionType,
          effectiveType: appStateData.effectiveConnectionType
        });
      });
    } else if (eventName === 'change') {
      console.warn('NetInfo\'s "change" event is deprecated. Listen to the "connectionChange" event instead.');

      listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
        handler(appStateData.network_info);
      });
    } else {
      console.warn('Trying to subscribe to unknown event: "' + eventName + '"');
      return {
        remove: function remove() {}
      };
    }

    _subscriptions.set(handler, listener);
    return {
      remove: function remove() {
        return NetInfo.removeEventListener(eventName, handler);
      }
    };
  },
  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  },
  fetch: function fetch() {
    console.warn('NetInfo.fetch() is deprecated. Use NetInfo.getConnectionInfo() instead.');
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return resp.network_info;
    });
  },
  getConnectionInfo: function getConnectionInfo() {
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return {
        type: resp.connectionType,
        effectiveType: resp.effectiveConnectionType
      };
    });
  },

  isConnected: {
    addEventListener: function addEventListener(eventName, handler) {
      var listener = function listener(connection) {
        if (eventName === 'change') {
          handler(_isConnectedDeprecated(connection));
        } else if (eventName === 'connectionChange') {
          handler(_isConnected(connection));
        }
      };
      _isConnectedSubscriptions.set(handler, listener);
      NetInfo.addEventListener(eventName, listener);
      return {
        remove: function remove() {
          return NetInfo.isConnected.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _isConnectedSubscriptions.get(handler);
      NetInfo.removeEventListener(eventName, listener);
      _isConnectedSubscriptions.delete(handler);
    },
    fetch: function fetch() {
      return NetInfo.getConnectionInfo().then(_isConnected);
    }
  },

  isConnectionExpensive: function isConnectionExpensive() {
    return Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS'));
  }
};

module.exports = NetInfo;
}, 332, null, "NetInfo");
__d(/* PushNotificationIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter
var RCTPushNotificationManager = require(15             ).PushNotificationManager; // 15 = NativeModules
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

var _notifHandlers = new Map();

var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

var PushNotificationIOS = function () {
  babelHelpers.createClass(PushNotificationIOS, null, [{
    key: 'presentLocalNotification',
    value: function presentLocalNotification(details) {
      RCTPushNotificationManager.presentLocalNotification(details);
    }
  }, {
    key: 'scheduleLocalNotification',
    value: function scheduleLocalNotification(details) {
      RCTPushNotificationManager.scheduleLocalNotification(details);
    }
  }, {
    key: 'cancelAllLocalNotifications',
    value: function cancelAllLocalNotifications() {
      RCTPushNotificationManager.cancelAllLocalNotifications();
    }
  }, {
    key: 'removeAllDeliveredNotifications',
    value: function removeAllDeliveredNotifications() {
      RCTPushNotificationManager.removeAllDeliveredNotifications();
    }
  }, {
    key: 'getDeliveredNotifications',
    value: function getDeliveredNotifications(callback) {
      RCTPushNotificationManager.getDeliveredNotifications(callback);
    }
  }, {
    key: 'removeDeliveredNotifications',
    value: function removeDeliveredNotifications(identifiers) {
      RCTPushNotificationManager.removeDeliveredNotifications(identifiers);
    }
  }, {
    key: 'setApplicationIconBadgeNumber',
    value: function setApplicationIconBadgeNumber(number) {
      RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
    }
  }, {
    key: 'getApplicationIconBadgeNumber',
    value: function getApplicationIconBadgeNumber(callback) {
      RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
    }
  }, {
    key: 'cancelLocalNotifications',
    value: function cancelLocalNotifications(userInfo) {
      RCTPushNotificationManager.cancelLocalNotifications(userInfo);
    }
  }, {
    key: 'getScheduledLocalNotifications',
    value: function getScheduledLocalNotifications(callback) {
      RCTPushNotificationManager.getScheduledLocalNotifications(callback);
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener;
      if (type === 'notification') {
        listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'localNotification') {
        listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'register') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
          handler(registrationInfo.deviceToken);
        });
      } else if (type === 'registrationError') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
          handler(errorInfo);
        });
      }
      _notifHandlers.set(type, listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener = _notifHandlers.get(type);
      if (!listener) {
        return;
      }
      listener.remove();
      _notifHandlers.delete(type);
    }
  }, {
    key: 'requestPermissions',
    value: function requestPermissions(permissions) {
      var requestedPermissions = {};
      if (permissions) {
        requestedPermissions = {
          alert: !!permissions.alert,
          badge: !!permissions.badge,
          sound: !!permissions.sound
        };
      } else {
        requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
      }
      return RCTPushNotificationManager.requestPermissions(requestedPermissions);
    }
  }, {
    key: 'abandonPermissions',
    value: function abandonPermissions() {
      RCTPushNotificationManager.abandonPermissions();
    }
  }, {
    key: 'checkPermissions',
    value: function checkPermissions(callback) {
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTPushNotificationManager.checkPermissions(callback);
    }
  }, {
    key: 'getInitialNotification',
    value: function getInitialNotification() {
      return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
        return notification && new PushNotificationIOS(notification);
      });
    }
  }]);

  function PushNotificationIOS(nativeNotif) {
    var _this = this;

    babelHelpers.classCallCheck(this, PushNotificationIOS);

    this._data = {};
    this._remoteNotificationCompleteCallbackCalled = false;
    this._isRemote = nativeNotif.remote;
    if (this._isRemote) {
      this._notificationId = nativeNotif.notificationId;
    }

    if (nativeNotif.remote) {
      Object.keys(nativeNotif).forEach(function (notifKey) {
        var notifVal = nativeNotif[notifKey];
        if (notifKey === 'aps') {
          _this._alert = notifVal.alert;
          _this._sound = notifVal.sound;
          _this._badgeCount = notifVal.badge;
          _this._category = notifVal.category;
          _this._contentAvailable = notifVal['content-available'];
        } else {
          _this._data[notifKey] = notifVal;
        }
      });
    } else {
      this._badgeCount = nativeNotif.applicationIconBadgeNumber;
      this._sound = nativeNotif.soundName;
      this._alert = nativeNotif.alertBody;
      this._data = nativeNotif.userInfo;
      this._category = nativeNotif.category;
    }
  }

  babelHelpers.createClass(PushNotificationIOS, [{
    key: 'finish',
    value: function finish(fetchResult) {
      if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCallbackCalled) {
        return;
      }
      this._remoteNotificationCompleteCallbackCalled = true;

      RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
    }
  }, {
    key: 'getMessage',
    value: function getMessage() {
      return this._alert;
    }
  }, {
    key: 'getSound',
    value: function getSound() {
      return this._sound;
    }
  }, {
    key: 'getCategory',
    value: function getCategory() {
      return this._category;
    }
  }, {
    key: 'getAlert',
    value: function getAlert() {
      return this._alert;
    }
  }, {
    key: 'getContentAvailable',
    value: function getContentAvailable() {
      return this._contentAvailable;
    }
  }, {
    key: 'getBadgeCount',
    value: function getBadgeCount() {
      return this._badgeCount;
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._data;
    }
  }]);
  return PushNotificationIOS;
}();

PushNotificationIOS.FetchResult = {
  NewData: 'UIBackgroundFetchResultNewData',
  NoData: 'UIBackgroundFetchResultNoData',
  ResultFailed: 'UIBackgroundFetchResultFailed'
};


module.exports = PushNotificationIOS;
}, 333, null, "PushNotificationIOS");
__d(/* Settings */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(91                     ); // 91 = RCTDeviceEventEmitter
var RCTSettingsManager = require(15             ).SettingsManager; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var subscriptions = [];

var Settings = {
  _settings: RCTSettingsManager && RCTSettingsManager.settings,

  get: function get(key) {
    return this._settings[key];
  },
  set: function set(settings) {
    this._settings = babelHelpers.extends(this._settings, settings);
    RCTSettingsManager.setValues(settings);
  },
  watchKeys: function watchKeys(keys, callback) {
    if (typeof keys === 'string') {
      keys = [keys];
    }

    invariant(Array.isArray(keys), 'keys should be a string or array of strings');

    var sid = subscriptions.length;
    subscriptions.push({ keys: keys, callback: callback });
    return sid;
  },
  clearWatch: function clearWatch(watchId) {
    if (watchId < subscriptions.length) {
      subscriptions[watchId] = { keys: [], callback: null };
    }
  },
  _sendObservations: function _sendObservations(body) {
    var _this = this;

    Object.keys(body).forEach(function (key) {
      var newValue = body[key];
      var didChange = _this._settings[key] !== newValue;
      _this._settings[key] = newValue;

      if (didChange) {
        subscriptions.forEach(function (sub) {
          if (sub.keys.indexOf(key) !== -1 && sub.callback) {
            sub.callback();
          }
        });
      }
    });
  }
};

RCTDeviceEventEmitter.addListener('settingsUpdated', Settings._sendObservations.bind(Settings));

module.exports = Settings;
}, 334, null, "Settings");
__d(/* Share */function(global, require, module, exports) {
'use strict';

var Platform = require(53        ); // 53 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processColor = require(118           ); // 118 = processColor

var _require = require(15             ), // 15 = NativeModules
    ActionSheetManager = _require.ActionSheetManager,
    ShareModule = _require.ShareModule;

var Share = function () {
  function Share() {
    babelHelpers.classCallCheck(this, Share);
  }

  babelHelpers.createClass(Share, null, [{
    key: 'share',
    value: function share(content) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');

      if (Platform.OS === 'android') {
        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
        return ShareModule.share(content, options.dialogTitle);
      } else if (Platform.OS === 'ios') {
        return new Promise(function (resolve, reject) {
          ActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, content, options, { tintColor: processColor(options.tintColor) }), function (error) {
            return reject(error);
          }, function (success, activityType) {
            if (success) {
              resolve({
                'action': 'sharedAction',
                'activityType': activityType
              });
            } else {
              resolve({
                'action': 'dismissedAction'
              });
            }
          });
        });
      } else {
        return Promise.reject(new Error('Unsupported platform'));
      }
    }
  }, {
    key: 'sharedAction',
    get: function get() {
      return 'sharedAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return Share;
}();

module.exports = Share;
}, 335, null, "Share");
__d(/* StatusBarIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(90                  ); // 90 = NativeEventEmitter

var _require = require(15             ), // 15 = NativeModules
    StatusBarManager = _require.StatusBarManager;

var StatusBarIOS = function (_NativeEventEmitter) {
  babelHelpers.inherits(StatusBarIOS, _NativeEventEmitter);

  function StatusBarIOS() {
    babelHelpers.classCallCheck(this, StatusBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (StatusBarIOS.__proto__ || Object.getPrototypeOf(StatusBarIOS)).apply(this, arguments));
  }

  return StatusBarIOS;
}(NativeEventEmitter);

module.exports = new StatusBarIOS(StatusBarManager);
}, 336, null, "StatusBarIOS");
__d(/* TimePickerAndroid */function(global, require, module, exports) {
'use strict';

var TimePickerAndroid = {
  open: function open(options) {
    return regeneratorRuntime.async(function open$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt('return', Promise.reject({
              message: 'TimePickerAndroid is not supported on this platform.'
            }));

          case 1:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  }
};

module.exports = TimePickerAndroid;
}, 337, null, "TimePickerAndroid");
__d(/* Vibration */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(15             ).Vibration; // 15 = NativeModules
var Platform = require(53        ); // 53 = Platform

var _vibrating = false;
var _id = 0;

function vibrateByPattern(pattern) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (_vibrating) {
    return;
  }
  _vibrating = true;
  if (pattern[0] === 0) {
    RCTVibration.vibrate();
    pattern = pattern.slice(1);
  }
  if (pattern.length === 0) {
    _vibrating = false;
    return;
  }
  setTimeout(function () {
    return vibrateScheduler(++_id, pattern, repeat, 1);
  }, pattern[0]);
}

function vibrateScheduler(id, pattern, repeat, nextIndex) {
  if (!_vibrating || id !== _id) {
    return;
  }
  RCTVibration.vibrate();
  if (nextIndex >= pattern.length) {
    if (repeat) {
      nextIndex = 0;
    } else {
      _vibrating = false;
      return;
    }
  }
  setTimeout(function () {
    return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
  }, pattern[nextIndex]);
}

var Vibration = {
  vibrate: function vibrate() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (Platform.OS === 'android') {
      if (typeof pattern === 'number') {
        RCTVibration.vibrate(pattern);
      } else if (Array.isArray(pattern)) {
        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    } else {
      if (_vibrating) {
        return;
      }
      if (typeof pattern === 'number') {
        RCTVibration.vibrate();
      } else if (Array.isArray(pattern)) {
        vibrateByPattern(pattern, repeat);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    }
  },

  cancel: function cancel() {
    if (Platform.OS === 'ios') {
      _vibrating = false;
    } else {
      RCTVibration.cancel();
    }
  }
};

module.exports = Vibration;
}, 338, null, "Vibration");
__d(/* VibrationIOS */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(15             ).Vibration; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var VibrationIOS = {
  vibrate: function vibrate() {
    invariant(arguments[0] === undefined, 'Vibration patterns not supported.');
    RCTVibration.vibrate();
  }
};

module.exports = VibrationIOS;
}, 339, null, "VibrationIOS");
__d(/* takeSnapshot */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.takeSnapshot;
}, 340, null, "takeSnapshot");
__d(/* TalkPresidential/build/App.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _react3 = require(379                                 ); // 379 = redux-persist/es/integration/react

var _configuredStore = require(380                      ); // 380 = ./store/configuredStore

var _MainNavigation = require(841                                  ); // 841 = ./screens/navigation/MainNavigation

var _MainNavigation2 = babelHelpers.interopRequireDefault(_MainNavigation);

console.ignoredYellowBox = ['Remote debugger is in a background', 'Warning: Overriding previous layout animation with new one before the first began'];

var App = function (_Component) {
    babelHelpers.inherits(App, _Component);

    function App() {
        babelHelpers.classCallCheck(this, App);
        return babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    babelHelpers.createClass(App, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactRedux.Provider, { store: _configuredStore.store }, _react2.default.createElement(_react3.PersistGate, { persistor: _configuredStore.persistor }, _react2.default.createElement(_reactNative.StatusBar, { barStyle: 'light-content' }), _react2.default.createElement(_MainNavigation2.default, null)));
        }
    }]);
    return App;
}(_react.Component);

exports.default = App;
}, 341, null, "TalkPresidential/build/App.js");
__d(/* react-redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

var _Provider = require(343                    ); // 343 = ./components/Provider

var _Provider2 = _interopRequireDefault(_Provider);

var _connectAdvanced = require(346                           ); // 346 = ./components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _connect = require(350                ); // 350 = ./connect/connect

var _connect2 = _interopRequireDefault(_connect);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.Provider = _Provider2.default;
exports.createProvider = _Provider.createProvider;
exports.connectAdvanced = _connectAdvanced2.default;
exports.connect = _connect2.default;
}, 342, null, "react-redux/lib/index.js");
__d(/* react-redux/lib/components/Provider.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.createProvider = createProvider;

var _react = require(35     ); // 35 = react

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PropTypes = require(344                 ); // 344 = ../utils/PropTypes

var _warning = require(345               ); // 345 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var didWarnAboutReceivingStore = false;
function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }
  didWarnAboutReceivingStore = true;

  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider() {
  var _Provider$childContex;

  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
  var subKey = arguments[1];

  var subscriptionKey = subKey || storeKey + 'Subscription';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      _classCallCheck(this, Provider);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

      _this[storeKey] = props.store;
      return _this;
    }

    Provider.prototype.render = function render() {
      return _react.Children.only(this.props.children);
    };

    return Provider;
  }(_react.Component);

  if (process.env.NODE_ENV !== 'production') {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: _PropTypes.storeShape.isRequired,
    children: _propTypes2.default.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

  return Provider;
}

exports.default = createProvider();
}, 343, null, "react-redux/lib/components/Provider.js");
__d(/* react-redux/lib/utils/PropTypes.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.storeShape = exports.subscriptionShape = undefined;

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
  trySubscribe: _propTypes2.default.func.isRequired,
  tryUnsubscribe: _propTypes2.default.func.isRequired,
  notifyNestedSubs: _propTypes2.default.func.isRequired,
  isSubscribed: _propTypes2.default.func.isRequired
});

var storeShape = exports.storeShape = _propTypes2.default.shape({
  subscribe: _propTypes2.default.func.isRequired,
  dispatch: _propTypes2.default.func.isRequired,
  getState: _propTypes2.default.func.isRequired
});
}, 344, null, "react-redux/lib/utils/PropTypes.js");
__d(/* react-redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 345, null, "react-redux/lib/utils/warning.js");
__d(/* react-redux/lib/components/connectAdvanced.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = connectAdvanced;

var _hoistNonReactStatics = require(347                      ); // 347 = hoist-non-react-statics

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require(35     ); // 35 = react

var _Subscription = require(349                    ); // 349 = ../utils/Subscription

var _Subscription2 = _interopRequireDefault(_Subscription);

var _PropTypes = require(344                 ); // 344 = ../utils/PropTypes

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

var hotReloadingVersion = 0;
var dummyState = {};
function noop() {}
function makeSelectorStateful(sourceSelector, store) {
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);
        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };

  return selector;
}

function connectAdvanced(selectorFactory) {
  var _contextTypes, _childContextTypes;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$getDisplayName = _ref.getDisplayName,
      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
    return 'ConnectAdvanced(' + name + ')';
  } : _ref$getDisplayName,
      _ref$methodName = _ref.methodName,
      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
      _ref$renderCountProp = _ref.renderCountProp,
      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
      _ref$storeKey = _ref.storeKey,
      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
      _ref$withRef = _ref.withRef,
      withRef = _ref$withRef === undefined ? false : _ref$withRef,
      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;

  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

  return function wrapWithConnect(WrappedComponent) {
    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var Connect = function (_Component) {
      _inherits(Connect, _Component);

      function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

        _this.initSelector();
        _this.initSubscription();
        return _this;
      }

      Connect.prototype.getChildContext = function getChildContext() {
        var _ref2;

        var subscription = this.propsMode ? null : this.subscription;
        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
      };

      Connect.prototype.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return;

        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
        return this.wrappedInstance;
      };

      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      Connect.prototype.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      Connect.prototype.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return;

        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      Connect.prototype.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      Connect.prototype.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      Connect.prototype.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;

        var withExtras = _extends({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      Connect.prototype.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(_react.Component);

    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (process.env.NODE_ENV !== 'production') {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        if (this.version !== version) {
          this.version = version;
          this.initSelector();

          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }
          this.initSubscription();
          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
  };
}
}, 346, null, "react-redux/lib/components/connectAdvanced.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
};
}, 347, null, "hoist-non-react-statics/index.js");
__d(/* invariant/browser.js */function(global, require, module, exports) {

'use strict';

var invariant = function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
};

module.exports = invariant;
}, 348, null, "invariant/browser.js");
__d(/* react-redux/lib/utils/Subscription.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var current = [];
  var next = [];

  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);

      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;

        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub, onStateChange) {
    _classCallCheck(this, Subscription);

    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  Subscription.prototype.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  Subscription.prototype.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

      this.listeners = createListenerCollection();
    }
  };

  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

exports.default = Subscription;
}, 349, null, "react-redux/lib/utils/Subscription.js");
__d(/* react-redux/lib/connect/connect.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.createConnect = createConnect;

var _connectAdvanced = require(346                            ); // 346 = ../components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _shallowEqual = require(351                    ); // 351 = ../utils/shallowEqual

var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

var _mapDispatchToProps = require(352                   ); // 352 = ./mapDispatchToProps

var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

var _mapStateToProps = require(375                ); // 375 = ./mapStateToProps

var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

var _mergeProps = require(376           ); // 376 = ./mergeProps

var _mergeProps2 = _interopRequireDefault(_mergeProps);

var _selectorFactory = require(377                ); // 377 = ./selectorFactory

var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
  };
}

function strictEqual(a, b) {
  return a === b;
}

function createConnect() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref2$pure = _ref2.pure,
        pure = _ref2$pure === undefined ? true : _ref2$pure,
        _ref2$areStatesEqual = _ref2.areStatesEqual,
        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

    return connectHOC(selectorFactory, _extends({
      methodName: 'connect',

      getDisplayName: function getDisplayName(name) {
        return 'Connect(' + name + ')';
      },

      shouldHandleStateChanges: Boolean(mapStateToProps),

      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual

    }, extraOptions));
  };
}

exports.default = createConnect();
}, 350, null, "react-redux/lib/connect/connect.js");
__d(/* react-redux/lib/utils/shallowEqual.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
}, 351, null, "react-redux/lib/utils/shallowEqual.js");
__d(/* react-redux/lib/connect/mapDispatchToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

var _redux = require(353    ); // 353 = redux

var _wrapMapToProps = require(373               ); // 373 = ./wrapMapToProps

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return { dispatch: dispatch };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
  }) : undefined;
}

exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
}, 352, null, "react-redux/lib/connect/mapDispatchToProps.js");
__d(/* redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = require(354            ); // 354 = ./createStore

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = require(368                ); // 368 = ./combineReducers

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = require(370                   ); // 370 = ./bindActionCreators

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = require(371                ); // 371 = ./applyMiddleware

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = require(372        ); // 372 = ./compose

var _compose2 = _interopRequireDefault(_compose);

var _warning = require(369              ); // 369 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2['default'];
exports.combineReducers = _combineReducers2['default'];
exports.bindActionCreators = _bindActionCreators2['default'];
exports.applyMiddleware = _applyMiddleware2['default'];
exports.compose = _compose2['default'];
}, 353, null, "redux/lib/index.js");
__d(/* redux/lib/createStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.ActionTypes = undefined;
exports['default'] = createStore;

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require(365                ); // 365 = symbol-observable

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'

};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function getState() {
    return currentState;
  }

  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function dispatch(action) {
    if (!(0, _isPlainObject2['default'])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2['default']] = function () {
      return this;
    }, _ref;
  }

  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
}
}, 354, null, "redux/lib/createStore.js");
__d(/* lodash/isPlainObject.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    getPrototype = require(362              ), // 362 = ./_getPrototype
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var objectTag = '[object Object]';

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var objectCtorString = funcToString.call(Object);

function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;
}, 355, null, "lodash/isPlainObject.js");
__d(/* lodash/_baseGetTag.js */function(global, require, module, exports) {var Symbol = require(357        ), // 357 = ./_Symbol
    getRawTag = require(360           ), // 360 = ./_getRawTag
    objectToString = require(361                ); // 361 = ./_objectToString

var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;
}, 356, null, "lodash/_baseGetTag.js");
__d(/* lodash/_Symbol.js */function(global, require, module, exports) {var root = require(358      ); // 358 = ./_root

var Symbol = root.Symbol;

module.exports = Symbol;
}, 357, null, "lodash/_Symbol.js");
__d(/* lodash/_root.js */function(global, require, module, exports) {var freeGlobal = require(359            ); // 359 = ./_freeGlobal

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;
}, 358, null, "lodash/_root.js");
__d(/* lodash/_freeGlobal.js */function(global, require, module, exports) {
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;
}, 359, null, "lodash/_freeGlobal.js");
__d(/* lodash/_getRawTag.js */function(global, require, module, exports) {var Symbol = require(357        ); // 357 = ./_Symbol

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var nativeObjectToString = objectProto.toString;

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;
}, 360, null, "lodash/_getRawTag.js");
__d(/* lodash/_objectToString.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var nativeObjectToString = objectProto.toString;

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;
}, 361, null, "lodash/_objectToString.js");
__d(/* lodash/_getPrototype.js */function(global, require, module, exports) {var overArg = require(363         ); // 363 = ./_overArg

var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;
}, 362, null, "lodash/_getPrototype.js");
__d(/* lodash/_overArg.js */function(global, require, module, exports) {
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;
}, 363, null, "lodash/_overArg.js");
__d(/* lodash/isObjectLike.js */function(global, require, module, exports) {
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;
}, 364, null, "lodash/isObjectLike.js");
__d(/* symbol-observable/index.js */function(global, require, module, exports) {module.exports = require(366          ); // 366 = ./lib/index
}, 365, null, "symbol-observable/index.js");
__d(/* symbol-observable/lib/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require(367         ); // 367 = ./ponyfill

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}, 366, null, "symbol-observable/lib/index.js");
__d(/* symbol-observable/lib/ponyfill.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
}, 367, null, "symbol-observable/lib/ponyfill.js");
__d(/* redux/lib/combineReducers.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = combineReducers;

var _createStore = require(354            ); // 354 = ./createStore

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(369              ); // 369 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2['default'])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (process.env.NODE_ENV !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (process.env.NODE_ENV !== 'production') {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (process.env.NODE_ENV !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        (0, _warning2['default'])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
}, 368, null, "redux/lib/combineReducers.js");
__d(/* redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 369, null, "redux/lib/utils/warning.js");
__d(/* redux/lib/bindActionCreators.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
}, 370, null, "redux/lib/bindActionCreators.js");
__d(/* redux/lib/applyMiddleware.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports['default'] = applyMiddleware;

var _compose = require(372        ); // 372 = ./compose

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
}, 371, null, "redux/lib/applyMiddleware.js");
__d(/* redux/lib/compose.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports["default"] = compose;


function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}
}, 372, null, "redux/lib/compose.js");
__d(/* react-redux/lib/connect/wrapMapToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
exports.getDependsOnOwnProps = getDependsOnOwnProps;
exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

var _verifyPlainObject = require(374                         ); // 374 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };

    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);

      return props;
    };

    return proxy;
  };
}
}, 373, null, "react-redux/lib/connect/wrapMapToProps.js");
__d(/* react-redux/lib/utils/verifyPlainObject.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifyPlainObject;

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(345        ); // 345 = ./warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verifyPlainObject(value, displayName, methodName) {
  if (!(0, _isPlainObject2.default)(value)) {
    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
  }
}
}, 374, null, "react-redux/lib/utils/verifyPlainObject.js");
__d(/* react-redux/lib/connect/mapStateToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

var _wrapMapToProps = require(373               ); // 373 = ./wrapMapToProps

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}

exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
}, 375, null, "react-redux/lib/connect/mapStateToProps.js");
__d(/* react-redux/lib/connect/mergeProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.defaultMergeProps = defaultMergeProps;
exports.wrapMergePropsFunc = wrapMergePropsFunc;
exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

var _verifyPlainObject = require(374                         ); // 374 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;

    var hasRunOnce = false;
    var mergedProps = void 0;

    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;

        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
}, 376, null, "react-redux/lib/connect/mergeProps.js");
__d(/* react-redux/lib/connect/selectorFactory.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
exports.default = finalPropsSelectorFactory;

var _verifySubselectors = require(378                   ); // 378 = ./verifySubselectors

var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;

  var hasRunAtLeastOnce = false;
  var state = void 0;
  var ownProps = void 0;
  var stateProps = void 0;
  var dispatchProps = void 0;
  var mergedProps = void 0;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;

    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;

    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
}, 377, null, "react-redux/lib/connect/selectorFactory.js");
__d(/* react-redux/lib/connect/verifySubselectors.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifySubselectors;

var _warning = require(345               ); // 345 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}
}, 378, null, "react-redux/lib/connect/verifySubselectors.js");
__d(/* redux-persist/es/integration/react.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PersistGate = undefined;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var PersistGate = exports.PersistGate = function (_PureComponent) {
  _inherits(PersistGate, _PureComponent);

  function PersistGate() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PersistGate);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PersistGate.__proto__ || Object.getPrototypeOf(PersistGate)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      bootstrapped: false
    }, _this.handlePersistorState = function () {
      var persistor = _this.props.persistor;

      var _persistor$getState = persistor.getState(),
          bootstrapped = _persistor$getState.bootstrapped;

      if (bootstrapped) {
        if (_this.props.onBeforeLift) {
          Promise.resolve(_this.props.onBeforeLift()).then(function () {
            return _this.setState({ bootstrapped: true });
          }).catch(function () {
            return _this.setState({ bootstrapped: true });
          });
        } else {
          _this.setState({ bootstrapped: true });
        }
        _this._unsubscribe && _this._unsubscribe();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PersistGate, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._unsubscribe = this.props.persistor.subscribe(this.handlePersistorState);
      this.handlePersistorState();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._unsubscribe && this._unsubscribe();
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.bootstrapped ? this.props.children : this.props.loading;
    }
  }]);

  return PersistGate;
}(_react.PureComponent);
PersistGate.defaultProps = {
  loading: null
};
}, 379, null, "redux-persist/es/integration/react.js");
__d(/* TalkPresidential/build/store/configuredStore.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.persistor = exports.store = undefined;

var _redux = require(353    ); // 353 = redux

var _reduxPersist = require(381            ); // 381 = redux-persist

var _sagas = require(393       ); // 393 = ../sagas

var _storage = require(533                       ); // 533 = redux-persist/es/storage

var _storage2 = babelHelpers.interopRequireDefault(_storage);

var _reduxSaga = require(534         ); // 534 = redux-saga

var _reduxSaga2 = babelHelpers.interopRequireDefault(_reduxSaga);

var _remoteReduxDevtools = require(539                    ); // 539 = remote-redux-devtools

var _remoteReduxDevtools2 = babelHelpers.interopRequireDefault(_remoteReduxDevtools);

var _reducers = require(680          ); // 680 = ../reducers

var _reducers2 = babelHelpers.interopRequireDefault(_reducers);

var reduxPersistConfig = {
    key: 'root',
    storage: _storage2.default,
    whitelist: ['data', 'auth']
};
var reducer = (0, _reduxPersist.persistCombineReducers)(reduxPersistConfig, _reducers2.default);
var sagaMiddleware = (0, _reduxSaga2.default)();
var store = exports.store = (0, _redux.createStore)(reducer, (0, _redux.compose)((0, _redux.applyMiddleware)(sagaMiddleware), (0, _remoteReduxDevtools2.default)()));
sagaMiddleware.run(_sagas.rootSaga);
var persistor = exports.persistor = (0, _reduxPersist.persistStore)(store);
}, 380, null, "TalkPresidential/build/store/configuredStore.js");
__d(/* redux-persist/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _persistReducer = require(382               ); // 382 = ./persistReducer

Object.defineProperty(exports, 'persistReducer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_persistReducer).default;
  }
});

var _persistCombineReducers = require(388                       ); // 388 = ./persistCombineReducers

Object.defineProperty(exports, 'persistCombineReducers', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_persistCombineReducers).default;
  }
});

var _persistStore = require(390             ); // 390 = ./persistStore

Object.defineProperty(exports, 'persistStore', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_persistStore).default;
  }
});

var _createMigrate = require(391              ); // 391 = ./createMigrate

Object.defineProperty(exports, 'createMigrate', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_createMigrate).default;
  }
});

var _createTransform = require(392                ); // 392 = ./createTransform

Object.defineProperty(exports, 'createTransform', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_createTransform).default;
  }
});

var _getStoredState = require(386               ); // 386 = ./getStoredState

Object.defineProperty(exports, 'getStoredState', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_getStoredState).default;
  }
});

var _createPersistoid = require(385                 ); // 385 = ./createPersistoid

Object.defineProperty(exports, 'createPersistoid', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_createPersistoid).default;
  }
});

var _purgeStoredState = require(387                 ); // 387 = ./purgeStoredState

Object.defineProperty(exports, 'purgeStoredState', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_purgeStoredState).default;
  }
});

var _constants = require(383          ); // 383 = ./constants

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _constants[key];
    }
  });
});

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
}, 381, null, "redux-persist/lib/index.js");
__d(/* redux-persist/lib/persistReducer.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = persistReducer;

var _constants = require(383          ); // 383 = ./constants

var _autoMergeLevel = require(384                                ); // 384 = ./stateReconciler/autoMergeLevel1

var _autoMergeLevel2 = _interopRequireDefault(_autoMergeLevel);

var _createPersistoid = require(385                 ); // 385 = ./createPersistoid

var _createPersistoid2 = _interopRequireDefault(_createPersistoid);

var _getStoredState = require(386               ); // 386 = ./getStoredState

var _getStoredState2 = _interopRequireDefault(_getStoredState);

var _purgeStoredState = require(387                 ); // 387 = ./purgeStoredState

var _purgeStoredState2 = _interopRequireDefault(_purgeStoredState);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function persistReducer(config, baseReducer) {
  if (process.env.NODE_ENV !== 'production') {
    if (!config) throw new Error('config is required for persistReducer');
    if (!config.key) throw new Error('key is required in persistor config');
    if (!config.storage) throw new Error("redux-persist: config.storage is required. Try using `import storageLocal from 'redux-persist/es/storages/local'");
  }

  var version = config.version !== undefined ? config.version : _constants.DEFAULT_VERSION;
  var debug = config.debug || false;
  var stateReconciler = config.stateReconciler === undefined ? _autoMergeLevel2.default : config.stateReconciler;
  var getStoredState = config.getStoredState || _getStoredState2.default;
  var _persistoid = null;
  var _purge = false;
  var _paused = true;

  return function (state, action) {
    var _ref = state || {},
        _persist = _ref._persist,
        rest = _objectWithoutProperties(_ref, ['_persist']);

    var restState = rest;

    if (action.type === _constants.PERSIST) {
      _paused = false;

      if (!_persistoid) _persistoid = (0, _createPersistoid2.default)(config);

      if (_persist) return state;
      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');

      action.register(config.key);

      getStoredState(config).then(function (restoredState) {
        var migrate = config.migrate || function (s, v) {
          return Promise.resolve(s);
        };
        migrate(restoredState, version).then(function (migratedState) {
          action.rehydrate(config.key, migratedState);
        }, function (migrateErr) {
          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);
          action.rehydrate(config.key, undefined, migrateErr);
        });
      }, function (err) {
        action.rehydrate(config.key, undefined, err);
      });

      return _extends({}, baseReducer(restState, action), {
        _persist: { version: version, rehydrated: false }
      });
    } else if (action.type === _constants.PURGE) {
      _purge = true;
      action.result((0, _purgeStoredState2.default)(config));
      return _extends({}, baseReducer(restState, action), {
        _persist: _persist
      });
    } else if (action.type === _constants.FLUSH) {
      action.result(_persistoid && _persistoid.flush());
      return _extends({}, baseReducer(restState, action), {
        _persist: _persist
      });
    } else if (action.type === _constants.PAUSE) {
      _paused = true;
    } else if (action.type === _constants.REHYDRATE) {
      if (_purge) return _extends({}, restState, {
        _persist: _extends({}, _persist, { rehydrated: true })

      });if (action.key === config.key) {
        var reducedState = baseReducer(restState, action);
        var inboundState = action.payload;
        var reconciledRest = stateReconciler !== false ? stateReconciler(inboundState, state, reducedState, config) : reducedState;

        return _extends({}, reconciledRest, {
          _persist: _extends({}, _persist, { rehydrated: true })
        });
      }
    }

    if (!_persist) return baseReducer(state, action);

    var newState = _extends({}, baseReducer(restState, action), {
      _persist: _persist
    });_persist.rehydrated && _persistoid && !_paused && _persistoid.update(newState);
    return newState;
  };
}
}, 382, null, "redux-persist/lib/persistReducer.js");
__d(/* redux-persist/lib/constants.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
var KEY_PREFIX = exports.KEY_PREFIX = 'persist:';
var FLUSH = exports.FLUSH = 'persist/FLUSH';
var REHYDRATE = exports.REHYDRATE = 'persist/REHYDRATE';
var PAUSE = exports.PAUSE = 'persist/PAUSE';
var PERSIST = exports.PERSIST = 'persist/PERSIST';
var PURGE = exports.PURGE = 'persist/PURGE';
var REGISTER = exports.REGISTER = 'persist/REGISTER';
var DEFAULT_VERSION = exports.DEFAULT_VERSION = -1;
}, 383, null, "redux-persist/lib/constants.js");
__d(/* redux-persist/lib/stateReconciler/autoMergeLevel1.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = autoMergeLevel1;
function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {
  var debug = _ref.debug;

  if (process.env.NODE_ENV !== 'production') {
    if (inboundState) {
      Object.keys(inboundState).forEach(function (key) {
        if (!originalState.hasOwnProperty(key)) console.log('\n          redux-persist/stateReconciler: state missing key\n          "' + key + '". state-manager will still store the rehydrated value. If you\n          removed ' + key + ' from your reducer tree, you should write a migration to\n          remove ' + key + ' from stored state. If you code-split ' + key + ' reducer, then\n          this is the expected behavior.\n        ');

        if (originalState[key] && _typeof(originalState[key]) === 'object' && inboundState[key] && _typeof(inboundState[key]) === 'object') {
          var stateKeys = originalState[key] ? Object.keys(originalState[key]) : [];
          var inboundStateKeys = Object.keys(inboundState[key]);
          stateKeys.forEach(function (checkKey) {
            if (inboundState[checkKey] === 'undefined') console.log('\n              redux-persist/stateReconciler: initialState for "' + key + '"\n              has property "' + checkKey + '" which is missing in rehydratedState. After\n              rehydration, "' + checkKey + '" will be null. If you recently added\n              ' + checkKey + ' to your ' + key + ' reducer, consider adding ' + checkKey + ' to a\n              state migration.\n            ');
          });
        }
      });
    }
  }

  var newState = _extends({}, reducedState);

  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {
    Object.keys(inboundState).forEach(function (key) {
      if (key === '_persist') return;

      if (originalState[key] !== reducedState[key]) {
        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);
        return;
      }

      newState[key] = inboundState[key];
    });
  }

  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \'' + Object.keys(inboundState).join(', ') + '\'');

  return newState;
}
}, 384, null, "redux-persist/lib/stateReconciler/autoMergeLevel1.js");
__d(/* redux-persist/lib/createPersistoid.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = createPersistoid;

var _constants = require(383          ); // 383 = ./constants

function createPersistoid(config) {
  var blacklist = config.blacklist || null;
  var whitelist = config.whitelist || null;
  var transforms = config.transforms || [];
  var throttle = config.throttle || 0;
  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX) + config.key;

  var storage = config.storage;

  var lastState = {};
  var stagedState = {};
  var keysToProcess = [];
  var timeIterator = null;
  var writePromise = null;

  var update = function update(state) {
    Object.keys(state).forEach(function (key) {
      var subState = state[key];
      if (!passWhitelistBlacklist(key)) return;
      if (lastState[key] === state[key]) return;
      if (keysToProcess.indexOf(key) !== -1) return;
      keysToProcess.push(key);
    });

    if (timeIterator === null) {
      timeIterator = setInterval(processNextKey, throttle);
    }

    lastState = state;
  };

  function processNextKey() {
    if (keysToProcess.length === 0) {
      if (timeIterator) clearInterval(timeIterator);
      timeIterator = null;
      return;
    }

    var key = keysToProcess.shift();
    var endState = transforms.reduce(function (subState, transformer) {
      return transformer.in(subState, key);
    }, lastState[key]);
    if (typeof endState !== 'undefined') stagedWrite(key, endState);
  }

  function stagedWrite(key, endState) {
    try {
      stagedState[key] = serialize(endState);
    } catch (err) {
      console.error('redux-persist/createPersistoid: error serializing state', err);
    }
    if (keysToProcess.length === 0) {
      Object.keys(stagedState).forEach(function (key) {
        if (lastState[key] === undefined) {
          delete stagedState[key];
        }
      });

      writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);
    }
  }

  function passWhitelistBlacklist(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return false;
    if (blacklist && blacklist.indexOf(key) !== -1) return false;
    return true;
  }

  function onWriteFail(err) {
    if (err && process.env.NODE_ENV !== 'production') {
      console.error('Error storing data', err);
    }
  }

  var flush = function flush() {
    while (keysToProcess.length !== 0) {
      processNextKey();
    }
    return writePromise || Promise.resolve();
  };

  return {
    update: update,
    flush: flush
  };
}

function serialize(data) {
  return JSON.stringify(data);
}
}, 385, null, "redux-persist/lib/createPersistoid.js");
__d(/* redux-persist/lib/getStoredState.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = getStoredState;

var _constants = require(383          ); // 383 = ./constants

function getStoredState(config) {
  var transforms = config.transforms || [];
  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX) + config.key;
  var storage = config.storage;
  var debug = config.debug;

  return storage.getItem(storageKey).then(function (serialized) {
    if (!serialized) return undefined;else {
      try {
        var state = {};
        var rawState = deserialize(serialized);
        Object.keys(rawState).forEach(function (key) {
          state[key] = transforms.reduceRight(function (subState, transformer) {
            return transformer.out(subState, key);
          }, deserialize(rawState[key]));
        });
        return state;
      } catch (err) {
        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/getStoredState: Error restoring data ' + serialized, err);
        throw err;
      }
    }
  });
}

function deserialize(serial) {
  return JSON.parse(serial);
}
}, 386, null, "redux-persist/lib/getStoredState.js");
__d(/* redux-persist/lib/purgeStoredState.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = purgeStoredState;

var _constants = require(383          ); // 383 = ./constants

function purgeStoredState(config) {
  var storage = config.storage;
  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX) + config.key;
  return storage.removeItem(storageKey, warnIfRemoveError);
}

function warnIfRemoveError(err) {
  if (err && process.env.NODE_ENV !== 'production') {
    console.error('redux-persist/purgeStoredState: Error purging data stored state', err);
  }
}
}, 387, null, "redux-persist/lib/purgeStoredState.js");
__d(/* redux-persist/lib/persistCombineReducers.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = persistCombineReducers;

var _redux = require(353    ); // 353 = redux

var _persistReducer = require(382               ); // 382 = ./persistReducer

var _persistReducer2 = _interopRequireDefault(_persistReducer);

var _autoMergeLevel = require(389                                ); // 389 = ./stateReconciler/autoMergeLevel2

var _autoMergeLevel2 = _interopRequireDefault(_autoMergeLevel);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function persistCombineReducers(config, reducers) {
  config.stateReconciler = config.stateReconciler || _autoMergeLevel2.default;
  return (0, _persistReducer2.default)(config, (0, _redux.combineReducers)(reducers));
}
}, 388, null, "redux-persist/lib/persistCombineReducers.js");
__d(/* redux-persist/lib/stateReconciler/autoMergeLevel2.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = autoMergeLevel2;
function autoMergeLevel2(inboundState, originalState, reducedState, _ref) {
  var debug = _ref.debug;

  if (process.env.NODE_ENV !== 'production') {
    if (inboundState) {
      Object.keys(inboundState).forEach(function (key) {
        if (!originalState.hasOwnProperty(key)) console.log('\n          redux-persist/stateReconciler: state missing key\n          "' + key + '". state-manager will still store the rehydrated value. If you\n          removed ' + key + ' from your reducer tree, you should write a migration to\n          remove ' + key + ' from stored state. If you code-split ' + key + ' reducer, then\n          this is the expected behavior.\n        ');

        if (originalState[key] && _typeof(originalState[key]) === 'object' && inboundState[key] && _typeof(inboundState[key]) === 'object') {
          var stateKeys = originalState[key] ? Object.keys(originalState[key]) : [];
          var inboundStateKeys = Object.keys(inboundState[key]);
          stateKeys.forEach(function (checkKey) {
            if (inboundState[checkKey] === 'undefined') console.log('\n              redux-persist/stateReconciler: initialState for "' + key + '"\n              has property "' + checkKey + '" which is missing in rehydratedState. After\n              rehydration, "' + checkKey + '" will be null. If you recently added\n              ' + checkKey + ' to your ' + key + ' reducer, consider adding ' + checkKey + ' to a\n              state migration.\n            ');
          });
        }
      });
    }
  }

  var newState = _extends({}, reducedState);

  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {
    Object.keys(inboundState).forEach(function (key) {
      if (key === '_persist') return;

      if (originalState[key] !== reducedState[key]) {
        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);
        return;
      }
      if (isPlainEnoughObject(reducedState[key])) {
        newState[key] = _extends({}, newState[key], inboundState[key]);
        return;
      }

      newState[key] = inboundState[key];
    });
  }

  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \'' + Object.keys(inboundState).join(', ') + '\'');

  return newState;
}

function isPlainEnoughObject(o) {
  return o !== null && !Array.isArray(o) && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';
}
}, 389, null, "redux-persist/lib/stateReconciler/autoMergeLevel2.js");
__d(/* redux-persist/lib/persistStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = persistStore;

var _redux = require(353    ); // 353 = redux

var _persistReducer = require(382               ); // 382 = ./persistReducer

var _persistReducer2 = _interopRequireDefault(_persistReducer);

var _constants = require(383          ); // 383 = ./constants

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

var initialState = {
  registry: [],
  bootstrapped: false
};

var persistorReducer = function persistorReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case _constants.REGISTER:
      return _extends({}, state, { registry: [].concat(_toConsumableArray(state.registry), [action.key]) });
    case _constants.REHYDRATE:
      var firstIndex = state.registry.indexOf(action.key);
      var registry = [].concat(_toConsumableArray(state.registry));
      registry.splice(firstIndex, 1);
      return _extends({}, state, { registry: registry, bootstrapped: registry.length === 0 });
    default:
      return state;
  }
};

function persistStore(store, persistorOptions, cb) {
  var options = persistorOptions || {};

  if (process.env.NODE_ENV !== 'production') {
    var bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];
    bannedKeys.forEach(function (k) {
      if (!!options[k]) console.error('redux-persist: invalid option passed to persistStore: "' + k + '". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.');
    });
  }
  var boostrappedCb = cb || false;
  var persistor = (0, _redux.createStore)(persistorReducer, undefined, options.enhancer);

  persistor.purge = function () {
    var results = [];
    store.dispatch({
      type: _constants.PURGE,
      result: function result(purgeResult) {
        results.push(purgeResult);
      }
    });
    return Promise.all(results);
  };

  persistor.flush = function () {
    var results = [];
    store.dispatch({
      type: _constants.FLUSH,
      result: function result(flushResult) {
        results.push(flushResult);
      }
    });
    return Promise.all(results);
  };

  persistor.pause = function () {
    store.dispatch({
      type: _constants.PAUSE
    });
  };

  var register = function register(key) {
    persistor.dispatch({
      type: _constants.REGISTER,
      key: key
    });
  };

  var rehydrate = function rehydrate(key, payload, err) {
    var rehydrateAction = {
      type: _constants.REHYDRATE,
      payload: payload,
      err: err,
      key: key
    };store.dispatch(rehydrateAction);
    persistor.dispatch(rehydrateAction);
    if (boostrappedCb && persistor.getState().bootstrapped) {
      boostrappedCb();
      boostrappedCb = false;
    }
  };

  persistor.persist = function () {
    store.dispatch({ type: _constants.PERSIST, register: register, rehydrate: rehydrate });
  };

  persistor.persist();

  return persistor;
}
}, 390, null, "redux-persist/lib/persistStore.js");
__d(/* redux-persist/lib/createMigrate.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = createMigrate;

var _constants = require(383          ); // 383 = ./constants

function createMigrate(migrations, config) {
  var _ref = config || {},
      debug = _ref.debug;

  return function (state, currentVersion) {
    if (!state) {
      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: no inbound state, skipping migration');
      return Promise.resolve(undefined);
    }

    var inboundVersion = state._persist && state._persist.version !== undefined ? state._persist.version : _constants.DEFAULT_VERSION;
    if (inboundVersion === currentVersion) {
      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: versions match, noop migration');
      return Promise.resolve(state);
    }
    if (inboundVersion > currentVersion) {
      if (process.env.NODE_ENV !== 'production') console.error('redux-persist: downgrading version is not supported');
      return Promise.resolve(state);
    }

    var migrationKeys = Object.keys(migrations).map(function (ver) {
      return parseInt(ver);
    }).filter(function (key) {
      return currentVersion >= key && key > inboundVersion;
    }).sort(function (a, b) {
      return a - b;
    });

    if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: migrationKeys', migrationKeys);
    try {
      var migratedState = migrationKeys.reduce(function (state, versionKey) {
        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: running migration for versionKey', versionKey);
        return migrations[versionKey](state);
      }, state);
      return Promise.resolve(migratedState);
    } catch (err) {
      return Promise.reject(err);
    }
  };
}
}, 391, null, "redux-persist/lib/createMigrate.js");
__d(/* redux-persist/lib/createTransform.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.default = createTransform;
function createTransform(inbound, outbound) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var whitelist = config.whitelist || null;
  var blacklist = config.blacklist || null;

  function whitelistBlacklistCheck(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return true;
    if (blacklist && blacklist.indexOf(key) !== -1) return true;
    return false;
  }

  return {
    in: function _in(state, key) {
      return !whitelistBlacklistCheck(key) && inbound ? inbound(state, key) : state;
    },
    out: function out(state, key) {
      return !whitelistBlacklistCheck(key) && outbound ? outbound(state, key) : state;
    }
  };
}
}, 392, null, "redux-persist/lib/createTransform.js");
__d(/* TalkPresidential/build/sagas/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rootSaga = rootSaga;

var _effects = require(394                 ); // 394 = redux-saga/effects

var _login = require(405             ); // 405 = ../sagas/login

var _friendsSaga = require(481                   ); // 481 = ../sagas/friendsSaga

var _dataSaga = require(504         ); // 504 = ./dataSaga

var _currentGameSagas = require(506                 ); // 506 = ./currentGameSagas

var _composeTurnSagas = require(508                 ); // 508 = ./composeTurnSagas

var _gamesListSagas = require(531               ); // 531 = ./gamesListSagas

var _marked = regeneratorRuntime.mark(rootSaga);

function rootSaga() {
    return regeneratorRuntime.wrap(function rootSaga$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return (0, _effects.fork)(_gamesListSagas.gamesListSaga);

                case 2:
                    _context.next = 4;
                    return (0, _effects.fork)(_composeTurnSagas.composeTurnSagas);

                case 4:
                    _context.next = 6;
                    return (0, _effects.fork)(_currentGameSagas.gameSagas);

                case 6:
                    _context.next = 8;
                    return (0, _effects.fork)(_dataSaga.dataSaga);

                case 8:
                    _context.next = 10;
                    return (0, _effects.fork)(_login.loginSaga);

                case 10:
                    _context.next = 12;
                    return (0, _effects.fork)(_friendsSaga.friendsSaga);

                case 12:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this);
}
}, 393, null, "TalkPresidential/build/sagas/index.js");
__d(/* redux-saga/lib/effects.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _io = require(395            ); // 395 = ./internal/io

Object.defineProperty(exports, 'take', {
  enumerable: true,
  get: function get() {
    return _io.take;
  }
});
Object.defineProperty(exports, 'takem', {
  enumerable: true,
  get: function get() {
    return _io.takem;
  }
});
Object.defineProperty(exports, 'put', {
  enumerable: true,
  get: function get() {
    return _io.put;
  }
});
Object.defineProperty(exports, 'all', {
  enumerable: true,
  get: function get() {
    return _io.all;
  }
});
Object.defineProperty(exports, 'race', {
  enumerable: true,
  get: function get() {
    return _io.race;
  }
});
Object.defineProperty(exports, 'call', {
  enumerable: true,
  get: function get() {
    return _io.call;
  }
});
Object.defineProperty(exports, 'apply', {
  enumerable: true,
  get: function get() {
    return _io.apply;
  }
});
Object.defineProperty(exports, 'cps', {
  enumerable: true,
  get: function get() {
    return _io.cps;
  }
});
Object.defineProperty(exports, 'fork', {
  enumerable: true,
  get: function get() {
    return _io.fork;
  }
});
Object.defineProperty(exports, 'spawn', {
  enumerable: true,
  get: function get() {
    return _io.spawn;
  }
});
Object.defineProperty(exports, 'join', {
  enumerable: true,
  get: function get() {
    return _io.join;
  }
});
Object.defineProperty(exports, 'cancel', {
  enumerable: true,
  get: function get() {
    return _io.cancel;
  }
});
Object.defineProperty(exports, 'select', {
  enumerable: true,
  get: function get() {
    return _io.select;
  }
});
Object.defineProperty(exports, 'actionChannel', {
  enumerable: true,
  get: function get() {
    return _io.actionChannel;
  }
});
Object.defineProperty(exports, 'cancelled', {
  enumerable: true,
  get: function get() {
    return _io.cancelled;
  }
});
Object.defineProperty(exports, 'flush', {
  enumerable: true,
  get: function get() {
    return _io.flush;
  }
});
Object.defineProperty(exports, 'getContext', {
  enumerable: true,
  get: function get() {
    return _io.getContext;
  }
});
Object.defineProperty(exports, 'setContext', {
  enumerable: true,
  get: function get() {
    return _io.setContext;
  }
});
Object.defineProperty(exports, 'takeEvery', {
  enumerable: true,
  get: function get() {
    return _io.takeEvery;
  }
});
Object.defineProperty(exports, 'takeLatest', {
  enumerable: true,
  get: function get() {
    return _io.takeLatest;
  }
});
Object.defineProperty(exports, 'throttle', {
  enumerable: true,
  get: function get() {
    return _io.throttle;
  }
});
}, 394, null, "redux-saga/lib/effects.js");
__d(/* redux-saga/lib/internal/io.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.asEffect = exports.takem = exports.detach = undefined;
exports.take = take;
exports.put = put;
exports.all = all;
exports.race = race;
exports.call = call;
exports.apply = apply;
exports.cps = cps;
exports.fork = fork;
exports.spawn = spawn;
exports.join = join;
exports.cancel = cancel;
exports.select = select;
exports.actionChannel = actionChannel;
exports.cancelled = cancelled;
exports.flush = flush;
exports.getContext = getContext;
exports.setContext = setContext;
exports.takeEvery = takeEvery;
exports.takeLatest = takeLatest;
exports.throttle = throttle;

var _utils = require(396      ); // 396 = ./utils

var _sagaHelpers = require(397            ); // 397 = ./sagaHelpers

var IO = (0, _utils.sym)('IO');
var TAKE = 'TAKE';
var PUT = 'PUT';
var ALL = 'ALL';
var RACE = 'RACE';
var CALL = 'CALL';
var CPS = 'CPS';
var FORK = 'FORK';
var JOIN = 'JOIN';
var CANCEL = 'CANCEL';
var SELECT = 'SELECT';
var ACTION_CHANNEL = 'ACTION_CHANNEL';
var CANCELLED = 'CANCELLED';
var FLUSH = 'FLUSH';
var GET_CONTEXT = 'GET_CONTEXT';
var SET_CONTEXT = 'SET_CONTEXT';

var TEST_HINT = '\n(HINT: if you are getting this errors in tests, consider using createMockTask from redux-saga/utils)';

var effect = function effect(type, payload) {
  var _ref;

  return _ref = {}, _ref[IO] = true, _ref[type] = payload, _ref;
};

var detach = exports.detach = function detach(eff) {
  (0, _utils.check)(asEffect.fork(eff), _utils.is.object, 'detach(eff): argument must be a fork effect');
  eff[FORK].detached = true;
  return eff;
};

function take() {
  var patternOrChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';

  if (arguments.length) {
    (0, _utils.check)(arguments[0], _utils.is.notUndef, 'take(patternOrChannel): patternOrChannel is undefined');
  }
  if (_utils.is.pattern(patternOrChannel)) {
    return effect(TAKE, { pattern: patternOrChannel });
  }
  if (_utils.is.channel(patternOrChannel)) {
    return effect(TAKE, { channel: patternOrChannel });
  }
  throw new Error('take(patternOrChannel): argument ' + String(patternOrChannel) + ' is not valid channel or a valid pattern');
}

take.maybe = function () {
  var eff = take.apply(undefined, arguments);
  eff[TAKE].maybe = true;
  return eff;
};

var takem = exports.takem = (0, _utils.deprecate)(take.maybe, (0, _utils.updateIncentive)('takem', 'take.maybe'));

function put(channel, action) {
  if (arguments.length > 1) {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(channel, action): argument channel is undefined');
    (0, _utils.check)(channel, _utils.is.channel, 'put(channel, action): argument ' + channel + ' is not a valid channel');
    (0, _utils.check)(action, _utils.is.notUndef, 'put(channel, action): argument action is undefined');
  } else {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(action): argument action is undefined');
    action = channel;
    channel = null;
  }
  return effect(PUT, { channel: channel, action: action });
}

put.resolve = function () {
  var eff = put.apply(undefined, arguments);
  eff[PUT].resolve = true;
  return eff;
};

put.sync = (0, _utils.deprecate)(put.resolve, (0, _utils.updateIncentive)('put.sync', 'put.resolve'));

function all(effects) {
  return effect(ALL, effects);
}

function race(effects) {
  return effect(RACE, effects);
}

function getFnCallDesc(meth, fn, args) {
  (0, _utils.check)(fn, _utils.is.notUndef, meth + ': argument fn is undefined');

  var context = null;
  if (_utils.is.array(fn)) {
    var _fn = fn;
    context = _fn[0];
    fn = _fn[1];
  } else if (fn.fn) {
    var _fn2 = fn;
    context = _fn2.context;
    fn = _fn2.fn;
  }
  if (context && _utils.is.string(fn) && _utils.is.func(context[fn])) {
    fn = context[fn];
  }
  (0, _utils.check)(fn, _utils.is.func, meth + ': argument ' + fn + ' is not a function');

  return { context: context, fn: fn, args: args };
}

function call(fn) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return effect(CALL, getFnCallDesc('call', fn, args));
}

function apply(context, fn) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  return effect(CALL, getFnCallDesc('apply', { context: context, fn: fn }, args));
}

function cps(fn) {
  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return effect(CPS, getFnCallDesc('cps', fn, args));
}

function fork(fn) {
  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return effect(FORK, getFnCallDesc('fork', fn, args));
}

function spawn(fn) {
  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }

  return detach(fork.apply(undefined, [fn].concat(args)));
}

function join() {
  for (var _len5 = arguments.length, tasks = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    tasks[_key5] = arguments[_key5];
  }

  if (tasks.length > 1) {
    return all(tasks.map(function (t) {
      return join(t);
    }));
  }
  var task = tasks[0];
  (0, _utils.check)(task, _utils.is.notUndef, 'join(task): argument task is undefined');
  (0, _utils.check)(task, _utils.is.task, 'join(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  return effect(JOIN, task);
}

function cancel() {
  for (var _len6 = arguments.length, tasks = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    tasks[_key6] = arguments[_key6];
  }

  if (tasks.length > 1) {
    return all(tasks.map(function (t) {
      return cancel(t);
    }));
  }
  var task = tasks[0];
  if (tasks.length === 1) {
    (0, _utils.check)(task, _utils.is.notUndef, 'cancel(task): argument task is undefined');
    (0, _utils.check)(task, _utils.is.task, 'cancel(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  }
  return effect(CANCEL, task || _utils.SELF_CANCELLATION);
}

function select(selector) {
  for (var _len7 = arguments.length, args = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
    args[_key7 - 1] = arguments[_key7];
  }

  if (arguments.length === 0) {
    selector = _utils.ident;
  } else {
    (0, _utils.check)(selector, _utils.is.notUndef, 'select(selector,[...]): argument selector is undefined');
    (0, _utils.check)(selector, _utils.is.func, 'select(selector,[...]): argument ' + selector + ' is not a function');
  }
  return effect(SELECT, { selector: selector, args: args });
}

function actionChannel(pattern, buffer) {
  (0, _utils.check)(pattern, _utils.is.notUndef, 'actionChannel(pattern,...): argument pattern is undefined');
  if (arguments.length > 1) {
    (0, _utils.check)(buffer, _utils.is.notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');
    (0, _utils.check)(buffer, _utils.is.buffer, 'actionChannel(pattern, buffer): argument ' + buffer + ' is not a valid buffer');
  }
  return effect(ACTION_CHANNEL, { pattern: pattern, buffer: buffer });
}

function cancelled() {
  return effect(CANCELLED, {});
}

function flush(channel) {
  (0, _utils.check)(channel, _utils.is.channel, 'flush(channel): argument ' + channel + ' is not valid channel');
  return effect(FLUSH, channel);
}

function getContext(prop) {
  (0, _utils.check)(prop, _utils.is.string, 'getContext(prop): argument ' + prop + ' is not a string');
  return effect(GET_CONTEXT, prop);
}

function setContext(props) {
  (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)(null, props));
  return effect(SET_CONTEXT, props);
}

function takeEvery(patternOrChannel, worker) {
  for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
    args[_key8 - 2] = arguments[_key8];
  }

  return fork.apply(undefined, [_sagaHelpers.takeEveryHelper, patternOrChannel, worker].concat(args));
}

function takeLatest(patternOrChannel, worker) {
  for (var _len9 = arguments.length, args = Array(_len9 > 2 ? _len9 - 2 : 0), _key9 = 2; _key9 < _len9; _key9++) {
    args[_key9 - 2] = arguments[_key9];
  }

  return fork.apply(undefined, [_sagaHelpers.takeLatestHelper, patternOrChannel, worker].concat(args));
}

function throttle(ms, pattern, worker) {
  for (var _len10 = arguments.length, args = Array(_len10 > 3 ? _len10 - 3 : 0), _key10 = 3; _key10 < _len10; _key10++) {
    args[_key10 - 3] = arguments[_key10];
  }

  return fork.apply(undefined, [_sagaHelpers.throttleHelper, ms, pattern, worker].concat(args));
}

var createAsEffectType = function createAsEffectType(type) {
  return function (effect) {
    return effect && effect[IO] && effect[type];
  };
};

var asEffect = exports.asEffect = {
  take: createAsEffectType(TAKE),
  put: createAsEffectType(PUT),
  all: createAsEffectType(ALL),
  race: createAsEffectType(RACE),
  call: createAsEffectType(CALL),
  cps: createAsEffectType(CPS),
  fork: createAsEffectType(FORK),
  join: createAsEffectType(JOIN),
  cancel: createAsEffectType(CANCEL),
  select: createAsEffectType(SELECT),
  actionChannel: createAsEffectType(ACTION_CHANNEL),
  cancelled: createAsEffectType(CANCELLED),
  flush: createAsEffectType(FLUSH),
  getContext: createAsEffectType(GET_CONTEXT),
  setContext: createAsEffectType(SET_CONTEXT)
};
}, 395, null, "redux-saga/lib/internal/io.js");
__d(/* redux-saga/lib/internal/utils.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.check = check;
exports.hasOwn = hasOwn;
exports.remove = remove;
exports.deferred = deferred;
exports.arrayOfDeffered = arrayOfDeffered;
exports.delay = delay;
exports.createMockTask = createMockTask;
exports.autoInc = autoInc;
exports.makeIterator = makeIterator;
exports.log = log;
exports.deprecate = deprecate;
var sym = exports.sym = function sym(id) {
  return '@@redux-saga/' + id;
};

var TASK = exports.TASK = sym('TASK');
var HELPER = exports.HELPER = sym('HELPER');
var MATCH = exports.MATCH = sym('MATCH');
var CANCEL = exports.CANCEL = sym('CANCEL_PROMISE');
var SAGA_ACTION = exports.SAGA_ACTION = sym('SAGA_ACTION');
var SELF_CANCELLATION = exports.SELF_CANCELLATION = sym('SELF_CANCELLATION');
var konst = exports.konst = function konst(v) {
  return function () {
    return v;
  };
};
var kTrue = exports.kTrue = konst(true);
var kFalse = exports.kFalse = konst(false);
var noop = exports.noop = function noop() {};
var ident = exports.ident = function ident(v) {
  return v;
};

function check(value, predicate, error) {
  if (!predicate(value)) {
    log('error', 'uncaught at check', error);
    throw new Error(error);
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(object, property) {
  return is.notUndef(object) && hasOwnProperty.call(object, property);
}

var is = exports.is = {
  undef: function undef(v) {
    return v === null || v === undefined;
  },
  notUndef: function notUndef(v) {
    return v !== null && v !== undefined;
  },
  func: function func(f) {
    return typeof f === 'function';
  },
  number: function number(n) {
    return typeof n === 'number';
  },
  string: function string(s) {
    return typeof s === 'string';
  },
  array: Array.isArray,
  object: function object(obj) {
    return obj && !is.array(obj) && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
  },
  promise: function promise(p) {
    return p && is.func(p.then);
  },
  iterator: function iterator(it) {
    return it && is.func(it.next) && is.func(it.throw);
  },
  iterable: function iterable(it) {
    return it && is.func(Symbol) ? is.func(it[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) : is.array(it);
  },
  task: function task(t) {
    return t && t[TASK];
  },
  observable: function observable(ob) {
    return ob && is.func(ob.subscribe);
  },
  buffer: function buffer(buf) {
    return buf && is.func(buf.isEmpty) && is.func(buf.take) && is.func(buf.put);
  },
  pattern: function pattern(pat) {
    return pat && (is.string(pat) || (typeof pat === 'undefined' ? 'undefined' : _typeof(pat)) === 'symbol' || is.func(pat) || is.array(pat));
  },
  channel: function channel(ch) {
    return ch && is.func(ch.take) && is.func(ch.close);
  },
  helper: function helper(it) {
    return it && it[HELPER];
  },
  stringableFunc: function stringableFunc(f) {
    return is.func(f) && hasOwn(f, 'toString');
  }
};

var object = exports.object = {
  assign: function assign(target, source) {
    for (var i in source) {
      if (hasOwn(source, i)) {
        target[i] = source[i];
      }
    }
  }
};

function remove(array, item) {
  var index = array.indexOf(item);
  if (index >= 0) {
    array.splice(index, 1);
  }
}

var array = exports.array = {
  from: function from(obj) {
    var arr = Array(obj.length);
    for (var i in obj) {
      if (hasOwn(obj, i)) {
        arr[i] = obj[i];
      }
    }
    return arr;
  }
};

function deferred() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var def = _extends({}, props);
  var promise = new Promise(function (resolve, reject) {
    def.resolve = resolve;
    def.reject = reject;
  });
  def.promise = promise;
  return def;
}

function arrayOfDeffered(length) {
  var arr = [];
  for (var i = 0; i < length; i++) {
    arr.push(deferred());
  }
  return arr;
}

function delay(ms) {
  var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var timeoutId = void 0;
  var promise = new Promise(function (resolve) {
    timeoutId = setTimeout(function () {
      return resolve(val);
    }, ms);
  });

  promise[CANCEL] = function () {
    return clearTimeout(timeoutId);
  };

  return promise;
}

function createMockTask() {
  var _ref;

  var running = true;
  var _result = void 0,
      _error = void 0;

  return _ref = {}, _ref[TASK] = true, _ref.isRunning = function isRunning() {
    return running;
  }, _ref.result = function result() {
    return _result;
  }, _ref.error = function error() {
    return _error;
  }, _ref.setRunning = function setRunning(b) {
    return running = b;
  }, _ref.setResult = function setResult(r) {
    return _result = r;
  }, _ref.setError = function setError(e) {
    return _error = e;
  }, _ref;
}

function autoInc() {
  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

  return function () {
    return ++seed;
  };
}

var uid = exports.uid = autoInc();

var kThrow = function kThrow(err) {
  throw err;
};
var kReturn = function kReturn(value) {
  return { value: value, done: true };
};
function makeIterator(next) {
  var thro = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : kThrow;
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var isHelper = arguments[3];

  var iterator = { name: name, next: next, throw: thro, return: kReturn };

  if (isHelper) {
    iterator[HELPER] = true;
  }
  if (typeof Symbol !== 'undefined') {
    iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
      return iterator;
    };
  }
  return iterator;
}

function log(level, message) {
  var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

  if (typeof window === 'undefined') {
    console.log('redux-saga ' + level + ': ' + message + '\n' + (error && error.stack || error));
  } else {
    console[level](message, error);
  }
}

function deprecate(fn, deprecationWarning) {
  return function () {
    if (process.env.NODE_ENV === 'development') log('warn', deprecationWarning);
    return fn.apply(undefined, arguments);
  };
}

var updateIncentive = exports.updateIncentive = function updateIncentive(deprecated, preferred) {
  return deprecated + ' has been deprecated in favor of ' + preferred + ', please update your code';
};

var internalErr = exports.internalErr = function internalErr(err) {
  return new Error('\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\n  in redux-saga code and not yours. Thanks for reporting this in the project\'s github repo.\n  Error: ' + err + '\n');
};

var createSetContextWarning = exports.createSetContextWarning = function createSetContextWarning(ctx, props) {
  return (ctx ? ctx + '.' : '') + 'setContext(props): argument ' + props + ' is not a plain object';
};

var wrapSagaDispatch = exports.wrapSagaDispatch = function wrapSagaDispatch(dispatch) {
  return function (action) {
    return dispatch(Object.defineProperty(action, SAGA_ACTION, { value: true }));
  };
};

var cloneableGenerator = exports.cloneableGenerator = function cloneableGenerator(generatorFunc) {
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var history = [];
    var gen = generatorFunc.apply(undefined, args);
    return {
      next: function next(arg) {
        history.push(arg);
        return gen.next(arg);
      },
      clone: function clone() {
        var clonedGen = cloneableGenerator(generatorFunc).apply(undefined, args);
        history.forEach(function (arg) {
          return clonedGen.next(arg);
        });
        return clonedGen;
      },
      return: function _return(value) {
        return gen.return(value);
      },
      throw: function _throw(exception) {
        return gen.throw(exception);
      }
    };
  };
};
}, 396, null, "redux-saga/lib/internal/utils.js");
__d(/* redux-saga/lib/internal/sagaHelpers/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.throttleHelper = exports.takeLatestHelper = exports.takeEveryHelper = exports.throttle = exports.takeLatest = exports.takeEvery = undefined;

var _takeEvery = require(398          ); // 398 = ./takeEvery

var _takeEvery2 = _interopRequireDefault(_takeEvery);

var _takeLatest = require(403           ); // 403 = ./takeLatest

var _takeLatest2 = _interopRequireDefault(_takeLatest);

var _throttle = require(404         ); // 404 = ./throttle

var _throttle2 = _interopRequireDefault(_throttle);

var _utils = require(396       ); // 396 = ../utils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var deprecationWarning = function deprecationWarning(helperName) {
  return 'import { ' + helperName + ' } from \'redux-saga\' has been deprecated in favor of import { ' + helperName + ' } from \'redux-saga/effects\'.\nThe latter will not work with yield*, as helper effects are wrapped automatically for you in fork effect.\nTherefore yield ' + helperName + ' will return task descriptor to your saga and execute next lines of code.';
};

var takeEvery = (0, _utils.deprecate)(_takeEvery2.default, deprecationWarning('takeEvery'));
var takeLatest = (0, _utils.deprecate)(_takeLatest2.default, deprecationWarning('takeLatest'));
var throttle = (0, _utils.deprecate)(_throttle2.default, deprecationWarning('throttle'));

exports.takeEvery = takeEvery;
exports.takeLatest = takeLatest;
exports.throttle = throttle;
exports.takeEveryHelper = _takeEvery2.default;
exports.takeLatestHelper = _takeLatest2.default;
exports.throttleHelper = _throttle2.default;
}, 397, null, "redux-saga/lib/internal/sagaHelpers/index.js");
__d(/* redux-saga/lib/internal/sagaHelpers/takeEvery.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = takeEvery;

var _fsmIterator = require(399            ); // 399 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(395    ); // 395 = ../io

var _channel = require(400         ); // 400 = ../channel

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function takeEvery(patternOrChannel, worker) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };

  var action = void 0,
      setAction = function setAction(ac) {
    return action = ac;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [_fsmIterator.qEnd] : ['q1', yFork(action)];
    }
  }, 'q1', 'takeEvery(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');
}
}, 398, null, "redux-saga/lib/internal/sagaHelpers/takeEvery.js");
__d(/* redux-saga/lib/internal/sagaHelpers/fsmIterator.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.qEnd = undefined;
exports.safeName = safeName;
exports.default = fsmIterator;

var _utils = require(396       ); // 396 = ../utils

var done = { done: true, value: undefined };
var qEnd = exports.qEnd = {};

function safeName(patternOrChannel) {
  if (_utils.is.channel(patternOrChannel)) {
    return 'channel';
  } else if (Array.isArray(patternOrChannel)) {
    return String(patternOrChannel.map(function (entry) {
      return String(entry);
    }));
  } else {
    return String(patternOrChannel);
  }
}

function fsmIterator(fsm, q0) {
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'iterator';

  var updateState = void 0,
      qNext = q0;

  function next(arg, error) {
    if (qNext === qEnd) {
      return done;
    }

    if (error) {
      qNext = qEnd;
      throw error;
    } else {
      updateState && updateState(arg);

      var _fsm$qNext = fsm[qNext](),
          q = _fsm$qNext[0],
          output = _fsm$qNext[1],
          _updateState = _fsm$qNext[2];

      qNext = q;
      updateState = _updateState;
      return qNext === qEnd ? done : output;
    }
  }

  return (0, _utils.makeIterator)(next, function (error) {
    return next(null, error);
  }, name, true);
}
}, 399, null, "redux-saga/lib/internal/sagaHelpers/fsmIterator.js");
__d(/* redux-saga/lib/internal/channel.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.UNDEFINED_INPUT_ERROR = exports.INVALID_BUFFER = exports.isEnd = exports.END = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.emitter = emitter;
exports.channel = channel;
exports.eventChannel = eventChannel;
exports.stdChannel = stdChannel;

var _utils = require(396      ); // 396 = ./utils

var _buffers = require(401        ); // 401 = ./buffers

var _scheduler = require(402          ); // 402 = ./scheduler

var CHANNEL_END_TYPE = '@@redux-saga/CHANNEL_END';
var END = exports.END = { type: CHANNEL_END_TYPE };
var isEnd = exports.isEnd = function isEnd(a) {
  return a && a.type === CHANNEL_END_TYPE;
};

function emitter() {
  var subscribers = [];

  function subscribe(sub) {
    subscribers.push(sub);
    return function () {
      return (0, _utils.remove)(subscribers, sub);
    };
  }

  function emit(item) {
    var arr = subscribers.slice();
    for (var i = 0, len = arr.length; i < len; i++) {
      arr[i](item);
    }
  }

  return {
    subscribe: subscribe,
    emit: emit
  };
}

var INVALID_BUFFER = exports.INVALID_BUFFER = 'invalid buffer passed to channel factory function';
var UNDEFINED_INPUT_ERROR = exports.UNDEFINED_INPUT_ERROR = 'Saga was provided with an undefined action';

if (process.env.NODE_ENV !== 'production') {
  exports.UNDEFINED_INPUT_ERROR = UNDEFINED_INPUT_ERROR += '\nHints:\n    - check that your Action Creator returns a non-undefined value\n    - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\n  ';
}

function channel() {
  var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _buffers.buffers.fixed();

  var closed = false;
  var takers = [];

  (0, _utils.check)(buffer, _utils.is.buffer, INVALID_BUFFER);

  function checkForbiddenStates() {
    if (closed && takers.length) {
      throw (0, _utils.internalErr)('Cannot have a closed channel with pending takers');
    }
    if (takers.length && !buffer.isEmpty()) {
      throw (0, _utils.internalErr)('Cannot have pending takers with non empty buffer');
    }
  }

  function put(input) {
    checkForbiddenStates();
    (0, _utils.check)(input, _utils.is.notUndef, UNDEFINED_INPUT_ERROR);
    if (closed) {
      return;
    }
    if (!takers.length) {
      return buffer.put(input);
    }
    for (var i = 0; i < takers.length; i++) {
      var cb = takers[i];
      if (!cb[_utils.MATCH] || cb[_utils.MATCH](input)) {
        takers.splice(i, 1);
        return cb(input);
      }
    }
  }

  function take(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, "channel.take's callback must be a function");

    if (closed && buffer.isEmpty()) {
      cb(END);
    } else if (!buffer.isEmpty()) {
      cb(buffer.take());
    } else {
      takers.push(cb);
      cb.cancel = function () {
        return (0, _utils.remove)(takers, cb);
      };
    }
  }

  function flush(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, "channel.flush' callback must be a function");
    if (closed && buffer.isEmpty()) {
      cb(END);
      return;
    }
    cb(buffer.flush());
  }

  function close() {
    checkForbiddenStates();
    if (!closed) {
      closed = true;
      if (takers.length) {
        var arr = takers;
        takers = [];
        for (var i = 0, len = arr.length; i < len; i++) {
          arr[i](END);
        }
      }
    }
  }

  return {
    take: take,
    put: put,
    flush: flush,
    close: close,
    get __takers__() {
      return takers;
    },
    get __closed__() {
      return closed;
    }
  };
}

function eventChannel(subscribe) {
  var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _buffers.buffers.none();
  var matcher = arguments[2];

  if (arguments.length > 2) {
    (0, _utils.check)(matcher, _utils.is.func, 'Invalid match function passed to eventChannel');
  }

  var chan = channel(buffer);
  var close = function close() {
    if (!chan.__closed__) {
      if (unsubscribe) {
        unsubscribe();
      }
      chan.close();
    }
  };
  var unsubscribe = subscribe(function (input) {
    if (isEnd(input)) {
      close();
      return;
    }
    if (matcher && !matcher(input)) {
      return;
    }
    chan.put(input);
  });
  if (chan.__closed__) {
    unsubscribe();
  }

  if (!_utils.is.func(unsubscribe)) {
    throw new Error('in eventChannel: subscribe should return a function to unsubscribe');
  }

  return {
    take: chan.take,
    flush: chan.flush,
    close: close
  };
}

function stdChannel(subscribe) {
  var chan = eventChannel(function (cb) {
    return subscribe(function (input) {
      if (input[_utils.SAGA_ACTION]) {
        cb(input);
        return;
      }
      (0, _scheduler.asap)(function () {
        return cb(input);
      });
    });
  });

  return _extends({}, chan, {
    take: function take(cb, matcher) {
      if (arguments.length > 1) {
        (0, _utils.check)(matcher, _utils.is.func, "channel.take's matcher argument must be a function");
        cb[_utils.MATCH] = matcher;
      }
      chan.take(cb);
    }
  });
}
}, 400, null, "redux-saga/lib/internal/channel.js");
__d(/* redux-saga/lib/internal/buffers.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.buffers = exports.BUFFER_OVERFLOW = undefined;

var _utils = require(396      ); // 396 = ./utils

var BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = "Channel's Buffer overflow!";

var ON_OVERFLOW_THROW = 1;
var ON_OVERFLOW_DROP = 2;
var ON_OVERFLOW_SLIDE = 3;
var ON_OVERFLOW_EXPAND = 4;

var zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };

function ringBuffer() {
  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
  var overflowAction = arguments[1];

  var arr = new Array(limit);
  var length = 0;
  var pushIndex = 0;
  var popIndex = 0;

  var push = function push(it) {
    arr[pushIndex] = it;
    pushIndex = (pushIndex + 1) % limit;
    length++;
  };

  var take = function take() {
    if (length != 0) {
      var it = arr[popIndex];
      arr[popIndex] = null;
      length--;
      popIndex = (popIndex + 1) % limit;
      return it;
    }
  };

  var flush = function flush() {
    var items = [];
    while (length) {
      items.push(take());
    }
    return items;
  };

  return {
    isEmpty: function isEmpty() {
      return length == 0;
    },
    put: function put(it) {
      if (length < limit) {
        push(it);
      } else {
        var doubledLimit = void 0;
        switch (overflowAction) {
          case ON_OVERFLOW_THROW:
            throw new Error(BUFFER_OVERFLOW);
          case ON_OVERFLOW_SLIDE:
            arr[pushIndex] = it;
            pushIndex = (pushIndex + 1) % limit;
            popIndex = pushIndex;
            break;
          case ON_OVERFLOW_EXPAND:
            doubledLimit = 2 * limit;

            arr = flush();

            length = arr.length;
            pushIndex = arr.length;
            popIndex = 0;

            arr.length = doubledLimit;
            limit = doubledLimit;

            push(it);
            break;
          default:
        }
      }
    },
    take: take,
    flush: flush
  };
}

var buffers = exports.buffers = {
  none: function none() {
    return zeroBuffer;
  },
  fixed: function fixed(limit) {
    return ringBuffer(limit, ON_OVERFLOW_THROW);
  },
  dropping: function dropping(limit) {
    return ringBuffer(limit, ON_OVERFLOW_DROP);
  },
  sliding: function sliding(limit) {
    return ringBuffer(limit, ON_OVERFLOW_SLIDE);
  },
  expanding: function expanding(initialSize) {
    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);
  }
};
}, 401, null, "redux-saga/lib/internal/buffers.js");
__d(/* redux-saga/lib/internal/scheduler.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.asap = asap;
exports.suspend = suspend;
exports.flush = flush;
var queue = [];

var semaphore = 0;

function exec(task) {
  try {
    suspend();
    task();
  } finally {
    release();
  }
}

function asap(task) {
  queue.push(task);

  if (!semaphore) {
    suspend();
    flush();
  }
}

function suspend() {
  semaphore++;
}

function release() {
  semaphore--;
}

function flush() {
  release();

  var task = void 0;
  while (!semaphore && (task = queue.shift()) !== undefined) {
    exec(task);
  }
}
}, 402, null, "redux-saga/lib/internal/scheduler.js");
__d(/* redux-saga/lib/internal/sagaHelpers/takeLatest.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = takeLatest;

var _fsmIterator = require(399            ); // 399 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(395    ); // 395 = ../io

var _channel = require(400         ); // 400 = ../channel

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function takeLatest(patternOrChannel, worker) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yCancel = function yCancel(task) {
    return { done: false, value: (0, _io.cancel)(task) };
  };

  var task = void 0,
      action = void 0;
  var setTask = function setTask(t) {
    return task = t;
  };
  var setAction = function setAction(ac) {
    return action = ac;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [_fsmIterator.qEnd] : task ? ['q3', yCancel(task)] : ['q1', yFork(action), setTask];
    },
    q3: function q3() {
      return ['q1', yFork(action), setTask];
    }
  }, 'q1', 'takeLatest(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');
}
}, 403, null, "redux-saga/lib/internal/sagaHelpers/takeLatest.js");
__d(/* redux-saga/lib/internal/sagaHelpers/throttle.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = throttle;

var _fsmIterator = require(399            ); // 399 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(395    ); // 395 = ../io

var _channel = require(400         ); // 400 = ../channel

var _buffers = require(401         ); // 401 = ../buffers

var _utils = require(396       ); // 396 = ../utils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function throttle(delayLength, pattern, worker) {
  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var action = void 0,
      channel = void 0;

  var yActionChannel = { done: false, value: (0, _io.actionChannel)(pattern, _buffers.buffers.sliding(1)) };
  var yTake = function yTake() {
    return { done: false, value: (0, _io.take)(channel) };
  };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yDelay = { done: false, value: (0, _io.call)(_utils.delay, delayLength) };

  var setAction = function setAction(ac) {
    return action = ac;
  };
  var setChannel = function setChannel(ch) {
    return channel = ch;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yActionChannel, setChannel];
    },
    q2: function q2() {
      return ['q3', yTake(), setAction];
    },
    q3: function q3() {
      return action === _channel.END ? [_fsmIterator.qEnd] : ['q4', yFork(action)];
    },
    q4: function q4() {
      return ['q2', yDelay];
    }
  }, 'q1', 'throttle(' + (0, _fsmIterator.safeName)(pattern) + ', ' + worker.name + ')');
}
}, 404, null, "redux-saga/lib/internal/sagaHelpers/throttle.js");
__d(/* TalkPresidential/build/sagas/login.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.authenticateWithFacebook = authenticateWithFacebook;
exports.updateUserName = updateUserName;
exports.loginSaga = loginSaga;

var _dataActions = require(406                       ); // 406 = ./../actions/dataActions

var _effects = require(394                 ); // 394 = redux-saga/effects

var _dataActions2 = require(406                     ); // 406 = ../actions/dataActions

var _loginActions = require(472                      ); // 472 = ../actions/loginActions

var _authActions = require(473                     ); // 473 = ../actions/authActions

var _api = require(474    ); // 474 = ./api

var _dataSelectors = require(477                         ); // 477 = ../selectors/dataSelectors

var _marked = regeneratorRuntime.mark(authenticateWithFacebook),
    _marked2 = regeneratorRuntime.mark(updateUserName),
    _marked3 = regeneratorRuntime.mark(loginSaga);

function authenticateWithFacebook(action) {
    var token, path, query, response, bearer, newUser;
    return regeneratorRuntime.wrap(function authenticateWithFacebook$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return (0, _effects.put)((0, _loginActions.clearFBAuthFailedError)());

                case 2:
                    token = action.payload;
                    path = 'auth/facebook';
                    query = {
                        authenticationToken: token
                    };
                    _context.prev = 5;
                    _context.next = 8;
                    return (0, _effects.call)(_api.getAPI, path, query);

                case 8:
                    response = _context.sent;
                    bearer = response.response.Bearer;
                    newUser = response.response.user;
                    _context.next = 13;
                    return (0, _effects.put)((0, _dataActions2.setUser)(newUser));

                case 13:
                    _context.next = 15;
                    return (0, _effects.put)((0, _authActions.setBearerToken)(bearer));

                case 15:
                    _context.next = 17;
                    return (0, _effects.put)((0, _dataActions.loadStartData)());

                case 17:
                    _context.next = 24;
                    break;

                case 19:
                    _context.prev = 19;
                    _context.t0 = _context['catch'](5);

                    console.error(_context.t0);
                    _context.next = 24;
                    return (0, _effects.put)((0, _loginActions.fbAuthFailed)());

                case 24:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this, [[5, 19]]);
}
function updateUserName(action) {
    var username, currentUser, requestBody, path, apiResponse, newUser;
    return regeneratorRuntime.wrap(function updateUserName$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.next = 2;
                    return (0, _effects.put)((0, _loginActions.clearUpdateUserNameError)());

                case 2:
                    _context2.next = 4;
                    return (0, _effects.put)((0, _loginActions.clearUserNameAlreadyTaken)());

                case 4:
                    _context2.prev = 4;
                    username = action.payload;
                    _context2.next = 8;
                    return (0, _effects.select)(_dataSelectors.getUser);

                case 8:
                    currentUser = _context2.sent;
                    requestBody = {
                        user: babelHelpers.extends({}, currentUser, { username: username })
                    };
                    path = 'user/update';
                    _context2.next = 13;
                    return (0, _effects.call)(_api.putAPI, path, requestBody);

                case 13:
                    apiResponse = _context2.sent;
                    newUser = apiResponse.response.user;
                    _context2.next = 17;
                    return (0, _effects.put)((0, _dataActions2.setUser)(newUser));

                case 17:
                    _context2.next = 28;
                    break;

                case 19:
                    _context2.prev = 19;
                    _context2.t0 = _context2['catch'](4);

                    if (!(_context2.t0.meta && _context2.t0.meta.status === 'duplicate_username')) {
                        _context2.next = 26;
                        break;
                    }

                    _context2.next = 24;
                    return (0, _effects.put)((0, _loginActions.usernameAlreadyTaken)());

                case 24:
                    _context2.next = 28;
                    break;

                case 26:
                    _context2.next = 28;
                    return (0, _effects.put)((0, _loginActions.updateUserNameFailed)());

                case 28:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this, [[4, 19]]);
}
function loginSaga() {
    return regeneratorRuntime.wrap(function loginSaga$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    _context3.next = 2;
                    return (0, _effects.takeLatest)(_loginActions.setUserName.toString(), updateUserName);

                case 2:
                    _context3.next = 4;
                    return (0, _effects.takeLatest)(_loginActions.setFbAuthToken.toString(), authenticateWithFacebook);

                case 4:
                case 'end':
                    return _context3.stop();
            }
        }
    }, _marked3, this);
}
}, 405, null, "TalkPresidential/build/sagas/login.js");
__d(/* TalkPresidential/build/actions/dataActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addGames = exports.clearGames = exports.addGame = exports.loadStartData = exports.assignProfilePicInfo = exports.addUserFriends = exports.setUser = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var setUser = exports.setUser = (0, _reduxActions.createAction)('SET_USER', function (user) {
  return user;
});
var addUserFriends = exports.addUserFriends = (0, _reduxActions.createAction)('ADD_USER_FRIENDS', function (friends) {
  return friends;
});
var assignProfilePicInfo = exports.assignProfilePicInfo = (0, _reduxActions.createAction)('ASSIGN_PROFILE_PIC_INFO', function (profilePicMap) {
  return profilePicMap;
});
var loadStartData = exports.loadStartData = (0, _reduxActions.createAction)('LOAD_START_DATA');
var addGame = exports.addGame = (0, _reduxActions.createAction)('ADD_GAME', function (game) {
  return game;
});
var clearGames = exports.clearGames = (0, _reduxActions.createAction)('CLEAR_GAMES');
var addGames = exports.addGames = (0, _reduxActions.createAction)('ADD_GAMES', function (games) {
  return games;
});
}, 406, null, "TalkPresidential/build/actions/dataActions.js");
__d(/* redux-actions/lib/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineActions = exports.handleActions = exports.handleAction = exports.createActions = exports.createAction = undefined;

var _createAction = require(408             ); // 408 = ./createAction

var _createAction2 = _interopRequireDefault(_createAction);

var _handleAction = require(413             ); // 413 = ./handleAction

var _handleAction2 = _interopRequireDefault(_handleAction);

var _handleActions = require(463              ); // 463 = ./handleActions

var _handleActions2 = _interopRequireDefault(_handleActions);

var _combineActions = require(447               ); // 447 = ./combineActions

var _combineActions2 = _interopRequireDefault(_combineActions);

var _createActions = require(469              ); // 469 = ./createActions

var _createActions2 = _interopRequireDefault(_createActions);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.createAction = _createAction2.default;
exports.createActions = _createActions2.default;
exports.handleAction = _handleAction2.default;
exports.handleActions = _handleActions2.default;
exports.combineActions = _combineActions2.default;
}, 407, null, "redux-actions/lib/index.js");
__d(/* redux-actions/lib/createAction.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAction;

var _identity = require(409              ); // 409 = lodash/identity

var _identity2 = _interopRequireDefault(_identity);

var _isFunction = require(410                ); // 410 = lodash/isFunction

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isNull = require(412            ); // 412 = lodash/isNull

var _isNull2 = _interopRequireDefault(_isNull);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function createAction(type) {
  var payloadCreator = arguments.length <= 1 || arguments[1] === undefined ? _identity2.default : arguments[1];
  var metaCreator = arguments[2];

  (0, _invariant2.default)((0, _isFunction2.default)(payloadCreator) || (0, _isNull2.default)(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');

  var finalPayloadCreator = (0, _isNull2.default)(payloadCreator) || payloadCreator === _identity2.default ? _identity2.default : function (head) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return head instanceof Error ? head : payloadCreator.apply(undefined, [head].concat(args));
  };

  var hasMeta = (0, _isFunction2.default)(metaCreator);
  var typeString = type.toString();

  var actionCreator = function actionCreator() {
    var payload = finalPayloadCreator.apply(undefined, arguments);
    var action = { type: type };

    if (payload instanceof Error) {
      action.error = true;
    }

    if (payload !== undefined) {
      action.payload = payload;
    }

    if (hasMeta) {
      action.meta = metaCreator.apply(undefined, arguments);
    }

    return action;
  };

  actionCreator.toString = function () {
    return typeString;
  };

  return actionCreator;
}
}, 408, null, "redux-actions/lib/createAction.js");
__d(/* lodash/identity.js */function(global, require, module, exports) {
function identity(value) {
  return value;
}

module.exports = identity;
}, 409, null, "lodash/identity.js");
__d(/* lodash/isFunction.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    isObject = require(411         ); // 411 = ./isObject

var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

function isFunction(value) {
    if (!isObject(value)) {
        return false;
    }

    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;
}, 410, null, "lodash/isFunction.js");
__d(/* lodash/isObject.js */function(global, require, module, exports) {
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;
}, 411, null, "lodash/isObject.js");
__d(/* lodash/isNull.js */function(global, require, module, exports) {
function isNull(value) {
  return value === null;
}

module.exports = isNull;
}, 412, null, "lodash/isNull.js");
__d(/* redux-actions/lib/handleAction.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;_e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }return _arr;
  }return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

exports.default = handleAction;

var _isFunction = require(410                ); // 410 = lodash/isFunction

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _identity = require(409              ); // 409 = lodash/identity

var _identity2 = _interopRequireDefault(_identity);

var _isNil = require(414           ); // 414 = lodash/isNil

var _isNil2 = _interopRequireDefault(_isNil);

var _isUndefined = require(415                 ); // 415 = lodash/isUndefined

var _isUndefined2 = _interopRequireDefault(_isUndefined);

var _includes = require(416              ); // 416 = lodash/includes

var _includes2 = _interopRequireDefault(_includes);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _combineActions = require(447               ); // 447 = ./combineActions

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function handleAction(type) {
  var reducer = arguments.length <= 1 || arguments[1] === undefined ? _identity2.default : arguments[1];
  var defaultState = arguments[2];

  var types = type.toString().split(_combineActions.ACTION_TYPE_DELIMITER);
  (0, _invariant2.default)(!(0, _isUndefined2.default)(defaultState), 'defaultState for reducer handling ' + types.join(', ') + ' should be defined');
  (0, _invariant2.default)((0, _isFunction2.default)(reducer) || (0, _isPlainObject2.default)(reducer), 'Expected reducer to be a function or object with next and throw reducers');

  var _ref = (0, _isFunction2.default)(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {
    return (0, _isNil2.default)(aReducer) ? _identity2.default : aReducer;
  });

  var _ref2 = _slicedToArray(_ref, 2);

  var nextReducer = _ref2[0];
  var throwReducer = _ref2[1];

  return function () {
    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];
    var action = arguments[1];
    var actionType = action.type;

    if (!actionType || !(0, _includes2.default)(types, actionType.toString())) {
      return state;
    }

    return (action.error === true ? throwReducer : nextReducer)(state, action);
  };
}
}, 413, null, "redux-actions/lib/handleAction.js");
__d(/* lodash/isNil.js */function(global, require, module, exports) {
function isNil(value) {
  return value == null;
}

module.exports = isNil;
}, 414, null, "lodash/isNil.js");
__d(/* lodash/isUndefined.js */function(global, require, module, exports) {
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;
}, 415, null, "lodash/isUndefined.js");
__d(/* lodash/includes.js */function(global, require, module, exports) {var baseIndexOf = require(417             ), // 417 = ./_baseIndexOf
    isArrayLike = require(421            ), // 421 = ./isArrayLike
    isString = require(423         ), // 423 = ./isString
    toInteger = require(425          ), // 425 = ./toInteger
    values = require(429       ); // 429 = ./values

var nativeMax = Math.max;

function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike(collection) ? collection : values(collection);
  fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;

  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax(length + fromIndex, 0);
  }
  return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
}

module.exports = includes;
}, 416, null, "lodash/includes.js");
__d(/* lodash/_baseIndexOf.js */function(global, require, module, exports) {var baseFindIndex = require(418               ), // 418 = ./_baseFindIndex
    baseIsNaN = require(419           ), // 419 = ./_baseIsNaN
    strictIndexOf = require(420               ); // 420 = ./_strictIndexOf

function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;
}, 417, null, "lodash/_baseIndexOf.js");
__d(/* lodash/_baseFindIndex.js */function(global, require, module, exports) {
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;
}, 418, null, "lodash/_baseFindIndex.js");
__d(/* lodash/_baseIsNaN.js */function(global, require, module, exports) {
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;
}, 419, null, "lodash/_baseIsNaN.js");
__d(/* lodash/_strictIndexOf.js */function(global, require, module, exports) {
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;
}, 420, null, "lodash/_strictIndexOf.js");
__d(/* lodash/isArrayLike.js */function(global, require, module, exports) {var isFunction = require(410           ), // 410 = ./isFunction
    isLength = require(422         ); // 422 = ./isLength

function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;
}, 421, null, "lodash/isArrayLike.js");
__d(/* lodash/isLength.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;
}, 422, null, "lodash/isLength.js");
__d(/* lodash/isString.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    isArray = require(424        ), // 424 = ./isArray
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var stringTag = '[object String]';

function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
}

module.exports = isString;
}, 423, null, "lodash/isString.js");
__d(/* lodash/isArray.js */function(global, require, module, exports) {
var isArray = Array.isArray;

module.exports = isArray;
}, 424, null, "lodash/isArray.js");
__d(/* lodash/toInteger.js */function(global, require, module, exports) {var toFinite = require(426         ); // 426 = ./toFinite

function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? remainder ? result - remainder : result : 0;
}

module.exports = toInteger;
}, 425, null, "lodash/toInteger.js");
__d(/* lodash/toFinite.js */function(global, require, module, exports) {var toNumber = require(427         ); // 427 = ./toNumber

var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;
}, 426, null, "lodash/toFinite.js");
__d(/* lodash/toNumber.js */function(global, require, module, exports) {var isObject = require(411         ), // 411 = ./isObject
    isSymbol = require(428         ); // 428 = ./isSymbol

var NAN = 0 / 0;

var reTrim = /^\s+|\s+$/g;

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

var reIsBinary = /^0b[01]+$/i;

var reIsOctal = /^0o[0-7]+$/i;

var freeParseInt = parseInt;

function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = toNumber;
}, 427, null, "lodash/toNumber.js");
__d(/* lodash/isSymbol.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var symbolTag = '[object Symbol]';

function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;
}, 428, null, "lodash/isSymbol.js");
__d(/* lodash/values.js */function(global, require, module, exports) {var baseValues = require(430            ), // 430 = ./_baseValues
    keys = require(432     ); // 432 = ./keys

function values(object) {
  return object == null ? [] : baseValues(object, keys(object));
}

module.exports = values;
}, 429, null, "lodash/values.js");
__d(/* lodash/_baseValues.js */function(global, require, module, exports) {var arrayMap = require(431          ); // 431 = ./_arrayMap

function baseValues(object, props) {
  return arrayMap(props, function (key) {
    return object[key];
  });
}

module.exports = baseValues;
}, 430, null, "lodash/_baseValues.js");
__d(/* lodash/_arrayMap.js */function(global, require, module, exports) {
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;
}, 431, null, "lodash/_arrayMap.js");
__d(/* lodash/keys.js */function(global, require, module, exports) {var arrayLikeKeys = require(433               ), // 433 = ./_arrayLikeKeys
    baseKeys = require(444          ), // 444 = ./_baseKeys
    isArrayLike = require(421            ); // 421 = ./isArrayLike

function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;
}, 432, null, "lodash/keys.js");
__d(/* lodash/_arrayLikeKeys.js */function(global, require, module, exports) {var baseTimes = require(434           ), // 434 = ./_baseTimes
    isArguments = require(435            ), // 435 = ./isArguments
    isArray = require(424        ), // 424 = ./isArray
    isBuffer = require(437         ), // 437 = ./isBuffer
    isIndex = require(439         ), // 439 = ./_isIndex
    isTypedArray = require(440             ); // 440 = ./isTypedArray

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;
}, 433, null, "lodash/_arrayLikeKeys.js");
__d(/* lodash/_baseTimes.js */function(global, require, module, exports) {
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;
}, 434, null, "lodash/_baseTimes.js");
__d(/* lodash/isArguments.js */function(global, require, module, exports) {var baseIsArguments = require(436                 ), // 436 = ./_baseIsArguments
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var isArguments = baseIsArguments(function () {
    return arguments;
}()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;
}, 435, null, "lodash/isArguments.js");
__d(/* lodash/_baseIsArguments.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var argsTag = '[object Arguments]';

function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;
}, 436, null, "lodash/_baseIsArguments.js");
__d(/* lodash/isBuffer.js */function(global, require, module, exports) {var root = require(358      ), // 358 = ./_root
    stubFalse = require(438          ); // 438 = ./stubFalse

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var Buffer = moduleExports ? root.Buffer : undefined;

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;
}, 437, null, "lodash/isBuffer.js");
__d(/* lodash/stubFalse.js */function(global, require, module, exports) {
function stubFalse() {
  return false;
}

module.exports = stubFalse;
}, 438, null, "lodash/stubFalse.js");
__d(/* lodash/_isIndex.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

var reIsUint = /^(?:0|[1-9]\d*)$/;

function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;
}, 439, null, "lodash/_isIndex.js");
__d(/* lodash/isTypedArray.js */function(global, require, module, exports) {var baseIsTypedArray = require(441                  ), // 441 = ./_baseIsTypedArray
    baseUnary = require(442           ), // 442 = ./_baseUnary
    nodeUtil = require(443          ); // 443 = ./_nodeUtil

var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;
}, 440, null, "lodash/isTypedArray.js");
__d(/* lodash/_baseIsTypedArray.js */function(global, require, module, exports) {var baseGetTag = require(356            ), // 356 = ./_baseGetTag
    isLength = require(422         ), // 422 = ./isLength
    isObjectLike = require(364             ); // 364 = ./isObjectLike

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;
}, 441, null, "lodash/_baseIsTypedArray.js");
__d(/* lodash/_baseUnary.js */function(global, require, module, exports) {
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;
}, 442, null, "lodash/_baseUnary.js");
__d(/* lodash/_nodeUtil.js */function(global, require, module, exports) {var freeGlobal = require(359            ); // 359 = ./_freeGlobal

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var freeProcess = moduleExports && freeGlobal.process;

var nodeUtil = function () {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
}, 443, null, "lodash/_nodeUtil.js");
__d(/* lodash/_baseKeys.js */function(global, require, module, exports) {var isPrototype = require(445             ), // 445 = ./_isPrototype
    nativeKeys = require(446            ); // 446 = ./_nativeKeys

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;
}, 444, null, "lodash/_baseKeys.js");
__d(/* lodash/_isPrototype.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

  return value === proto;
}

module.exports = isPrototype;
}, 445, null, "lodash/_isPrototype.js");
__d(/* lodash/_nativeKeys.js */function(global, require, module, exports) {var overArg = require(363         ); // 363 = ./_overArg

var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;
}, 446, null, "lodash/_nativeKeys.js");
__d(/* redux-actions/lib/combineActions.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ACTION_TYPE_DELIMITER = undefined;
exports.default = combineActions;

var _isString = require(423              ); // 423 = lodash/isString

var _isString2 = _interopRequireDefault(_isString);

var _isFunction = require(410                ); // 410 = lodash/isFunction

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isEmpty = require(448             ); // 448 = lodash/isEmpty

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _toString = require(461              ); // 461 = lodash/toString

var _toString2 = _interopRequireDefault(_toString);

var _isSymbol = require(428              ); // 428 = lodash/isSymbol

var _isSymbol2 = _interopRequireDefault(_isSymbol);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var ACTION_TYPE_DELIMITER = exports.ACTION_TYPE_DELIMITER = '||';

function isValidActionType(type) {
  return (0, _isString2.default)(type) || (0, _isFunction2.default)(type) || (0, _isSymbol2.default)(type);
}

function isValidActionTypes(types) {
  if ((0, _isEmpty2.default)(types)) {
    return false;
  }
  return types.every(isValidActionType);
}

function combineActions() {
  for (var _len = arguments.length, actionsTypes = Array(_len), _key = 0; _key < _len; _key++) {
    actionsTypes[_key] = arguments[_key];
  }

  (0, _invariant2.default)(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');
  var combinedActionType = actionsTypes.map(_toString2.default).join(ACTION_TYPE_DELIMITER);
  return { toString: function toString() {
      return combinedActionType;
    } };
}
}, 447, null, "redux-actions/lib/combineActions.js");
__d(/* lodash/isEmpty.js */function(global, require, module, exports) {var baseKeys = require(444          ), // 444 = ./_baseKeys
    getTag = require(449        ), // 449 = ./_getTag
    isArguments = require(435            ), // 435 = ./isArguments
    isArray = require(424        ), // 424 = ./isArray
    isArrayLike = require(421            ), // 421 = ./isArrayLike
    isBuffer = require(437         ), // 437 = ./isBuffer
    isPrototype = require(445             ), // 445 = ./_isPrototype
    isTypedArray = require(440             ); // 440 = ./isTypedArray

var mapTag = '[object Map]',
    setTag = '[object Set]';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;
}, 448, null, "lodash/isEmpty.js");
__d(/* lodash/_getTag.js */function(global, require, module, exports) {var DataView = require(450          ), // 450 = ./_DataView
    Map = require(457     ), // 457 = ./_Map
    Promise = require(458         ), // 458 = ./_Promise
    Set = require(459     ), // 459 = ./_Set
    WeakMap = require(460         ), // 460 = ./_WeakMap
    baseGetTag = require(356            ), // 356 = ./_baseGetTag
    toSource = require(455          ); // 455 = ./_toSource

var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

var getTag = baseGetTag;

if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
            switch (ctorString) {
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
        }
        return result;
    };
}

module.exports = getTag;
}, 449, null, "lodash/_getTag.js");
__d(/* lodash/_DataView.js */function(global, require, module, exports) {var getNative = require(451           ), // 451 = ./_getNative
    root = require(358      ); // 358 = ./_root

var DataView = getNative(root, 'DataView');

module.exports = DataView;
}, 450, null, "lodash/_DataView.js");
__d(/* lodash/_getNative.js */function(global, require, module, exports) {var baseIsNative = require(452              ), // 452 = ./_baseIsNative
    getValue = require(456          ); // 456 = ./_getValue

function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;
}, 451, null, "lodash/_getNative.js");
__d(/* lodash/_baseIsNative.js */function(global, require, module, exports) {var isFunction = require(410           ), // 410 = ./isFunction
    isMasked = require(453          ), // 453 = ./_isMasked
    isObject = require(411         ), // 411 = ./isObject
    toSource = require(455          ); // 455 = ./_toSource

var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

var reIsHostCtor = /^\[object .+?Constructor\]$/;

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;
}, 452, null, "lodash/_baseIsNative.js");
__d(/* lodash/_isMasked.js */function(global, require, module, exports) {var coreJsData = require(454            ); // 454 = ./_coreJsData

var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();

function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;
}, 453, null, "lodash/_isMasked.js");
__d(/* lodash/_coreJsData.js */function(global, require, module, exports) {var root = require(358      ); // 358 = ./_root

var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;
}, 454, null, "lodash/_coreJsData.js");
__d(/* lodash/_toSource.js */function(global, require, module, exports) {
var funcProto = Function.prototype;

var funcToString = funcProto.toString;

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;
}, 455, null, "lodash/_toSource.js");
__d(/* lodash/_getValue.js */function(global, require, module, exports) {
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;
}, 456, null, "lodash/_getValue.js");
__d(/* lodash/_Map.js */function(global, require, module, exports) {var getNative = require(451           ), // 451 = ./_getNative
    root = require(358      ); // 358 = ./_root

var Map = getNative(root, 'Map');

module.exports = Map;
}, 457, null, "lodash/_Map.js");
__d(/* lodash/_Promise.js */function(global, require, module, exports) {var getNative = require(451           ), // 451 = ./_getNative
    root = require(358      ); // 358 = ./_root

var Promise = getNative(root, 'Promise');

module.exports = Promise;
}, 458, null, "lodash/_Promise.js");
__d(/* lodash/_Set.js */function(global, require, module, exports) {var getNative = require(451           ), // 451 = ./_getNative
    root = require(358      ); // 358 = ./_root

var Set = getNative(root, 'Set');

module.exports = Set;
}, 459, null, "lodash/_Set.js");
__d(/* lodash/_WeakMap.js */function(global, require, module, exports) {var getNative = require(451           ), // 451 = ./_getNative
    root = require(358      ); // 358 = ./_root

var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;
}, 460, null, "lodash/_WeakMap.js");
__d(/* lodash/toString.js */function(global, require, module, exports) {var baseToString = require(462              ); // 462 = ./_baseToString

function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;
}, 461, null, "lodash/toString.js");
__d(/* lodash/_baseToString.js */function(global, require, module, exports) {var Symbol = require(357        ), // 357 = ./_Symbol
    arrayMap = require(431          ), // 431 = ./_arrayMap
    isArray = require(424        ), // 424 = ./isArray
    isSymbol = require(428         ); // 428 = ./isSymbol

var INFINITY = 1 / 0;

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

function baseToString(value) {
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = baseToString;
}, 462, null, "lodash/_baseToString.js");
__d(/* redux-actions/lib/handleActions.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = handleActions;

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _reduceReducers = require(464              ); // 464 = reduce-reducers

var _reduceReducers2 = _interopRequireDefault(_reduceReducers);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _handleAction = require(413             ); // 413 = ./handleAction

var _handleAction2 = _interopRequireDefault(_handleAction);

var _ownKeys = require(465        ); // 465 = ./ownKeys

var _ownKeys2 = _interopRequireDefault(_ownKeys);

var _flattenUtils = require(466             ); // 466 = ./flattenUtils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

function handleActions(handlers, defaultState) {
  var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  var namespace = _ref.namespace;

  (0, _invariant2.default)((0, _isPlainObject2.default)(handlers), 'Expected handlers to be an plain object.');
  var flattenedReducerMap = (0, _flattenUtils.flattenReducerMap)(handlers, namespace);
  var reducers = (0, _ownKeys2.default)(flattenedReducerMap).map(function (type) {
    return (0, _handleAction2.default)(type, flattenedReducerMap[type], defaultState);
  });
  var reducer = _reduceReducers2.default.apply(undefined, _toConsumableArray(reducers));
  return function () {
    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];
    var action = arguments[1];
    return reducer(state, action);
  };
}
}, 463, null, "redux-actions/lib/handleActions.js");
__d(/* reduce-reducers/lib/index.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports["default"] = reduceReducers;

function reduceReducers() {
  for (var _len = arguments.length, reducers = Array(_len), _key = 0; _key < _len; _key++) {
    reducers[_key] = arguments[_key];
  }

  return function (previous, current) {
    return reducers.reduce(function (p, r) {
      return r(p, current);
    }, previous);
  };
}

module.exports = exports["default"];
}, 464, null, "reduce-reducers/lib/index.js");
__d(/* redux-actions/lib/ownKeys.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ownKeys;
function ownKeys(object) {
  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
    return Reflect.ownKeys(object);
  }

  var keys = Object.getOwnPropertyNames(object);

  if (typeof Object.getOwnPropertySymbols === 'function') {
    keys = keys.concat(Object.getOwnPropertySymbols(object));
  }

  return keys;
}
}, 465, null, "redux-actions/lib/ownKeys.js");
__d(/* redux-actions/lib/flattenUtils.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unflattenActionCreators = exports.flattenReducerMap = exports.flattenActionMap = undefined;

var _camelCase = require(467          ); // 467 = ./camelCase

var _camelCase2 = _interopRequireDefault(_camelCase);

var _ownKeys = require(465        ); // 465 = ./ownKeys

var _ownKeys2 = _interopRequireDefault(_ownKeys);

var _hasGeneratorInterface = require(468                      ); // 468 = ./hasGeneratorInterface

var _hasGeneratorInterface2 = _interopRequireDefault(_hasGeneratorInterface);

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var defaultNamespace = '/';

var flattenWhenNode = function flattenWhenNode(predicate) {
  return function flatten(map) {
    var namespace = arguments.length <= 1 || arguments[1] === undefined ? defaultNamespace : arguments[1];
    var partialFlatMap = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
    var partialFlatActionType = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];

    function connectNamespace(type) {
      return partialFlatActionType ? '' + partialFlatActionType + namespace + type : type;
    }

    (0, _ownKeys2.default)(map).forEach(function (type) {
      var nextNamespace = connectNamespace(type);
      var mapValue = map[type];

      if (!predicate(mapValue)) {
        partialFlatMap[nextNamespace] = map[type];
      } else {
        flatten(map[type], namespace, partialFlatMap, nextNamespace);
      }
    });

    return partialFlatMap;
  };
};

var flattenActionMap = flattenWhenNode(_isPlainObject2.default);
var flattenReducerMap = flattenWhenNode(function (node) {
  return (0, _isPlainObject2.default)(node) && !(0, _hasGeneratorInterface2.default)(node);
});

function unflattenActionCreators(flatActionCreators) {
  var namespace = arguments.length <= 1 || arguments[1] === undefined ? defaultNamespace : arguments[1];

  function unflatten(flatActionType) {
    var partialNestedActionCreators = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var partialFlatActionTypePath = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

    var nextNamespace = (0, _camelCase2.default)(partialFlatActionTypePath.shift());
    if (partialFlatActionTypePath.length) {
      if (!partialNestedActionCreators[nextNamespace]) {
        partialNestedActionCreators[nextNamespace] = {};
      }
      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);
    } else {
      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];
    }
  }

  var nestedActionCreators = {};
  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {
    return unflatten(type, nestedActionCreators, type.split(namespace));
  });
  return nestedActionCreators;
}

exports.flattenActionMap = flattenActionMap;
exports.flattenReducerMap = flattenReducerMap;
exports.unflattenActionCreators = unflattenActionCreators;
}, 466, null, "redux-actions/lib/flattenUtils.js");
__d(/* redux-actions/lib/camelCase.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var wordPattern = /[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:(?:1ST|2ND|3RD|(?![123])\dTH)\b)|\d*(?:(?:1st|2nd|3rd|(?![123])\dth)\b)|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g;
var namespacer = '/';

function camelCase(string) {
  return string.match(wordPattern).reduce(function (camelCased, word, index) {
    return camelCased + (index === 0 ? word.toLowerCase() : word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());
  }, '');
}

exports.default = function (type) {
  return type.split(namespacer).map(camelCase).join(namespacer);
};
}, 467, null, "redux-actions/lib/camelCase.js");
__d(/* redux-actions/lib/hasGeneratorInterface.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hasGeneratorInterface;

var _ownKeys = require(465        ); // 465 = ./ownKeys

var _ownKeys2 = _interopRequireDefault(_ownKeys);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function hasGeneratorInterface(handler) {
  var keys = (0, _ownKeys2.default)(handler);
  var hasOnlyInterfaceNames = keys.every(function (ownKey) {
    return ownKey === 'next' || ownKey === 'throw';
  });
  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;
}
}, 468, null, "redux-actions/lib/hasGeneratorInterface.js");
__d(/* redux-actions/lib/createActions.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;_e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }return _arr;
  }return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = createActions;

var _camelCase = require(467          ); // 467 = ./camelCase

var _camelCase2 = _interopRequireDefault(_camelCase);

var _identity = require(409              ); // 409 = lodash/identity

var _identity2 = _interopRequireDefault(_identity);

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _isArray = require(424             ); // 424 = lodash/isArray

var _isArray2 = _interopRequireDefault(_isArray);

var _last = require(470          ); // 470 = lodash/last

var _last2 = _interopRequireDefault(_last);

var _isString = require(423              ); // 423 = lodash/isString

var _isString2 = _interopRequireDefault(_isString);

var _isFunction = require(410                ); // 410 = lodash/isFunction

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isNil = require(414           ); // 414 = lodash/isNil

var _isNil2 = _interopRequireDefault(_isNil);

var _createAction = require(408             ); // 408 = ./createAction

var _createAction2 = _interopRequireDefault(_createAction);

var _invariant = require(348        ); // 348 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _arrayToObject = require(471              ); // 471 = ./arrayToObject

var _arrayToObject2 = _interopRequireDefault(_arrayToObject);

var _flattenUtils = require(466             ); // 466 = ./flattenUtils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

function createActions(actionMap) {
  for (var _len = arguments.length, identityActions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    identityActions[_key - 1] = arguments[_key];
  }

  var _ref = (0, _isPlainObject2.default)((0, _last2.default)(identityActions)) ? identityActions.pop() : {};

  var namespace = _ref.namespace;

  (0, _invariant2.default)(identityActions.every(_isString2.default) && ((0, _isString2.default)(actionMap) || (0, _isPlainObject2.default)(actionMap)), 'Expected optional object followed by string action types');
  if ((0, _isString2.default)(actionMap)) {
    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions));
  }
  return _extends({}, actionCreatorsFromActionMap(actionMap, namespace), actionCreatorsFromIdentityActions(identityActions));
}

function actionCreatorsFromActionMap(actionMap, namespace) {
  var flatActionMap = (0, _flattenUtils.flattenActionMap)(actionMap, namespace);
  var flatActionCreators = actionMapToActionCreators(flatActionMap);
  return (0, _flattenUtils.unflattenActionCreators)(flatActionCreators, namespace);
}

function actionMapToActionCreators(actionMap) {
  function isValidActionMapValue(actionMapValue) {
    if ((0, _isFunction2.default)(actionMapValue) || (0, _isNil2.default)(actionMapValue)) {
      return true;
    } else if ((0, _isArray2.default)(actionMapValue)) {
      var _actionMapValue = _slicedToArray(actionMapValue, 2);

      var _actionMapValue$ = _actionMapValue[0];
      var payload = _actionMapValue$ === undefined ? _identity2.default : _actionMapValue$;
      var meta = _actionMapValue[1];

      return (0, _isFunction2.default)(payload) && (0, _isFunction2.default)(meta);
    }
    return false;
  }

  return (0, _arrayToObject2.default)(Object.keys(actionMap), function (partialActionCreators, type) {
    var actionMapValue = actionMap[type];
    (0, _invariant2.default)(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + ('functions for ' + type));
    var actionCreator = (0, _isArray2.default)(actionMapValue) ? _createAction2.default.apply(undefined, [type].concat(_toConsumableArray(actionMapValue))) : (0, _createAction2.default)(type, actionMapValue);
    return _extends({}, partialActionCreators, _defineProperty({}, type, actionCreator));
  });
}

function actionCreatorsFromIdentityActions(identityActions) {
  var actionMap = (0, _arrayToObject2.default)(identityActions, function (partialActionMap, type) {
    return _extends({}, partialActionMap, _defineProperty({}, type, _identity2.default));
  });
  var actionCreators = actionMapToActionCreators(actionMap);
  return (0, _arrayToObject2.default)(Object.keys(actionCreators), function (partialActionCreators, type) {
    return _extends({}, partialActionCreators, _defineProperty({}, (0, _camelCase2.default)(type), actionCreators[type]));
  });
}
}, 469, null, "redux-actions/lib/createActions.js");
__d(/* lodash/last.js */function(global, require, module, exports) {
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;
}, 470, null, "lodash/last.js");
__d(/* redux-actions/lib/arrayToObject.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (array, callback) {
  return array.reduce(function (partialObject, element) {
    return callback(partialObject, element);
  }, {});
};
}, 471, null, "redux-actions/lib/arrayToObject.js");
__d(/* TalkPresidential/build/actions/loginActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.userLeavingLogin = exports.userEnteringLogin = exports.setHomeScreenKey = exports.clearUserNameAlreadyTaken = exports.clearUpdateUserNameError = exports.clearFBAuthFailedError = exports.usernameAlreadyTaken = exports.updateUserNameFailed = exports.fbAuthFailed = exports.setUserName = exports.setFbAuthToken = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var setFbAuthToken = exports.setFbAuthToken = (0, _reduxActions.createAction)('SET_FB_AUTH_TOKEN', function (token) {
  return token;
});
var setUserName = exports.setUserName = (0, _reduxActions.createAction)('SET_USER_NAME', function (userName) {
  return userName;
});
var fbAuthFailed = exports.fbAuthFailed = (0, _reduxActions.createAction)('FB_AUTH_FAILED');
var updateUserNameFailed = exports.updateUserNameFailed = (0, _reduxActions.createAction)('UPDATE_USER_NAME_FAILED');
var usernameAlreadyTaken = exports.usernameAlreadyTaken = (0, _reduxActions.createAction)('USERNAME_ALREADY_TAKEN');
var clearFBAuthFailedError = exports.clearFBAuthFailedError = (0, _reduxActions.createAction)('CLEAR_FB_AUTH_FAIED');
var clearUpdateUserNameError = exports.clearUpdateUserNameError = (0, _reduxActions.createAction)('CLEAR_UPDATE_USER_NAME_ERROR');
var clearUserNameAlreadyTaken = exports.clearUserNameAlreadyTaken = (0, _reduxActions.createAction)('CLEAR_USERNAME_ALREADY_TAKEN');
var setHomeScreenKey = exports.setHomeScreenKey = (0, _reduxActions.createAction)('SET_HOME_SCREEN_KEY', function (key) {
  return key;
});
var userEnteringLogin = exports.userEnteringLogin = (0, _reduxActions.createAction)('USER_ENTERING_LOGIN');
var userLeavingLogin = exports.userLeavingLogin = (0, _reduxActions.createAction)('USER_LEAVING_LOGIN');
}, 472, null, "TalkPresidential/build/actions/loginActions.js");
__d(/* TalkPresidential/build/actions/authActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setBearerToken = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var setBearerToken = exports.setBearerToken = (0, _reduxActions.createAction)('SET_BEARER_TOKEN', function (token) {
  return token;
});
}, 473, null, "TalkPresidential/build/actions/authActions.js");
__d(/* TalkPresidential/build/sagas/api.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAPI = getAPI;
exports.putAPI = putAPI;
exports.postAPI = postAPI;
exports.request = request;

var _effects = require(394                 ); // 394 = redux-saga/effects

var _authSelectors = require(475                         ); // 475 = ../selectors/authSelectors

var _marked = regeneratorRuntime.mark(getAPI),
    _marked2 = regeneratorRuntime.mark(putAPI),
    _marked3 = regeneratorRuntime.mark(postAPI),
    _marked4 = regeneratorRuntime.mark(request);

var base = 'https://immense-lowlands-26099.herokuapp.com';
var fullBaseURL = base + '/api/v1/';
var contentType = 'application/json';
function queryString(params) {
    var fullQuery = '?';
    for (var prop in params) {
        if (params.hasOwnProperty(prop)) {
            var query = '';
            if (fullQuery !== '?') {
                query += '&';
            }
            query += prop + '=' + params[prop];
            fullQuery += query;
        }
    }
    return fullQuery;
}
function getAPI(path, params) {
    var requiresAuth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var fullPath, options, response;
    return regeneratorRuntime.wrap(function getAPI$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    fullPath = path;

                    if (params) {
                        fullPath += queryString(params);
                    }
                    options = {
                        method: 'GET'
                    };
                    _context.next = 5;
                    return (0, _effects.call)(request, fullPath, options, requiresAuth);

                case 5:
                    response = _context.sent;
                    return _context.abrupt('return', response);

                case 7:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this);
}
function putAPI(path, body) {
    var options, response;
    return regeneratorRuntime.wrap(function putAPI$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    options = {
                        method: 'PUT',
                        body: JSON.stringify(body)
                    };
                    _context2.next = 3;
                    return (0, _effects.call)(request, path, options, true);

                case 3:
                    response = _context2.sent;
                    return _context2.abrupt('return', response);

                case 5:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this);
}
function postAPI(path, body) {
    var options, response;
    return regeneratorRuntime.wrap(function postAPI$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    options = {
                        method: 'POST',
                        body: JSON.stringify(body)
                    };
                    _context3.next = 3;
                    return (0, _effects.call)(request, path, options, true);

                case 3:
                    response = _context3.sent;
                    return _context3.abrupt('return', response);

                case 5:
                case 'end':
                    return _context3.stop();
            }
        }
    }, _marked3, this);
}
function request(path, options, requiresAuth) {
    var headers, authHeader, response, json;
    return regeneratorRuntime.wrap(function request$(_context4) {
        while (1) {
            switch (_context4.prev = _context4.next) {
                case 0:
                    headers = {
                        'Content-Type': contentType,
                        'Authorization': undefined
                    };

                    if (!requiresAuth) {
                        _context4.next = 6;
                        break;
                    }

                    _context4.next = 4;
                    return (0, _effects.select)(_authSelectors.getBearerTokenHeader);

                case 4:
                    authHeader = _context4.sent;

                    headers.Authorization = authHeader;

                case 6:
                    options.headers = headers;
                    _context4.next = 9;
                    return (0, _effects.call)(fetch, fullBaseURL + path, options);

                case 9:
                    response = _context4.sent;
                    _context4.next = 12;
                    return response.json();

                case 12:
                    json = _context4.sent;

                    console.log(options);
                    console.log(path);

                    if (!response.ok) {
                        _context4.next = 19;
                        break;
                    }

                    return _context4.abrupt('return', json);

                case 19:
                    console.log(json);
                    throw json;

                case 21:
                case 'end':
                    return _context4.stop();
            }
        }
    }, _marked4, this);
}
}, 474, null, "TalkPresidential/build/sagas/api.js");
__d(/* TalkPresidential/build/selectors/authSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBearerTokenHeader = exports.getBearerToken = undefined;

var _reselect = require(476       ); // 476 = reselect

var getBearerToken = exports.getBearerToken = function getBearerToken(state) {
  return state.auth.bearerToken;
};
var getBearerTokenHeader = exports.getBearerTokenHeader = (0, _reselect.createSelector)(getBearerToken, function (token) {
  return 'Bearer ' + token;
});
}, 475, null, "TalkPresidential/build/selectors/authSelectors.js");
__d(/* reselect/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.defaultMemoize = defaultMemoize;
exports.createSelectorCreator = createSelectorCreator;
exports.createStructuredSelector = createStructuredSelector;
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;

  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;

      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    var selector = defaultMemoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        params.push(dependencies[i].apply(null, arguments));
      }

      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}
}, 476, null, "reselect/lib/index.js");
__d(/* TalkPresidential/build/selectors/dataSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getUserID = exports.getUserFBID = exports.getUserProfilePicture = exports.getUserNameWithLastNameAbr = exports.getUserFullName = exports.getUsername = exports.getGames = exports.getFriends = exports.getUser = undefined;

var _reselect = require(476       ); // 476 = reselect

var _gameUtils = require(478                      ); // 478 = ../utils/game/gameUtils

var getUser = exports.getUser = function getUser(state) {
    return state.data.user;
};
var getFriends = exports.getFriends = function getFriends(state) {
    return state.data.friends;
};
var getGames = exports.getGames = function getGames(state) {
    return state.data.games;
};
var getUsername = exports.getUsername = (0, _reselect.createSelector)(getUser, function (user) {
    if (user) {
        return user.username;
    }
    return undefined;
});
var getUserFullName = exports.getUserFullName = (0, _reselect.createSelector)(getUser, function (user) {
    return user && user.firstName && user.lastName && user.firstName + ' ' + user.lastName;
});
var getUserNameWithLastNameAbr = exports.getUserNameWithLastNameAbr = (0, _reselect.createSelector)(getUser, function (user) {
    return user && (0, _gameUtils.nameAbbreviated)(user.firstName, user.lastName);
});
var getUserProfilePicture = exports.getUserProfilePicture = (0, _reselect.createSelector)(getUser, function (user) {
    return user && user.profilePicture;
});
var getUserFBID = exports.getUserFBID = (0, _reselect.createSelector)(getUser, function (user) {
    return user && user.profiles && user.profiles.facebook;
});
var getUserID = exports.getUserID = (0, _reselect.createSelector)(getUser, function (user) {
    return user && user._id;
});
}, 477, null, "TalkPresidential/build/selectors/dataSelectors.js");
__d(/* TalkPresidential/build/utils/game/gameUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gameLatestRound = gameLatestRound;
exports.gameOpponent = gameOpponent;
exports.gameIsOpen = gameIsOpen;
exports.nameAbbreviated = nameAbbreviated;
exports.topRoundAndTurnForUserInGame = topRoundAndTurnForUserInGame;
exports.userRoundsWon = userRoundsWon;
exports.userWonGame = userWonGame;

var _appConstants = require(479                             ); // 479 = ./../../constants/appConstants

var _roundUtils = require(480                  ); // 480 = ../round/roundUtils

function gameLatestRound(game) {
    if (!game) {
        return undefined;
    }
    var lastIndex = game.rounds.length - 1;
    return game.rounds[lastIndex];
}
function gameOpponent(game) {
    return game && game.opponent;
}
function gameIsOpen(game, userID, opponentID) {
    if (!game || !userID || !opponentID) {
        return true;
    }
    var userWon = userWonGame(game, userID);
    var opponentWon = userWonGame(game, opponentID);
    return !userWon && !opponentWon;
}
function nameAbbreviated(firstName, lastName) {
    if (!firstName || !lastName) {
        return undefined;
    }
    return firstName + ' ' + lastName.slice(0, 1) + '.';
}
function topRoundAndTurnForUserInGame(game, userID) {
    if (!game || !game.rounds || !userID) {
        return undefined;
    }
    var selectedTurn = void 0;
    var selectedRound = void 0;
    game.rounds.forEach(function (round) {
        var userTurn = (0, _roundUtils.turnForUserID)(round, userID);
        if (!userTurn) {
            return;
        }
        if (!selectedTurn || selectedTurn.score < userTurn.score) {
            selectedTurn = userTurn;
            selectedRound = round;
        }
    });
    return selectedTurn && selectedRound && {
        turn: selectedTurn,
        round: selectedRound
    };
}
function userRoundsWon(game, userID, upToRound) {
    var rounds = game.rounds;
    if (upToRound && game.rounds.length - 1 >= upToRound) {
        rounds = rounds.slice(0, upToRound);
    }
    return rounds.filter(function (round) {
        return (0, _roundUtils.userWonRound)(round, userID);
    }).length;
}
function userWonGame(game, userID) {
    if (!game || !userID) {
        return false;
    }
    var numWins = userRoundsWon(game, userID);
    return numWins === _appConstants.numRoundsToWin;
}
}, 478, null, "TalkPresidential/build/utils/game/gameUtils.js");
__d(/* TalkPresidential/build/constants/appConstants.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var maxUserNameLength = exports.maxUserNameLength = 20;
var maxTurnCharacterLength = exports.maxTurnCharacterLength = 140;
var numberOfRequiredWords = exports.numberOfRequiredWords = 2;
var maxScore = exports.maxScore = 1000000;
var numRounds = exports.numRounds = 7;
var numusersInGame = exports.numusersInGame = 2;
var numRoundsToWin = exports.numRoundsToWin = 4;
}, 479, null, "TalkPresidential/build/constants/appConstants.js");
__d(/* TalkPresidential/build/utils/round/roundUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rangesForWords = rangesForWords;
exports.sortRanges = sortRanges;
exports.splitUpText = splitUpText;
exports.splitupTextFromRequiredWords = splitupTextFromRequiredWords;
exports.userSubmittedTurnForRound = userSubmittedTurnForRound;
exports.turnForUserID = turnForUserID;
exports.userWonRound = userWonRound;
exports.userCanPlayRound = userCanPlayRound;

var _appConstants = require(479                             ); // 479 = ./../../constants/appConstants

function rangesForWords(text, words) {
    if (!text || !words) {
        return [];
    }
    var lowercaseText = text.toLowerCase();
    var lowercaseRequiredWords = words.map(function (word) {
        return word.toLowerCase();
    });
    var ranges = lowercaseRequiredWords.map(function (word) {
        var wordRange = {};
        var startIndex = lowercaseText.indexOf(word);
        wordRange.start = startIndex;
        if (wordRange.start !== -1) {
            wordRange.end = startIndex + word.length;
        }
        return wordRange;
    });
    return ranges;
}
function sortRanges(ranges) {
    return ranges.sort(function (range1, range2) {
        return range1.start - range2.start;
    });
}
function splitUpText(text, ranges) {
    var hasValidRanges = ranges.find(function (range) {
        return range.start !== -1;
    }) !== undefined;
    if (!text || !ranges) {
        return [];
    }
    if (!hasValidRanges) {
        return [text];
    }
    var mostRecentRange = 0;
    var splitupText = [];
    var includedRanges = ranges.filter(function (range) {
        return range.start !== -1;
    });
    includedRanges.forEach(function (range, idx) {
        if (range.start !== 0) {
            var beginningString = text.slice(mostRecentRange, range.start);
            splitupText.push(beginningString);
        }
        splitupText.push(text.slice(range.start, range.end));
        mostRecentRange = range.end;

        if (idx === includedRanges.length - 1 && mostRecentRange !== text.length) {
            splitupText.push(text.slice(mostRecentRange, text.length));
        }
    });
    return splitupText;
}
function splitupTextFromRequiredWords(text, words) {
    if (!text) {
        return undefined;
    }
    var ranges = rangesForWords(text, words);
    var sortedRanges = sortRanges(ranges);
    return splitUpText(text, sortedRanges);
}
function userSubmittedTurnForRound(round, userID) {
    return round.turns && round.turns.filter(function (turn) {
        return turn.user === userID;
    }).length !== 0;
}
function turnForUserID(round, userID) {
    return round.turns.filter(function (turn) {
        return turn.user === userID;
    })[0];
}
function userWonRound(round, userID) {
    if (round.turns.length !== _appConstants.numusersInGame) {
        return false;
    }
    var sortedTurns = round.turns.sort(function (firstTurn, secondTurn) {
        return secondTurn.score - firstTurn.score;
    });
    return sortedTurns[0].user === userID;
}
function userCanPlayRound(round, userID) {
    return turnForUserID(round, userID) === undefined;
}
}, 480, null, "TalkPresidential/build/utils/round/roundUtils.js");
__d(/* TalkPresidential/build/sagas/friendsSaga.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getNextFriendsSaga = getNextFriendsSaga;
exports.getFirstFriends = getFirstFriends;
exports.getFriends = getFriends;
exports.friendsSaga = friendsSaga;

var _friendsActions = require(482                        ); // 482 = ../actions/friendsActions

var _effects = require(394                 ); // 394 = redux-saga/effects

var _friendsSelectors = require(483                            ); // 483 = ../selectors/friendsSelectors

var _fbGraphSaga = require(484            ); // 484 = ./fbGraphSaga

var _dataActions = require(406                     ); // 406 = ../actions/dataActions

var _fbUtils = require(485                      ); // 485 = ../utils/shared/fbUtils

var _marked = regeneratorRuntime.mark(getNextFriendsSaga),
    _marked2 = regeneratorRuntime.mark(getFirstFriends),
    _marked3 = regeneratorRuntime.mark(friendsSaga);

function getNextFriendsSaga() {
    var nextPage;
    return regeneratorRuntime.wrap(function getNextFriendsSaga$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return (0, _effects.select)(_friendsSelectors.getNextPage);

                case 2:
                    nextPage = _context.sent;

                    if (!nextPage) {
                        _context.next = 8;
                        break;
                    }

                    _context.next = 6;
                    return (0, _effects.call)(getFriends, nextPage);

                case 6:
                    _context.next = 10;
                    break;

                case 8:
                    _context.next = 10;
                    return (0, _effects.call)(getFirstFriends);

                case 10:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this);
}
function getFirstFriends() {
    var friendsPath, results, users, allUsersProfilePicParams, result, responses, profilePicMap;
    return regeneratorRuntime.wrap(function getFirstFriends$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.next = 2;
                    return (0, _effects.put)((0, _friendsActions.clearFetchFriendsError)());

                case 2:
                    friendsPath = 'me/friends';
                    _context2.prev = 3;
                    _context2.next = 6;
                    return (0, _effects.call)(_fbGraphSaga.graphRequest, friendsPath);

                case 6:
                    results = _context2.sent;
                    users = results.data;
                    _context2.next = 10;
                    return (0, _effects.put)((0, _dataActions.addUserFriends)(users));

                case 10:
                    if (!(results.paging && results.paging.next)) {
                        _context2.next = 13;
                        break;
                    }

                    _context2.next = 13;
                    return (0, _effects.put)((0, _friendsActions.setNextPage)(results.paging.next));

                case 13:
                    if (!(users.length === 0)) {
                        _context2.next = 15;
                        break;
                    }

                    return _context2.abrupt('return', undefined);

                case 15:
                    allUsersProfilePicParams = users.map(function (user) {
                        return (0, _fbUtils.userProfilePicParams)(user);
                    });
                    _context2.next = 18;
                    return (0, _effects.call)(_fbGraphSaga.batchRequests, allUsersProfilePicParams);

                case 18:
                    result = _context2.sent;
                    responses = result;
                    profilePicMap = {};

                    responses.forEach(function (profilePicResponse, idx) {
                        if (!profilePicResponse.data || !profilePicResponse.data.url) {
                            console.warn('Unable to retrieve pic data for ' + users[idx]);
                            return;
                        }
                        var user = users[idx];
                        var location = profilePicResponse.data.url;
                        profilePicMap[user.id] = location;
                    });
                    _context2.next = 24;
                    return (0, _effects.put)((0, _dataActions.assignProfilePicInfo)(profilePicMap));

                case 24:
                    _context2.next = 31;
                    break;

                case 26:
                    _context2.prev = 26;
                    _context2.t0 = _context2['catch'](3);

                    console.warn(_context2.t0);
                    _context2.next = 31;
                    return (0, _effects.put)((0, _friendsActions.setFetchFriendsError)());

                case 31:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this, [[3, 26]]);
}
function getFriends(_nextPage) {}
function friendsSaga() {
    return regeneratorRuntime.wrap(function friendsSaga$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    _context3.next = 2;
                    return (0, _effects.takeLatest)(_friendsActions.getNextFriends.toString(), getNextFriendsSaga);

                case 2:
                case 'end':
                    return _context3.stop();
            }
        }
    }, _marked3, this);
}
}, 481, null, "TalkPresidential/build/sagas/friendsSaga.js");
__d(/* TalkPresidential/build/actions/friendsActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setFetchFriendsError = exports.clearFetchFriendsError = exports.setNextPage = exports.getNextFriends = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var getNextFriends = exports.getNextFriends = (0, _reduxActions.createAction)('GET_NEXT_FRIENDS');
var setNextPage = exports.setNextPage = (0, _reduxActions.createAction)('SET_NEXT_PAGE', function (pageRequest) {
  return pageRequest;
});
var clearFetchFriendsError = exports.clearFetchFriendsError = (0, _reduxActions.createAction)('CLEAR_FETCH_FRIENDS_ERROR');
var setFetchFriendsError = exports.setFetchFriendsError = (0, _reduxActions.createAction)('SET_FETCH_FRIENDS_ERROR');
}, 482, null, "TalkPresidential/build/actions/friendsActions.js");
__d(/* TalkPresidential/build/selectors/friendsSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getFriendsSectionData = exports.getNextPage = undefined;

var _reselect = require(476       ); // 476 = reselect

var _dataSelectors = require(477              ); // 477 = ./dataSelectors

var getNextPage = exports.getNextPage = function getNextPage(state) {
    return state.friends.nextPage;
};
var getFriendsSectionData = exports.getFriendsSectionData = (0, _reselect.createSelector)(_dataSelectors.getFriends, function (friends) {
    return friends.map(function (friend) {
        return {
            key: friend.id,
            name: friend.name,
            imageUrl: friend.profilePicture
        };
    });
});
}, 483, null, "TalkPresidential/build/selectors/friendsSelectors.js");
__d(/* TalkPresidential/build/sagas/fbGraphSaga.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.graphRequest = graphRequest;
exports.batchRequests = batchRequests;

var _fbUtils = require(485                        ); // 485 = ./../utils/shared/fbUtils

var _fbUtils2 = require(485                      ); // 485 = ../utils/shared/fbUtils

var _effects = require(394                 ); // 394 = redux-saga/effects

var _marked = regeneratorRuntime.mark(graphRequest),
    _marked2 = regeneratorRuntime.mark(batchRequests);

function graphRequest(path, type, params) {
    var result;
    return regeneratorRuntime.wrap(function graphRequest$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return (0, _effects.call)(_fbUtils2.executeRequest, path, type, params);

                case 3:
                    result = _context.sent;
                    return _context.abrupt('return', result);

                case 7:
                    _context.prev = 7;
                    _context.t0 = _context['catch'](0);
                    throw _context.t0;

                case 10:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this, [[0, 7]]);
}
function batchRequests(requests) {
    var result;
    return regeneratorRuntime.wrap(function batchRequests$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.prev = 0;
                    _context2.next = 3;
                    return (0, _effects.call)(_fbUtils.executeRequests, requests);

                case 3:
                    result = _context2.sent;
                    return _context2.abrupt('return', result);

                case 7:
                    _context2.prev = 7;
                    _context2.t0 = _context2['catch'](0);
                    throw _context2.t0;

                case 10:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this, [[0, 7]]);
}
}, 484, null, "TalkPresidential/build/sagas/fbGraphSaga.js");
__d(/* TalkPresidential/build/utils/shared/fbUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FBGraphRequestType = undefined;
exports.executeRequest = executeRequest;
exports.executeRequests = executeRequests;
exports.userProfilePicParams = userProfilePicParams;

var _reactNativeFbsdk = require(486                 ); // 486 = react-native-fbsdk

var FBGraphRequestType = exports.FBGraphRequestType = undefined;
(function (FBGraphRequestType) {
    FBGraphRequestType["GET"] = "GET";
    FBGraphRequestType["POST"] = "POST";
})(FBGraphRequestType || (exports.FBGraphRequestType = FBGraphRequestType = {}));
function executeRequest(path, type, parameters) {
    var request, results, firstResult;
    return regeneratorRuntime.async(function executeRequest$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    request = {
                        path: path,
                        type: type,
                        parameters: parameters
                    };
                    _context.next = 3;
                    return regeneratorRuntime.awrap(executeRequests([request]));

                case 3:
                    results = _context.sent;
                    firstResult = results[0];

                    if (!firstResult.error) {
                        _context.next = 7;
                        break;
                    }

                    throw firstResult.error;

                case 7:
                    return _context.abrupt("return", firstResult);

                case 8:
                case "end":
                    return _context.stop();
            }
        }
    }, null, this);
}
function executeRequests(requests) {
    var results, accessToken, fbRequests, requestManager;
    return regeneratorRuntime.async(function executeRequests$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    results = [];
                    _context2.next = 3;
                    return regeneratorRuntime.awrap(fbAccessToken());

                case 3:
                    accessToken = _context2.sent;
                    fbRequests = requests.map(function (req, idx) {
                        var fbCallback = function fbCallback(err, result) {
                            if (err) {
                                console.warn("fb request error " + JSON.stringify(err));
                                results.push({ idx: idx, result: err });
                            } else {
                                results.push({ idx: idx, result: result });
                            }
                        };
                        var options = {
                            httpMethod: req.type,
                            version: 'v2.11',
                            parameters: req.parameters,
                            accessToken: accessToken
                        };
                        return new _reactNativeFbsdk.GraphRequest(req.path, options, fbCallback);
                    });
                    requestManager = new _reactNativeFbsdk.GraphRequestManager();

                    fbRequests.forEach(function (req) {
                        requestManager = requestManager.addRequest(req);
                    });
                    _context2.next = 9;
                    return regeneratorRuntime.awrap(new Promise(function (res, rej) {
                        requestManager.addBatchCallback(function (err, _ref) {
                            var result = _ref.result;

                            if (result === 'success') {
                                var sortedResults = results.sort(function (first, second) {
                                    return first.idx - second.idx;
                                });
                                var removedIdxResults = sortedResults.map(function (sortedResult) {
                                    return sortedResult.result;
                                });
                                res(removedIdxResults);
                            } else {
                                rej(err);
                            }
                        }).start();
                    }));

                case 9:
                    return _context2.abrupt("return", _context2.sent);

                case 10:
                case "end":
                    return _context2.stop();
            }
        }
    }, null, this);
}
function userProfilePicParams(user) {
    var path = user.id + "/picture?redirect=false";
    return {
        type: FBGraphRequestType.GET,
        path: path
    };
}
function fbAccessToken() {
    var token;
    return regeneratorRuntime.async(function fbAccessToken$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    _context3.next = 2;
                    return regeneratorRuntime.awrap(_reactNativeFbsdk.AccessToken.getCurrentAccessToken());

                case 2:
                    token = _context3.sent;
                    return _context3.abrupt("return", token.accessToken);

                case 4:
                case "end":
                    return _context3.stop();
            }
        }
    }, null, this);
}
}, 485, null, "TalkPresidential/build/utils/shared/fbUtils.js");
__d(/* react-native-fbsdk/js/index.js */function(global, require, module, exports) {

'use strict';

module.exports = {
  get ShareOpenGraphAction() {
    return require(487                              ); // 487 = ./models/FBShareOpenGraphAction
  },
  get ShareOpenGraphObject() {
    return require(489                              ); // 489 = ./models/FBShareOpenGraphObject
  },
  get ShareOpenGraphValueContainer() {
    return require(488                                      ); // 488 = ./models/FBShareOpenGraphValueContainer
  },

  get AccessToken() {
    return require(490              ); // 490 = ./FBAccessToken
  },
  get AppEventsLogger() {
    return require(491                  ); // 491 = ./FBAppEventsLogger
  },
  get AppInviteDialog() {
    return require(492                  ); // 492 = ./FBAppInviteDialog
  },
  get GameRequestDialog() {
    return require(493                    ); // 493 = ./FBGameRequestDialog
  },
  get GraphRequest() {
    return require(494               ); // 494 = ./FBGraphRequest
  },
  get GraphRequestManager() {
    return require(495                      ); // 495 = ./FBGraphRequestManager
  },
  get LoginManager() {
    return require(496               ); // 496 = ./FBLoginManager
  },
  get MessageDialog() {
    return require(497                ); // 497 = ./FBMessageDialog
  },
  get ShareApi() {
    return require(498           ); // 498 = ./FBShareApi
  },
  get ShareDialog() {
    return require(499              ); // 499 = ./FBShareDialog
  },

  get LikeView() {
    return require(500           ); // 500 = ./FBLikeView
  },
  get LoginButton() {
    return require(501              ); // 501 = ./FBLoginButton
  },
  get SendButton() {
    return require(502             ); // 502 = ./FBSendButton
  },
  get ShareButton() {
    return require(503              ); // 503 = ./FBShareButton
  }
};
}, 486, null, "react-native-fbsdk/js/index.js");
__d(/* react-native-fbsdk/js/models/FBShareOpenGraphAction.js */function(global, require, module, exports) {

'use strict';

var ShareOpenGraphValueContainer = require(488                               ); // 488 = ./FBShareOpenGraphValueContainer

var ShareOpenGraphAction = function (_ShareOpenGraphValueC) {
  babelHelpers.inherits(ShareOpenGraphAction, _ShareOpenGraphValueC);

  function ShareOpenGraphAction(actionType) {
    babelHelpers.classCallCheck(this, ShareOpenGraphAction);

    var _this = babelHelpers.possibleConstructorReturn(this, (ShareOpenGraphAction.__proto__ || Object.getPrototypeOf(ShareOpenGraphAction)).call(this, null));

    _this.actionType = actionType;
    return _this;
  }

  return ShareOpenGraphAction;
}(ShareOpenGraphValueContainer);

module.exports = ShareOpenGraphAction;
}, 487, null, "react-native-fbsdk/js/models/FBShareOpenGraphAction.js");
__d(/* react-native-fbsdk/js/models/FBShareOpenGraphValueContainer.js */function(global, require, module, exports) {

'use strict';

var ShareOpenGraphValueContainer = function () {
  function ShareOpenGraphValueContainer(properties) {
    babelHelpers.classCallCheck(this, ShareOpenGraphValueContainer);

    this._properties = properties ? properties : {};
  }

  babelHelpers.createClass(ShareOpenGraphValueContainer, [{
    key: 'putNumber',
    value: function putNumber(key, number) {
      this._properties[key] = { type: 'number', value: number };
    }
  }, {
    key: 'putObject',
    value: function putObject(key, object) {
      this._properties[key] = { type: 'open-graph-object', value: object };
    }
  }, {
    key: 'putPhoto',
    value: function putPhoto(key, photo) {
      this._properties[key] = { type: 'photo', value: photo };
    }
  }, {
    key: 'putString',
    value: function putString(key, string) {
      this._properties[key] = { type: 'string', value: string };
    }
  }, {
    key: 'getEntry',
    value: function getEntry(key) {
      return this._properties[key];
    }
  }]);
  return ShareOpenGraphValueContainer;
}();

module.exports = ShareOpenGraphValueContainer;
}, 488, null, "react-native-fbsdk/js/models/FBShareOpenGraphValueContainer.js");
__d(/* react-native-fbsdk/js/models/FBShareOpenGraphObject.js */function(global, require, module, exports) {

'use strict';

var ShareOpenGraphValueContainer = require(488                               ); // 488 = ./FBShareOpenGraphValueContainer

var ShareOpenGraphObject = function (_ShareOpenGraphValueC) {
  babelHelpers.inherits(ShareOpenGraphObject, _ShareOpenGraphValueC);

  function ShareOpenGraphObject() {
    babelHelpers.classCallCheck(this, ShareOpenGraphObject);
    return babelHelpers.possibleConstructorReturn(this, (ShareOpenGraphObject.__proto__ || Object.getPrototypeOf(ShareOpenGraphObject)).apply(this, arguments));
  }

  return ShareOpenGraphObject;
}(ShareOpenGraphValueContainer);

module.exports = ShareOpenGraphObject;
}, 489, null, "react-native-fbsdk/js/models/FBShareOpenGraphObject.js");
__d(/* react-native-fbsdk/js/FBAccessToken.js */function(global, require, module, exports) {

'use strict';

var AccessToken = require(12            ).NativeModules.FBAccessToken; // 12 = react-native

var FBAccessToken = function () {
  function FBAccessToken(tokenMap) {
    babelHelpers.classCallCheck(this, FBAccessToken);

    this.accessToken = tokenMap.accessToken;
    this.permissions = tokenMap.permissions;
    this.declinedPermissions = tokenMap.declinedPermissions;
    this.applicationID = tokenMap.applicationID;
    this.accessTokenSource = tokenMap.accessTokenSource;
    this.userID = tokenMap.userID;
    this.expirationTime = tokenMap.expirationTime;
    this.lastRefreshTime = tokenMap.lastRefreshTime;
    Object.freeze(this);
  }

  babelHelpers.createClass(FBAccessToken, [{
    key: 'getExpires',
    value: function getExpires() {
      return this.expirationTime;
    }
  }, {
    key: 'getPermissions',
    value: function getPermissions() {
      return this.permissions;
    }
  }, {
    key: 'getDeclinedPermissions',
    value: function getDeclinedPermissions() {
      return this.declinedPermissions;
    }
  }, {
    key: 'getLastRefresh',
    value: function getLastRefresh() {
      return this.lastRefreshTime;
    }
  }, {
    key: 'getApplicationId',
    value: function getApplicationId() {
      return this.applicationID;
    }
  }, {
    key: 'getUserId',
    value: function getUserId() {
      return this.userID;
    }
  }], [{
    key: 'getCurrentAccessToken',
    value: function getCurrentAccessToken() {
      return new Promise(function (resolve, reject) {
        AccessToken.getCurrentAccessToken(function (tokenMap) {
          if (tokenMap) {
            resolve(new FBAccessToken(tokenMap));
          } else {
            resolve(null);
          }
        });
      });
    }
  }, {
    key: 'setCurrentAccessToken',
    value: function setCurrentAccessToken(accessToken) {
      AccessToken.setCurrentAccessToken(accessToken);
    }
  }, {
    key: 'refreshCurrentAccessTokenAsync',
    value: function refreshCurrentAccessTokenAsync() {
      return AccessToken.refreshCurrentAccessTokenAsync();
    }
  }]);
  return FBAccessToken;
}();

module.exports = FBAccessToken;
}, 490, null, "react-native-fbsdk/js/FBAccessToken.js");
__d(/* react-native-fbsdk/js/FBAppEventsLogger.js */function(global, require, module, exports) {
'use strict';

var AppEventsLogger = require(12            ).NativeModules.FBAppEventsLogger; // 12 = react-native


module.exports = {
  setFlushBehavior: function setFlushBehavior(flushBehavior) {
    AppEventsLogger.setFlushBehavior(flushBehavior);
  },
  logEvent: function logEvent(eventName) {
    var valueToSum = 0;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (typeof args[0] === 'number') {
      valueToSum = args.shift();
    }
    var parameters = null;
    if (typeof args[0] === 'object') {
      parameters = args[0];
    }
    AppEventsLogger.logEvent(eventName, valueToSum, parameters);
  },
  logPurchase: function logPurchase(purchaseAmount, currencyCode, parameters) {
    AppEventsLogger.logPurchase(purchaseAmount, currencyCode, parameters);
  },
  logPushNotificationOpen: function logPushNotificationOpen(payload) {
    AppEventsLogger.logPushNotificationOpen(payload);
  },
  flush: function flush() {
    AppEventsLogger.flush();
  },
  setUserID: function setUserID(userID) {
    AppEventsLogger.setUserID(userID);
  },
  getUserID: function getUserID() {
    return regeneratorRuntime.async(function getUserID$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return regeneratorRuntime.awrap(AppEventsLogger.getUserID());

          case 2:
            return _context.abrupt('return', _context.sent);

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  },
  updateUserProperties: function updateUserProperties(parameters) {
    AppEventsLogger.updateUserProperties(parameters);
  },
  setPushNotificationsDeviceToken: function setPushNotificationsDeviceToken(deviceToken) {
    AppEventsLogger.setPushNotificationsDeviceToken(deviceToken);
  },
  setPushNotificationsRegistrationId: function setPushNotificationsRegistrationId(registrationId) {
    AppEventsLogger.setPushNotificationsRegistrationId(registrationId);
  }
};
}, 491, null, "react-native-fbsdk/js/FBAppEventsLogger.js");
__d(/* react-native-fbsdk/js/FBAppInviteDialog.js */function(global, require, module, exports) {
'use strict';

var AppInviteDialog = require(12            ).NativeModules.FBAppInviteDialog; // 12 = react-native


module.exports = {
  canShow: function canShow() {
    return AppInviteDialog.canShow();
  },
  show: function show(appInviteContent) {
    return AppInviteDialog.show(appInviteContent);
  }
};
}, 492, null, "react-native-fbsdk/js/FBAppInviteDialog.js");
__d(/* react-native-fbsdk/js/FBGameRequestDialog.js */function(global, require, module, exports) {
'use strict';

var GameRequestDialog = require(12            ).NativeModules.FBGameRequestDialog; // 12 = react-native


module.exports = {
  canShow: function canShow() {
    return GameRequestDialog.canShow();
  },
  show: function show(gameRequestContent) {
    return GameRequestDialog.show(gameRequestContent);
  }
};
}, 493, null, "react-native-fbsdk/js/FBGameRequestDialog.js");
__d(/* react-native-fbsdk/js/FBGraphRequest.js */function(global, require, module, exports) {

'use strict';

var FBGraphRequest = function () {
  function FBGraphRequest(graphPath, config, callback) {
    babelHelpers.classCallCheck(this, FBGraphRequest);

    this.graphPath = graphPath;
    this.config = config ? config : {};
    this.callback = callback ? callback : function () {};
  }

  babelHelpers.createClass(FBGraphRequest, [{
    key: 'addStringParameter',
    value: function addStringParameter(paramString, key) {
      if (this.config != null && this.config.parameters != null) {
        this.config.parameters[key] = { string: paramString };
      }
    }
  }]);
  return FBGraphRequest;
}();

module.exports = FBGraphRequest;
}, 494, null, "react-native-fbsdk/js/FBGraphRequest.js");
__d(/* react-native-fbsdk/js/FBGraphRequestManager.js */function(global, require, module, exports) {

'use strict';

var NativeGraphRequestManager = require(12            ).NativeModules.FBGraphRequest; // 12 = react-native

function _verifyParameters(request) {
  if (request.config && request.config.parameters) {
    for (var key in request.config.parameters) {
      var param = request.config.parameters[key];
      if (typeof param === 'object' && param.string) {
        continue;
      }
      throw new Error("Unexpected value for parameter '" + key + "'. Request parameters " + "need to be objects with a 'string' field.");
    }
  }
}

var FBGraphRequestManager = function () {
  function FBGraphRequestManager() {
    babelHelpers.classCallCheck(this, FBGraphRequestManager);

    this.requestBatch = [];
    this.requestCallbacks = [];
  }

  babelHelpers.createClass(FBGraphRequestManager, [{
    key: 'addRequest',
    value: function addRequest(request) {
      _verifyParameters(request);
      this.requestBatch.push(request);
      this.requestCallbacks.push(request.callback);
      return this;
    }
  }, {
    key: 'addBatchCallback',
    value: function addBatchCallback(callback) {
      this.batchCallback = callback;
      return this;
    }
  }, {
    key: 'start',
    value: function start(timeout) {
      var that = this;
      var callback = function callback(error, result, response) {
        if (response) {
          that.requestCallbacks.forEach(function (innerCallback, index, array) {
            if (innerCallback) {
              innerCallback(response[index][0], response[index][1]);
            }
          });
        }
        if (that.batchCallback) {
          that.batchCallback(error, result);
        }
      };

      NativeGraphRequestManager.start(this.requestBatch, timeout || 0, callback);
    }
  }]);
  return FBGraphRequestManager;
}();

module.exports = FBGraphRequestManager;
}, 495, null, "react-native-fbsdk/js/FBGraphRequestManager.js");
__d(/* react-native-fbsdk/js/FBLoginManager.js */function(global, require, module, exports) {
'use strict';

var LoginManager = require(12            ).NativeModules.FBLoginManager; // 12 = react-native


module.exports = {
  logInWithReadPermissions: function logInWithReadPermissions(permissions) {
    return LoginManager.logInWithReadPermissions(permissions);
  },
  logInWithPublishPermissions: function logInWithPublishPermissions(permissions) {
    return LoginManager.logInWithPublishPermissions(permissions);
  },
  getLoginBehavior: function getLoginBehavior() {
    return LoginManager.getLoginBehavior();
  },
  setLoginBehavior: function setLoginBehavior(loginBehavior) {
    LoginManager.setLoginBehavior(loginBehavior);
  },
  getDefaultAudience: function getDefaultAudience() {
    return LoginManager.getDefaultAudience();
  },
  setDefaultAudience: function setDefaultAudience(defaultAudience) {
    LoginManager.setDefaultAudience(defaultAudience);
  },
  logOut: function logOut() {
    LoginManager.logOut();
  }
};
}, 496, null, "react-native-fbsdk/js/FBLoginManager.js");
__d(/* react-native-fbsdk/js/FBMessageDialog.js */function(global, require, module, exports) {

'use strict';

var MessageDialog = require(12            ).NativeModules.FBMessageDialog; // 12 = react-native


module.exports = {
  canShow: function canShow(shareContent) {
    return MessageDialog.canShow(shareContent);
  },
  show: function show(shareContent) {
    return MessageDialog.show(shareContent);
  },
  setShouldFailOnDataError: function setShouldFailOnDataError(shouldFailOnDataError) {
    MessageDialog.setShouldFailOnDataError(shouldFailOnDataError);
  }
};
}, 497, null, "react-native-fbsdk/js/FBMessageDialog.js");
__d(/* react-native-fbsdk/js/FBShareApi.js */function(global, require, module, exports) {
'use strict';

var ShareApi = require(12            ).NativeModules.FBShareApi; // 12 = react-native
var ShareOpenGraphObject = require(489                              ); // 489 = ./models/FBShareOpenGraphObject

module.exports = {
  canShare: function canShare(shareContent) {
    return ShareApi.canShare(shareContent);
  },
  createOpenGraphObject: function createOpenGraphObject(openGraphObject) {
    return ShareApi.createOpenGraphObject(openGraphObject);
  },
  share: function share(shareContent, graphNode, message) {
    return ShareApi.share(shareContent, graphNode, message);
  }
};
}, 498, null, "react-native-fbsdk/js/FBShareApi.js");
__d(/* react-native-fbsdk/js/FBShareDialog.js */function(global, require, module, exports) {
'use strict';

var ShareDialog = require(12            ).NativeModules.FBShareDialog; // 12 = react-native


module.exports = {
  canShow: function canShow(shareContent) {
    return ShareDialog.canShow(shareContent);
  },
  show: function show(shareContent) {
    return ShareDialog.show(shareContent);
  },
  setMode: function setMode(mode) {
    ShareDialog.setMode(mode);
  },
  setShouldFailOnDataError: function setShouldFailOnDataError(shouldFailOnDataError) {
    ShareDialog.setShouldFailOnDataError(shouldFailOnDataError);
  }
};
}, 499, null, "react-native-fbsdk/js/FBShareDialog.js");
__d(/* react-native-fbsdk/js/FBLikeView.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-fbsdk/js/FBLikeView.js';

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var LikeView = function (_React$Component) {
  babelHelpers.inherits(LikeView, _React$Component);

  function LikeView() {
    babelHelpers.classCallCheck(this, LikeView);
    return babelHelpers.possibleConstructorReturn(this, (LikeView.__proto__ || Object.getPrototypeOf(LikeView)).apply(this, arguments));
  }

  babelHelpers.createClass(LikeView, [{
    key: 'render',
    value: function render() {
      return React.createElement(RCTFBLikeView, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 82
        }
      }));
    }
  }]);
  return LikeView;
}(React.Component);

LikeView.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
  objectIdAndType: _propTypes2.default.object.isRequired,
  likeViewStyle: _propTypes2.default.oneOf(['standard', 'button', 'box_count']),
  auxiliaryViewPosition: _propTypes2.default.oneOf(['top', 'bottom', 'inline']),
  horizontalAlignment: _propTypes2.default.oneOf(['center', 'left', 'right']),
  foregroundColor: _propTypes2.default.number,
  soundEnabled: _propTypes2.default.bool
});

var styles = _reactNative.StyleSheet.create({
  defaultButtonStyle: {
    height: 65,
    width: 300
  }
});

LikeView.defaultProps = { style: styles.defaultButtonStyle };

var RCTFBLikeView = (0, _reactNative.requireNativeComponent)('RCTFBLikeView', LikeView);

module.exports = LikeView;
}, 500, null, "react-native-fbsdk/js/FBLikeView.js");
__d(/* react-native-fbsdk/js/FBLoginButton.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-fbsdk/js/FBLoginButton.js';

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var LoginButton = function (_React$Component) {
  babelHelpers.inherits(LoginButton, _React$Component);

  function LoginButton() {
    babelHelpers.classCallCheck(this, LoginButton);
    return babelHelpers.possibleConstructorReturn(this, (LoginButton.__proto__ || Object.getPrototypeOf(LoginButton)).apply(this, arguments));
  }

  babelHelpers.createClass(LoginButton, [{
    key: '_eventHandler',
    value: function _eventHandler(event) {
      var eventDict = event.nativeEvent;
      if (eventDict.type === 'loginFinished') {
        if (this.props.onLoginFinished) {
          this.props.onLoginFinished(eventDict.error, eventDict.result);
        }
      } else if (eventDict.type === 'logoutFinished') {
        if (this.props.onLogoutFinished) {
          this.props.onLogoutFinished();
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(RCTFBLoginButton, babelHelpers.extends({}, this.props, {
        onChange: this._eventHandler.bind(this),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 112
        }
      }));
    }
  }]);
  return LoginButton;
}(React.Component);

LoginButton.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
  readPermissions: _propTypes2.default.arrayOf(_propTypes2.default.string),
  publishPermissions: _propTypes2.default.arrayOf(_propTypes2.default.string),
  onLoginFinished: _propTypes2.default.func,
  onLogoutFinished: _propTypes2.default.func,
  loginBehaviorAndroid: _propTypes2.default.oneOf(['native_with_fallback', 'native_only', 'web_only']),
  loginBehaviorIOS: _propTypes2.default.oneOf(['native', 'browser', 'system_account', 'web']),
  defaultAudience: _propTypes2.default.oneOf(['only_me', 'friends', 'everyone']),
  tooltipBehaviorIOS: _propTypes2.default.oneOf(['auto', 'force_display', 'disable'])
});

var styles = _reactNative.StyleSheet.create({
  defaultButtonStyle: {
    height: 30,
    width: 190
  }
});

LoginButton.defaultProps = {
  style: styles.defaultButtonStyle
};

var RCTFBLoginButton = (0, _reactNative.requireNativeComponent)('RCTFBLoginButton', LoginButton, { nativeOnly: { onChange: true } });

module.exports = LoginButton;
}, 501, null, "react-native-fbsdk/js/FBLoginButton.js");
__d(/* react-native-fbsdk/js/FBSendButton.js */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-fbsdk/js/FBSendButton.js';

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var SendButton = function (_React$Component) {
  babelHelpers.inherits(SendButton, _React$Component);

  function SendButton() {
    babelHelpers.classCallCheck(this, SendButton);
    return babelHelpers.possibleConstructorReturn(this, (SendButton.__proto__ || Object.getPrototypeOf(SendButton)).apply(this, arguments));
  }

  babelHelpers.createClass(SendButton, [{
    key: 'render',
    value: function render() {
      return React.createElement(RCTFBSendButton, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      }));
    }
  }]);
  return SendButton;
}(React.Component);

SendButton.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
  shareContent: _propTypes2.default.object
});

var styles = _reactNative.StyleSheet.create({
  defaultButtonStyle: {
    height: 30,
    width: 80
  }
});

SendButton.defaultProps = {
  style: styles.defaultButtonStyle
};

var RCTFBSendButton = (0, _reactNative.requireNativeComponent)('RCTFBSendButton', SendButton);

module.exports = SendButton;
}, 502, null, "react-native-fbsdk/js/FBSendButton.js");
__d(/* react-native-fbsdk/js/FBShareButton.js */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-fbsdk/js/FBShareButton.js';

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var ShareButton = function (_React$Component) {
  babelHelpers.inherits(ShareButton, _React$Component);

  function ShareButton() {
    babelHelpers.classCallCheck(this, ShareButton);
    return babelHelpers.possibleConstructorReturn(this, (ShareButton.__proto__ || Object.getPrototypeOf(ShareButton)).apply(this, arguments));
  }

  babelHelpers.createClass(ShareButton, [{
    key: 'render',
    value: function render() {
      return React.createElement(RCTFBShareButton, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        }
      }));
    }
  }]);
  return ShareButton;
}(React.Component);

ShareButton.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
  shareContent: _propTypes2.default.object
});

var styles = _reactNative.StyleSheet.create({
  defaultButtonStyle: {
    height: 30,
    width: 80
  }
});

ShareButton.defaultProps = {
  style: styles.defaultButtonStyle
};

var RCTFBShareButton = (0, _reactNative.requireNativeComponent)('RCTFBShareButton', ShareButton);

module.exports = ShareButton;
}, 503, null, "react-native-fbsdk/js/FBShareButton.js");
__d(/* TalkPresidential/build/sagas/dataSaga.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.appStart = appStart;
exports.dataSaga = dataSaga;

var _gamesListActions = require(505                            ); // 505 = ./../actions/gamesListActions

var _dataActions = require(406                       ); // 406 = ./../actions/dataActions

var _friendsActions = require(482                          ); // 482 = ./../actions/friendsActions

var _effects = require(394                 ); // 394 = redux-saga/effects

var _marked = regeneratorRuntime.mark(appStart),
    _marked2 = regeneratorRuntime.mark(dataSaga);

function appStart() {
    return regeneratorRuntime.wrap(function appStart$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return (0, _effects.put)((0, _friendsActions.getNextFriends)());

                case 2:
                    _context.next = 4;
                    return (0, _effects.put)((0, _gamesListActions.fetchGames)(true));

                case 4:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this);
}
function dataSaga() {
    return regeneratorRuntime.wrap(function dataSaga$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.next = 2;
                    return (0, _effects.takeLatest)(_dataActions.loadStartData, appStart);

                case 2:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this);
}
}, 504, null, "TalkPresidential/build/sagas/dataSaga.js");
__d(/* TalkPresidential/build/actions/gamesListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.setIsFetchingGames = exports.resetState = exports.setGetGamesError = exports.setNextPageParams = exports.setAtEndOfGames = exports.fetchGames = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var fetchGames = exports.fetchGames = (0, _reduxActions.createAction)('FETCH_GAMES', function () {
    var clearExisting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    return clearExisting;
});
var setAtEndOfGames = exports.setAtEndOfGames = (0, _reduxActions.createAction)('SET_AT_END_OF_GAMES', function (atEndOfGames) {
    return atEndOfGames;
});
var setNextPageParams = exports.setNextPageParams = (0, _reduxActions.createAction)('SET_NEXT_PAGE_PARAMS', function (updatedAt, pageLimit, pageNumber) {
    return {
        updatedAt: updatedAt,
        pageLimit: pageLimit,
        pageNumber: pageNumber
    };
});
var setGetGamesError = exports.setGetGamesError = (0, _reduxActions.createAction)('SET_GET_GAMES_ERROR', function (error) {
    return error;
});
var resetState = exports.resetState = (0, _reduxActions.createAction)('RESET_STATE');
var setIsFetchingGames = exports.setIsFetchingGames = (0, _reduxActions.createAction)('IS_FETCHING_GAMES', function (isFetching) {
    return isFetching;
});
}, 505, null, "TalkPresidential/build/actions/gamesListActions.js");
__d(/* TalkPresidential/build/sagas/currentGameSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.startGameWithFacebookFriend = startGameWithFacebookFriend;
exports.startGameWithUserNameSaga = startGameWithUserNameSaga;
exports.startRandomGameSaga = startRandomGameSaga;
exports.startGameWithRequestBody = startGameWithRequestBody;
exports.gameSagas = gameSagas;

var _currentGameActions = require(507                              ); // 507 = ./../actions/currentGameActions

var _effects = require(394                 ); // 394 = redux-saga/effects

var _currentGameActions2 = require(507                            ); // 507 = ../actions/currentGameActions

var _dataActions = require(406                     ); // 406 = ../actions/dataActions

var _api = require(474    ); // 474 = ./api

var _marked = regeneratorRuntime.mark(startGameWithFacebookFriend),
    _marked2 = regeneratorRuntime.mark(startGameWithUserNameSaga),
    _marked3 = regeneratorRuntime.mark(startRandomGameSaga),
    _marked4 = regeneratorRuntime.mark(startGameWithRequestBody),
    _marked5 = regeneratorRuntime.mark(gameSagas);

function startGameWithFacebookFriend(action) {
    var postBody;
    return regeneratorRuntime.wrap(function startGameWithFacebookFriend$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    postBody = {
                        facebookId: action.payload
                    };
                    _context.next = 3;
                    return (0, _effects.call)(startGameWithRequestBody, postBody);

                case 3:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this);
}
function startGameWithUserNameSaga(action) {
    var postBody;
    return regeneratorRuntime.wrap(function startGameWithUserNameSaga$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    postBody = {
                        username: action.payload
                    };
                    _context2.next = 3;
                    return (0, _effects.call)(startGameWithRequestBody, postBody);

                case 3:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this);
}
function startRandomGameSaga() {
    return regeneratorRuntime.wrap(function startRandomGameSaga$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    _context3.next = 2;
                    return (0, _effects.call)(startGameWithRequestBody, {});

                case 2:
                case 'end':
                    return _context3.stop();
            }
        }
    }, _marked3, this);
}
function startGameWithRequestBody(body) {
    var response, game;
    return regeneratorRuntime.wrap(function startGameWithRequestBody$(_context4) {
        while (1) {
            switch (_context4.prev = _context4.next) {
                case 0:
                    _context4.next = 2;
                    return (0, _effects.put)((0, _currentGameActions.setStartGameError)(undefined));

                case 2:
                    _context4.next = 4;
                    return (0, _effects.put)((0, _currentGameActions2.setWaitingForRandomOpponent)(false));

                case 4:
                    _context4.prev = 4;
                    _context4.next = 7;
                    return (0, _effects.call)(_api.postAPI, 'user/createGame', body);

                case 7:
                    response = _context4.sent;

                    if (!(!response.response && response.meta.status === 'waiting_for_user')) {
                        _context4.next = 12;
                        break;
                    }

                    _context4.next = 11;
                    return (0, _effects.put)((0, _currentGameActions2.setWaitingForRandomOpponent)(true));

                case 11:
                    return _context4.abrupt('return', undefined);

                case 12:
                    game = response.response.game;
                    _context4.next = 15;
                    return (0, _effects.put)((0, _dataActions.addGame)(game));

                case 15:
                    _context4.next = 17;
                    return (0, _effects.put)((0, _currentGameActions2.setCurrentGameID)(game._id));

                case 17:
                    _context4.next = 23;
                    break;

                case 19:
                    _context4.prev = 19;
                    _context4.t0 = _context4['catch'](4);
                    _context4.next = 23;
                    return (0, _effects.put)((0, _currentGameActions.setStartGameError)(_context4.t0));

                case 23:
                case 'end':
                    return _context4.stop();
            }
        }
    }, _marked4, this, [[4, 19]]);
}
function gameSagas() {
    return regeneratorRuntime.wrap(function gameSagas$(_context5) {
        while (1) {
            switch (_context5.prev = _context5.next) {
                case 0:
                    _context5.next = 2;
                    return (0, _effects.takeLatest)(_currentGameActions2.startRandomGame.toString(), startRandomGameSaga);

                case 2:
                    _context5.next = 4;
                    return (0, _effects.takeLatest)(_currentGameActions2.startGameWithUsername.toString(), startGameWithUserNameSaga);

                case 4:
                    _context5.next = 6;
                    return (0, _effects.takeLatest)(_currentGameActions2.startGameWithFriend.toString(), startGameWithFacebookFriend);

                case 6:
                case 'end':
                    return _context5.stop();
            }
        }
    }, _marked5, this);
}
}, 506, null, "TalkPresidential/build/sagas/currentGameSagas.js");
__d(/* TalkPresidential/build/actions/currentGameActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setWaitingForRandomOpponent = exports.setStartGameError = exports.setCurrentGameID = exports.startGameWithFriend = exports.startGameWithUsername = exports.startRandomGame = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var startRandomGame = exports.startRandomGame = (0, _reduxActions.createAction)('START_RANDOM_GAME');
var startGameWithUsername = exports.startGameWithUsername = (0, _reduxActions.createAction)('START_GAME_WITH_USER_NAME', function (username) {
  return username;
});
var startGameWithFriend = exports.startGameWithFriend = (0, _reduxActions.createAction)('START_GAME_WITH_FRIEND', function (friendFBID) {
  return friendFBID;
});
var setCurrentGameID = exports.setCurrentGameID = (0, _reduxActions.createAction)('SET_CURRENT_GAME_ID', function (gameId) {
  return gameId;
});
var setStartGameError = exports.setStartGameError = (0, _reduxActions.createAction)('START_GAME_ERROR', function (error) {
  return error;
});
var setWaitingForRandomOpponent = exports.setWaitingForRandomOpponent = (0, _reduxActions.createAction)('SET_WAITING_FOR_RANDOM_OPPONENT', function (waiting) {
  return waiting;
});
}, 507, null, "TalkPresidential/build/actions/currentGameActions.js");
__d(/* TalkPresidential/build/sagas/composeTurnSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.submitTextForTurn = submitTextForTurn;
exports.submitTurnToAPI = submitTurnToAPI;
exports.predictScore = predictScore;
exports.composeTurnSagas = composeTurnSagas;

var _dataSelectors = require(477                           ); // 477 = ./../selectors/dataSelectors

var _composeTurnSelectors = require(509                                  ); // 509 = ./../selectors/composeTurnSelectors

var _composeTurnActions = require(513                              ); // 513 = ./../actions/composeTurnActions

var _dataActions = require(406                       ); // 406 = ./../actions/dataActions

var _effects = require(394                 ); // 394 = redux-saga/effects

var _scoringUtils = require(514                            ); // 514 = ../utils/scoring/scoringUtils

var _networkUtils = require(522                    ); // 522 = ../utils/networkUtils

var _api = require(474    ); // 474 = ./api

var _currentGameSelectors = require(512                                ); // 512 = ../selectors/currentGameSelectors

var _linear_scoring_utils = require(523                                                   ); // 523 = ../utils/scoring/linear_scoring/linear_scoring_utils

var _marked = regeneratorRuntime.mark(submitTextForTurn),
    _marked2 = regeneratorRuntime.mark(submitTurnToAPI),
    _marked3 = regeneratorRuntime.mark(predictScore),
    _marked4 = regeneratorRuntime.mark(composeTurnSagas);

function submitTextForTurn() {
    var isConnected, text, values;
    return regeneratorRuntime.wrap(function submitTextForTurn$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return (0, _effects.call)(_networkUtils.isConnectedToInternet);

                case 2:
                    isConnected = _context.sent;

                    if (!isConnected) {
                        _context.next = 25;
                        break;
                    }

                    _context.next = 6;
                    return (0, _effects.put)((0, _composeTurnActions.setConnectedToInternet)(true));

                case 6:
                    _context.prev = 6;
                    _context.next = 9;
                    return (0, _effects.select)(_composeTurnSelectors.getComposeTurnText);

                case 9:
                    text = _context.sent;
                    _context.next = 12;
                    return (0, _effects.call)(predictScore, text);

                case 12:
                    values = _context.sent;
                    _context.next = 15;
                    return (0, _effects.put)((0, _composeTurnActions.setScore)(values.score));

                case 15:
                    _context.next = 17;
                    return (0, _effects.fork)(submitTurnToAPI, values, text);

                case 17:
                    _context.next = 23;
                    break;

                case 19:
                    _context.prev = 19;
                    _context.t0 = _context['catch'](6);
                    _context.next = 23;
                    return (0, _effects.put)((0, _composeTurnActions.setSubmitScoreError)(_context.t0));

                case 23:
                    _context.next = 27;
                    break;

                case 25:
                    _context.next = 27;
                    return (0, _effects.put)((0, _composeTurnActions.setConnectedToInternet)(false));

                case 27:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this, [[6, 19]]);
}
function submitTurnToAPI(values, text) {
    var currentGameID, userID, body, result, game;
    return regeneratorRuntime.wrap(function submitTurnToAPI$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.next = 2;
                    return (0, _effects.select)(_currentGameSelectors.getCurrentGameID);

                case 2:
                    currentGameID = _context2.sent;
                    _context2.next = 5;
                    return (0, _effects.select)(_dataSelectors.getUserID);

                case 5:
                    userID = _context2.sent;
                    body = {
                        user: userID,
                        gameId: currentGameID,
                        text: text,
                        score: values.score,
                        percent: values.percent
                    };
                    _context2.prev = 7;
                    _context2.next = 10;
                    return (0, _effects.call)(_api.postAPI, 'game/submitTurn', body);

                case 10:
                    result = _context2.sent;
                    game = result.response.game;
                    _context2.next = 14;
                    return (0, _effects.put)((0, _dataActions.addGame)(game));

                case 14:
                    _context2.next = 19;
                    break;

                case 16:
                    _context2.prev = 16;
                    _context2.t0 = _context2['catch'](7);

                    console.log(_context2.t0);

                case 19:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this, [[7, 16]]);
}
function predictScore(text) {
    var tokenizedText, textDictionary, prediction, nnPercent, linPercent, combinedPercent, score;
    return regeneratorRuntime.wrap(function predictScore$(_context3) {
        while (1) {
            switch (_context3.prev = _context3.next) {
                case 0:
                    _context3.next = 2;
                    return (0, _effects.call)(_scoringUtils.tokenizeText, text);

                case 2:
                    tokenizedText = _context3.sent;
                    _context3.next = 5;
                    return (0, _effects.call)(_scoringUtils.assignValuesForTokens, tokenizedText);

                case 5:
                    textDictionary = _context3.sent;
                    _context3.next = 8;
                    return (0, _effects.call)(_scoringUtils.predictFromMappings, textDictionary);

                case 8:
                    prediction = _context3.sent;
                    nnPercent = prediction.length > 0 && prediction[0];
                    _context3.next = 12;
                    return (0, _effects.call)(_linear_scoring_utils.calculateProbOfPOTUS, text);

                case 12:
                    linPercent = _context3.sent;
                    combinedPercent = nnPercent * 0.6 + linPercent * 0.4;
                    _context3.next = 16;
                    return (0, _effects.call)(_scoringUtils.calculateScore, combinedPercent);

                case 16:
                    score = _context3.sent;
                    return _context3.abrupt('return', {
                        score: score,
                        percent: combinedPercent
                    });

                case 18:
                case 'end':
                    return _context3.stop();
            }
        }
    }, _marked3, this);
}
function composeTurnSagas() {
    return regeneratorRuntime.wrap(function composeTurnSagas$(_context4) {
        while (1) {
            switch (_context4.prev = _context4.next) {
                case 0:
                    _context4.next = 2;
                    return (0, _effects.takeLatest)(_composeTurnActions.submitText.toString(), submitTextForTurn);

                case 2:
                case 'end':
                    return _context4.stop();
            }
        }
    }, _marked4, this);
}
}, 508, null, "TalkPresidential/build/sagas/composeTurnSagas.js");
__d(/* TalkPresidential/build/selectors/composeTurnSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getComposeTurnProps = exports.canSubmitTextForTurn = exports.getSplitupText = exports.getRequiredWordsIncluded = exports.getComposeTurnCharactersRemaining = exports.getComposeTurnScore = exports.getComposeTurnText = undefined;

var _roundSelectors = require(510               ); // 510 = ./roundSelectors

var _appConstants = require(479                          ); // 479 = ./../constants/appConstants

var _reselect = require(476       ); // 476 = reselect

var _roundUtils = require(480                        ); // 480 = ../utils/round/roundUtils

var getComposeTurnText = exports.getComposeTurnText = function getComposeTurnText(state) {
    return state.composeTurn.text;
};
var getComposeTurnScore = exports.getComposeTurnScore = function getComposeTurnScore(state) {
    return state.composeTurn.score;
};
var getComposeTurnCharactersRemaining = exports.getComposeTurnCharactersRemaining = (0, _reselect.createSelector)(getComposeTurnText, function (text) {
    var textToCount = text || '';
    return _appConstants.maxTurnCharacterLength - textToCount.length;
});
var getRangesForRequiredWords = (0, _reselect.createSelector)(getComposeTurnText, _roundSelectors.getRoundRequiredWords, function (text, words) {
    return (0, _roundUtils.rangesForWords)(text, words);
});
var getSortedRangesForRequiredWords = (0, _reselect.createSelector)(getRangesForRequiredWords, function (ranges) {
    return (0, _roundUtils.sortRanges)(ranges);
});
var getRequiredWordsIncluded = exports.getRequiredWordsIncluded = (0, _reselect.createSelector)(getRangesForRequiredWords, _roundSelectors.getRoundRequiredWords, function (ranges, words) {
    if (ranges && ranges.length === 0) {
        return words && words.map(function () {
            return false;
        });
    }
    return ranges.map(function (range) {
        return range.start !== -1;
    });
});
var getSplitupText = exports.getSplitupText = (0, _reselect.createSelector)(getComposeTurnText, getSortedRangesForRequiredWords, function (text, ranges) {
    var splitupText = (0, _roundUtils.splitUpText)(text, ranges);
    return splitupText;
});
var canSubmitTextForTurn = exports.canSubmitTextForTurn = (0, _reselect.createSelector)(getRequiredWordsIncluded, getComposeTurnCharactersRemaining, function (requiredWords, charactersRemaining) {
    if (!requiredWords) {
        return false;
    }
    return requiredWords.filter(function (word) {
        return word === true;
    }).length === requiredWords.length && charactersRemaining >= 0;
});
var getComposeTurnProps = exports.getComposeTurnProps = (0, _reselect.createStructuredSelector)({
    requiredWords: _roundSelectors.getRoundRequiredWords,
    requiredWordsIncluded: getRequiredWordsIncluded,
    charactersRemaining: getComposeTurnCharactersRemaining,
    submitEnabled: canSubmitTextForTurn,
    splitupText: getSplitupText
});
}, 509, null, "TalkPresidential/build/selectors/composeTurnSelectors.js");
__d(/* TalkPresidential/build/selectors/roundSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getUserWinsUpToRound = exports.getOpponentWinsUpToRound = exports.getUserSplitupText = exports.getOpponentSplitupText = exports.getOpponentWonRound = exports.getUserWonRound = exports.getWaitingForOpponent = exports.getHideOpponentText = exports.getOpponentTextForRound = exports.getOpponentScoreForRound = exports.getOpponentTurnForRound = exports.getUserCanPlayRound = exports.getUserTextForRound = exports.getUserScoreForRound = exports.getUserTurnForRound = exports.getRoundRequiredWords = exports.getRound = exports.getRoundNumber = undefined;

var _gameSelectors = require(511              ); // 511 = ./gameSelectors

var _reselect = require(476       ); // 476 = reselect

var _dataSelectors = require(477              ); // 477 = ./dataSelectors

var _roundUtils = require(480                        ); // 480 = ../utils/round/roundUtils

var _gameUtils = require(478                      ); // 478 = ../utils/game/gameUtils

var getRoundNumber = exports.getRoundNumber = function getRoundNumber(_state, props) {
    return props.roundNumber;
};
var getRound = exports.getRound = (0, _reselect.createSelector)(_gameSelectors.getSelectedGame, getRoundNumber, function (game, roundNumber) {
    if (game) {
        return game.rounds[roundNumber - 1];
    } else {
        return undefined;
    }
});
var getRoundRequiredWords = exports.getRoundRequiredWords = (0, _reselect.createSelector)(getRound, function (round) {
    return round && round.words && round.words.sort(function (word1, word2) {
        return word2.length - word1.length;
    });
});
var getUserTurnForRound = exports.getUserTurnForRound = (0, _reselect.createSelector)(_dataSelectors.getUserID, getRound, function (userId, round) {
    return userId && round && (0, _roundUtils.turnForUserID)(round, userId);
});
var getUserScoreForRound = exports.getUserScoreForRound = (0, _reselect.createSelector)(getUserTurnForRound, function (turn) {
    return turn && turn.score;
});
var getUserTextForRound = exports.getUserTextForRound = (0, _reselect.createSelector)(getUserTurnForRound, function (turn) {
    return turn && turn.text;
});
var getUserCanPlayRound = exports.getUserCanPlayRound = (0, _reselect.createSelector)(getUserTurnForRound, function (turn) {
    return turn === undefined;
});
var getOpponentTurnForRound = exports.getOpponentTurnForRound = (0, _reselect.createSelector)(_gameSelectors.getGameOpponentID, getRound, function (opponentID, round) {
    var opponentTurn = opponentID && round && (0, _roundUtils.turnForUserID)(round, opponentID);
    if (opponentTurn) {
        return opponentTurn;
    }
    return undefined;
});
var getOpponentScoreForRound = exports.getOpponentScoreForRound = (0, _reselect.createSelector)(getOpponentTurnForRound, function (turn) {
    return turn && turn.score;
});
var getOpponentTextForRound = exports.getOpponentTextForRound = (0, _reselect.createSelector)(getOpponentTurnForRound, function (turn) {
    return turn && turn.text;
});
var getHideOpponentText = exports.getHideOpponentText = (0, _reselect.createSelector)(getUserTurnForRound, getOpponentTurnForRound, function (userTurn, opponentTurn) {
    return userTurn === undefined || opponentTurn === undefined;
});
var getWaitingForOpponent = exports.getWaitingForOpponent = (0, _reselect.createSelector)(getOpponentTurnForRound, getUserTurnForRound, _gameSelectors.getGameOpponentFirstName, function (opponentTurn, userTurn, opponentName) {
    if (!opponentTurn && userTurn) {
        return 'Waiting for ' + opponentName + '...';
    }
    return undefined;
});
var getUserWonRound = exports.getUserWonRound = (0, _reselect.createSelector)(getUserScoreForRound, getOpponentScoreForRound, function (userScore, opponentScore) {
    return userScore && opponentScore && userScore > opponentScore;
});
var getOpponentWonRound = exports.getOpponentWonRound = (0, _reselect.createSelector)(getUserScoreForRound, getOpponentScoreForRound, function (userScore, opponentScore) {
    return userScore && opponentScore && userScore <= opponentScore;
});
var getOpponentSplitupText = exports.getOpponentSplitupText = (0, _reselect.createSelector)(getOpponentTextForRound, getRoundRequiredWords, function (text, requiredWords) {
    var splitupText = (0, _roundUtils.splitupTextFromRequiredWords)(text, requiredWords);
    return splitupText;
});
var getUserSplitupText = exports.getUserSplitupText = (0, _reselect.createSelector)(getUserTextForRound, getRoundRequiredWords, function (text, requiredWords) {
    var splitupText = (0, _roundUtils.splitupTextFromRequiredWords)(text, requiredWords);
    return splitupText;
});
var getOpponentWinsUpToRound = exports.getOpponentWinsUpToRound = (0, _reselect.createSelector)(_gameSelectors.getSelectedGame, _gameSelectors.getGameOpponentID, getRoundNumber, function (game, opponentID, roundNumber) {
    return game && opponentID && roundNumber && (0, _gameUtils.userRoundsWon)(game, opponentID, roundNumber);
});
var getUserWinsUpToRound = exports.getUserWinsUpToRound = (0, _reselect.createSelector)(_gameSelectors.getSelectedGame, _dataSelectors.getUserID, getRoundNumber, function (game, userID, roundNumber) {
    return game && userID && roundNumber && (0, _gameUtils.userRoundsWon)(game, userID, roundNumber);
});
}, 510, null, "TalkPresidential/build/selectors/roundSelectors.js");
__d(/* TalkPresidential/build/selectors/gameSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getUserWonGame = exports.getGameIsOpen = exports.getTopRoundRequiredWords = exports.getUserTopTurnText = exports.getUserTopTurnScore = exports.getGameWaitingForOpponent = exports.getUserCanDeclineGame = exports.getGameOpponentCanPlayMostRecentRound = exports.getGameUserCanPlayMostRecentRound = exports._getGameMostRecentRound = exports.getGameOpponentRoundWinsCount = exports.getUserRoundWinsCount = exports._getRoundWinNumbers = exports.getGameOpponentID = exports.getGameOpponentProfilePicture = exports.getGameOpponentNameWithLastNameAbbr = exports.getGameOpponentFullName = exports.getGameOpponentFirstName = exports.getGameOpponent = exports.getGameNumberOfRounds = exports.getSelectedGame = exports.getGameID = undefined;

var _gameUtils = require(478                        ); // 478 = ./../utils/game/gameUtils

var _currentGameSelectors = require(512                     ); // 512 = ./currentGameSelectors

var _reselect = require(476       ); // 476 = reselect

var _dataSelectors = require(477              ); // 477 = ./dataSelectors

var _gameUtils2 = require(478                      ); // 478 = ../utils/game/gameUtils

var _roundUtils = require(480                        ); // 480 = ../utils/round/roundUtils

var getGameID = exports.getGameID = function getGameID(_state, gameProps) {
    return gameProps && gameProps._id;
};
var _getGame = (0, _reselect.createSelector)(_dataSelectors.getGames, getGameID, function (games, gameID) {
    return games.filter(function (game) {
        return game._id === gameID;
    })[0];
});
var getSelectedGame = exports.getSelectedGame = (0, _reselect.createSelector)(_currentGameSelectors.getCurrentGame, _getGame, function (currentGame, propsGame) {
    return propsGame || currentGame;
});
var getGameNumberOfRounds = exports.getGameNumberOfRounds = (0, _reselect.createSelector)(getSelectedGame, function (game) {
    if (game) {
        return game.rounds.length;
    } else {
        return undefined;
    }
});
var getGameOpponent = exports.getGameOpponent = (0, _reselect.createSelector)(getSelectedGame, function (game) {
    return (0, _gameUtils2.gameOpponent)(game);
});
var getGameOpponentFirstName = exports.getGameOpponentFirstName = (0, _reselect.createSelector)(getGameOpponent, function (opponent) {
    return opponent && opponent.firstName;
});
var getGameOpponentFullName = exports.getGameOpponentFullName = (0, _reselect.createSelector)(getGameOpponent, getGameOpponentFirstName, function (opponent, firstName) {
    return opponent && firstName && opponent.lastName && firstName + ' ' + opponent.lastName;
});
var getGameOpponentNameWithLastNameAbbr = exports.getGameOpponentNameWithLastNameAbbr = (0, _reselect.createSelector)(getGameOpponent, getGameOpponentFirstName, function (opponent, firstName) {
    return opponent && (0, _gameUtils2.nameAbbreviated)(firstName, opponent.lastName);
});
var getGameOpponentProfilePicture = exports.getGameOpponentProfilePicture = (0, _reselect.createSelector)(getGameOpponent, function (opponent) {
    return opponent && opponent.profilePicture;
});
var getGameOpponentID = exports.getGameOpponentID = (0, _reselect.createSelector)(getGameOpponent, function (opponent) {
    return opponent && opponent._id;
});
var _getRoundWinNumbers = exports._getRoundWinNumbers = (0, _reselect.createSelector)(getSelectedGame, _dataSelectors.getUserID, getGameOpponentID, function (game, userID, gameOpponentID) {
    if (!game || !userID || !gameOpponentID) {
        return undefined;
    }
    var userWins = game.rounds.filter(function (round) {
        return (0, _roundUtils.userWonRound)(round, userID);
    }).length;
    var opponentWins = game.rounds.filter(function (round) {
        return (0, _roundUtils.userWonRound)(round, gameOpponentID);
    }).length;
    return {
        user: userWins,
        opponent: opponentWins
    };
});
var getUserRoundWinsCount = exports.getUserRoundWinsCount = (0, _reselect.createSelector)(_getRoundWinNumbers, function (roundWinNumbers) {
    return roundWinNumbers && roundWinNumbers.user;
});
var getGameOpponentRoundWinsCount = exports.getGameOpponentRoundWinsCount = (0, _reselect.createSelector)(_getRoundWinNumbers, function (roundWinNumbers) {
    return roundWinNumbers && roundWinNumbers.opponent;
});
var _getGameMostRecentRound = exports._getGameMostRecentRound = (0, _reselect.createSelector)(getSelectedGame, function (game) {
    return (0, _gameUtils2.gameLatestRound)(game);
});
var getGameUserCanPlayMostRecentRound = exports.getGameUserCanPlayMostRecentRound = (0, _reselect.createSelector)(_getGameMostRecentRound, _dataSelectors.getUserID, function (round, userID) {
    return round && userID && (0, _roundUtils.userCanPlayRound)(round, userID);
});
var getGameOpponentCanPlayMostRecentRound = exports.getGameOpponentCanPlayMostRecentRound = (0, _reselect.createSelector)(_getGameMostRecentRound, getGameOpponentID, function (round, opponentID) {
    return (0, _roundUtils.userCanPlayRound)(round, opponentID);
});
var _getUserStartedGame = (0, _reselect.createSelector)(getSelectedGame, function (game) {
    return game && game.creator;
});
var _getUserHasPlayedTurn = (0, _reselect.createSelector)(getSelectedGame, _dataSelectors.getUserID, function (game, userID) {
    return game && game.rounds && game.rounds.length > 0 && !(0, _roundUtils.userCanPlayRound)(game.rounds[0], userID);
});
var getUserCanDeclineGame = exports.getUserCanDeclineGame = (0, _reselect.createSelector)(_getUserStartedGame, _getUserHasPlayedTurn, function (startedGame, playedATurn) {
    return !startedGame && !playedATurn;
});
var getGameWaitingForOpponent = exports.getGameWaitingForOpponent = (0, _reselect.createSelector)(_getGameMostRecentRound, _dataSelectors.getUserID, getGameOpponentID, function (round, userID, opponentID) {
    if (!round || !userID || !opponentID) {
        return undefined;
    }
    var userHasPlayed = !(0, _roundUtils.userCanPlayRound)(round, userID);
    var opponentHasPlayed = !(0, _roundUtils.userCanPlayRound)(round, opponentID);
    return userHasPlayed && !opponentHasPlayed;
});
var _getUserTopRoundAndTurn = (0, _reselect.createSelector)(getSelectedGame, _dataSelectors.getUserID, function (selectedGame, userID) {
    return (0, _gameUtils2.topRoundAndTurnForUserInGame)(selectedGame, userID);
});
var getUserTopTurnScore = exports.getUserTopTurnScore = (0, _reselect.createSelector)(_getUserTopRoundAndTurn, function (roundAndTurn) {
    return roundAndTurn && roundAndTurn.turn && roundAndTurn.turn.score;
});
var getUserTopTurnText = exports.getUserTopTurnText = (0, _reselect.createSelector)(_getUserTopRoundAndTurn, function (roundAndTurn) {
    return roundAndTurn && roundAndTurn.round && roundAndTurn.turn && (0, _roundUtils.splitupTextFromRequiredWords)(roundAndTurn.turn.text, roundAndTurn.round.words);
});
var getTopRoundRequiredWords = exports.getTopRoundRequiredWords = (0, _reselect.createSelector)(_getUserTopRoundAndTurn, function (roundAndTurn) {
    return roundAndTurn && roundAndTurn.round && roundAndTurn.round.words;
});
var getGameIsOpen = exports.getGameIsOpen = (0, _reselect.createSelector)(getSelectedGame, _dataSelectors.getUserID, getGameOpponentID, function (game, userID, opponentID) {
    return game && userID && (0, _gameUtils.gameIsOpen)(game, userID, opponentID);
});
var getUserWonGame = exports.getUserWonGame = (0, _reselect.createSelector)(getSelectedGame, _dataSelectors.getUserID, function (game, userID) {
    if (!game || !userID) {
        return false;
    }
    return (0, _gameUtils.userWonGame)(game, userID);
});
}, 511, null, "TalkPresidential/build/selectors/gameSelectors.js");
__d(/* TalkPresidential/build/selectors/currentGameSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCurrentGameStartErrorBadUserName = exports.getCurrentGame = exports.getCurrentGameID = exports.getWaitingForRandomOpponent = exports.getStartGameError = undefined;

var _dataSelectors = require(477              ); // 477 = ./dataSelectors

var _reselect = require(476       ); // 476 = reselect

var getStartGameError = exports.getStartGameError = function getStartGameError(state) {
    return state && state.currentGame && state.currentGame.startGameError;
};
var getWaitingForRandomOpponent = exports.getWaitingForRandomOpponent = function getWaitingForRandomOpponent(state) {
    return state.currentGame.waitingForRandomOpponent;
};
var getCurrentGameID = exports.getCurrentGameID = function getCurrentGameID(state) {
    return state && state.currentGame && state.currentGame.gameId;
};
var getCurrentGame = exports.getCurrentGame = (0, _reselect.createSelector)(_dataSelectors.getGames, getCurrentGameID, function (games, currentGameID) {
    return games.find(function (game) {
        return game._id === currentGameID;
    });
});
var getCurrentGameStartErrorBadUserName = exports.getCurrentGameStartErrorBadUserName = (0, _reselect.createSelector)(getStartGameError, function (error) {
    return error && error.meta && error.meta.code === 500;
});
}, 512, null, "TalkPresidential/build/selectors/currentGameSelectors.js");
__d(/* TalkPresidential/build/actions/composeTurnActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetComposeTurnState = exports.setSubmitScoreError = exports.setScore = exports.setConnectedToInternet = exports.submitText = exports.setText = undefined;

var _reduxActions = require(407            ); // 407 = redux-actions

var setText = exports.setText = (0, _reduxActions.createAction)('SET_TEXT', function (text) {
  return text;
});
var submitText = exports.submitText = (0, _reduxActions.createAction)('SUBMIT_TEXT');
var setConnectedToInternet = exports.setConnectedToInternet = (0, _reduxActions.createAction)('SET_CONNECTED_TO_INTERNET', function (connected) {
  return connected;
});
var setScore = exports.setScore = (0, _reduxActions.createAction)('SET_SCORE', function (score) {
  return score;
});
var setSubmitScoreError = exports.setSubmitScoreError = (0, _reduxActions.createAction)('SET_SUBMIT_SCORE_ERROR', function (error) {
  return error;
});
var resetComposeTurnState = exports.resetComposeTurnState = (0, _reduxActions.createAction)('RESET_COMPOSE_TURN_STATE');
}, 513, null, "TalkPresidential/build/actions/composeTurnActions.js");
__d(/* TalkPresidential/build/utils/scoring/scoringUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.tokenizeText = tokenizeText;
exports.assignValuesForTokens = assignValuesForTokens;
exports.calculateScore = calculateScore;
exports.predictFromMappings = predictFromMappings;

var _casual = require(515                                ); // 515 = talisman/tokenizers/tweets/casual

var _casual2 = babelHelpers.interopRequireDefault(_casual);

var _reactNative = require(12            ); // 12 = react-native

var TalkLikePOTUSPredictor = _reactNative.NativeModules.TalkLikePOTUSPredictor;
function tokenizeText(text) {
    var lowercaseText = text.toLowerCase();
    return (0, _casual2.default)(lowercaseText);
}
function assignValuesForTokens(tokens) {
    var mappingsJSON = require(521                          ); // 521 = ../../../word_mappings.json
    var mappings = JSON.parse(mappingsJSON);
    return tokens.map(function (token) {
        return mappings[token] || 7228;
    });
}
function calculateScore(percent) {
    return Math.round(Math.pow(10, percent) * 100000);
}
function predictFromMappings(textMappings) {
    return regeneratorRuntime.async(function predictFromMappings$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.next = 2;
                    return regeneratorRuntime.awrap(TalkLikePOTUSPredictor.predict(textMappings));

                case 2:
                    return _context.abrupt('return', _context.sent);

                case 3:
                case 'end':
                    return _context.stop();
            }
        }
    }, null, this);
}
}, 514, null, "TalkPresidential/build/utils/scoring/scoringUtils.js");
__d(/* talisman/tokenizers/tweets/casual.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (tweet) {
  tweet = ENTITIES.decode(tweet);

  var safeText = tweet.replace(HANG_RE, '$1$1$1');

  var matches = (0, _helpers.findall)(WORD_RE, safeText);

  var tokens = new Array(matches.length);

  for (var i = 0, l = matches.length; i < l; i++) {
    tokens[i] = matches[i][0];
  }return tokens;
};

var _helpers = require(516            ); // 516 = ../../helpers

var _htmlEntities = require(517            ); // 517 = html-entities

var ENTITIES = new _htmlEntities.AllHtmlEntities();

var EMOTICONS = ['(?:', '[<>]?', '[:;=8]', '[\\-o*\']?', '[)\\](\\[dDpP/:}{@|\]', '|', '[)\\](\\[dDpP/:}{@|\]', '[\\-o*\']?', '[:;=8]', '[<>]?', '|', '<3', ')'].join('');

var URLS = ['(?:', 'https?:', '(?:', '\\/{1,3}', '|', '[a-z0-9%]', ')', '|', '[a-z0-9.\\-]+[.]', '(?:[a-z]{2,13})', '\\/', ')', '(?:', '[^\\s()<>{}\\[\\]]+', '|', '\\([^\\s()]*?\\([^\\s()]+\\)[^\\s()]*?\\)', '|', '\\([^\\s]+?\\)', ')+', '(?:', '\\([^\\s()]*?\\([^\\s()]+\\)[^\\s()]*?\\)', '|', '\\([^\\s]+?\\)', '|', '[^\\s`!()\\[\\]{};:\'".,<>?«»“”‘’]', ')', '|', '(?:', '[a-z0-9]+', '(?:[.\\-][a-z0-9]+)*', '[.]', '(?:[a-z]{2,13})', '\\b', '\\/?', '(?!@)', ')'].join('');

var REGEXPS = [URLS, ['(?:', '(?:', '\\+?[01]', '[\\-\\s.]*', ')?', '(?:', '[\\(]?', '\\d{3}', '[\\-\\s.)]*', ')?', '\\d{3}', '[\\-\\s.]*', '\\d{4}', ')'].join(''), EMOTICONS, '<[^>\\s]+>', '[\\-]+>|<[\\-]+', '(?:@[\\w_]+)', '(?:\\#+[\\w_]+[\\w\'_\\-]*[\\w_]+)', '[\\w.+-]+@[\\w-]+\\.(?:[\\w-]\\.?)+[\\w-]', ['(?:[^\\W\\d_](?:[^\\W\\d_]|[\'\\-_])+[^\\W\\d_])', '|', '(?:[+\\-]?\d+[,/.:-]\\d+[+\\-]?)', '|', '(?:[\\w_]+)', '|', '(?:\\.(?:\\s*\\.){1,})', '|', '(?:\\S)'].join('')];

var WORD_RE = new RegExp('(' + REGEXPS.join('|') + ')', 'ig'),
    HANG_RE = /([^a-zA-Z0-9])\1{3,}/g;

module.exports = exports['default'];
}, 515, null, "talisman/tokenizers/tweets/casual.js");
__d(/* talisman/helpers/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findall = findall;
exports.seq = seq;
exports.squeeze = squeeze;
exports.translation = translation;

function findall(pattern, string) {
  var matches = [];

  if (!pattern.global) {
    var result = pattern.exec(string);

    if (result) matches.push(result);

    return matches;
  }

  var match = void 0;
  while (match = pattern.exec(string)) {
    matches.push(match);
  }
  pattern.lastIndex = 0;

  return matches;
}

function seq(target) {
  return typeof target === 'string' ? target.split('') : target;
}

function squeeze(target) {
  var isString = typeof target === 'string',
      sequence = seq(target),
      squeezed = [sequence[0]];

  for (var i = 1, l = sequence.length; i < l; i++) {
    if (sequence[i] !== sequence[i - 1]) squeezed.push(sequence[i]);
  }

  return isString ? squeezed.join('') : squeezed;
}

function translation(first, second) {
  var index = {};

  first = first.split('');
  second = second.split('');

  if (first.length !== second.length) throw Error('talisman/helpers#translation: given strings don\'t have the same length.');

  for (var i = 0, l = first.length; i < l; i++) {
    index[first[i]] = second[i];
  }return index;
}
}, 516, null, "talisman/helpers/index.js");
__d(/* html-entities/index.js */function(global, require, module, exports) {module.exports = {
  XmlEntities: require(518                    ), // 518 = ./lib/xml-entities.js
  Html4Entities: require(519                      ), // 519 = ./lib/html4-entities.js
  Html5Entities: require(520                      ), // 520 = ./lib/html5-entities.js
  AllHtmlEntities: require(520                      ) // 520 = ./lib/html5-entities.js
};
}, 517, null, "html-entities/index.js");
__d(/* html-entities/lib/xml-entities.js */function(global, require, module, exports) {var ALPHA_INDEX = {
    '&lt': '<',
    '&gt': '>',
    '&quot': '"',
    '&apos': '\'',
    '&amp': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&apos;': '\'',
    '&amp;': '&'
};

var CHAR_INDEX = {
    60: 'lt',
    62: 'gt',
    34: 'quot',
    39: 'apos',
    38: 'amp'
};

var CHAR_S_INDEX = {
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    '\'': '&apos;',
    '&': '&amp;'
};

function XmlEntities() {}

XmlEntities.prototype.encode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/<|>|"|'|&/g, function (s) {
        return CHAR_S_INDEX[s];
    });
};

XmlEntities.encode = function (str) {
    return new XmlEntities().encode(str);
};

XmlEntities.prototype.decode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function (s) {
        if (s.charAt(1) === '#') {
            var code = s.charAt(2).toLowerCase() === 'x' ? parseInt(s.substr(3), 16) : parseInt(s.substr(2));

            if (isNaN(code) || code < -32768 || code > 65535) {
                return '';
            }
            return String.fromCharCode(code);
        }
        return ALPHA_INDEX[s] || s;
    });
};

XmlEntities.decode = function (str) {
    return new XmlEntities().decode(str);
};

XmlEntities.prototype.encodeNonUTF = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        var alpha = CHAR_INDEX[c];
        if (alpha) {
            result += "&" + alpha + ";";
            i++;
            continue;
        }
        if (c < 32 || c > 126) {
            result += '&#' + c + ';';
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

XmlEntities.encodeNonUTF = function (str) {
    return new XmlEntities().encodeNonUTF(str);
};

XmlEntities.prototype.encodeNonASCII = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLenght = str.length;
    var result = '';
    var i = 0;
    while (i < strLenght) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++;
    }
    return result;
};

XmlEntities.encodeNonASCII = function (str) {
    return new XmlEntities().encodeNonASCII(str);
};

module.exports = XmlEntities;
}, 518, null, "html-entities/lib/xml-entities.js");
__d(/* html-entities/lib/html4-entities.js */function(global, require, module, exports) {var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];
var HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];

var alphaIndex = {};
var numIndex = {};

var i = 0;
var length = HTML_ALPHA.length;
while (i < length) {
    var a = HTML_ALPHA[i];
    var c = HTML_CODES[i];
    alphaIndex[a] = String.fromCharCode(c);
    numIndex[c] = a;
    i++;
}

function Html4Entities() {}

Html4Entities.prototype.decode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&(#?[\w\d]+);?/g, function (s, entity) {
        var chr;
        if (entity.charAt(0) === "#") {
            var code = entity.charAt(1).toLowerCase() === 'x' ? parseInt(entity.substr(2), 16) : parseInt(entity.substr(1));

            if (!(isNaN(code) || code < -32768 || code > 65535)) {
                chr = String.fromCharCode(code);
            }
        } else {
            chr = alphaIndex[entity];
        }
        return chr || s;
    });
};

Html4Entities.decode = function (str) {
    return new Html4Entities().decode(str);
};

Html4Entities.prototype.encode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var alpha = numIndex[str.charCodeAt(i)];
        result += alpha ? "&" + alpha + ";" : str.charAt(i);
        i++;
    }
    return result;
};

Html4Entities.encode = function (str) {
    return new Html4Entities().encode(str);
};

Html4Entities.prototype.encodeNonUTF = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var cc = str.charCodeAt(i);
        var alpha = numIndex[cc];
        if (alpha) {
            result += "&" + alpha + ";";
        } else if (cc < 32 || cc > 126) {
            result += "&#" + cc + ";";
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

Html4Entities.encodeNonUTF = function (str) {
    return new Html4Entities().encodeNonUTF(str);
};

Html4Entities.prototype.encodeNonASCII = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++;
    }
    return result;
};

Html4Entities.encodeNonASCII = function (str) {
    return new Html4Entities().encodeNonASCII(str);
};

module.exports = Html4Entities;
}, 519, null, "html-entities/lib/html4-entities.js");
__d(/* html-entities/lib/html5-entities.js */function(global, require, module, exports) {var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];

var alphaIndex = {};
var charIndex = {};

createIndexes(alphaIndex, charIndex);

function Html5Entities() {}

Html5Entities.prototype.decode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&(#?[\w\d]+);?/g, function (s, entity) {
        var chr;
        if (entity.charAt(0) === "#") {
            var code = entity.charAt(1) === 'x' ? parseInt(entity.substr(2).toLowerCase(), 16) : parseInt(entity.substr(1));

            if (!(isNaN(code) || code < -32768 || code > 65535)) {
                chr = String.fromCharCode(code);
            }
        } else {
            chr = alphaIndex[entity];
        }
        return chr || s;
    });
};

Html5Entities.decode = function (str) {
    return new Html5Entities().decode(str);
};

Html5Entities.prototype.encode = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var charInfo = charIndex[str.charCodeAt(i)];
        if (charInfo) {
            var alpha = charInfo[str.charCodeAt(i + 1)];
            if (alpha) {
                i++;
            } else {
                alpha = charInfo[''];
            }
            if (alpha) {
                result += "&" + alpha + ";";
                i++;
                continue;
            }
        }
        result += str.charAt(i);
        i++;
    }
    return result;
};

Html5Entities.encode = function (str) {
    return new Html5Entities().encode(str);
};

Html5Entities.prototype.encodeNonUTF = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        var charInfo = charIndex[c];
        if (charInfo) {
            var alpha = charInfo[str.charCodeAt(i + 1)];
            if (alpha) {
                i++;
            } else {
                alpha = charInfo[''];
            }
            if (alpha) {
                result += "&" + alpha + ";";
                i++;
                continue;
            }
        }
        if (c < 32 || c > 126) {
            result += '&#' + c + ';';
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

Html5Entities.encodeNonUTF = function (str) {
    return new Html5Entities().encodeNonUTF(str);
};

Html5Entities.prototype.encodeNonASCII = function (str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++;
    }
    return result;
};

Html5Entities.encodeNonASCII = function (str) {
    return new Html5Entities().encodeNonASCII(str);
};

function createIndexes(alphaIndex, charIndex) {
    var i = ENTITIES.length;
    var _results = [];
    while (i--) {
        var e = ENTITIES[i];
        var alpha = e[0];
        var chars = e[1];
        var chr = chars[0];
        var addChar = chr < 32 || chr > 126 || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;
        var charInfo;
        if (addChar) {
            charInfo = charIndex[chr] = charIndex[chr] || {};
        }
        if (chars[1]) {
            var chr2 = chars[1];
            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);
            _results.push(addChar && (charInfo[chr2] = alpha));
        } else {
            alphaIndex[alpha] = String.fromCharCode(chr);
            _results.push(addChar && (charInfo[''] = alpha));
        }
    }
}

module.exports = Html5Entities;
}, 520, null, "html-entities/lib/html5-entities.js");
__d(/* TalkPresidential/word_mappings.json */function(global, require, module, exports) {module.exports = module.exports = "{\"#truth\": 1698, \"04-17-\": 0, \"four\": 3564, \"woods\": 1, \"woody\": 2, \"01-25-\": 3566, \"marching\": 3573, \"@dashjohnston\": 3574, \"increase\": 3567, \"#donaldtrumpforpresident\": 1700, \"eligible\": 5403, \"snowing\": 5404, \"06-11-\": 3, \"@dattan78\": 3580, \"lord\": 5405, \"sinking\": 3568, \"@pga_com\": 3569, \"#harvey\": 4, \"politician\": 1149, \"bringing\": 5, \"34,11\": 3570, \"@yossigestetner\": 6014, \"wednesday\": 6, \"@jonkarl\": 1703, \"tired\": 5408, \"miller\": 1704, \"pulse\": 5409, \"holocaust\": 5095, \"270\": 7, \"second\": 5410, \"49\": 841, \"brexit\": 1705, \"captain\": 6314, \"07-24-\": 1706, \"thunder\": 3571, \"@yankees\": 5411, \"bonuses\": 3572, \"pressed\": 287, \"hero\": 5412, \"reporter\": 5413, \"here\": 5414, \"@foxnewssunday\": 1151, \"china\": 8, \"kids\": 9, \"k\": 3575, \"reports\": 5416, \"i'd\": 1708, \"military\": 1709, \"i'm\": 1710, \"golden\": 10, \"@winpropp\": 6046, \"explained\": 1711, \"replace\": 3576, \"brought\": 5417, \"stern\": 11, \"scoffed\": 1712, \"unit\": 5418, \"opponents\": 3577, \"cheating\": 1713, \"spoke\": 1714, \"dnc\": 12, \"marine\": 6047, \"music\": 13, \"therefore\": 14, \"strike\": 3579, \"@marthamaccallum\": 1715, \"until\": 5420, \"successful\": 1716, \"brings\": 5421, \"hurt\": 1717, \"glass\": 3682, \"remembered\": 6666, \"91\": 5423, \"90\": 5424, \"93\": 2227, \"92\": 3686, \"95\": 5427, \"97\": 3688, \"96\": 5428, \"locker\": 15, \"temperatures\": 5429, \"burnett\": 3699, \"example\": 3582, \"triple\": 5738, \"03-18-\": 3583, \"organized\": 1718, \"11-25-\": 1719, \"currency\": 3584, \"08-22-\": 5430, \"want\": 16, \"absolute\": 116, \"hof\": 5431, \"complaining\": 1720, \"travel\": 18, \"damage\": 1721, \"machine\": 1722, \"how\": 5432, \"hot\": 5433, \"#ebola\": 1723, \"@dalasner\": 5434, \"salmond\": 3585, \"@kalevans\": 20, \"wrong\": 21, \"@cmille__\": 134, \"destined\": 1724, \"extortion\": 5436, \"types\": 3586, \"effective\": 1725, \"wins\": 1726, \"headquarters\": 5438, \"keeps\": 1727, \"democratic\": 5439, \"wing\": 1728, \"wind\": 1729, \"wine\": 1730, \"@motivationideas\": 3588, \"senators\": 5440, \"@senatemajldr\": 5441, \"@995mu\": 22, \"fit\": 23, \"o'donnell\": 3590, \"lifeline\": 24, \"screaming\": 25, \"fix\": 26, \"hidden\": 1731, \"\\ud83c\": 165, \"#teambrandi\": 3592, \"slate\": 3593, \"01:28\": 1732, \"01:29\": 1733, \"schools\": 3594, \"01:24\": 1734, \"sixteen\": 173, \"01:22\": 1735, \"01:23\": 1736, \"01:20\": 1737, \"01:21\": 1738, \"@johnnydamon\": 1739, \"addicted\": 5442, \"financial\": 1740, \"rink\": 3596, \"knockout\": 5443, \"series\": 3597, \"substantially\": 3598, \"message\": 4172, \"rt\": 3599, \"trending\": 5444, \"10-17-\": 1741, \"j.p.morgan\": 1832, \"george\": 6958, \"re\": 3601, \"encourage\": 27, \"strategist\": 1742, \"@krauthammer\": 3602, \"foundation\": 3603, \"hillaryclinton\": 5446, \"threatened\": 3604, \"@drchimrickles\": 28, \"enormous\": 3605, \"today's\": 5447, \"10k\": 4448, \"spinning\": 5448, \"wasn\": 1744, \"@bobvanderplaats\": 29, \"176\": 876, \"@maxvayner\": 3608, \"windmills\": 30, \"basketball\": 3609, \"renovated\": 31, \"service\": 32, \"lawsuits\": 3610, \"needed\": 33, \"master\": 34, \"gilbert\": 5449, \"legs\": 1745, \"listen\": 1746, \"collapse\": 1747, \"wisdom\": 1748, \"evil\": 6842, \"27,0\": 35, \"white\": 6961, \"positively\": 36, \"donaldtrump\": 5451, \"@michele_wv\": 3611, \"showed\": 3612, \"@jrmcclaren\": 37, \"nations\": 5453, \"project\": 273, \"feeling\": 38, \"14:50\": 3614, \"este\": 5454, \"boston\": 5455, \"@jeffjeffsc777\": 1156, \"dozen\": 290, \"affairs\": 39, \"16:51\": 3615, \"responsible\": 1752, \"08-03-\": 1753, \"causing\": 1754, \"doors\": 3616, \"season\": 6962, \"shall\": 5458, \"thrilled\": 3617, \"wells\": 3618, \"y\": 2983, \"mouth\": 40, \"letter\": 1755, \"organization\": 6657, \"@teddyschleifer\": 41, \"dummy\": 3620, \"stupid\": 6522, \"episode\": 1756, \"professor\": 1758, \"camp\": 3621, \"@gma\": 42, \"scream\": 43, \"came\": 3622, \"saying\": 44, \"bomb\": 1761, \"departing\": 1762, \"meetings\": 3623, \"nominated\": 1763, \"05:22\": 45, \"bethpage\": 1764, \"participate\": 3624, \"\\u2018\": 3625, \"lessons\": 3626, \"touches\": 5459, \"busy\": 5460, \"headline\": 330, \"bust\": 5461, \"than\": 6052, \"rico\": 46, \"theme\": 4956, \"rick\": 47, \"rich\": 48, \"@bnicehouse\": 49, \"rice\": 50, \"plate\": 51, \"vaccinations\": 3628, \"tips\": 6323, \"lmao\": 5464, \"11-06-\": 52, \"nicely\": 53, \"@magnasearchgrp\": 3629, \"06-28-\": 1769, \"eventually\": 5931, \"release\": 5465, \"isreal\": 3630, \"respond\": 1770, \"blew\": 1771, \"disaster\": 1772, \"fair\": 1773, \"06-13-\": 1774, \"02:56\": 1775, \"02:54\": 1776, \"02:55\": 1777, \"02:53\": 3966, \"02:50\": 1778, \"02:51\": 1779, \"fail\": 1780, \"resigned\": 3631, \"hammer\": 5468, \"best\": 1781, \"@raven_claw2\": 1782, \"lots\": 55, \"irs\": 56, \"score\": 1783, \"letting\": 3409, \"never\": 2661, \"nationwide\": 3632, \"wtc\": 5469, \"carbon\": 1785, \"debt\": 3633, \"reported\": 5415, \"country\": 3634, \"cup\": 1159, \"@mcgranejt\": 1786, \"@durandsentinus\": 5470, \"planned\": 3636, \"lookin\": 57, \"argue\": 3637, \"asked\": 5471, \"00:21\": 5107, \"2nd\": 5472, \"@thenicksutton\": 405, \"\\ude12\": 5473, \"@littlevd23\": 4015, \"257\": 1787, \"aren't\": 6326, \"source\": 1161, \"union\": 59, \".\": 60, \"much\": 61, \"stadium\": 3639, \"privilege\": 3640, \"incompetent\": 1789, \"07-22-\": 3641, \"25k\": 1790, \"life\": 1791, \"homeland\": 2052, \"eastern\": 5476, \"worker\": 3642, \"substance\": 1707, \"7pme\": 62, \"worked\": 3643, \"haters\": 3644, \"spin\": 63, \"chill\": 1794, \"@dansaltsman\": 1795, \"presidency\": 1796, \"employ\": 64, \"congratulation\": 3645, \"played\": 5478, \"player\": 5479, \"@msaid10\": 65, \"trusted\": 1797, \"memorial\": 66, \"things\": 5482, \"damages\": 3646, \"babies\": 1798, \"@nepafortrump\": 67, \"fairly\": 1799, \"tops\": 1800, \"workforce\": 68, \"tune\": 5483, \"@marksimoneny\": 5484, \"misrepresents\": 1801, \"corporate\": 70, \"11-27-\": 499, \"capitol\": 3647, \"@late_show\": 1803, \"sleepy\": 3648, \"financially\": 1804, \"previous\": 3650, \"@agnesphagnes\": 5486, \"had\": 71, \"projects\": 5749, \"innocent\": 3651, \"prison\": 5488, \"has\": 72, \"hat\": 73, \"@thehill\": 5490, \"possible\": 4094, \"possibly\": 1805, \"12:39\": 74, \"12:38\": 75, \"birth\": 1806, \"@fema\": 3738, \"12:30\": 76, \"primaries\": 6968, \"bobby\": 5493, \"08-20-\": 77, \"steps\": 1807, \"battlefield\": 5494, \"attorney\": 78, \"right\": 5495, \"old\": 5496, \"crowd\": 79, \"people\": 1808, \"@univision\": 3654, \"crown\": 80, \"enemies\": 3655, \"for\": 1809, \"bottom\": 81, \"fox\": 1810, \"witty\": 5497, \"individuals\": 298, \"01:05\": 3656, \"01:06\": 3657, \"01:07\": 3658, \"01:00\": 3659, \"01:01\": 3660, \"losing\": 3661, \"memorable\": 3662, \"manufacturing\": 5498, \"dollars\": 1811, \"citizens\": 1812, \"@dailycaller\": 1813, \"03:55\": 6062, \"slightly\": 5500, \"bannon\": 5501, \"raised\": 3664, \"statements\": 5502, \"facility\": 3665, \"@theblaze\": 1814, \"son\": 3666, \"thankful\": 3667, \"raises\": 591, \"east\": 5489, \"fabric\": 83, \"support\": 3670, \"constantly\": 3671, \"10-15-\": 3672, \"#neverforget\": 5503, \"joseph\": 5504, \"@stjude\": 5505, \"greatness\": 84, \"jane\": 5506, \"on-line\": 3673, \"happy\": 1815, \"12-07-\": 85, \"@golfdigestmag\": 1816, \"offer\": 5507, \"forming\": 5508, \"01-13-\": 5509, \"talents\": 5510, \"melania\": 1817, \"congratulations\": 86, \"@abc\": 87, \"inside\": 3674, \"@nicoleamarin\": 3443, \"palm\": 1818, \"\\udffb\": 1819, \"panels\": 1820, \"150\": 3675, \"shooter\": 1821, \"disgrace\": 88, \"157\": 3677, \"tournament\": 1823, \"proven\": 1824, \"exist\": 1825, \"#joanrivers\": 89, \"negotiations\": 3678, \"@moose_taz\": 5511, \"actor\": 1827, \"flood\": 5512, \"role\": 90, \"developers\": 1828, \"roll\": 91, \"@usnavy\": 4231, \"models\": 3680, \"muslims\": 5513, \"rolling\": 5514, \"#prstrong\": 651, \"98\": 5422, \"time\": 5515, \"push\": 5516, \"@cspan\": 92, \"#yourefired\": 3684, \"sebelius\": 3685, \":/\": 5517, \"cincinnati\": 94, \":)\": 5518, \"chain\": 95, \"whoever\": 4254, \"16:30\": 5519, \"16:33\": 5520, \"chair\": 96, \"hole\": 5425, \"vet\": 1830, \"hold\": 5426, \"when's\": 97, \"pen\": 3002, \"windfarms\": 2351, \"burlington\": 3687, \"veterans\": 1831, \"tenacious\": 98, \"@govmikehuckabee\": 3689, \"jerk\": 99, \":d\": 5521, \"allegations\": 1833, \"choice\": 100, \"wharton\": 3690, \"@stevekingia\": 3691, \"stays\": 101, \"exact\": 102, \"minute\": 103, \"@about_life\": 1834, \"07:08\": 1835, \":@\": 5524, \"leave\": 3692, \"solved\": 1836, \"settle\": 3693, \"team\": 1837, \"@gop\": 1838, \"prediction\": 5525, \"\\ufe0f\": 3694, \"sign\": 3695, \"05:08\": 1839, \"shirts\": 5681, \"05:06\": 1840, \"02-14-\": 5526, \"@vanityfair\": 3696, \"current\": 1841, \"04-08-\": 3003, \"falling\": 5527, \"boost\": 105, \"jury\": 3697, \"@margie352\": 5528, \"funeral\": 5529, \"\\ude4f\": 1842, \"understanding\": 3700, \"address\": 106, \"alone\": 5530, \"along\": 5531, \"04:30\": 3701, \"brilliant\": 3702, \"funded\": 3703, \"accomplished\": 107, \"ineffective\": 3704, \"11-04-\": 4321, \"love\": 1844, \"@ethabrooke\": 3706, \"#election2016\": 3707, \"logical\": 3708, \"13,7\": 108, \"red\": 3053, \"darnell\": 109, \"working\": 758, \"positive\": 1845, \"angry\": 3710, \"predictions\": 1846, \"opposed\": 110, \"wondering\": 1847, \"syrians\": 5533, \"loving\": 5534, \"@nicolledwallace\": 111, \"afford\": 1848, \"oregon\": 5536, \"ignorant\": 772, \"behalf\": 1849, \"goodell\": 5537, \"deserved\": 302, \"alllllll\": 5538, \"originally\": 112, \"pretend\": 3712, \"believer\": 1850, \"believes\": 1851, \"vega\": 1852, \"values\": 1853, \"following\": 113, \"#draintheswamp\": 3713, \"@speakerboehner\": 5540, \"admired\": 114, \"@traceadkins\": 789, \"awesome\": 3714, \"nascar\": 5541, \"allowed\": 3716, \"stole\": 3717, \"monitoring\": 3718, \"winter\": 1854, \"divided\": 5542, \"vancouver\": 3719, \"@bella270012\": 5543, \"@andreatantaros\": 1855, \"live-tweeting\": 5544, \"spot\": 1856, \"fueled\": 117, \"date\": 1857, \"such\": 5546, \"data\": 1858, \"natural\": 3724, \"sr\": 3725, \"st\": 3726, \"so\": 3727, \"sc\": 3728, \"05-18-\": 5547, \"find\": 6632, \"years\": 118, \"hiring\": 1859, \"episodes\": 119, \"@pizzapartyben\": 5549, \"\\u201c\": 5550, \"@joycegoodman64\": 120, \"djt\": 3729, \"jim\": 121, \"stupidity\": 2676, \"@wolfblitzer\": 5552, \"decades\": 1860, \"civilian\": 122, \"matches\": 1861, \"smarter\": 5553, \"nation\": 3730, \"records\": 1862, \"drilling\": 123, \"subscribers\": 5554, \"24\": 4699, \"arriving\": 1863, \"@sassypantsjj\": 124, \"@judgejeanine\": 5556, \"didn\": 125, \"amnesty\": 3731, \"quarter\": 126, \"square\": 3732, \"@jetranger69\": 5557, \"crushing\": 3733, \"#donaldtrump2016\": 1864, \"entering\": 127, \"disasters\": 128, \"@rodmonium91\": 5558, \"\\udd25\": 5559, \"beauty\": 5435, \"lowlife\": 1865, \"seriously\": 129, \"investigation\": 3734, \"internet\": 130, \"million\": 1867, \"possibility\": 1868, \"quite\": 5562, \"disrespect\": 3736, \"12:19\": 1869, \"complicated\": 4048, \"besides\": 5563, \"12:11\": 1870, \"12:10\": 1871, \"12:16\": 1872, \"12:15\": 1873, \"#standforouranthem\": 3737, \"training\": 5565, \"@tegodreaux\": 132, \"@scottienhughes\": 1874, \"04,8\": 3302, \"@trumpscotland\": 4880, \"aboard\": 133, \"@ryanseanheron\": 2526, \"saving\": 135, \"spoken\": 136, \"one\": 137, \"hopes\": 6676, \"opec\": 3739, \"#autism\": 6980, \"spanish\": 5568, \"vote\": 4483, \"open\": 3740, \"ripping\": 3741, \"city\": 3742, \"08:33\": 5569, \"2\": 1875, \"williams\": 5570, \"@cdgrafics\": 1750, \"09-07-\": 1877, \"surges\": 140, \"proving\": 5571, \"meddling\": 1878, \"ridiculous\": 5572, \"representing\": 1879, \"@piersmorgan\": 3743, \"03-05-\": 1881, \"@bchipper83\": 141, \"02-11-\": 6342, \"future\": 1882, \"@ashleyedam\": 1883, \"russia\": 3746, \"@gretawire\": 1884, \"san\": 5574, \"nicer\": 1885, \"turned\": 142, \"@sharkgregnorman\": 1886, \"say\": 5577, \"@ananavarro\": 143, \"allen\": 3747, \"@jackwitty\": 1887, \"sat\": 5579, \"10-13-\": 5580, \"inspirational\": 7103, \"instructed\": 3748, \"note\": 5582, \"take\": 1888, \"destroy\": 4540, \"06-07-\": 1889, \"01-15-\": 19, \"knew\": 5584, \"herschel\": 4198, \"buffet\": 145, \"remarks\": 5585, \"knowingly\": 146, \"pages\": 5586, \"05,13\": 3749, \"average\": 3750, \"phil\": 147, \"drive\": 3751, \"crooked\": 1890, \"21:49\": 3752, \"21:46\": 965, \"atlantic\": 312, \"21:44\": 3753, \"21:42\": 3754, \"@abcpolitics\": 3755, \"laws\": 3756, \"madison\": 4382, \"surplus\": 1892, \"turnberry\": 5588, \"merit\": 3757, \"23:45\": 3758, \"bright\": 3759, \"23:47\": 3760, \"23:40\": 3761, \"23:42\": 3762, \"23:48\": 3763, \"23:49\": 3764, \"#trump\": 5589, \"slot\": 5590, \"slow\": 5591, \"tears\": 5592, \"going\": 5593, \"robb\": 1893, \"congressional\": 5594, \"carolina\": 1894, \"palos\": 1895, \"freezing\": 3765, \"awaiting\": 148, \"@nypost\": 5595, \"prime\": 5596, \"worried\": 3766, \"skyline\": 5597, \"roger\": 5598, \"toying\": 6984, \"@exxonmobil\": 149, \"where\": 5599, \"16th\": 1896, \"vision\": 150, \"@williamgardanis\": 5600, \"hour\": 1094, \"espn\": 1897, \"no-one\": 5601, \"@byronyork\": 151, \"harvey\": 152, \"representatives\": 3767, \"bureau\": 5603, \"@meenah83\": 3768, \"jobs\": 5604, \"screen\": 3769, \"@pacsgirl36\": 3770, \"#ms13\": 153, \"@classyexplorer\": 1900, \"awards\": 154, \"jets\": 1901, \"busting\": 155, \"many\": 3771, \"@loudobbs\": 1902, \"s\": 156, \"loudly\": 1903, \"can't\": 157, \"@greta\": 1904, \"mccain\": 1905, \"@ausbiz\": 158, \"anti\": 1906, \"3000\": 3772, \"comeback\": 4201, \"boat\": 5606, \"math\": 4856, \"caring\": 3773, \"west\": 159, \"vacation\": 1907, \"breath\": 1908, \"combined\": 1909, \"02-16-\": 160, \"wants\": 161, \"thousand\": 1910, \"10-30-\": 1911, \"photos\": 162, \"former\": 1081, \"@ogreuasshole\": 163, \"polls\": 3774, \"straighten\": 164, \"easier\": 3591, \"policies\": 3775, \"newspaper\": 166, \"situation\": 167, \"@christophercud1\": 1912, \"ive\": 3776, \"engaged\": 168, \"blah\": 5611, \"02:19\": 5612, \"02:12\": 5613, \"02:10\": 5614, \"02:11\": 5615, \"technology\": 169, \"fame\": 5616, \"04-11-\": 4691, \"@wrestlemania\": 3777, \"shuts\": 1913, \"rooting\": 1914, \"surveillance\": 5619, \"underestimate\": 4710, \"otto\": 170, \"weakness\": 6352, \"damon\": 1915, \"sterling\": 3778, \"trump's\": 1916, \"putin\": 1917, \"@buffyg6820\": 171, \"@coastguardfound\": 6680, \"costa\": 1918, \"costs\": 1919, \"hubby\": 5621, \"gdp\": 4751, \"summer\": 5622, \"morons\": 1920, \"being\": 172, \"@housegop\": 5624, \"rest\": 3779, \"summed\": 5625, \"weekly\": 4768, \"@southheastt\": 3595, \"@yankeerunnerlv\": 3780, \"around\": 3781, \"traffic\": 174, \"darn\": 3782, \"#nhpolitics\": 5627, \"world\": 175, \"dare\": 3783, \"intel\": 3784, \"pol\": 5134, \"64\": 5136, \"65\": 5137, \"obstruct\": 176, \"@trumpnewyork\": 177, \"learning\": 6076, \"69\": 5141, \"racial\": 1922, \"thinks\": 1923, \"scandals\": 5628, \"memories\": 3786, \"noon\": 5629, \"@garyplayer\": 6744, \"exit\": 5630, \"\\u00b4\": 5631, \"@trumpwinery\": 1179, \"restoring\": 179, \"biased\": 3787, \"@ianziering\": 3788, \"power\": 5632, \"iconic\": 5633, \"leadership\": 180, \"standpoint\": 1924, \"thailand\": 181, \"@hillarysusans\": 1925, \"@foxesba\": 5635, \"stone\": 5636, \"industry\": 1926, \"favorite\": 5637, \"act\": 1927, \"@cnn\": 4482, \"burning\": 5639, \"parties\": 1928, \"@maxchupailo\": 1929, \"her\": 3792, \"hes\": 3793, \"hey\": 3794, \"ago\": 5770, \"complete\": 5641, \"billionaires\": 5143, \"with\": 182, \"buying\": 1931, \"handsome\": 3795, \"abused\": 183, \"they're\": 1932, \"rush\": 185, \"october\": 3796, \"rage\": 186, \"dirty\": 187, \"\\uddf7\": 1230, \"politically\": 1933, \"agree\": 1934, \"gone\": 1935, \"ac\": 1936, \"#maga\": 5643, \"citizenship\": 3797, \"johnny\": 3798, \"exhausted\": 5644, \"certain\": 5645, \"doug\": 6358, \"am\": 1939, \"al\": 1940, \"watches\": 188, \"an\": 1941, \"as\": 1942, \"08:15\": 189, \"08:17\": 190, \"watched\": 191, \"az\": 1944, \"gruber\": 1945, \"@rtesta\": 192, \"bored\": 3008, \"abolish\": 5646, \"unparalleled\": 193, \"puppy\": 1248, \"disgraceful\": 5647, \"01:48\": 194, \"09-05-\": 3799, \"congress\": 1947, \"01:40\": 196, \"01:42\": 197, \"01:44\": 1254, \"gifts\": 5648, \"@trumpdoral\": 198, \"03-07-\": 3800, \"@nbcnightlynews\": 1949, \"tricks\": 199, \"hello\": 5649, \"fraudulent\": 5650, \"mass\": 3801, \"adam\": 3802, \"original\": 1950, \"9/11\": 1951, \"consider\": 5653, \"caused\": 200, \"instincts\": 1953, \"@nymag\": 3803, \"fairness\": 1954, \"13:40\": 6079, \"tx\": 3804, \"ty\": 3805, \"tv\": 3806, \"@ukcatwoman52\": 5654, \"champions\": 1955, \"riots\": 202, \"to\": 3808, \"th\": 3809, \"10-11-\": 203, \"06-05-\": 3810, \"#unga\": 2134, \"paying\": 3320, \"returned\": 3811, \"moreland\": 1956, \"04-30-\": 3812, \"saved\": 5895, \"baton\": 204, \"trillions\": 1957, \"12-03-\": 3813, \"condition\": 4960, \"moines\": 205, \"17th\": 3814, \"cable\": 3815, \"developing\": 2365, \"laying\": 5658, \"joined\": 3816, \"large\": 3817, \"sand\": 206, \"harry\": 3818, \"small\": 207, \"population\": 1768, \"194\": 208, \"penalties\": 1958, \"193\": 210, \"192\": 1311, \"past\": 211, \"23:23\": 5660, \"23:20\": 5661, \"23:21\": 5662, \"23:27\": 5663, \"pass\": 212, \"@thegrumpyhusky\": 5664, \"23:29\": 5665, \"investment\": 213, \"richard\": 4992, \"clock\": 214, \"schumer\": 5666, \"scientists\": 3820, \"corker\": 215, \"nurse\": 1961, \"@chrischristie\": 5667, \"full\": 216, \"sarasota\": 217, \"lobbyist\": 3821, \"hours\": 1962, \"smartest\": 1963, \"palin\": 3822, \"november\": 218, \"legend\": 3823, \"07-01-\": 5668, \"14:37\": 1964, \"14:36\": 1965, \"experience\": 219, \"pics\": 1966, \"prior\": 220, \"pick\": 1967, \"action\": 1968, \"would've\": 5671, \"via\": 5672, \"followed\": 221, \"\\ude0a\": 1969, \"@youxia88\": 3824, \"@fundanything\": 3078, \"gosh\": 3825, \"#neverhillary\": 222, \"@cbnnews\": 3826, \"attendance\": 223, \"mort\": 224, \"pearl\": 3827, \"fragrance\": 225, \"6\": 3828, \"more\": 1359, \"#teamtrump\": 5674, \"door\": 226, \"@allenwronowski\": 5675, \"#crookedhillary\": 5676, \"company\": 227, \"corrected\": 228, \"one-sided\": 229, \"@bayojay\": 5677, \"keeping\": 1971, \"science\": 1972, \"17:09\": 3829, \"4:00\": 1973, \"09-28-\": 6081, \"morgan\": 3830, \"learn\": 230, \"beautiful\": 1974, \"scam\": 3831, \"stated\": 1975, \"accept\": 1976, \"50,7\": 3832, \"biden\": 3833, \"15:28\": 321, \"sense\": 1978, \"11:00\": 3834, \"11:02\": 3835, \"dress\": 5679, \"08-18-\": 1979, \"@beliefheals\": 5083, \"information\": 5085, \"earnings\": 1980, \"@mlauer\": 5680, \"100000\": 4487, \"plant\": 5682, \"plans\": 5683, \"11-08-\": 5684, \"entrepreneurship\": 1981, \"plane\": 5685, \"ethics\": 3836, \"refuse\": 3837, \"\\u2665\": 3838, \"@gfeorg\": 3839, \"register\": 3840, \"broadcasting\": 5686, \"@rockprincess818\": 5687, \"imploding\": 1982, \"02:33\": 234, \"mexican\": 1983, \"02:36\": 235, \"02:37\": 236, \"02:39\": 237, \"trade\": 5690, \"resorts\": 238, \"attitude\": 5691, \"paper\": 239, \"scott\": 240, \"signs\": 241, \"broadway\": 5692, \"turbine\": 3841, \"10:34\": 6998, \"06-19-\": 242, \"its\": 5693, \"roots\": 243, \"@thomasaroberts\": 5694, \"rapidly\": 5695, \"gerald\": 5696, \"caesars\": 3842, \"@tpgraf82\": 5146, \"09,8\": 244, \"ally\": 5698, \"lowell\": 5699, \"entire\": 1178, \"idols\": 245, \"always\": 1984, \"courses\": 246, \"found\": 3843, \"@lancebagley1\": 5701, \"execs\": 5702, \"week\": 1986, \"shock\": 6692, \"begged\": 247, \"reduce\": 3844, \"they've\": 5781, \"@toddriddolls\": 4212, \"@keatsben\": 249, \"doses\": 1477, \"advertisers\": 250, \"@senjohnmccain\": 1987, \"really\": 5706, \"missed\": 1988, \"ernie\": 252, \"research\": 253, \"highway\": 1989, \"belief\": 3846, \"@jacknicklaus\": 254, \"imagine\": 1990, \"#icebucketchallenge\": 1507, \"rises\": 3847, \"definition\": 255, \"owners\": 3848, \"w\": 1991, \"@notnottildaswin\": 1992, \"major\": 5707, \"number\": 1993, \"celeb\": 3849, \"guess\": 3850, \"heads\": 1994, \"leverage\": 1532, \"jet\": 3852, \"threatening\": 1995, \"jeb\": 3853, \"smile\": 5655, \"@newsmax_media\": 3854, \"@cnbc\": 257, \"relationship\": 1996, \"interviewed\": 258, \"immediate\": 1997, \"focusing\": 1998, \"interviewer\": 259, \"endlessly\": 3855, \"grace\": 2000, \"obama\": 2001, \"ungrateful\": 260, \"aaa\": 1544, \"iranian\": 2002, \"condolences\": 261, \"@realistboutmine\": 5708, \"determined\": 2003, \"@akmackey\": 4527, \"sell\": 263, \"tough\": 5967, \"self\": 264, \"also\": 265, \"@kimguilfoyle\": 2005, \"play\": 2007, \"12:58\": 5709, \"12:53\": 5710, \"virus\": 266, \"plan\": 2008, \"loan\": 5731, \"understands\": 267, \"sometimes\": 268, \"cover\": 2009, \"18:59\": 269, \"@bertshad\": 5711, \"tpp\": 2010, \"18:51\": 1589, \"@floydmayweather\": 3856, \"attacking\": 2011, \"despise\": 5713, \"golf\": 3857, \"gold\": 3858, \"repub\": 2012, \"session\": 2013, \"impact\": 2014, \"consistently\": 2015, \"writes\": 3859, \"writer\": 3860, \"failed\": 2016, \"wayne\": 5715, \"@rsherman_25\": 1749, \"factor\": 3861, \"five-star\": 2017, \"09-03-\": 5716, \"african-americans\": 5717, \"banned\": 3862, \"they'd\": 2018, \"preparing\": 2019, \"closely\": 2020, \"reporters\": 3863, \"frightening\": 4663, \"enemy\": 3864, \"hits\": 826, \"cry\": 3865, \"tanked\": 1623, \"ivanka\": 270, \"river\": 5338, \"19:48\": 4218, \"insane\": 271, \"set\": 2021, \"04-09-\": 5719, \"19:45\": 4219, \"see\": 2022, \"sec\": 2023, \"migration\": 2024, \"sea\": 2025, \"sen\": 2026, \"aberdeen\": 3867, \"@david360nc\": 272, \"trey\": 3613, \"#\": 5722, \"movie\": 5723, \"currently\": 5724, \"compliment\": 3869, \"knowing\": 3870, \"turning\": 6360, \"12-01-\": 5727, \"21:02\": 274, \"last\": 275, \"influential\": 5728, \"21:08\": 1663, \"barely\": 5370, \"we've\": 7007, \"let\": 2095, \"whole\": 2027, \"acted\": 276, \"others\": 6703, \"community\": 2028, \"agents\": 2029, \"church\": 3871, \"23:02\": 277, \"belt\": 278, \"@fanofgreenmms\": 2387, \"worthless\": 2030, \"@liljon\": 3872, \"@golfswingshirt\": 3873, \"hitting\": 2031, \"firm\": 2032, \"champion\": 3874, \"@carolde\": 2033, \"fire\": 2034, \"mind\": 5733, \"nra\": 279, \"remark\": 3025, \"fund\": 2036, \"races\": 3875, \"awake\": 280, \"representative\": 3876, \"insiders\": 2037, \"towns\": 5402, \"22:34\": 2038, \"handling\": 5734, \"@naughtoriousbig\": 284, \"all-time\": 6374, \"#kellyfile\": 3877, \"straight\": 1702, \"budget\": 285, \"admire\": 286, \"@phxken\": 2039, \"macleod\": 785, \"07-03-\": 288, \"huffington\": 2040, \"owed\": 2041, \"@thebrodyfile\": 3878, \"@diamondandsilk\": 289, \"<3\": 5419, \"middle-east\": 2042, \"alaska\": 6705, \"@chris_r_2014\": 3879, \"owes\": 2043, \"beautifully\": 5739, \"funny\": 2044, \"rules\": 4223, \"virtually\": 5740, \"@numerologynow\": 5741, \"forgiveness\": 3880, \"defeat\": 5791, \"levels\": 2045, \"medicaid\": 1743, \"fabrication\": 3881, \"recent\": 1784, \"canned\": 2046, \"schneiderman\": 291, \"@pressjournal\": 5742, \"picks\": 5743, \"person\": 3883, \"@mike_pence\": 2047, \"kelly\": 3884, \"@clewandowski_\": 292, \"03-24-\": 2048, \"11:25\": 5745, \"11:24\": 5746, \"#thedonald\": 6991, \"11:29\": 5747, \"#chicago\": 2049, \"using\": 3885, \"@joan_rivers\": 293, \"@futureicon\": 294, \"parents\": 295, \"location\": 2051, \"sydney\": 3886, \"surprised\": 5748, \"australia\": 3887, \"victims\": 2053, \"demands\": 2054, \"couple\": 296, \"@landmanmarius\": 297, \"04:50\": 2055, \"04:51\": 2056, \"suffering\": 3888, \"@ayrshirepost\": 3889, \"@morningmika\": 2057, \"@jayleno\": 2393, \"06-20-\": 2058, \"macy's\": 4871, \"d\": 3890, \"squandered\": 3891, \"#nfl\": 3892, \"continue\": 3893, \"@keemstarx\": 299, \"cronies\": 5751, \"senate\": 3894, \"spring\": 3895, \"b4\": 2059, \"@rockinjoe1\": 300, \"mighty\": 3896, \"sight\": 2060, \"benefit\": 6095, \"religion\": 5752, \"t\": 4230, \"be\": 2061, \"@vickybrush\": 301, \"bc\": 2062, \"china's\": 5754, \"agreement\": 2063, \"nowhere\": 5755, \"bs\": 2064, \"by\": 2065, \"wildlife\": 5535, \"anything\": 2066, \"@yourinfobabe\": 5539, \"melbourne\": 304, \"deserves\": 305, \"stuart\": 5757, \"@bobby990r_1\": 2067, \"clinton\": 3897, \"colorado\": 3898, \"garbage\": 5551, \"terrorists\": 307, \"intl\": 308, \"into\": 309, \"appropriate\": 5759, \"primarily\": 2068, \"spending\": 5760, \"suit\": 3899, \":\": 5761, \"opens\": 310, \"@rspbscotland\": 6568, \"@toure\": 5762, \"elsewhere\": 3900, \"#hurricaneharvey\": 311, \"jewish\": 2069, \"cologne\": 6525, \"pastor\": 2070, \"link\": 2071, \"pacific\": 3338, \"coldest\": 5763, \"line\": 2072, \"cia\": 3901, \"up\": 3902, \"us\": 3903, \"ur\": 3904, \"um\": 3905, \"un\": 3906, \"customers\": 5271, \"uk\": 1899, \"@lord\": 5303, \"12-20-\": 3907, \"05-29-\": 3908, \"armstrong\": 2073, \"likewise\": 5765, \"@redletter99\": 2074, \"influence\": 314, \"e-mails\": 5766, \"diverse\": 315, \"@g0d_\": 5767, \"@not_that_actor\": 5768, \"thugs\": 3909, \"fixing\": 3910, \"uranium\": 316, \"definitely\": 6380, \"700000\": 2075, \"sided\": 2076, \"#americans\": 3911, \"05-03-\": 5769, \"sides\": 2077, \"@nbc\": 2078, \"\\u2661\": 2079, \"lane\": 317, \"land\": 318, \"fighter\": 5771, \"age\": 5772, \"holes\": 3912, \"walked\": 2080, \"summit\": 2081, \"verdes\": 1948, \"walker\": 2082, \"fresh\": 3913, \"opioid\": 319, \"having\": 3914, \"code\": 2083, \"results\": 2084, \"existing\": 5773, \"unmatched\": 1829, \"flashback\": 320, \"moon\": 1467, \"@frankluntz\": 1192, \"concerned\": 5774, \"young\": 3916, \"send\": 5673, \"#dt2016\": 5775, \"dislike\": 2086, \"sent\": 2087, \"probe\": 5345, \"garden\": 2089, \"torture\": 5776, \"continues\": 5777, \"continued\": 5778, \"wipe\": 3917, \"timely\": 5779, \"@hanan_khan2\": 3918, \"magic\": 3919, \"harbor\": 1985, \"marry\": 5780, \"eve\": 3920, \"lombardi\": 322, \"try\": 3921, \"this\": 5801, \"race\": 3922, \"32,6\": 323, \"08-28-\": 324, \"@charleshurt\": 2090, \"pledge\": 3923, \"crook\": 325, \"@darrenjjordan\": 5782, \"video\": 326, \"@eventbrite\": 2004, \"index\": 2091, \"asap\": 6097, \"expressed\": 3924, \"ovations\": 3925, \"@georgewillf\": 3926, \"bird\": 2092, \"led\": 2093, \"lee\": 2094, \"delivering\": 5784, \"@thenewsclub_us\": 5785, \"poverty\": 3927, \"consideration\": 5786, \"@dannyzuker\": 327, \"09-01-\": 328, \"@sheriffclarke\": 329, \"great\": 5787, \"engage\": 2096, \"@salesdan48\": 3928, \"receive\": 5788, \"involved\": 5735, \"@justintrudeau\": 5789, \"rdy\": 5790, \"survey\": 331, \"derby\": 332, \"popcorn\": 5792, \"opinion\": 5793, \"residents\": 2098, \"makes\": 333, \"maker\": 334, \"03-03-\": 335, \"thats\": 336, \"panicked\": 337, \"06-01-\": 338, \"@shopfloornam\": 7013, \"sgt\": 3929, \"dumbest\": 339, \"standing\": 2099, \"confidence\": 340, \"certificate\": 5756, \"illegal\": 5794, \"bush\": 5462, \"next\": 341, \"eleven\": 342, \"doubt\": 2100, \"_\": 5166, \"touched\": 5463, \"@macmiller\": 5795, \"@georgewill\": 343, \"foolishly\": 1767, \"carrying\": 5796, \"baby\": 344, \"gladly\": 5797, \"charity\": 5798, \"customer\": 345, \"balls\": 5799, \"animals\": 5800, \"21:20\": 2101, \"challenge\": 3931, \"clients\": 346, \"21:25\": 2102, \"pour\": 5802, \"@steveman905\": 5803, \"drill\": 5783, \"@fitsnews\": 2103, \"fulfill\": 5804, \"wearing\": 6384, \"process\": 347, \"purposes\": 5805, \"pieces\": 5806, \"high\": 2105, \"@kostoff2\": 5807, \"@richardbranson\": 2106, \"educational\": 348, \"destroying\": 5808, \"delay\": 3932, \"mugging\": 645, \"@jeffredman5\": 2107, \"animal\": 5815, \"intelligent\": 350, \"testimony\": 6099, \"tied\": 5810, \"ties\": 5811, \"solidarity\": 3933, \"realized\": 351, \"boeing\": 2108, \"22:16\": 3934, \"element\": 3935, \"@theapprentice9\": 2109, \"06,11\": 5812, \"allow\": 2110, \"classy\": 3936, \"volunteers\": 5813, \"07-05-\": 2111, \"houston\": 352, \"boxing\": 4841, \"producer\": 5814, \"move\": 3937, \"@sethmeyers\": 6646, \"wife's\": 353, \"perfect\": 354, \"chosen\": 3938, \"meantime\": 355, \"degrees\": 3939, \"2018\": 3940, \"2015\": 3941, \"puerto\": 2112, \"2017\": 3943, \"2016\": 3944, \"2011\": 3945, \"@theellenshow\": 356, \"2013\": 3947, \"2012\": 3948, \"prosper\": 357, \"legendary\": 3949, \"realize\": 358, \"17:49\": 359, \"17:48\": 360, \"establishment\": 5809, \"25,8\": 3952, \"truth\": 3953, \"involvement\": 6100, \"mets\": 3954, \"bump\": 2170, \"@netanyahu\": 5817, \"society\": 5818, \"books\": 362, \"@rowleyrhonda\": 363, \"@ihunt88\": 3955, \"@youtube\": 364, \"'\": 365, \"wikileakes\": 2113, \"@agschneiderman\": 3956, \"hilarious\": 3957, \"highs\": 366, \"czar\": 3669, \"shut\": 5819, \"@noturbine\": 4044, \"@jeniferstevens\": 367, \"surely\": 2115, \"06-22-\": 3959, \"scary\": 5820, \"#cpac\": 5821, \"could\": 368, \"david\": 2116, \"hussein\": 5822, \"6:00\": 5491, \"blown\": 2117, \"04-15-\": 3960, \"owned\": 2118, \"jesus\": 2119, \"owner\": 2120, \"blows\": 3587, \"legislative\": 2121, \"los\": 3962, \"system\": 3963, \"@antonio_annesi\": 2122, \"o'reilly\": 5824, \"interests\": 370, \"enforcement\": 371, \"lot\": 4238, \"megan\": 2123, \"botox\": 2124, \"elite\": 5827, \"haven\": 5957, \"steel\": 2125, \"bother\": 3964, \"tortured\": 2126, \"roberts\": 3965, \"01:18\": 6390, \"briefing\": 2127, \"result\": 5466, \"false\": 372, \"01-27-\": 5467, \"09-20-\": 540, \"tonight\": 373, \"gentle\": 3967, \"defending\": 3968, \"@stinger_inc\": 374, \"clearly\": 2128, \"documents\": 2129, \"4000\": 3969, \"@gappistanradio\": 3970, \"@denzen\": 3971, \"linda\": 3972, \"korean\": 3973, \"01:14\": 6394, \"competence\": 2131, \"persistence\": 5829, \"soar\": 2132, \"brazil\": 6395, \"nancy\": 5831, \"visa\": 5832, \"rollout\": 2133, \"segment\": 3975, \"so-called\": 376, \"hypocrite\": 3976, \"stronger\": 5833, \"thanksgiving\": 377, \"face\": 3977, \"you'll\": 2135, \"fiasco\": 5834, \"wounded\": 5835, \"bret\": 378, \"fact\": 3978, \"12-22-\": 5837, \"terminate\": 5838, \"bring\": 3979, \"rouge\": 5839, \"rough\": 5840, \"@highlander6700\": 5841, \"decade\": 3980, \"jay\": 380, \"\\ude2c\": 2296, \"should\": 3981, \"jan\": 381, \"there's\": 2707, \"#usopen\": 2299, \"hope\": 6028, \"meant\": 3982, \"insight\": 2136, \"handle\": 3983, \"listened\": 3984, \"means\": 3985, \"20:16\": 5843, \"20:17\": 6031, \"20:14\": 5844, \"20:12\": 5845, \"lucky\": 5846, \"@sassysexylove\": 384, \"05-01-\": 385, \"h\": 5847, \"taxes\": 386, \"@kmcs1957\": 5848, \"stuff\": 387, \"dallas\": 6740, \"ohio\": 388, \"btw\": 5849, \"edition\": 6053, \"slanted\": 2137, \"packed\": 3986, \"nuclear\": 389, \"partisan\": 2138, \"@huffpostmedia\": 390, \"taunting\": 3987, \"warren\": 2139, \"email\": 2140, \"ends\": 3988, \"lawsuit\": 392, \"absentee\": 3989, \"@landexpo\": 393, \"restrictions\": 2141, \"invited\": 3990, \"deficits\": 5852, \"drug\": 2142, \"jodi\": 2143, \"harvard\": 6401, \"trumps\": 3991, \"trumpy\": 3992, \"\\ude02\": 5855, \"co\": 2144, \"cc\": 2145, \"ca\": 2146, \"labor\": 6720, \"20:18\": 5842, \"@govchristie\": 5856, \"@suzannesaxx\": 3994, \"hottest\": 2147, \"waste\": 5857, \"louisiana\": 3995, \">\": 394, \"2014\": 3942, \"atlanta\": 2148, \"@hl3tweets\": 5858, \"2010\": 3946, \"rigged\": 2149, \"11-30-\": 395, \"va\": 3996, \"ve\": 3997, \"@maffucci93\": 5859, \"delaying\": 2150, \"site\": 3998, \"vp\": 3999, \"vs\": 4000, \"@billmaher\": 5860, \"against\": 4522, \"obama's\": 5861, \"sits\": 1970, \"@omaha_tiger\": 397, \"tattoo\": 398, \"terrorist\": 5862, \"juan\": 4001, \"@pianobecca\": 5863, \"spends\": 7023, \"buffoon\": 4002, \"outbreak\": 4003, \"android\": 4004, \"paula\": 399, \"ball\": 2151, \"@hoganseaisle129\": 400, \"@katrinapierson\": 4005, \"upon\": 5865, \"nationally\": 5866, \"@pennybishop16\": 2152, \"4.1\": 7025, \"expand\": 5867, \"audit\": 2467, \"off\": 401, \"@trumpchicago\": 4006, \"command\": 2154, \"350\": 4007, \"drawing\": 4008, \"less\": 5868, \"7:50\": 2155, \"rooms\": 4009, \"\\udc97\": 402, \"paul\": 5869, \"web\": 403, \"41,7\": 2156, \"presidential\": 3950, \"@wallsburg\": 2492, \"41,8\": 2157, \"increased\": 5870, \"government\": 4011, \"checking\": 4012, \"taunt\": 2158, \"cruz\": 404, \"five\": 5872, \"desk\": 6196, \"@hufseyg\": 5873, \"become\": 406, \"emmy\": 407, \"replacement\": 2159, \"amendment\": 4014, \"#2016\": 2160, \"polar\": 2416, \"ballot\": 2161, \"literally\": 5874, \"fema\": 5474, \"does\": 5875, \"passion\": 408, \"blowing\": 4016, \"schedule\": 5877, \"02-25-\": 409, \"pressure\": 410, \"@craftmonroe\": 5878, \"r\": 3289, \"loans\": 5879, \"stage\": 2162, \"gained\": 2163, \"sister\": 2164, \"puts\": 5881, \"@socalmike_sd\": 411, \"donald's\": 5882, \"angeles\": 2165, \"@ac360\": 413, \"documentary\": 414, \"executives\": 5883, \"letters\": 415, \"pussy\": 4018, \"commitment\": 2166, \"lung\": 4019, \"roads\": 5884, \"charities\": 688, \"mere\": 5885, \"#throwbackthursday\": 2167, \"terminated\": 416, \"10:28\": 4243, \"housing\": 2168, \"stamina\": 2169, \"doing\": 5816, \"yrs\": 417, \"onald\": 5886, \"flynn\": 4020, \"#nbc\": 418, \"frisk\": 4523, \"@jessebwatters\": 4021, \"@geraldorivera\": 2716, \"@samahdanash\": 419, \"construction\": 2171, \"candidacy\": 5887, \"count\": 2172, \"places\": 420, \"congresswoman\": 421, \"official\": 2173, \"#makeamericagreatagain\": 4022, \"excitement\": 422, \"placed\": 423, \"@forbes\": 4023, \"convince\": 4024, \"@usopengolf\": 4025, \"problem\": 424, \"meyers\": 2174, \"irish\": 4026, \"@trumpgolfdc\": 425, \"int\": 4027, \"recognize\": 2175, \"\\u2611\": 426, \"unwatchable\": 5888, \"compared\": 427, \"@dcfoodsafety\": 428, \"sexual\": 1205, \"@peace_janise\": 429, \"lately\": 430, \"corey\": 4028, \"details\": 432, \"francisco\": 2176, \"monday\": 5889, \"09-19-\": 433, \"matt\": 4854, \"chance\": 5890, \"repeal\": 435, \"inspiration\": 5891, \"04-19-\": 5892, \"rule\": 5893, \"lift\": 1792, \"compete\": 436, \"announces\": 3051, \"defend\": 3052, \"doubts\": 437, \"09-22-\": 438, \"ossoff\": 2651, \"controversial\": 4032, \"mansion\": 4033, \"@paranormalfact\": 6319, \"@wftragni\": 439, \"integrity\": 440, \"stinks\": 441, \"10-29-\": 4034, \"voter\": 5898, \"edward\": 5899, \"voted\": 5900, \"worth\": 443, \"women's\": 2177, \"00:00\": 7035, \"tickets\": 5902, \"we'll\": 5903, \"#wiprimary\": 2688, \"c-span\": 5905, \"triumph\": 4036, \"phoney\": 5906, \"@jodil792\": 444, \"phones\": 5907, \"jeb's\": 445, \"05-25-\": 446, \"12-24-\": 447, \"+\": 2178, \"@nfl\": 5909, \"above\": 2179, \"officially\": 4037, \"told\": 5910, \"equals\": 2710, \"protection\": 448, \"05-07-\": 2180, \"celebration\": 2181, \"kudos\": 5911, \"daughter\": 2717, \"study\": 2182, \"88maggie888\": 449, \"aka\": 2183, \"@geoscarborough\": 2184, \"secure\": 2185, \"highly\": 4038, \"bro\": 450, \"opportunities\": 7036, \"total\": 4039, \"@thegarybusey\": 2740, \"sarah\": 451, \"devastation\": 452, \"@fabiolasellsnj\": 5913, \"motivate\": 4040, \"world's\": 1033, \"20:35\": 453, \"20:30\": 454, \"@afrodeziak\": 2749, \"@mileswynn3\": 5914, \"indiana\": 2188, \"#kateslaw\": 2189, \"20:38\": 456, \"renovations\": 6439, \"haha\": 5915, \"award\": 4041, \"aware\": 4042, \"championships\": 2765, \"separates\": 457, \"yard\": 1209, \"blocking\": 459, \"word\": 5916, \"1996\": 460, \"@cbsnews\": 2770, \"refusing\": 5918, \"#trumpdoral\": 4043, \"era\": 461, \"criticizing\": 5919, \"piers\": 2190, \"@nate_stuller\": 2191, \"chancellor\": 6188, \"india\": 5920, \"campaigning\": 5480, \"provide\": 462, \"nuts\": 463, \"@iamsloany\": 6485, \"moron\": 465, \"disappoint\": 5921, \"truthful\": 58, \"bday\": 6494, \"after\": 4047, \"lay\": 5922, \"suing\": 2193, \"law\": 5923, \"las\": 5924, \"09:12\": 6503, \"@theview\": 5925, \"appreciate\": 466, \"green\": 2194, \"fan\": 7042, \"order\": 5926, \"infested\": 4049, \"office\": 5927, \"satisfied\": 5928, \"pascal\": 5929, \"japan\": 4050, \"mayor\": 2195, \"bombing\": 4051, \"@billkristol\": 5930, \"christie\": 469, \"production\": 470, \"then\": 2542, \"coffee\": 471, \"affected\": 2197, \"#oscars\": 472, \"@rketeltas\": 5932, \"safe\": 473, \"scene\": 369, \"break\": 5933, \"hispanics\": 474, \"they\": 2198, \"autographed\": 5823, \"lifelong\": 477, \"bank\": 4052, \"classified\": 2199, \"l\": 478, \"rocks\": 4053, \"reasonable\": 479, \"carlos\": 5934, \"lifted\": 4054, \"dumping\": 480, \"crimes\": 2200, \"hosted\": 2201, \"crimea\": 2202, \"@durantrandy\": 481, \"network\": 5935, \"wgc\": 2203, \"hooked\": 4055, \"#trumpforpresident\": 2205, \"standard\": 4057, \"22:51\": 482, \"vets\": 4058, \"22:57\": 483, \"@deedeegop\": 5936, \"mvp\": 4059, \"ticket\": 7044, \"03:18\": 2207, \"created\": 4060, \"refugee\": 484, \"03:13\": 2208, \"lousy\": 5937, \"oppose\": 5938, \"01-28-\": 2209, \"bloomberg\": 6417, \"\\udc95\": 2210, \"another\": 485, \"rated\": 5940, \"approximately\": 486, \"@gardibates\": 2211, \"rates\": 5941, \"int'l\": 2677, \"filibuster\": 4061, \"happily\": 4063, \"ted\": 3374, \"albert\": 4064, \"rejected\": 5942, \"honolulu\": 2213, \"wasted\": 488, \"toronto\": 5943, \"mercy\": 5944, \"warmest\": 6426, \"target\": 5945, \"hike\": 5946, \"rate\": 3376, \"#cnndebate\": 2214, \"rebroadcast\": 5947, \"historical\": 489, \"hacking\": 5949, \"solely\": 2215, \"failing\": 5950, \"respecting\": 490, \"assange\": 4065, \"return\": 6083, \"forced\": 5951, \"strength\": 2216, \"genuine\": 5952, \"subjects\": 491, \"luxury\": 4066, \"forces\": 5953, \"\\ud83d\": 492, \"bruce\": 493, \"what\": 5188, \"germany\": 494, \"#prez\": 495, \"grave\": 496, \"@chucktodd\": 5954, \"@capetown58\": 5700, \"investments\": 5955, \"swamp\": 497, \"sun\": 2217, \"voting\": 4068, \"reserve\": 498, \"opinions\": 1802, \"lewis\": 500, \"bimbo\": 4069, \"eminent\": 1501, \"@jwil444\": 501, \"dopey\": 4070, \"nephew\": 6697, \"dopes\": 4071, \"enjoyed\": 4072, \"letterman\": 503, \"sharks\": 6702, \"@vin7768\": 2219, \"guidance\": 2220, \"sentence\": 6425, \"hrs\": 4073, \"@thefamilyleader\": 2221, \"deepest\": 4074, \"@kornegay_danna\": 4075, \"unfollow\": 4537, \"personality\": 4076, \"do\": 2222, \"de\": 2223, \"dc\": 2224, \"dt\": 2225, \"dr\": 2226, \"runs\": 504, \"@leebandoni\": 5958, \"covering\": 4078, \"children's\": 505, \"steal\": 5959, \"secretary\": 506, \"@kathystone1221\": 5961, \"miserably\": 4079, \"10,16\": 5962, \"horrendous\": 507, \"12-14-\": 6118, \"mitch\": 2228, \"away\": 508, \"gentleman\": 2229, \"@hyannis1952\": 2230, \"t-mobile\": 5963, \"unable\": 4080, \"tainted\": 2231, \"props\": 2232, \"drawn\": 509, \"accord\": 2233, \"terms\": 4082, \"wh\": 4083, \"received\": 5964, \"essentially\": 510, \"ill\": 5965, \"con\": 2235, \"negotiation\": 2236, \"tone\": 511, \"royal\": 5968, \"12-26-\": 2237, \"tony\": 512, \"@karlrove\": 2238, \"speak\": 5969, \"gratitude\": 513, \"strong\": 2426, \"buffett\": 2239, \"sachs\": 4084, \"tragedy\": 1505, \"charisma\": 2240, \"@realpro4real\": 2241, \"partnership\": 5828, \"families\": 2242, \"easy\": 5487, \"attacked\": 514, \"concerning\": 5970, \"you\": 6106, \"fest\": 4085, \"gracious\": 515, \"07-13-\": 4086, \"conviction\": 671, \"publicly\": 4087, \"05-27-\": 2243, \"air\": 4088, \"b-day\": 5972, \"aid\": 4089, \"voice\": 2244, \"launched\": 4091, \"mistake\": 5973, \"cont\": 516, \"confirmed\": 2245, \"jerry\": 2246, \"20:52\": 2247, \"20:55\": 2248, \"20:58\": 6832, \"20:59\": 2249, \"independent\": 5974, \"saddam\": 4093, \"blames\": 6838, \"hang\": 517, \"rain\": 2250, \"hand\": 518, \"blamed\": 2251, \"@anthonyweiner\": 4095, \"kept\": 2252, \"priebus\": 520, \"thx\": 2253, \"1600\": 521, \"humble\": 522, \"drip\": 5975, \"tho\": 2254, \"hispanic\": 4097, \"client\": 523, \"@sentedcruz\": 5976, \"studying\": 2130, \"the\": 2255, \"22,9\": 6851, \"\\u2600\": 4099, \"@chris_mcnall\": 524, \"she'll\": 5977, \"photo\": 4100, \"quotes\": 5978, \"thanks\": 525, \"victim\": 5979, \"adding\": 2256, \"@ymctier\": 2257, \"shout\": 527, \"spread\": 2258, \"board\": 4102, \"@nytimes\": 6122, \"rnc\": 4103, \"caps\": 2259, \"arab\": 2260, \"fusion\": 5982, \"retreat\": 4104, \"tebow\": 5983, \"20,15\": 4105, \"20,11\": 4106, \"night\": 528, \"security\": 2261, \"accuracy\": 3974, \"webb\": 2262, \"honored\": 4107, \"sends\": 2263, \"robocall\": 6338, \"born\": 529, \"04-01-\": 5984, \"congratulate\": 530, \"humor\": 5985, \"phenomenal\": 2265, \"comments\": 2266, \"asking\": 531, \"@cleopattrausa\": 532, \"beating\": 4109, \"adorable\": 533, \"pls\": 5986, \"marketing\": 5987, \"plz\": 5988, \"@hunterboss1996\": 2267, \"heilemann\": 534, \"post\": 4110, \"properties\": 5989, \"@realcoachhodge\": 535, \"newspapers\": 5991, \"months\": 4111, \"cherish\": 2268, \"tonights\": 4112, \"@ctobin22\": 1358, \"wasting\": 536, \"lavar\": 537, \"prisoners\": 5993, \"lois\": 6953, \"balanced\": 2270, \"deception\": 539, \"@trumptoronto\": 4113, \"legislation\": 5994, \"fight\": 2271, \"conservation\": 3286, \"way\": 4114, \"was\": 4115, \"war\": 4116, \"lowest\": 5995, \"becoming\": 4117, \"true\": 4118, \"@karl\": 541, \"03:39\": 4119, \"03:38\": 4120, \"isis\": 542, \"03:33\": 4121, \"03:32\": 4122, \"03:31\": 4123, \"@jp_worldwide\": 3303, \"03:36\": 4125, \"03:35\": 4126, \"03:34\": 4127, \"7:15\": 5996, \"winery\": 4128, \"promises\": 4130, \"moore\": 4131, \"#yourfired\": 5997, \"evidence\": 2272, \"promised\": 4132, \"dying\": 5998, \"daca\": 5999, \"stake\": 6000, \"windfarm\": 2273, \"reality\": 6001, \"negotiators\": 2274, \"falsely\": 6002, \"jong\": 2275, \"holding\": 6003, \"test\": 543, \"unwilling\": 2276, \"brothers\": 4133, \"o'clock\": 544, \"12-10-\": 2277, \"welcome\": 4134, \"update\": 545, \"let's\": 546, \"#leader\": 4135, \"@jamieemingg\": 6004, \"@backontrackusa\": 2279, \"together\": 2280, \"loyal\": 4136, \"reception\": 2281, \"concept\": 547, \"global\": 2282, \"fabricated\": 6005, \"@dannyzucker\": 6431, \"grateful\": 4137, \"battle\": 549, \"#trumpforpresident2016\": 6006, \"certainly\": 4138, \"hurry\": 2434, \"honoring\": 2283, \"obamacare\": 550, \"@tuckercarlson\": 2284, \"terror\": 6007, \"@tmz_politics\": 551, \"supported\": 3066, \"@2timeslucky\": 4140, \"vegas\": 6009, \"trouble\": 6010, \"blast\": 2285, \"@beaumontanthony\": 3404, \"responders\": 2286, \"presented\": 4141, \"turns\": 552, \"gun\": 553, \"p\": 2287, \"soooo\": 554, \"gut\": 3413, \"guy\": 555, \"revolution\": 2288, \"regret\": 6012, \"bravo\": 6013, \"@pica_59\": 7063, \"coalition\": 6128, \"thinker\": 2289, \"cost\": 557, \"#trump2016https\": 558, \"#repealandreplace\": 3424, \"@nikkio\": 4142, \"curse\": 4143, \"appear\": 4144, \"@reince\": 2290, \"assistance\": 6015, \"04-12-\": 6433, \"@teamcavuto\": 4145, \"appeal\": 4146, \"supporting\": 2291, \"burn\": 2741, \"inauguration\": 6016, \"muslim\": 4147, \"@kellymckayshow\": 6745, \"@alexdub182821\": 3445, \"roaring\": 4148, \"teacher\": 560, \"change\": 2292, \"sending\": 561, \"11-28-\": 2293, \"trial\": 2294, \"franklin\": 562, \"usually\": 4149, \"@msnbc\": 2295, \"country's\": 6019, \"430\": 563, \"churchill\": 4150, \"regardless\": 564, \"extra\": 565, \"sharpton\": 6020, \"#usa\": 566, \"sincerely\": 6021, \"fbi\": 567, \"rarely\": 2297, \"market\": 6022, \"@sarahpalinusa\": 7108, \"prove\": 4151, \"bury\": 2743, \"angela\": 6023, \"live\": 2298, \"bombings\": 382, \"tape\": 383, \"00:55\": 568, \"commissioner\": 3473, \"00:50\": 569, \"towers\": 2300, \"clue\": 6025, \"@icsc\": 571, \"@mooovin_on\": 6026, \"slogan\": 6027, \"left\": 6423, \"car\": 4153, \"can\": 4154, \"stimulating\": 6029, \"heart\": 4155, \"december\": 7135, \"didn't\": 572, \"topic\": 4156, \"7pm\": 2302, \"o\": 5499, \"phrase\": 680, \"spa\": 2303, \"productive\": 2304, \"bankrupt\": 2305, \"discussion\": 574, \"exceptional\": 6749, \"write\": 6030, \"economy\": 575, \"product\": 576, \"zimmerman\": 2306, \"sacrifice\": 6032, \"use\": 6033, \"@trumpturnberry\": 2307, \"20:13\": 6035, \"produce\": 577, \"tonite\": 5704, \"commit\": 6434, \"heroes\": 6036, \"nomination\": 2308, \"remember\": 2309, \"whenever\": 6038, \"05-21-\": 4158, \"offend\": 2310, \"\\uddf8\": 4159, \"typical\": 6039, \"serving\": 578, \"@nbcnews\": 6040, \"indeed\": 2311, \"brain\": 579, \"cold\": 2312, \"still\": 580, \"birds\": 2313, \"ethic\": 2314, \"acknowledge\": 2315, \"lyin\": 581, \"non\": 582, \"#lesm\": 583, \"taliban\": 584, \"wealthy\": 585, \"not\": 586, \"nov\": 587, \"now\": 588, \"hall\": 2317, \"wont\": 2318, \"@johnkasich\": 589, \"@secshulkin\": 6042, \"january\": 4160, \"@desheay\": 3553, \"@israelipm\": 7212, \"em\": 2320, \"el\": 2321, \"domain\": 4161, \"fired\": 2322, \"challenged\": 592, \"ed\": 2323, \"yeah\": 593, \"challenges\": 594, \"fires\": 2324, \"replay\": 595, \"year\": 596, \"et\": 2325, \"naming\": 597, \"calling\": 6751, \"ep\": 2326, \"tried\": 6131, \"shown\": 2327, \"accomplish\": 6044, \"opened\": 2328, \"space\": 2329, \"@tmobile\": 598, \"looking\": 4163, \"receiving\": 2330, \"shows\": 2331, \"@joooooojaah\": 2332, \"rebuilding\": 6045, \"cars\": 4164, \"@kdanielsk\": 2333, \"pistorious\": 2334, \"08-31-\": 2335, \"carl\": 4165, \"@flyosubuckeye1\": 1123, \"card\": 4166, \"care\": 4167, \"transition\": 599, \"tries\": 6134, \"british\": 4168, \"honest\": 6048, \"lindsey\": 2336, \"@golfchannel\": 2337, \"invitation\": 600, \"511\": 601, \"blind\": 602, \"xi\": 3589, \"xl\": 4169, \"stevens\": 4170, \"yourself\": 6050, \"rino\": 603, \"04-03-\": 604, \"directly\": 4171, \"15000\": 605, \"impossible\": 2338, \"ring\": 606, \"drove\": 3600, \"tomorrow\": 607, \"size\": 2339, \"sheer\": 2340, \"checked\": 4173, \"silent\": 2341, \"09-09-\": 608, \"caught\": 610, \"carson\": 4174, \"tragic\": 4175, \"national\": 3076, \"friend\": 2342, \"mostly\": 2343, \"that\": 6051, \"pittsburgh\": 612, \"brains\": 613, \"probably\": 6174, \"appreciated\": 614, \"@tamster613\": 615, \"professionals\": 616, \"television\": 4177, \"10:09\": 2344, \"53,17\": 2345, \"optimism\": 2346, \"angel\": 2347, \"craig\": 6054, \"slam\": 4178, \"@trumpferrypoint\": 687, \"distorted\": 4180, \"anger\": 2348, \"recover\": 6055, \"#crippledamerica\": 6056, \"09,18\": 617, \"bashing\": 6138, \"veteran\": 2349, \"1000000\": 618, \"terrific\": 6058, \"equipment\": 619, \"@reptommarino\": 5850, \"online\": 6059, \"begin\": 6060, \"price\": 4181, \"03:51\": 6061, \"@vp\": 620, \"importantly\": 3663, \"america\": 621, \"]\": 4182, \"amercia\": 4183, \"michelle\": 4184, \"forever\": 4185, \"@jwundy\": 3077, \"attempting\": 622, \"mrs\": 623, \"sunset\": 2350, \"professional\": 6064, \"7:30\": 3683, \"german\": 4188, \"maine\": 4189, \"fifth\": 4190, \"ground\": 2352, \"title\": 6066, \"proclamation\": 6067, \"only\": 4191, \"12-12-\": 3715, \"#snl\": 6068, \"\\ude4c\": 3721, \"truly\": 3722, \"cannot\": 4192, \"scotland's\": 6967, \"05-15-\": 4193, \"celebrate\": 4194, \"disabled\": 7053, \"seldom\": 2353, \"@shmopniggadick\": 6069, \"losers\": 3735, \"@thefive\": 624, \"husband\": 2354, \"concert\": 2355, \"committed\": 6143, \"keynote\": 391, \"elected\": 3744, \"unfit\": 6070, \"asleep\": 4195, \"sport\": 4196, \"concern\": 2356, \"@gravismarketing\": 2357, \"3\": 6071, \"between\": 4199, \"islam\": 3403, \"notice\": 6072, \"blame\": 4200, \"a-rod\": 6074, \"hurts\": 625, \"article\": 2358, \"talented\": 2359, \"08-14-\": 6075, \"comey\": 2360, \"comes\": 2361, \"madness\": 626, \"#jobs\": 4202, \"152\": 3676, \"couldn't\": 178, \"#quote\": 2362, \"liberal\": 1822, \"damac\": 627, \"\\ude22\": 6900, \"cares\": 6077, \"rebuild\": 2363, \"informed\": 4204, \"@smxtty_\": 3791, \"@masterbaxter8\": 5851, \"rebuilt\": 2364, \"@letterman\": 6078, \"sleazebag\": 628, \"@kuuleme69\": 629, \"african-american\": 630, \"these\": 4205, \"59,0\": 4206, \"trick\": 4207, \"11-17-\": 6148, \"editorial\": 2366, \"devastated\": 6951, \"landslide\": 2367, \"coolest\": 6080, \"commander\": 4208, \"canceled\": 4209, \"bias\": 2368, \"embrace\": 2369, \"zuker\": 4210, \"donating\": 6082, \"kenya\": 2370, \"property\": 4090, \"01-03-\": 2371, \"worry\": 232, \"@aacrowellt\": 2373, \"develop\": 631, \"etc\": 5853, \"media\": 2374, \"@cspanpolitics\": 6084, \"food\": 2448, \"followers\": 4211, \"00:32\": 2375, \"00:33\": 2376, \"04-20-\": 6085, \"finish\": 248, \"00:36\": 2377, \"00:37\": 2378, \"00:34\": 2379, \"00:35\": 2380, \"enjoyment\": 6087, \"00:39\": 2381, \"00:17\": 4283, \"mentally\": 2382, \"theater\": 2383, \"charges\": 262, \"constitutional\": 4215, \"#apprentice\": 6088, \"demean\": 632, \"charged\": 6089, \"@ben_techpro\": 2384, \"accumulate\": 7058, \"19:49\": 4217, \"greetings\": 3866, \"touch\": 2385, \"19:47\": 4220, \"speed\": 2386, \"19:42\": 3868, \"death\": 634, \"thinking\": 6090, \"improvement\": 6091, \"#oreillyfactor\": 4221, \"treatment\": 2388, \"#votetrump2016\": 635, \"struck\": 283, \"momentum\": 2389, \"real\": 2390, \"spectacular\": 4222, \"read\": 2391, \"@glennbeck\": 4224, \"\\udc4c\": 4225, \"gonna\": 636, \"amy\": 637, \"listening\": 4226, \"stunt\": 638, \"lady\": 2392, \"ruled\": 4227, \"fortune\": 639, \"@purpleheartwife\": 4228, \"05-23-\": 6093, \"endorses\": 6094, \"oblivion\": 4229, \"blackberry\": 640, \"fully\": 2450, \"endorsed\": 303, \"07-17-\": 641, \"@chris_l54\": 2394, \"exposed\": 642, \"oscars\": 313, \"@misstcassidy\": 2395, \"bless\": 695, \"recorded\": 2396, \"conservative\": 2397, \"deficit\": 2398, \"05-09-\": 643, \"business\": 6096, \"6000000\": 3085, \"#democratsfortrump\": 644, \"exciting\": 3930, \"throw\": 4233, \"comparison\": 6098, \"central\": 2399, \"@travlandleisure\": 4234, \"journey\": 966, \"greatly\": 2400, \"underway\": 2401, \"deranged\": 2402, \"outlook\": 646, \"protests\": 2403, \"2nite\": 2404, \"child\": 1793, \"08-08-\": 4235, \"@slone\": 6101, \"your\": 6102, \"prepare\": 2405, \"area\": 6103, \"usmc\": 2761, \"lol\": 4236, \"start\": 647, \"low\": 4237, \"stars\": 648, \"@barrman\": 6104, \"jones\": 6443, \"delayed\": 649, \"trying\": 379, \"bush's\": 650, \"@scapesrus\": 2406, \"hire\": 2407, \"fraud\": 652, \"circulation\": 2408, \"bucket\": 2409, \"tellin\": 4239, \"@colinswood\": 4240, \"tones\": 6105, \"beliefs\": 4241, \"describe\": 2410, \"moved\": 2411, \"sales\": 2412, \"moves\": 2413, \"credibility\": 2414, \"luckier\": 6446, \"fools\": 655, \"forcing\": 4013, \"poor\": 656, \"suites\": 4242, \"podium\": 4017, \"massachusetts\": 6107, \"coverage\": 2418, \"pelosi\": 657, \"pool\": 658, \"building\": 6108, \"04-05-\": 2419, \"arianna\": 659, \"profits\": 6109, \"@hollyrpeete\": 6110, \"since\": 2459, \"month\": 660, \"religious\": 661, \"monty\": 662, \"carpet\": 6111, \"griffin\": 6112, \"referring\": 2420, \"@natashaownfan\": 663, \"health\": 6113, \"very\": 464, \"horror\": 664, \"rogue\": 467, \"balancing\": 6114, \"minded\": 2422, \"decide\": 665, \"heaven\": 475, \"10-06-\": 666, \"->\": 4247, \"i'll\": 6115, \"instagram\": 667, \"fence\": 6116, \"streets\": 4062, \"unheard\": 4248, \"investing\": 668, \"apologized\": 2423, \"learned\": 669, \"turmoil\": 6117, \"iran\": 4249, \"loose\": 4250, \"answers\": 2424, \"iraq\": 4251, \"respect\": 7010, \"05-17-\": 6119, \"arena\": 670, \"invitational\": 4252, \"ahead\": 2427, \"inspired\": 672, \"losses\": 673, \"soldier\": 2428, \"amount\": 6120, \"advertising\": 674, \"rory\": 2429, \"@8\": 6121, \"inspires\": 675, \"family\": 4253, \"donnie\": 2430, \"ask\": 2463, \"analyzing\": 6123, \"trained\": 6124, \"@tedcruz\": 396, \"khan\": 4255, \"takes\": 4256, \"amaze\": 6450, \"@donlemon\": 2431, \"taken\": 4257, \"\\u263a\": 2433, \"fiat\": 6126, \"excuse\": 4258, \"broke\": 548, \"factories\": 2446, \"producing\": 677, \"helped\": 6760, \"\\u2764\": 6127, \"pataki\": 4259, \"@robin1260\": 556, \"offended\": 4260, \"nebraska\": 559, \"nine\": 2435, \"history\": 4261, \"hhs\": 2436, \"747\": 678, \"boycott\": 6129, \"pushed\": 2437, \"@haloonefortrump\": 679, \"#votefortrump\": 573, \"longest\": 7077, \"stayed\": 6130, \"@innovember2012\": 3013, \"@diannelea1958\": 2438, \"schultz\": 681, \"rapists\": 2439, \"fr\": 2440, \"ft\": 2441, \"13:24\": 682, \"13:27\": 683, \"13:28\": 684, \"#golf\": 6133, \"sneak\": 4263, \"breitbart\": 2442, \"09-11-\": 685, \"heartbeat\": 6154, \"invasion\": 4265, \"rudy\": 6135, \"fl\": 609, \"a\": 6136, \"@shortcakessheep\": 6137, \"criticize\": 686, \"anytime\": 4179, \"renewing\": 2443, \"ego\": 6139, \"banks\": 4266, \"dream\": 4267, \"@mikeanddawnny\": 6140, \"help\": 4268, \"\\udf89\": 6141, \"10-21-\": 4269, \"sooo\": 4270, \"soon\": 4271, \"bcuz\": 689, \"held\": 4272, \"wiener\": 4273, \"committee\": 6142, \"@chriscuomo\": 2445, \"helm\": 4274, \"hell\": 4275, \"dummies\": 6144, \"11,9\": 4276, \"taxpayer\": 4843, \":p\": 5522, \"@gameanew\": 4277, \"actually\": 6145, \"charlottesville\": 6146, \"@deannaspillyard\": 4278, \"haven't\": 690, \"fool\": 2447, \"evening\": 691, \"motivated\": 6149, \"ya\": 4279, \"00:11\": 4280, \"00:13\": 4281, \"00:15\": 4282, \"anticipated\": 4213, \"#gopdebate\": 4216, \"motivates\": 6150, \"you've\": 4284, \"@jordanspieth\": 633, \"yr\": 4285, \"terrorism\": 5864, \"@annettenavaret\": 693, \"desperately\": 2449, \"@nicktryit\": 5265, \"@trumpgolfla\": 694, \"capability\": 2451, \"stopped\": 4287, \"#cnn\": 2452, \"@omarosa\": 4288, \"isn't\": 2453, \"referred\": 2454, \"heavy\": 696, \"neil\": 2455, \"@paulmanafort\": 4289, \"blank\": 3419, \"wacky\": 2456, \"todd\": 6151, \"wacko\": 2457, \"beyond\": 653, \"event\": 654, \"@knight276\": 4291, \"robert\": 2458, \"surrounded\": 4292, \"douglas\": 4244, \"safety\": 4245, \"7\": 697, \"@chingaling3\": 2460, \"issue\": 4293, \"@fallontonight\": 4294, \"ass\": 2461, \"rude\": 6132, \"houses\": 699, \"reason\": 4295, \"base\": 2462, \"brightest\": 700, \"put\": 676, \"turnout\": 701, \"bash\": 2464, \"launch\": 4296, \"terrible\": 6152, \"americas\": 702, \"07-15-\": 2465, \"american\": 703, \"discredited\": 1242, \"businessmen\": 6153, \"lassner\": 6894, \"scheduled\": 5736, \"syria\": 4264, \"dominating\": 4297, \"miss\": 6155, \"wonderful\": 4366, \"@amuller65\": 704, \"scheme\": 4298, \"selling\": 4299, \"passed\": 7062, \"jordan\": 2468, \"@tmplusii\": 4300, \"apprentice\": 4307, \"@peggynoonannyc\": 6156, \"11:45\": 104, \"assaulted\": 705, \"greg\": 706, \"toward\": 707, \"builder\": 1243, \"charlotte\": 708, \"texans\": 2469, \"@thelastrefuge2\": 4301, \"gov't\": 2470, \"karl\": 740, \"lie\": 742, \"lib\": 6159, \"lil\": 745, \"scotland\": 6160, \"officers\": 4302, \"useless\": 6161, \"club\": 6024, \"aired\": 709, \"hotel\": 3785, \"quote\": 2471, \"howard's\": 2472, \"anniversary\": 7048, \"hired\": 710, \"approved\": 6162, \"viciously\": 2473, \"mobile\": 6163, \"@destiny\": 711, \"wasserman\": 2474, \"clean\": 6165, \"usual\": 4304, \"tubes\": 712, \"celebrities\": 6166, \"arming\": 6770, \"self-funding\": 4305, \"duncan\": 4306, \"justice\": 713, \"flights\": 6167, \"pretty\": 2475, \"officials\": 819, \"@intheelections\": 2476, \"feels\": 714, \"grew\": 4308, \"10:46\": 814, \"during\": 2477, \"10:48\": 6171, \"@borntobegop\": 715, \"tmobile\": 2478, \"sacrifices\": 2479, \"x\": 6172, \"patriotism\": 716, \"throwing\": 6173, \"culture\": 717, \"close\": 718, \"@stevescalise\": 2480, \"tahmooressi\": 2481, \"pictures\": 719, \"wow\": 2482, \"won\": 2483, \"durst\": 2484, \"conditions\": 4311, \"01-20-\": 2485, \"missing\": 720, \"unstoppable\": 6175, \"ranked\": 721, \"@marcorubio\": 4312, \"league\": 722, \"@thequote\": 1898, \"wouldn't\": 723, \"@bluejoni\": 724, \"sensitive\": 6177, \"forgotten\": 725, \"@davidbougs\": 726, \"@ny_police\": 727, \"06-14-\": 6178, \"@foxbusiness\": 6179, \"liked\": 2487, \"jeff\": 4313, \"whatever\": 6181, \"likes\": 2488, \"\\ude09\": 7069, \"damn\": 4314, \"maintenance\": 2489, \"threaten\": 729, \"territory\": 6182, \"empty\": 730, \"sanders\": 2490, \"dialogue\": 6184, \"lived\": 731, \"@doralresort\": 732, \"#scotland\": 6459, \"else\": 2491, \"anthony\": 866, \"lives\": 733, \"05-11-\": 734, \"12-16-\": 735, \"pact\": 736, \"look\": 4315, \"socialist\": 4316, \"governor\": 2493, \"while\": 6186, \"smart\": 737, \"@mittromney\": 2494, \"@hoppmar\": 2495, \"guide\": 4459, \"pack\": 738, \"10000\": 4317, \"voters\": 2496, \"hoax\": 4318, \"ready\": 4319, \"anymore\": 2497, \"grand\": 741, \"conflict\": 4320, \"used\": 2498, \"lawyers\": 6190, \"@jaketapper\": 1079, \"ratings\": 6158, \"#amazing\": 2500, \"000\": 743, \"uses\": 897, \"@whitehouse\": 4490, \"brussels\": 2501, \"poland\": 6191, \"increases\": 5871, \"obviously\": 744, \"@justariot66\": 2502, \"reclaim\": 1843, \"savvy\": 6193, \"@trumplasvegas\": 746, \"yankees\": 6194, \"ambassador\": 905, \"@bentleyfortrump\": 6195, \"#economy\": 2503, \"04-13-\": 3705, \"praying\": 2504, \"@joelleangeli\": 4322, \"\\u27a1\": 2505, \"$\": 2506, \"guaranteed\": 2508, \"barack\": 2509, \"@1muskyhunter\": 747, \"@ricardorossello\": 748, \"@doug_e_fresh2\": 4526, \"remaining\": 4323, \"...\": 2510, \"marco\": 2511, \"march\": 2512, \"#trumppence16\": 2513, \"@jsilva74366572\": 2514, \"prefer\": 5532, \"showing\": 749, \"13:03\": 2515, \"13:00\": 2516, \"game\": 4324, \"09-13-\": 2517, \"dearly\": 750, \"@belllabooo13\": 751, \"08-27-\": 4325, \"@rjispy\": 2518, \"toyota\": 6199, \"donny\": 2519, \"donna\": 2520, \"@howardkurtz\": 6200, \"popular\": 753, \"weiner\": 4326, \"fathers\": 6202, \"fake\": 3709, \"some\": 6203, \"economic\": 754, \"@buffalobills\": 6204, \"delivered\": 4328, \"11-19-\": 756, \"civilization\": 2521, \"#wisconsin\": 6205, \"claimed\": 6761, \"run\": 2522, \"benefactor\": 757, \"step\": 4329, \"04-24-\": 2523, \"wealth\": 4570, \"shine\": 4331, \"faith\": 2524, \"wouldnt\": 759, \"congressman\": 4332, \"silence\": 4590, \"seeing\": 2525, \"19:03\": 760, \"19:02\": 1316, \"@kerrygold1914\": 4333, \"19:07\": 4595, \"dude\": 4572, \"within\": 4334, \"nonsense\": 4335, \"paulina\": 6776, \"..\": 4337, \"accountability\": 2527, \"achievement\": 7075, \"heritage\": 2528, \"himself\": 2529, \"registered\": 6209, \"inept\": 4338, \"20:26\": 3111, \"properly\": 4339, \"authority\": 4908, \"russian\": 2530, \"info\": 6210, \"chelsea\": 4340, \"clear\": 6164, \"@onesoldiersmom\": 764, \"ordered\": 765, \"#celebapprentice\": 2531, \"doesn\": 2532, \"@kaeladianne97\": 4341, \"amounts\": 766, \"politicians\": 2533, \"department\": 767, \"manhattan\": 768, \"draw\": 6211, \"@pepsidaisy\": 769, \"kansas\": 6212, \"resign\": 6213, \"regulations\": 4342, \"@mensamamma\": 6214, \"e\": 770, \"practically\": 6215, \"required\": 2534, \"turbines\": 771, \"@et614\": 5242, \"everywhere\": 3711, \"requires\": 2536, \"@oreillyfactor\": 773, \"dvr\": 774, \"gw\": 2537, \"@maggie101956\": 4096, \"farms\": 6217, \"ga\": 2538, \"go\": 2539, \"psycho\": 4344, \"tweeted\": 776, \"kate\": 4345, \"@apprenticenbc\": 777, \"13:35\": 5244, \"arrogance\": 4685, \"@david_cameron\": 4347, \"suite\": 4348, \"friendly\": 778, \"g7\": 833, \"miners\": 4349, \"facebook\": 6218, \"telling\": 779, \"08-04-\": 780, \"positions\": 781, \"button\": 6219, \"compassionate\": 782, \"michael\": 783, \"ryan\": 784, \"verdict\": 1116, \"#icymi\": 6220, \"barbara\": 4350, \"proof\": 7141, \"carter\": 6221, \"jump\": 786, \"picked\": 4351, \"plays\": 6222, \"@gillibean8514\": 4352, \"cell\": 6223, \";\": 2543, \"tournaments\": 6224, \"@itsryanhilton\": 2544, \"stance\": 2546, \"commercial\": 4353, \"fla\": 6469, \"focused\": 1142, \"making\": 6225, \"products\": 2547, \"weren't\": 6226, \"wig\": 4783, \"09-30-\": 787, \"hosp\": 6778, \"danger\": 6227, \"win\": 4354, \"clout\": 2550, \"@trumpcollection\": 2551, \"\\u2714\": 4355, \"#taxreform\": 4356, \"crap\": 4357, \"remains\": 4358, \"11-03-\": 6228, \"camera\": 788, \"jonathan\": 4359, \"1/2\": 2552, \"started\": 4360, \"becomes\": 6229, \"#americafirst\": 6230, \"fuck\": 992, \"@seanhannity\": 4361, \"#rolemodel\": 6779, \"pocahontas\": 4362, \"appointed\": 790, \"@mjosephsheppard\": 6231, \"announcing\": 6232, \"sanctions\": 6233, \"ride\": 1181, \"10-02-\": 4364, \"drops\": 2554, \"potus\": 4365, \"06-16-\": 792, \"control\": 6234, \"links\": 793, \"admirer\": 115, \"escaped\": 2555, \"pulling\": 794, \"hit\": 6235, \"10:37\": 5689, \"@malachinorris\": 4367, \"africans\": 6236, \"located\": 2557, \"blessings\": 6781, \"@craigdevlin\": 2558, \"farm\": 796, \"@jdickerson\": 4368, \"chiefs\": 1208, \"#savethiscountry\": 1210, \"@neneleakes\": 2559, \"famous\": 5971, \"10:40\": 6169, \"07-29-\": 2560, \"10:41\": 3353, \"agenda\": 2561, \"healthcare\": 2562, \"@bbcoachkk\": 2563, \"fastest\": 5248, \"including\": 4882, \"@brithume\": 6170, \"@barackobama\": 2564, \"newsweek\": 2565, \"05-13-\": 2566, \"\\udcaf\": 4369, \"him\": 7078, \"04-07-\": 4309, \"hands\": 4370, \"front\": 6240, \"masters\": 6241, \"university\": 797, \"@sia\": 6242, \"crossing\": 4371, \"shaking\": 4372, \"|\": 798, \"#tump2016\": 2568, \"globe\": 6244, \"hlp\": 6245, \"measure\": 6246, \"margins\": 4373, \"special\": 799, \"secretly\": 2569, \"@tomnocera\": 6247, \"entertainment\": 800, \"critics\": 6477, \"cause\": 4940, \"one's\": 2570, \"reacts\": 2571, \"delegates\": 801, \"attending\": 6248, \"completely\": 4374, \"ect\": 2572, \"@kwrcrow\": 802, \"conservatives\": 1281, \"08-25-\": 1284, \"wrestlemania\": 6249, \"hostile\": 4375, \"florida\": 6250, \"times\": 803, \"10-25-\": 804, \"powerful\": 805, \"@karentalk\": 4376, \"lyin'ted\": 4377, \"art\": 7079, \"quality\": 6253, \"hiding\": 5880, \"you're\": 806, \"management\": 4378, \"revealed\": 3723, \"relations\": 6254, \"09-15-\": 4379, \"clinton's\": 2575, \"attack\": 2576, \"perfectly\": 4380, \"final\": 6255, \"@spidersteve1977\": 6256, \"greta\": 4381, \"@robertpatrickmc\": 2578, \"exactly\": 6257, \"manipulation\": 4996, \"overwhelming\": 2580, \"herself\": 2581, \"ben\": 2582, \"beg\": 2583, \"bed\": 2584, \"@jebburtonracing\": 6258, \"@kylemccall4\": 808, \"distinguished\": 2586, \"bet\": 2587, \"@nro\": 2588, \"19:27\": 2589, \"@adamscott\": 4815, \"19:24\": 2590, \"19:23\": 2591, \"@nra\": 2592, \"goldberg\": 6260, \"@gstephanopoulos\": 6261, \"need\": 6262, \"border\": 2593, \"screw\": 6264, \"bastard\": 810, \"able\": 6265, \"blades\": 811, \"nytimes\": 812, \"african\": 6482, \"regs\": 813, \"intentions\": 4384, \"montana\": 2594, \"@meetthepress\": 6266, \"dishonest\": 5039, \"consequences\": 2595, \"upset\": 6267, \"businessman\": 2596, \"07,6\": 4385, \"impression\": 6269, \"violation\": 4386, \"#success\": 5066, \"anyway\": 2597, \"@amazon\": 2598, \"soldiers\": 6270, \"partners\": 4387, \"based\": 4388, \"tire\": 4389, \"(\": 4391, \"@jimmyfallon\": 2599, \"winner\": 1386, \"inherited\": 815, \"achieve\": 816, \"crumbling\": 2600, \"michigan\": 6271, \"120\": 2601, \"121\": 2602, \"122\": 2603, \"124\": 2604, \"125\": 2605, \"126\": 2606, \"@pamking8628\": 4392, \"endless\": 4393, \"@chucklane1\": 4594, \"course\": 5548, \"tuned\": 817, \"she\": 2607, \"dangerous\": 6790, \"preach\": 2608, \"prayers\": 2609, \"shake\": 6274, \"immigrant\": 818, \"legacy\": 2610, \"desperate\": 4394, \"lot's\": 4395, \"luv\": 2611, \"nightmare\": 821, \"macron\": 822, \"written\": 2612, \"correctly\": 2613, \"horrible\": 2614, \"tens\": 823, \"neither\": 2615, \"@newday\": 4396, \"importance\": 6276, \"kicking\": 824, \"key\": 5131, \"approval\": 1441, \"maga\": 5142, \"@chriswerner1988\": 4397, \"admin\": 4398, \"10pme\": 7085, \"minds\": 6279, \"admit\": 4399, \"jersey\": 2617, \"opposition\": 7086, \"tuesday\": 827, \"supreme\": 6792, \"@jeremyhl\": 5163, \"competent\": 2618, \"quit\": 4401, \"yay\": 4402, \"@hbo\": 828, \"addition\": 2619, \"deaths\": 6793, \"cent\": 829, \"cowards\": 4403, \"liberals\": 830, \"treat\": 6280, \"07:57\": 831, \"@trumpsoho\": 2620, \"senses\": 6281, \"controlled\": 832, \"both\": 6176, \"vince\": 4404, \"releasing\": 2621, \"#weneedyou\": 4405, \"pie\": 6795, \"tweets\": 6486, \"hamburg\": 6282, \"kicks\": 2622, \"harder\": 6283, \"inaccurately\": 2623, \"owns\": 2624, \"presedent\": 6284, \"dems\": 4406, \"#hof\": 4407, \"tapper\": 6285, \"11-01-\": 834, \"strange\": 4408, \"speaker\": 836, \"party\": 837, \"tapped\": 6286, \"http\": 838, \"04-16-\": 2625, \"effect\": 6287, \"impeccable\": 839, \"destruction\": 840, \"energized\": 2626, \"i\": 2627, \"@oates_tom\": 4926, \"well\": 4410, \"finds\": 7089, \"mccabe\": 6289, \"47\": 842, \"restore\": 6290, \"accurate\": 2628, \"dose\": 4411, \"@aplemonlemon\": 5249, \"sources\": 6292, \"mistakes\": 4412, \"\\u2014\": 2629, \"coordination\": 1550, \"@heelshoops23\": 2630, \"headed\": 6180, \"mcconnell\": 6293, \"killed\": 2631, \"nato\": 2632, \"kick\": 2633, \"fate\": 2634, \"utah\": 6294, \"historic\": 2635, \"immediately\": 4413, \"07-27-\": 5270, \"loss\": 844, \"@kathykphillips\": 412, \"necessary\": 846, \"lost\": 847, \"@edandbev\": 848, \"clown\": 4414, \"payments\": 849, \"lose\": 850, \"refugees\": 4415, \"page\": 4416, \"twitter\": 6296, \"cleveland\": 2636, \"home\": 851, \"liking\": 2637, \"peter\": 4417, \"competitor\": 4418, \"e-mail\": 4419, \"philadelphia\": 5640, \"?\": 4420, \"inaccurate\": 4421, \"ps\": 3449, \"journal\": 4422, \"outlets\": 434, \"@alexsalmond\": 6298, \"sheriffs\": 4424, \"choked\": 2638, \"@michmusm\": 6299, \"freedom\": 4425, \"@jenconservative\": 853, \"#media\": 2639, \"@welovethedonald\": 6300, \"glenn\": 4426, \"washington\": 4427, \"@catham11\": 6301, \"mississippi\": 2640, \"additional\": 854, \"museum\": 6302, \"wimp\": 4428, \"threat\": 7061, \"03-19-\": 6303, \"north\": 5347, \"@espn\": 6304, \"11-22-\": 4429, \"hi\": 2642, \"goals\": 5353, \"courts\": 4430, \"08-23-\": 5356, \"ha\": 2643, \"eat\": 4431, \"he\": 2644, \"hosting\": 6305, \"signed\": 6306, \"stories\": 4432, \"pumped\": 6307, \"#sharktank\": 4433, \"piece\": 1659, \"display\": 858, \"penny\": 6309, \"twist\": 2645, \"beats\": 859, \"@thetinabeast\": 6310, \"education\": 860, \"eric\": 4434, \"diego\": 4435, \"@thisweekabc\": 861, \"contest\": 6311, \"@lord_sugar\": 2646, \"mar-a-lago\": 862, \"@foxnews\": 4436, \"star\": 863, \"@mypresidentme\": 4437, \"stay\": 864, \"@sparkleawin\": 865, \"friends\": 4438, \"samsung\": 867, \"persistent\": 4439, \"determination\": 6185, \"todays\": 6312, \"demand\": 1556, \"dynamic\": 2647, \"obstruction\": 6313, \"protest\": 1701, \"01:39\": 4441, \"01:38\": 5407, \"01:34\": 4442, \"01:37\": 4443, \"01:36\": 4444, \"01:30\": 4445, \"whose\": 4446, \"fronts\": 2648, \"sorry\": 868, \"@breitbartnews\": 2649, \"rescue\": 2650, \"stolen\": 7091, \"01-09-\": 4031, \"courageous\": 6315, \"vast\": 4447, \"@toddinwichita\": 7073, \"skills\": 6316, \"companies\": 2652, \"solution\": 2653, \"@johnnydollar01\": 5445, \"employees\": 6411, \"heading\": 2654, \"9pm\": 2655, \"@seankesser\": 2656, \"force\": 6317, \"10b\": 4449, \"12-08-\": 869, \"rodman\": 5450, \"japanese\": 6318, \"across\": 1039, \"likely\": 5452, \"even\": 6320, \"spouses\": 2658, \"wreck\": 4450, \"hate\": 4451, \"panama\": 6321, \"asia\": 6322, \"lights\": 1766, \"214\": 5623, \"omarosa\": 4452, \"new\": 2659, \"net\": 2660, \"gillespie\": 1267, \"ever\": 6324, \"relationships\": 5896, \"@blewthebigone\": 131, \"men\": 870, \"votes\": 5897, \"drew\": 2662, \"met\": 871, \"108\": 4453, \"11:26\": 5744, \"\\udc4f\": 5561, \"@joenbc\": 872, \"102\": 4454, \"103\": 4455, \"100\": 4456, \"101\": 4457, \"104\": 4458, \"@realdonaldtrump\": 6327, \"luther\": 6328, \"tapes\": 6329, \"economics\": 5477, \"ignoring\": 5481, \"credit\": 4460, \"@trumpnewmedia\": 873, \"chrysler\": 874, \"\\u00ab\": 4936, \"fantastic\": 875, \"campaign\": 6330, \"reagan\": 2664, \"county\": 2665, \"moral\": 6331, \"guests\": 877, \"costly\": 739, \"counts\": 2666, \"criminals\": 4461, \"army\": 6332, \"arms\": 6333, \"donaldtrump's\": 878, \"leaks\": 4462, \"call\": 6334, \"calm\": 6335, \"recommend\": 2667, \"survive\": 879, \"type\": 2668, \"tell\": 2669, \"snowden\": 4463, \"@kissangel864\": 2671, \"supporters\": 1826, \"@ericnlin\": 2672, \"oscar\": 4464, \"expose\": 2673, \"wars\": 4465, \"#hannity\": 4466, \"disruption\": 880, \"warm\": 4467, \"14:03\": 5567, \"room\": 5523, \"rights\": 2674, \"roof\": 881, \"movies\": 882, \"give\": 2675, \"laughs\": 6336, \"degenerate\": 6337, \"#celebrityapprentice\": 4010, \"amazing\": 883, \"answer\": 6339, \"massive\": 5566, \"@peter_bollini\": 4468, \"@jeffzeleny\": 884, \"vicious\": 6689, \"thankyou\": 6341, \"president\": 4469, \"purchase\": 1876, \"attempt\": 4470, \"third\": 885, \"@flotus\": 4471, \"recieved\": 4472, \"capitalism\": 6343, \"maintain\": 6344, \"capitalist\": 6345, \"first\": 6346, \"athletes\": 886, \"operations\": 1891, \"unnamed\": 5564, \"@realjameswoods\": 2678, \"before\": 887, \"pharma\": 2679, \"personal\": 888, \",\": 6347, \"crew\": 889, \"better\": 6348, \"@katyturnbc\": 6349, \"06-29-\": 4473, \"weeks\": 4474, \"cred\": 890, \"pleasurable\": 6350, \"donors\": 6351, \"combination\": 891, \"06-12-\": 4475, \"04-14-\": 4476, \"01-26-\": 892, \"02:41\": 5620, \"\\ude0e\": 893, \"02:49\": 4477, \"02:48\": 4478, \"rhetoric\": 2680, \"grammar\": 6353, \"arrested\": 894, \"lucy\": 2681, \"#american\": 2682, \"victories\": 6354, \"roast\": 4479, \"went\": 6355, \"@realitytvbliss\": 7074, \"side\": 4480, \"bone\": 4481, \"luck\": 2683, \"@ron_fournier\": 6356, \"principles\": 6357, \"indianapolis\": 6189, \"forgot\": 895, \"navy\": 4484, \"extract\": 6359, \"nicklaus\": 2684, \"mccarthy\": 2685, \"@njunger_19\": 2686, \"surprise\": 2687, \"venezuela\": 896, \"delegate\": 5904, \"assaults\": 1959, \"fave\": 4485, \"05-31-\": 4486, \"starts\": 6361, \"messages\": 2689, \"isn\": 2690, \"signature\": 6362, \"@jsager84\": 4488, \"07-25-\": 6364, \"loud\": 2691, \"stewart\": 2692, \"features\": 4489, \"grade\": 6365, \"zell\": 2693, \"hook\": 2694, \"hood\": 2695, \"@theviewtv\": 4491, \"girls\": 2696, \"witnessing\": 6368, \"#trumpadvice\": 6369, \"hollywood\": 4492, \"#fitn\": 6370, \"@kevinjonas\": 6371, \"somewhat\": 6372, \"begins\": 898, \"matter\": 2697, \"fabulous\": 4942, \"spoiled\": 6373, \"sees\": 4493, \"modern\": 4494, \"#donald\": 4495, \"mine\": 4496, \"@lovely_laura21\": 4497, \"seen\": 4498, \"seem\": 4499, \"seek\": 4500, \"tells\": 899, \"gabriela\": 900, \"#trumparmy\": 6375, \"shawn\": 139, \"chess\": 6376, \"shining\": 4501, \"@justinrose99\": 901, \"quarterback\": 5750, \"@kenyamoore\": 2698, \"@lmowle\": 4502, \"11-24-\": 6378, \"mario\": 902, \"regular\": 4503, \"maria\": 903, \"reimbursement\": 4504, \"don\": 4505, \"medical\": 2699, \"m\": 4506, \"dog\": 4507, \"points\": 2700, \"consumer\": 4508, \"dow\": 4509, \"beaten\": 3145, \"retire\": 2088, \"57,4\": 906, \"ending\": 6381, \"02:00\": 6382, \"nevada\": 6383, \"judges\": 2701, \"08-21-\": 2097, \"explain\": 4510, \"sugar\": 4511, \"here's\": 6505, \"folks\": 4512, \"bahrain\": 2104, \"stop\": 2703, \"coast\": 4513, \"@crazymamaa\": 1880, \"christopher\": 907, \"14,12\": 2705, \"08:43\": 6385, \"earn\": 908, \"bar\": 6386, \"fields\": 2706, \"bay\": 6387, \"bad\": 2114, \"favors\": 3745, \"ban\": 6388, \"spineless\": 5714, \"decides\": 4514, \"fascinating\": 4515, \"testing\": 5825, \"01:19\": 6389, \"decided\": 4516, \"01:17\": 6391, \"01:16\": 6392, \"01:15\": 6393, \"subject\": 4517, \"pete\": 5830, \"00\": 4518, \"said\": 6396, \"@jijassim\": 6397, \"inappropriate\": 6398, \"08\": 5836, \"#gotrump\": 909, \"olympics\": 6399, \"sorts\": 2708, \"warrior\": 4519, \"lazy\": 4520, \"omg\": 910, \"wears\": 911, \"dumber\": 2709, \"ignorance\": 6400, \"383\": 4521, \"picking\": 2711, \"10-16-\": 6402, \"@mattginellagc\": 2712, \"obamas\": 6403, \"12-06-\": 2713, \"#thecelebrityapprentice\": 6404, \"hardworking\": 6405, \"arsenio\": 4056, \"springs\": 2714, \"administrations\": 2715, \"sam\": 5575, \"asks\": 912, \"basis\": 913, \"three\": 6406, \"tiny\": 914, \"commission\": 915, \"interest\": 916, \"basic\": 917, \"entered\": 918, \"lovely\": 919, \"idol\": 4524, \"website\": 4525, \"#fakenews\": 6263, \"prosperous\": 6407, \"ailsa\": 920, \"sooooo\": 921, \"tapping\": 6408, \"personally\": 5894, \"@ew\": 2718, \"160\": 6409, \"162\": 6410, \"unpopular\": 922, \"tank\": 2719, \"ugly\": 923, \"near\": 2720, \"anchor\": 2721, \"seven\": 5912, \"@dnorrell\": 4528, \"iq\": 2722, \"is\": 2723, \"it\": 2724, \"defeated\": 4529, \"shame\": 2725, \"cant\": 924, \"im\": 2726, \"in\": 2727, \"ia\": 2728, \"id\": 2729, \"if\": 2730, \"13:09\": 925, \"saw\": 5578, \"make\": 4530, \"potentially\": 6413, \"14:49\": 926, \"14:42\": 927, \"grows\": 6415, \"entitled\": 4531, \"governors\": 6416, \"\\udc51\": 4532, \"kim\": 5939, \"jealous\": 2731, \"opportunity\": 4533, \"he'll\": 6418, \"thoughts\": 6419, \"kid\": 4534, \"programs\": 928, \"changes\": 6810, \"youre\": 930, \"@houstongunn\": 4535, \"@samcgirl\": 6420, \"qualities\": 6421, \"14,7\": 931, \"claims\": 6422, \"14,5\": 932, \"yours\": 933, \"@hdiallo\": 6198, \"just\": 6424, \"wasteful\": 4536, \"yea\": 934, \"@hughhewitt\": 1420, \"unfair\": 6427, \"fighters\": 935, \"human\": 4538, \"facts\": 2732, \"yep\": 936, \"yes\": 937, \"#gotmyvote\": 5581, \"yet\": 938, \"#nyc\": 939, \"candidate\": 6428, \"legion\": 5966, \"character\": 4539, \"justices\": 2733, \"save\": 940, \"@lovusa4\": 2734, \"sailors\": 941, \"background\": 6429, \"wanting\": 5583, \"govt\": 2735, \"dreams\": 1612, \"vanity\": 6430, \"dignity\": 4541, \"02-13-\": 5981, \"thank-you\": 942, \"unnecessary\": 4542, \"@jencromartie\": 2736, \"@howardstern\": 943, \"@theeconomist\": 4543, \"@billrancic\": 2737, \"dean\": 944, \"deal\": 945, \"dead\": 946, \"wwe\": 2738, \"jupiter\": 947, \"@stuartpstevens\": 948, \"dear\": 949, \"@marklevinshow\": 4544, \"opposite\": 144, \"@bestbergerever\": 4545, \"drudge\": 6008, \"11-05-\": 4546, \"jinping\": 2186, \"bold\": 6432, \"@chuffman48\": 2187, \"predicting\": 950, \"10-08-\": 2742, \"super\": 1222, \"mr.trump\": 2744, \"@ir7dj2\": 2745, \"icahn\": 4629, \"magazine\": 951, \"afternoon\": 952, \"islands\": 2746, \"nerve\": 2747, \"whats\": 4547, \"lied\": 6435, \"negative\": 2748, \"down\": 953, \"lies\": 6436, \"@igotangeleyes\": 954, \"tennis\": 955, \"victorious\": 4548, \"editor\": 956, \"fraction\": 957, \"20:31\": 455, \"form\": 2750, \"fireworks\": 2751, \"landing\": 958, \"ford\": 2752, \"failure\": 4549, \"@danscavino\": 959, \"surrender\": 6065, \"fort\": 2753, \"univision\": 6457, \"@justsoldcom\": 4550, \"builds\": 6437, \"daddy\": 2754, \"07-23-\": 960, \"kaine\": 961, \"strengthening\": 962, \"classic\": 2755, \"covers\": 6440, \"sale\": 5587, \"ship\": 2372, \"#trump2016\": 2756, \"shit\": 2757, \"handel\": 6441, \"agreeing\": 4551, \"handed\": 6442, \"@bahia6085\": 4552, \"05-19-\": 964, \"dies\": 2758, \"felt\": 2759, \"fell\": 2663, \"authorities\": 2760, \"weekend\": 967, \"died\": 2762, \"billion\": 2763, \"@sashamajerovsky\": 968, \"happening\": 969, \"apology\": 6444, \"assume\": 2764, \"daily\": 6445, \"21:43\": 970, \"premiums\": 2415, \"12-29-\": 971, \"restored\": 972, \"bombed\": 2421, \"manager\": 4554, \"mile\": 6448, \"skin\": 2766, \"@amspec\": 4555, \"playoffs\": 1024, \"21st\": 973, \"\\udfa5\": 2425, \"father\": 974, \"disgusting\": 6449, \"0\": 975, \"finally\": 6451, \"praised\": 2432, \"marks\": 2767, \"suffered\": 4556, \"shoot\": 4557, \"@mrinsaf\": 976, \"11-26-\": 977, \"billionaire\": 2768, \"lynch\": 6748, \"join\": 4558, \"did\": 6452, \"die\": 6453, \"democrat\": 4559, \"bikers\": 6454, \"round\": 978, \"it'll\": 4560, \"@tsrowan\": 2769, \"talked\": 979, \"villa\": 6455, \"dealing\": 980, \"12:28\": 4561, \"12:29\": 4562, \"12:26\": 4563, \"12:27\": 4564, \"12:25\": 4565, \"majors\": 981, \"afghanistan\": 6456, \"@kristinaoakes\": 2771, \"suspect\": 6168, \"#dubai\": 982, \"international\": 983, \"filled\": 984, \"palmer\": 7109, \"mr\": 3160, \"wait\": 6458, \"box\": 6183, \"boy\": 985, \"hbo\": 4566, \"canadian\": 6460, \"institute\": 6461, \"shift\": 4567, \"08:27\": 986, \"women\": 7137, \"priceless\": 2772, \"bob\": 987, \"genuinely\": 2773, \"elect\": 4568, \"merely\": 6197, \"09-06-\": 4569, \"patriots\": 6201, \"hotels\": 6206, \"everybody\": 6462, \"troops\": 2774, \"sharper\": 6463, \"sake\": 988, \"03-04-\": 4571, \"visit\": 989, \"france\": 6464, \"@jaayzen\": 2775, \"insider\": 2776, \"@imill5\": 4573, \"@hashtag1usa\": 4330, \"thru\": 138, \"sharing\": 6465, \"downtown\": 6466, \"savior\": 2777, \"effort\": 2778, \"fly\": 6467, \"10-14-\": 990, \"pageant\": 2779, \"soul\": 6468, \"reviews\": 4574, \"wallet\": 2780, \"9th\": 2545, \"sky\": 7196, \"growing\": 2781, \"flunky\": 991, \"claim\": 2548, \"crazy\": 2549, \"plaza\": 1575, \"12-04-\": 4575, \"kenneth\": 4576, \"predict\": 6470, \"winston\": 4577, \"confused\": 4578, \"agent\": 6471, \"council\": 4579, \"dennis\": 993, \"@007llisav\": 7112, \"@fastfranky5\": 4580, \"nys\": 6472, \"@elginet\": 6474, \"till\": 2783, \"sunday\": 2784, \"pure\": 2785, \"21:54\": 2567, \"sworn\": 2786, \"pathway\": 2787, \"08-13-\": 4951, \"staying\": 6476, \"mar\": 4581, \"may\": 4582, \"@hmunjal\": 994, \"snl\": 995, \"mac\": 4583, \"mad\": 4584, \"mag\": 4585, \"destructive\": 4586, \"guys\": 2788, \"grow\": 2789, \"man\": 4587, \"23:59\": 2579, \"17,12\": 2790, \"neck\": 4588, \"johnson\": 4589, \"23:53\": 6478, \"maybe\": 2585, \"23:57\": 3477, \"23:55\": 6479, \"q\": 6480, \"macys\": 2192, \"switch\": 6481, \"jail\": 2791, \"block\": 6207, \"unleash\": 4591, \"talk\": 4592, \"cute\": 2792, \"shoes\": 996, \"disclosure\": 6208, \"wishing\": 4593, \"o's\": 997, \"stability\": 2793, \"cuts\": 2794, \"19:05\": 761, \"#obama\": 2795, \"police\": 998, \"thank\": 6484, \"interesting\": 999, \"@markmizzousteel\": 2796, \"@stephanienap5\": 762, \"policy\": 1000, \"ours\": 6487, \"msnbc\": 2797, \"main\": 6488, \"texas\": 2798, \"finance\": 2799, \"views\": 6489, \"killer\": 2800, \"sooner\": 2801, \"lunch\": 1001, \"kkk\": 6490, \"bullshit\": 2802, \"developments\": 6491, \"beach\": 4046, \"careless\": 1002, \"maher\": 1003, \"rock\": 4596, \"@njoh1234\": 2803, \"elephants\": 1004, \"richly\": 2804, \"signage\": 4597, \"deplorables\": 4598, \"morning\": 1034, \"canada\": 4599, \"living\": 6493, \"jackson\": 4600, \"3rd\": 4601, \"condemns\": 1005, \"dominate\": 6495, \"correct\": 6496, \"monster\": 2805, \"11:56\": 4602, \"california\": 6497, \"11:50\": 4603, \"10-01-\": 7115, \"cough\": 4604, \"11:59\": 4605, \"advance\": 4606, \"02-15-\": 2806, \"language\": 2807, \"thing\": 4607, \"think\": 4608, \"waited\": 1006, \"@morning_joe\": 1007, \"@donaldjtrumpjr\": 6499, \"fleeing\": 1008, \"@veneziamatthew\": 6500, \"@macresslertech\": 1009, \"10-31-\": 4609, \"@huffingtonpost\": 2808, \"americans\": 6501, \"long\": 1579, \"suspended\": 4610, \"carry\": 2809, \"corporations\": 2810, \"sounds\": 4611, \"\\u261e\": 2811, \"little\": 4612, \"04:06\": 1010, \"anyone\": 6367, \"speaking\": 1011, \"#trump4prez\": 6502, \"eyes\": 4613, \"moscow\": 4614, \"accurately\": 2812, \"02:09\": 1012, \"hillary\": 6504, \"@cbs\": 1013, \"butt\": 4615, \"04-10-\": 1014, \"02:04\": 1015, \"02:07\": 1016, \"11\": 4616, \"10\": 4617, \"13\": 4618, \"12\": 4619, \"15\": 4620, \"14\": 4621, \"17\": 4622, \"16\": 4623, \"19\": 2889, \"18\": 4624, \"gotta\": 2813, \"protected\": 6506, \"were\": 3550, \"topics\": 4625, \"voices\": 6508, \"comedian\": 4626, \"20k\": 1017, \"kevin\": 6414, \"answering\": 6509, \"@aj_13_hulton\": 6510, \"clintons\": 2814, \"potential\": 4627, \"performance\": 1018, \"channel\": 6511, \"200\": 1019, \"205\": 1020, \"norman\": 6512, \"trace\": 2739, \"normal\": 6513, \"track\": 6514, \"midas\": 6823, \"paid\": 2815, \"insanity\": 4628, \"assault\": 1021, \"complaints\": 1022, \"cuban\": 2816, \"especially\": 6515, \"surprising\": 6516, \"07-21-\": 2817, \"jumped\": 5602, \"shop\": 4630, \"rating\": 6447, \"#potus\": 1023, \"shot\": 4631, \"show\": 4632, \"sites\": 1025, \"@carrillo_pete\": 1026, \"corner\": 4633, \"behind\": 2819, \"black\": 2820, \"travesty\": 1027, \"treasury\": 1028, \"enthusiasm\": 1029, \"awareness\": 1030, \"@shawnjohnson\": 1031, \"200000\": 1032, \"get\": 6473, \"merkel\": 7215, \"@durangorick\": 2821, \"reps\": 6518, \"#demdebate\": 6519, \"killers\": 6520, \"nearly\": 4634, \"gee\": 6483, \"mattis\": 6521, \"girl\": 6492, \"summary\": 2822, \"miles\": 1035, \"37,16\": 4636, \"37,7\": 6523, \"declared\": 1036, \"honesty\": 2823, \"37,1\": 6524, \"seat\": 1037, \"huckabee\": 2824, \"sean\": 6507, \"wonder\": 7182, \"24/7\": 6517, \"father's\": 6526, \"enough\": 1038, \"reading\": 2825, \"checks\": 2826, \"affordable\": 4637, \"infrastructure\": 1040, \"august\": 1041, \"approvals\": 1042, \"jr\": 2827, \"killing\": 2828, \"jfk\": 4638, \"according\": 2829, \"03-16-\": 4959, \"tour\": 1043, \"@timenout\": 6527, \"among\": 1044, \"12:06\": 6529, \"12:00\": 6530, \"12:01\": 6531, \"@randpaul\": 4639, \"12:09\": 6532, \"cancel\": 2831, \"considering\": 1045, \"sensible\": 4640, \"capable\": 1046, \"barry\": 2832, \"@russiannavyblog\": 1047, \"18:06\": 1048, \"borders\": 2833, \"mary\": 6534, \"@lateshow\": 2834, \"18:09\": 1050, \"educated\": 4641, \"shopping\": 6535, \"30000\": 6536, \"@elizawindso\": 2835, \"wake\": 1051, \"those\": 5764, \"sound\": 1052, \"#tedcruz\": 1053, \"@vikkitb\": 4642, \"unreported\": 2836, \"cancelled\": 1054, \"investigating\": 6587, \"margin\": 2896, \"01:59\": 2837, \"01:58\": 2838, \"01:56\": 4846, \"01:54\": 2839, \"01:53\": 2840, \"them\": 2196, \"middle\": 2841, \"01-06-\": 1299, \"obnoxious\": 6539, \"everyday\": 6540, \"par\": 2915, \"pat\": 6542, \"harsh\": 6543, \"doctor\": 6544, \"pay\": 6545, \"03-06-\": 6546, \"same\": 2843, \"@kbrocking\": 4643, \"pac\": 6547, \"speech\": 4644, \"https://t.co/qcdljff3wn\": 2927, \"pal\": 6548, \"pan\": 6549, \"jeffrey\": 4645, \"oil\": 4646, \"assist\": 1055, \"running\": 6550, \"driven\": 7000, \"totally\": 2844, \"drain\": 2845, \"10-12-\": 2846, \"largely\": 4647, \"roughly\": 4648, \"solve\": 4649, \"gates\": 6551, \"01-14-\": 4650, \"gangs\": 2847, \"12:05\": 6528, \"money\": 4651, \"@todayshow\": 2848, \"aspect\": 6552, \"kasich\": 2849, \"12-02-\": 2964, \"clueless\": 1056, \"cancer\": 2830, \"nick\": 1587, \"pile\": 4652, \"4\": 2972, \"jake\": 6652, \"schwarzenegger\": 1057, \"23:31\": 1058, \"23:32\": 1059, \"grid\": 4653, \"23:34\": 1061, \"mom\": 6553, \"23:36\": 1062, \"23:39\": 1063, \"disappointed\": 6554, \"repubs\": 2850, \"server\": 4654, \"facing\": 4655, \"audience\": 2851, \"either\": 4656, \"@drake4444444\": 1064, \"served\": 4657, \"moving\": 7098, \"onaldtrump\": 2852, \"joan\": 2853, \"booming\": 2854, \"gross\": 3012, \"14:04\": 4658, \"confirm\": 6683, \"critical\": 6556, \"@robostop10\": 6557, \"@brock2120\": 1067, \"@stephenfhayes\": 4659, \"@jenniferjjacobs\": 1068, \"broken\": 2855, \"@stdyeddyd\": 6558, \"@sstew3\": 2856, \"tease\": 2857, \"island\": 2858, \"#obamacare\": 3035, \"violence\": 6560, \"road\": 6561, \"decimated\": 2859, \"shoplifting\": 6562, \"spreading\": 3048, \"blessed\": 4660, \"airlines\": 5607, \"einstein\": 2860, \"mark\": 6533, \"17:31\": 6563, \"17:39\": 6564, \"gravis\": 6565, \"mondays\": 1069, \"@dmregister\": 1070, \"decisive\": 6566, \"03-20-\": 5608, \"mornings\": 2861, \"strikes\": 4661, \"sophisticated\": 4662, \"hurricanes\": 1071, \"@foxnewsinsider\": 1072, \"#pga\": 2862, \"wasn't\": 2863, \"@turnberrybuzz\": 5758, \"18:08\": 1049, \"02-17-\": 4664, \"06-24-\": 5609, \"#trumptrain\": 4665, \"@aberdeenshire\": 1073, \"leaked\": 2864, \"06-27-\": 2865, \"videos\": 2866, \"youtube\": 6216, \"deep\": 4666, \"general\": 4667, \"imagination\": 1074, \"@fortunemagazine\": 3382, \"file\": 4668, \"girlfriend\": 2868, \"lifetime\": 2869, \"syrian\": 4669, \"fill\": 4670, \"again\": 1075, \"drivers\": 4671, \"@asaadhutchinson\": 3100, \"field\": 2870, \"president's\": 4672, \"02:27\": 2871, \"02:26\": 2872, \"brandi\": 5174, \"02:24\": 2874, \"02:22\": 2875, \"02:21\": 3113, \"02:20\": 2876, \"students\": 2877, \"\\udc4d\": 6569, \"02:28\": 2878, \"important\": 4673, \"she's\": 2535, \"chris\": 4674, \"blasio\": 1076, \"assets\": 1077, \"@toypilavzla\": 4675, \"@soyerjanis\": 2879, \"u\": 1078, \"mean\": 5638, \"starting\": 2880, \"represent\": 2881, \"liar\": 2882, \"forget\": 6571, \"founder\": 1080, \"dollar\": 4676, \"talks\": 2883, \"children\": 6573, \"@mcuban\": 6574, \"@mikeandmike\": 4677, \"#potusabroad\": 6575, \"enjoying\": 1082, \"mandela\": 4678, \"@rushlimbaugh\": 1083, \"returning\": 4679, \"fall\": 2884, \"stacked\": 6537, \"difference\": 4680, \"norfolk\": 2885, \"mothers\": 2886, \"celebrity\": 6577, \"wsj\": 6578, \"saudi\": 2887, \"economically\": 2888, \"20th\": 1085, \"04:17\": 5610, \"zero\": 1086, \"@scott__marx\": 1087, \"lawyer\": 2890, \"@markhalperin\": 1088, \"500k\": 1089, \"further\": 6579, \"misrepresent\": 2891, \"leeza\": 1090, \"gm\": 2540, \"ribbon\": 6580, \"abc\": 6581, \"stood\": 2892, \"abe\": 6582, \"abt\": 6583, \"tribute\": 6584, \"public\": 4681, \"movement\": 6585, \"tattoos\": 3201, \"5000\": 1091, \"@politico\": 2893, \"@emmanuelmacron\": 5485, \"nation's\": 2894, \"disastrous\": 6586, \"jonas\": 3212, \"search\": 2895, \"bible\": 4682, \"airport\": 2897, \"@patrickmendeznv\": 4683, \"mentions\": 1092, \"@msvivicafox\": 4684, \"@rosie\": 6589, \"career\": 6278, \"megyn\": 2898, \"people's\": 2206, \"africa\": 1093, \"busey\": 6590, \"ricardo\": 7056, \"suits\": 4346, \"armed\": 3226, \"@savehicno1\": 2899, \"eye\": 4686, \"destination\": 6591, \"@johnrich\": 6592, \"two\": 4687, \"amenities\": 4688, \"diamond\": 6593, \"09-04-\": 6538, \"landed\": 6913, \"ain't\": 6594, \"@wwe\": 698, \"town\": 2900, \"none\": 2901, \"vladimir\": 2902, \"des\": 2903, \"sucks\": 1095, \"@dallasmavs\": 5295, \"@gatewaypundit\": 6596, \"remain\": 1096, \"del\": 2904, \"dem\": 2905, \"dec\": 2906, \"purchases\": 2907, \"compare\": 2908, \"share\": 6598, \"pro\": 5475, \"fiorina\": 2909, \"numbers\": 1097, \"purchased\": 2910, \"sharp\": 6599, \"!\": 4689, \"needs\": 1098, \"awkward\": 4690, \"acts\": 1099, \"patton\": 2912, \"mapp\": 6949, \"#2a\": 3179, \"02:14\": 5617, \"18:26\": 2913, \"02:15\": 5618, \"18:20\": 2914, \"@jahbalon\": 904, \"advice\": 4692, \"different\": 6541, \"blood\": 2916, \"coming\": 1101, \"@barbarajwalters\": 2917, \"response\": 6600, \"brady\": 1102, \"deserter\": 4693, \"tweeting\": 6601, \"coal\": 2918, \"responsibility\": 4694, \"secy\": 2919, \"pleasure\": 2920, \"playing\": 4695, \"that's\": 4696, \"09-02-\": 1103, \"heartfelt\": 1104, \"06:20\": 4697, \"setback\": 2921, \"appeals\": 4972, \"through\": 1105, \"existence\": 2923, \"suffer\": 4698, \"arrogant\": 6602, \"golfing\": 1106, \"@renhowe\": 1107, \"25\": 4700, \"26\": 4701, \"27\": 4702, \"20\": 4703, \"21\": 4704, \"22\": 4705, \"23\": 4706, \"28\": 4707, \"29\": 4708, \"late\": 2924, \"reuters\": 2925, \"penn\": 2926, \"arias\": 4709, \"hurting\": 6603, \"someone\": 3324, \"disrespectful\": 4711, \"7.00\": 1108, \"blumenthal\": 1109, \"walls\": 2928, \"01-30-\": 4712, \"complain\": 4713, \"association\": 4714, \"mystery\": 1111, \"easily\": 6605, \"goofy\": 2930, \"\\uddf5\": 1112, \"@pennjillette\": 6606, \"2b\": 4715, \"everyone\": 2931, \"mental\": 6607, \"house\": 6608, \"energy\": 4716, \"hard\": 4717, \"idea\": 3352, \"#2016election\": 7019, \"@chrisinspfld\": 4718, \"insurance\": 2933, \"21:11\": 2934, \"stands\": 6921, \"21:13\": 2935, \"perry\": 1114, \"21:15\": 3360, \"21:14\": 2937, \"projected\": 2938, \"acting\": 6609, \"they'll\": 1115, \"@realbencarson\": 4719, \"bully\": 6610, \"pathetic\": 2939, \"bombshell\": 1117, \"extraordinary\": 1118, \"23:19\": 2940, \"23:18\": 2941, \"23:17\": 2942, \"23:16\": 3385, \"23:15\": 2943, \"23:13\": 2944, \"23:12\": 2945, \"23:11\": 2946, \"benefits\": 6611, \"@andersoncooper\": 1121, \"@allaboutthetea_\": 4721, \"#bringbackourmarine\": 6612, \"pilots\": 3398, \"@hillaryclinton\": 4722, \"dont\": 4723, \"bullies\": 2947, \"obstructionists\": 2948, \"done\": 4724, \"@jackshallis\": 4725, \"wages\": 2949, \"bullied\": 2950, \"22:25\": 4726, \"22:27\": 4727, \"07-02-\": 2951, \"22:22\": 4729, \"@ricolodean\": 6614, \"5th\": 6615, \"22:29\": 4730, \"least\": 4731, \"regulation\": 4732, \"statement\": 3420, \"ton\": 4976, \"@laurencristmann\": 4733, \"park\": 4734, \"part\": 4735, \"@erictrump\": 3429, \"doctors\": 4736, \"believe\": 4737, \"@rizz_lizz\": 6616, \"john\": 487, \"compliments\": 2953, \"dossier\": 6617, \"gotten\": 6618, \"youth\": 6619, \"2020\": 4739, \"supposed\": 4740, \"susteren\": 2954, \"treated\": 6621, \"declare\": 4741, \"outta\": 6622, \"nominee\": 4742, \"ages\": 6623, \"1:00\": 1124, \"meltdown\": 6624, \"orders\": 4743, \"mountain\": 6625, \"cadillac\": 6340, \"built\": 6626, \"depending\": 1125, \"#president\": 2956, \"majority\": 4744, \"build\": 6627, \"commentary\": 2957, \"serve\": 3187, \"most\": 4746, \"08-19-\": 6628, \"11:12\": 1126, \"11:13\": 1127, \"extremely\": 4747, \"barackobama\": 4748, \"constructed\": 6903, \"@one4eternity\": 4749, \"sector\": 4750, \"@bdean1468\": 6630, \"thomas\": 2958, \"rebels\": 1128, \"commissions\": 1129, \"3:00\": 5960, \"gitmo\": 1130, \"businesses\": 1131, \"04:42\": 4752, \"carefully\": 2959, \"fine\": 6631, \"networks\": 4753, \"@4kmiddlebrook\": 4754, \"giant\": 6633, \"nervous\": 2960, \"ruin\": 4755, \"#donaldtrump\": 2961, \"unhappy\": 4756, \"idiots\": 1132, \"dysfunctional\": 2962, \"8\": 4757, \"cuomo\": 7139, \"@bbcnews\": 6634, \"express\": 1133, \"dealmaking\": 6635, \"courage\": 3502, \"silk\": 4758, \"huff\": 4759, \"doubled\": 1134, \"common\": 4761, \"restaurants\": 1135, \"naked\": 6978, \"vine\": 6636, \"@trump_charlotte\": 7156, \"lion\": 4764, \"individual\": 2963, \"11th\": 6637, \"@realjoemurray\": 1136, \"retweet\": 4765, \"06-30-\": 7130, \"expert\": 1137, \"visiting\": 6638, \"please\": 3528, \"\\udcb0\": 6639, \"fans\": 4767, \"donate\": 6640, \"tv's\": 2965, \"rosie\": 4769, \"iron\": 5948, \"nashville\": 4770, \"aircraft\": 6641, \"pissed\": 1138, \"@bobsmit98038199\": 1139, \"restaurant\": 1140, \"@pgaofamerica\": 6642, \"annual\": 6643, \"@2014_vince\": 6644, \"foreign\": 1141, \"alot\": 2966, \"geniuses\": 4771, \"baltimore\": 1143, \"point\": 1144, \"simple\": 4772, \"tennessee\": 1145, \"simply\": 4773, \"shutdown\": 2967, \"throughout\": 2968, \"expensive\": 1146, \"hannity\": 4774, \"raise\": 6645, \"create\": 2969, \"ran\": 6848, \"secret\": 2970, \"dropping\": 4775, \"ireland\": 2971, \"meeting\": 6647, \"nukes\": 1147, \"gay\": 4776, \"05-28-\": 6648, \"@trumpgolf\": 6649, \"gas\": 4777, \"understand\": 2973, \"prices\": 3565, \"evangelical\": 1148, \"02,9\": 6650, \"unify\": 2974, \"solid\": 6651, \"bill\": 2975, \"tolerate\": 2976, \"elections\": 1150, \"replaced\": 4779, \"fun\": 2977, \"09-12-\": 7132, \"century\": 1152, \"monday's\": 1153, \"@macy\": 4780, \"itself\": 3581, \"05-02-\": 17, \"italy\": 6653, \"proved\": 4203, \"ruth\": 6654, \"development\": 1154, \"yesterday\": 6655, \"moment\": 2978, \"purpose\": 4781, \"koch\": 3607, \"@shmann55\": 2979, \"@rollingstone\": 2980, \"task\": 1155, \"@prayformetoo\": 2981, \"ditka\": 4782, \"spent\": 2982, \"joint\": 6273, \"flags\": 6656, \"landmark\": 3619, \"23:35\": 1060, \"chemistry\": 2984, \"spend\": 2985, \"12:48\": 2986, \"12:49\": 2987, \"#foxandfriends\": 2988, \"ceo\": 692, \"12:41\": 2989, \"12:43\": 3627, \"12:45\": 2990, \"12:46\": 2991, \"shape\": 1157, \"openly\": 4784, \"doral\": 54, \"dishonesty\": 2992, \"wage\": 4785, \"cut\": 1158, \"pollster\": 3635, \"hated\": 2993, \"cuz\": 1160, \"08-29-\": 3638, \"bravery\": 5573, \"@foxandfriends\": 2994, \"boardroom\": 4786, \"easter\": 1162, \"excited\": 2995, \"hates\": 2996, \"hater\": 2997, \"ridiculously\": 6658, \"big\": 6659, \"bid\": 6660, \"@datriggakeithh\": 2998, \"judgement\": 69, \"matters\": 2999, \"biz\": 6661, \"bit\": 3649, \"knock\": 1163, \"follows\": 3653, \"02-03-\": 4788, \"surging\": 4789, \"@realdbp\": 4790, \"mediocrity\": 4791, \"foolish\": 82, \"@usatoday\": 1164, \"google\": 3668, \"often\": 6662, \"absolutely\": 1165, \"magnificent\": 6663, \"back\": 3000, \"27,11\": 5753, \"delegation\": 1166, \"strongest\": 6664, \"ourselves\": 3679, \"scale\": 3681, \"@cahlrstorrie\": 4792, \"decision\": 93, \"per\": 3001, \"lara\": 4793, \"epic\": 1167, \"laughing\": 6555, \"@ianjamespoulter\": 6665, \"patient\": 4794, \"300\": 4795, \"ufc\": 4796, \"continuing\": 3698, \"gosselin\": 5545, \"306\": 4797, \"hostages\": 6667, \"from\": 1610, \"goods\": 4798, \"deductibles\": 6668, \"drama\": 6669, \"06-02-\": 3720, \"@ingrahamangle\": 3005, \"jimmy\": 4799, \"shinzo\": 6670, \"nsa\": 4800, \"aliens\": 6671, \"01-18-\": 1168, \"steven\": 4801, \"remembrance\": 4802, \"lesson\": 4803, \"@jsheehangolf\": 1169, \"delusional\": 6672, \"bankruptcy\": 6673, \"infected\": 3006, \"forward\": 3007, \"#fema\": 4804, \"opponent\": 4805, \"invite\": 1170, \"immigration\": 4806, \"boys\": 4807, \"newsmax\": 6675, \"@abc2020\": 3009, \"active\": 6325, \"directed\": 6677, \"planet\": 1171, \"tomorrow's\": 6678, \"@terrellowens\": 6679, \"planes\": 1172, \"constant\": 5000, \"single\": 4808, \"cure\": 1173, \"prevail\": 3010, \"@billgates\": 1760, \"%\": 5712, \"22:06\": 6681, \"@indigoblue65\": 4809, \"excuses\": 4810, \"ellen\": 1174, \"07-04-\": 4811, \"explaining\": 3011, \"monmouth\": 1175, \"favourite\": 6682, \"leno\": 3789, \"prepared\": 4812, \"missile\": 2553, \"#imwithyou\": 4813, \"2000\": 6684, \"rallies\": 4814, \"failures\": 6685, \"2008\": 6686, \"2009\": 6687, \"#respect\": 6688, \"\\ude04\": 4816, \"36,7\": 1176, \"golfer\": 3819, \"chapo\": 3014, \"@meltsch\": 6690, \"helps\": 4817, \"@reid2962\": 1177, \"maryland\": 4818, \"fatal\": 6691, \"11:30\": 3015, \"11:31\": 3016, \"11:34\": 3017, \"11:35\": 3018, \"@neilturner_\": 4819, \"putting\": 3019, \"assad\": 3020, \"severely\": 3021, \"respectful\": 3022, \"knight\": 3023, \"midterm\": 1613, \"ceasefire\": 1180, \"bernie\": 4820, \"respectfully\": 5956, \"bleeding\": 6693, \"carly\": 1182, \"@kilmeade\": 6694, \"rivers\": 1183, \"06-23-\": 6695, \"uncomfortable\": 6696, \"rivera\": 1184, \"@ameliasg\": 6698, \"chicago\": 6699, \"giving\": 3024, \"anthem\": 6700, \"access\": 1186, \"body\": 6701, \"exchange\": 4821, \"meet\": 791, \"extreme\": 6704, \"39\": 4822, \"38\": 4823, \"talent\": 281, \"33\": 4824, \"32\": 4825, \"31\": 4826, \"30\": 4827, \"37\": 4828, \"36\": 4829, \"35\": 4830, \"34\": 4831, \"@mtneerjustice\": 1187, \"@tlrchrstphrbrsn\": 3882, \"honor\": 1188, \"@cvpayne\": 3026, \"named\": 3027, \"presidents\": 6706, \"@mayrazayago\": 1189, \"private\": 3028, \"names\": 3029, \"oval\": 3030, \"scandal\": 6707, \";)\": 5634, \"\\u2026\": 3031, \"hillary's\": 6708, \"debbie\": 1190, \"themselves\": 3032, \"upcoming\": 4833, \"@_snurk\": 4834, \"trail\": 4835, \"train\": 4836, \"ashamed\": 3915, \"nypd\": 1191, \"iii\": 4837, \"subscription\": 6709, \"account\": 4838, \"f\": 3455, \"nafta\": 6559, \"unreal\": 3033, \"obvious\": 4839, \"praise\": 3034, \"industrial\": 6844, \"closing\": 1193, \"didnt\": 1194, \"@97musick\": 349, \"native\": 6710, \"@blakemharris\": 3036, \"democracy\": 4840, \"lame\": 4635, \"holds\": 1196, \"hampshire\": 1197, \"#gdny\": 4842, \"winners\": 3037, \"rape\": 7143, \"stock\": 6712, \"12-21-\": 361, \"buildings\": 3038, \"\\ude45\": 6713, \"fran\": 3040, \"incompetence\": 1198, \"collection\": 6714, \"@woofeous\": 3041, \"lines\": 6715, \"chief\": 6716, \"furious\": 375, \"20:09\": 1199, \"20:08\": 1200, \"20:04\": 1201, \"wedding\": 1318, \"20:03\": 1202, \"20:02\": 1203, \"@realgilbert\": 4844, \"nasty\": 4077, \"colluded\": 6717, \"bunch\": 3044, \"bridges\": 6718, \"negotiated\": 6719, \"la\": 3045, \"ll\": 3046, \"@wsj\": 1204, \"winning\": 3993, \"willing\": 4845, \"@time\": 6721, \"ocare\": 6722, \"criminal\": 3047, \"<\": 6723, \"dad\": 6724, \"greater\": 4847, \"later\": 4290, \"dan\": 6725, \"spell\": 4848, \"mention\": 6726, \"cutting\": 6727, \"mandate\": 3049, \"kindness\": 6728, \"day\": 6729, \"airports\": 3050, \"warned\": 6730, \"@veryodddog\": 4850, \"@thejbrain\": 6731, \"33000\": 4851, \"experienced\": 4303, \"warner\": 6732, \"apologize\": 3790, \"broadcast\": 6379, \"@sandikay60\": 4852, \"salesman\": 4853, \"rex\": 4029, \"#teamkevin\": 1206, \"rep\": 4030, \"mate\": 442, \"messenger\": 4855, \"announced\": 4035, \"frank\": 3054, \"early\": 6092, \"quo\": 1207, \"ronald\": 4858, \"backwards\": 4363, \"allies\": 458, \"teleprompter\": 4859, \"15:37\": 4860, \"retail\": 3055, \"15:38\": 4861, \"south\": 6733, \"finest\": 3056, \"pga\": 468, \"20:22\": 3109, \"@usga\": 1211, \"strategic\": 476, \"embarrassed\": 3057, \"puppet\": 6734, \"@bravolebrity1\": 6735, \"reached\": 1212, \"sadly\": 6736, \"hilary\": 4862, \"@kennymacaskill1\": 3058, \"messing\": 3059, \"benghazi\": 4863, \"completed\": 4864, \"nobody\": 1213, \"environmental\": 4067, \"@aec4444\": 502, \"ipad\": 6737, \"loved\": 6738, \"sweden\": 1215, \"loves\": 6739, \"visited\": 4865, \"provoke\": 5080, \"comfortable\": 3060, \"@abouttherock\": 4866, \"have\": 1216, \"@cwisecwise1\": 3061, \"apparently\": 4867, \"mil\": 4868, \"congrats\": 4869, \"mic\": 4870, \"incentive\": 1217, \"concerns\": 1218, \"325\": 6741, \"cosby\": 3062, \"unless\": 6742, \"rove\": 6237, \"@trumpgolflinks\": 4872, \"where's\": 4873, \"eight\": 3063, \"prisoner\": 538, \"sally\": 4874, \"payment\": 1219, \"@goangelo\": 1220, \"@gene70\": 4129, \"enthusiastic\": 3065, \"request\": 4875, \"disease\": 1221, \"@brian_legit\": 4876, \"selection\": 6743, \"charles\": 4139, \"#fake\": 3067, \"traitor\": 1223, \"supporter\": 3068, \"staff\": 4877, \"inspiring\": 4878, \"knowledge\": 1224, \"madman\": 6746, \"controls\": 4879, \"07-06-\": 6747, \"anyone's\": 3069, \"pull\": 184, \"beat\": 6750, \"@stephprichard1\": 3070, \"@the_obm\": 4881, \"perfection\": 1225, \"timing\": 3071, \"areas\": 3072, \"gorsuch\": 1226, \"teams\": 1227, \"won't\": 6238, \"fixed\": 570, \"pertains\": 3074, \"looks\": 3504, \"untrue\": 3075, \"02-22-\": 4176, \"we\": 4081, \"17:51\": 4883, \"\\u2013\": 4884, \"walking\": 4553, \"interview\": 4045, \"@colincowherd\": 4186, \"reform\": 1228, \"ralph\": 4885, \"difficulties\": 1229, \"routine\": 6752, \"ebola\": 4886, \"progress\": 6753, \"@melaniatrump\": 3079, \"@ariannahuff\": 6754, \"deliver\": 4887, \"@doctor_platek\": 3064, \"commenting\": 1231, \"joke\": 1232, \"taking\": 4888, \"equal\": 1233, \"fulfilled\": 3080, \"assure\": 3081, \"moderators\": 6755, \"@dr_rita39\": 6613, \"passing\": 4214, \"glorious\": 3082, \"otherwise\": 6756, \"comment\": 3083, \"@governorpataki\": 4889, \"relevant\": 4890, \"cnbc\": 5642, \"laugh\": 3084, \"ad\": 1937, \"pouring\": 4232, \"ag\": 1938, \"tremendous\": 6757, \"it's\": 1234, \"@speakerryan\": 3086, \"proposal\": 4891, \"it'd\": 1235, \"@missuniverse\": 7150, \"caddy\": 1236, \"climate\": 3087, \"finished\": 4892, \"bull\": 4893, \"fellow\": 6567, \"volunteer\": 4894, \"homes\": 6758, \"plain\": 4246, \"appearance\": 6759, \"leaker\": 2867, \"value\": 3089, \"entrepreneurial\": 4895, \"at\": 1943, \"\\ude82\": 3090, \"almost\": 4896, \"respected\": 3091, \"arabia\": 4262, \"partner\": 1237, \"@ericbolling\": 1238, \"04-18-\": 1239, \")\": 1240, \"eliot\": 6762, \"administration\": 6763, \"@americanaspie\": 3092, \"@bpolitics\": 4897, \"injured\": 6764, \"09-21-\": 3093, \"reporting\": 4898, \"@golfdigest\": 4899, \"giuliani\": 4900, \"center\": 3094, \"yates\": 6765, \"weapon\": 3095, \"seth\": 6766, \"10-28-\": 6767, \"thought\": 6768, \"position\": 6769, \"latest\": 3096, \"stores\": 1244, \"@benfromdallas\": 1245, \"executive\": 6771, \"@timbowoods\": 3097, \"dakota\": 3098, \"protecting\": 3099, \"@davidaxelrod\": 4901, \"@iliveamongyou\": 4902, \"ads\": 4903, \"lake\": 6772, \"mathematically\": 4904, \"@l3nny85\": 3101, \"add\": 728, \"@tx_shaun\": 1946, \"citizen\": 3102, \"@blairkamin\": 1246, \"match\": 4905, \"articles\": 1621, \"05-24-\": 3103, \"@secupp\": 3104, \"dubai\": 1247, \"like\": 1249, \"success\": 752, \"11pm\": 3105, \"journalism\": 4327, \"admitted\": 755, \"journalist\": 6773, \"heed\": 6774, \"works\": 3106, \"soft\": 5198, \"heel\": 6775, \"20:29\": 3107, \"20:28\": 3108, \"@melrivers\": 4907, \"20:21\": 3110, \"02:25\": 2873, \"alive\": 5456, \"hair\": 1250, \"proper\": 4909, \"supportive\": 3112, \"happens\": 1252, \"est\": 4343, \"unfunny\": 4910, \"06:18\": 195, \"hurricane\": 3961, \"screwed\": 1253, \"@brandiglanville\": 6243, \"host\": 6777, \"although\": 4911, \"panel\": 3114, \"retribution\": 3115, \"about\": 4912, \":-)\": 1255, \"actual\": 4913, \"justin\": 1256, \"07-30-\": 6780, \"flake\": 3116, \"18,0\": 4914, \"ways\": 6982, \"smarts\": 3117, \"@eastonwestwood\": 3118, \"@kraftywurker\": 1257, \"billions\": 3119, \"guard\": 6782, \"been\": 3216, \"female\": 1259, \"31,27\": 6783, \"03:01\": 6866, \"@fackinpeter\": 6784, \"rushed\": 1260, \"@cadillacchamp\": 4916, \"awarded\": 6785, \"biggest\": 4917, \"buy\": 3120, \"bus\": 4383, \"brand\": 6786, \"@autumnandews08\": 3121, \"but\": 3122, \"reminds\": 6787, \"plague\": 6788, \". ..\": 4918, \"kraft\": 1262, \"@hammetjohn\": 1263, \"wise\": 3123, \"glory\": 6789, \"wish\": 3124, \"j\": 6791, \"@10ajmccarron\": 820, \"@bjkizer74\": 3125, \"minutes\": 3126, \"@danaperino\": 4920, \"unaffordable\": 4921, \"@60minutes\": 3127, \"romney\": 3128, \"@trumptowerny\": 4922, \"83\": 5329, \"shooting\": 6796, \"autism\": 4923, \"commander-in-chief\": 4924, \"48\": 4925, \"09:21\": 2657, \"46\": 4927, \"oan\": 4928, \"44\": 4929, \"45\": 4930, \"42\": 4931, \"43\": 4932, \"40\": 4933, \"41\": 843, \"sandy\": 1265, \"@jurciuoli19\": 4934, \"85\": 5333, \"nelson\": 5651, \"@jim_jordan\": 4423, \"christians\": 4935, \"27,29\": 1266, \"resolution\": 6570, \"19:26\": 3131, \"yell\": 6798, \"8th\": 4440, \"hats\": 3132, \"toure\": 5652, \"sleep\": 6799, \"hating\": 6800, \"tonight's\": 3133, \"poorly\": 1066, \"geraldo\": 1268, \"paris\": 6801, \"tweet\": 3134, \"under\": 4937, \"@warrencasselljr\": 4938, \"pride\": 3135, \"beware\": 201, \"@\": 1269, \"lure\": 6802, \"risk\": 6803, \"rise\": 6804, \"@talismanjohnnya\": 1270, \"every\": 3136, \"jack\": 4939, \"school\": 1271, \"ovation\": 3137, \"venue\": 6805, \"enjoy\": 3138, \"leaders\": 3139, \"consistent\": 4941, \"direct\": 1272, \"nail\": 1273, \"street\": 3140, \"22:41\": 3141, \"22:40\": 3142, \"22:49\": 3143, \"22:48\": 3144, \"blue\": 1274, \"hide\": 1275, \"christ\": 6806, \"selected\": 1276, \"liberty\": 1277, \"endorse\": 4943, \"supplies\": 1278, \"disney\": 3146, \"kicked\": 6807, \"@odedonrealitytv\": 6808, \"hundreds\": 3147, \"beck\": 1279, \"studio\": 3148, \"represented\": 4944, \"path\": 3149, \"generals\": 3150, \"forum\": 4945, \"leaves\": 1280, \"changed\": 6809, \"mentor\": 4946, \"#hero\": 5908, \"settled\": 929, \"changer\": 6811, \"straw\": 4947, \"advisor\": 2573, \"feelings\": 3151, \"patience\": 1282, \"tn\": 3807, \"would\": 1283, \"hospital\": 4948, \"hanoi\": 4949, \"asset\": 6813, \"@serenawilliams\": 6814, \"breathe\": 3152, \"graydon\": 3153, \"pic\": 6794, \"phony\": 6815, \"phone\": 6816, \"connecticut\": 6817, \"excellent\": 1285, \"@kateplusmy8\": 4950, \"must\": 6818, \"me\": 3154, \"ma\": 3155, \"mo\": 3156, \"mi\": 3157, \"mt\": 3158, \"ms\": 3159, \"@jennifer75ar\": 1286, \"my\": 3161, \"@canizalvania\": 1288, \"estate\": 1289, \"premium\": 6576, \"keep\": 2574, \"ceremony\": 1290, \"collude\": 3162, \"end\": 3163, \"sitting\": 1084, \"#nyprimary\": 3164, \"@therealzach49\": 5656, \"writers\": 3165, \"badly\": 4952, \"elizabeth\": 1291, \"hcare\": 4953, \"mess\": 3166, \"insecure\": 1292, \"demanding\": 3167, \"@johnny4arizona\": 1293, \"@roniseale\": 6820, \"jumping\": 4954, \"danny\": 6821, \"@theresa_cali\": 6822, \"funniest\": 1294, \"ultimate\": 4955, \"enter\": 3168, \"nyc\": 6475, \"executed\": 6824, \"clapper\": 4957, \"over\": 6825, \"london\": 4958, \"@ximenanr\": 6826, \"@danamira\": 6827, \"@beatsbyray\": 6828, \"@billywmerritt\": 5176, \"2:00\": 1296, \"@flgovscott\": 5657, \"expectations\": 3169, \"imo\": 1297, \"writing\": 6829, \"destroyed\": 6830, \"400\": 1298, \"@susiesentinel\": 306, \"iowa\": 1300, \"incorrectly\": 4092, \"@bravotv\": 6831, \"#uswomensopen\": 6251, \"tourism\": 4961, \"alex\": 3958, \"11-10-\": 3170, \"chuck\": 3171, \"detroit\": 1065, \"explode\": 6833, \"steelworkers\": 1301, \"victory\": 3172, \"lauer\": 4962, \"each\": 4963, \"\\udcf8\": 7099, \"signing\": 3173, \"@persdevquotes\": 6834, \"group\": 6277, \"celebrating\": 6835, \"@homerjsimpson\": 4964, \"saturday\": 1302, \"driving\": 6836, \"god\": 3174, \"pensacola\": 6837, \"work\": 5917, \"nite\": 1303, \"got\": 3175, \"gov\": 3176, \"gop\": 3177, \"arizona\": 6839, \"free\": 6840, \"fred\": 6841, \"masterpiece\": 4965, \"05-26-\": 4966, \"wanted\": 6843, \"12-25-\": 4967, \"@espngreeny\": 1304, \"days\": 1305, \"pence\": 4968, \"bedminster\": 3178, \"heck\": 1306, \"hopeless\": 4969, \"aspire\": 1100, \"onto\": 4970, \"rand\": 4971, \"already\": 3180, \"scalise\": 6845, \"@dongibson12\": 1307, \"primary\": 1308, \"@topcota1sg\": 3181, \"hearing\": 4973, \"sarcasm\": 1309, \"top\": 4974, \"fiction\": 1122, \"graham-cassidy\": 4975, \"ballistic\": 3183, \"too\": 4977, \"@mikesington\": 3184, \"tom\": 4978, \"percentage\": 4738, \"197\": 209, \"insightful\": 4979, \"ceiling\": 3185, \"murder\": 4980, \"tool\": 3186, \"leaking\": 1310, \"took\": 4745, \"negotiating\": 4981, \"western\": 3515, \"@washtimes\": 4982, \"#teamleeza\": 4983, \"@allenwest\": 2577, \"nominate\": 4762, \"immigrants\": 1312, \"20:43\": 4984, \"20:44\": 4985, \"20:46\": 4986, \"20:49\": 4987, \"whitestone\": 6846, \"stacey\": 4988, \"bridge\": 1313, \"fashion\": 3188, \"@la_loquita\": 3189, \"thr\": 6849, \"talking\": 4778, \"spade\": 3190, \"ray\": 6850, \"thoroughly\": 1314, \"-\": 3191, \"snow\": 4989, \"contact\": 4098, \"laughed\": 4787, \"though\": 4990, \"visionary\": 3192, \"8.00\": 3193, \"plenty\": 4991, \"@wolf_grayson\": 3194, \"devastating\": 4993, \"reputation\": 4994, \"entertaining\": 1315, \"sanctuary\": 4995, \"inspire\": 3195, \"pope\": 6852, \"random\": 3196, \"talkers\": 6853, \"radio\": 4997, \"solutions\": 4998, \"earth\": 6854, \"whitehouse\": 1185, \"bail\": 1317, \"@katyperry\": 3197, \"09:05\": 4832, \"dateline\": 6498, \"announce\": 4999, \"10-18-\": 5001, \"watch\": 5002, \"criticized\": 5003, \"amazon\": 5004, \"despite\": 282, \"report\": 5005, \"@hgswiney\": 5006, \"@rwsurfergirl\": 4849, \"countries\": 3198, \"collusion\": 6855, \"twice\": 3199, \"shots\": 3200, \"cufflinks\": 4857, \"@jimlibertarian\": 5007, \"#hbo\": 5008, \"@kyleraccio\": 5009, \"proclaims\": 1214, \"submitted\": 807, \"corrupt\": 5010, \"@talcornvan\": 3202, \"capacity\": 3203, \"@strongvoice\": 3204, \"ailes\": 6856, \"finger\": 1319, \"hopefully\": 1320, \"367\": 3205, \"365\": 3206, \"360\": 3207, \"#presidenttrump2016\": 5011, \"jose\": 526, \"weak\": 5012, \"however\": 1321, \"boss\": 3208, \"mazda\": 3209, \"wear\": 5013, \"dedication\": 6857, \"news\": 1322, \"improve\": 3210, \"protect\": 3211, \"fault\": 1323, \"players\": 6858, \"games\": 5014, \"havn't\": 1241, \"faces\": 6859, \"hypocrites\": 6860, \"@jonahnro\": 6861, \"#theapprentice\": 5015, \"epidemic\": 4906, \"karen\": 6862, \"@anthonyjmyers\": 3213, \"genes\": 6017, \"#yuge\": 5016, \"trust\": 5017, \"conference\": 1324, \"1.2\": 7160, \"beef\": 3215, \"03:09\": 6863, \"03:06\": 6864, \"03:02\": 6865, \"@anthonyolgin\": 1258, \"03:00\": 4915, \"quickly\": 5018, \"belongs\": 4101, \"julian\": 809, \"expected\": 1261, \"@keegster51\": 6868, \"drugs\": 5019, \"republicans\": 6869, \"speeches\": 6588, \"19:22\": 1325, \"catch\": 6870, \"#inspiration\": 5020, \"@tdudz5\": 5021, \"fallon\": 3217, \"kentucky\": 5023, \"n\": 1326, \"dept\": 5024, \"rutgers\": 1327, \"gumbel\": 6872, \"teachers\": 3218, \"stopping\": 5025, \"tim\": 6907, \"12-11-\": 5026, \"@vladimirrussia7\": 6873, \"violent\": 7002, \"experts\": 1287, \"brutal\": 5669, \"\\u2019\": 1328, \"@lexingtonbobby\": 1329, \"@golf_com\": 1330, \"suggest\": 5027, \"complex\": 3219, \"esquire\": 6874, \"several\": 3220, \"social\": 5670, \"@mileycyrus\": 1331, \"26,3\": 3043, \"tyson\": 5028, \"cycle\": 6875, \"shortly\": 1332, \"charlie\": 6876, \"ocean\": 1333, \"savings\": 5029, \"greatest\": 3221, \"incapable\": 5030, \"mother\": 5031, \"hearts\": 6877, \"alabama\": 5032, \"#classic\": 5033, \"unemployment\": 1334, \"#trumptower\": 6878, \"pinehurst\": 1335, \"vetting\": 1341, \"@golfmagazine\": 1337, \"08-11-\": 5022, \"gave\": 1338, \"casting\": 6879, \"breaks\": 1339, \"donal\": 6880, \"judge\": 5034, \"rumor\": 1336, \"apart\": 3222, \"vattenfall\": 3223, \"59\": 1340, \"58\": 5035, \"gift\": 3224, \"55\": 5036, \"54\": 1343, \"57\": 5037, \"hunt\": 1344, \"51\": 1345, \"50\": 5040, \"53\": 5041, \"52\": 5042, \"informative\": 6881, \"overrated\": 5043, \"56\": 5038, \"orlando\": 1342, \"successfully\": 5044, \"proudly\": 5045, \"donald\": 5055, \"election\": 1360, \"03-14-\": 6884, \"11-29-\": 5046, \"ice\": 3227, \"everything\": 5047, \"cnn\": 6885, \"christmas\": 3228, \"officer\": 4310, \"core\": 3229, \"01-04-\": 3230, \"deleted\": 1346, \"endorsing\": 6886, \"10-04-\": 6063, \"attacks\": 1347, \"@repmarkmeadows\": 5048, \"choke\": 1348, \"@defendingtheusa\": 6887, \"trustworthy\": 5049, \"dinner\": 1349, \"misleading\": 3231, \"ensure\": 1403, \"efforts\": 6888, \"sept\": 3232, \"duke\": 1350, \"civil\": 5051, \"04-23-\": 6889, \"#thinkbig\": 1351, \"ppl\": 1352, \"entrepreneur\": 6890, \"ppp\": 1353, \"bats\": 1354, \"00:43\": 5092, \"rounds\": 6892, \"classiest\": 5052, \"00:44\": 3233, \"@rhino848484\": 1355, \"class\": 5351, \"stuck\": 1356, \"anderson\": 6893, \"fought\": 5054, \"@club4growth\": 6882, \"@rcoldwellbanker\": 3235, \"purposely\": 3236, \"head\": 5111, \"amateur\": 431, \"@ryanbushby\": 6895, \"gorgeous\": 1357, \"heat\": 5116, \"hear\": 3237, \"12-27-\": 6897, \"removed\": 6898, \"r's\": 3238, \"12,8\": 2264, \"ruined\": 1436, \"adore\": 3239, \"@lindasuhler\": 3225, \"@johnduthie1\": 6899, \"rahm\": 6901, \"\\ude11\": 3240, \"sometime\": 1361, \"annoying\": 5056, \"trip\": 2955, \"regime\": 1362, \"nh\": 3242, \"looked\": 3527, \"nj\": 3243, \"no\": 3244, \"cos\": 2234, \"commercials\": 3245, \"nc\": 3246, \"when\": 1363, \"05-20-\": 6905, \"til\": 6906, \"tooooo\": 5057, \"beheading\": 1364, \"setting\": 1365, \"papers\": 1366, \"@bernardv777\": 5162, \"picture\": 1367, \"phoenix\": 6909, \"football\": 1368, \"@maxinerunner\": 5058, \"serta\": 5059, \"stops\": 7011, \"younger\": 6910, \"apologizing\": 6911, \"faster\": 1369, \"ryder\": 5179, \"@maathewdavis\": 6268, \"vietnam\": 1370, \"@richlowry\": 3248, \"coach\": 5060, \"ron\": 1371, \"celebs\": 1372, \"particular\": 6595, \"rod\": 1373, \"focus\": 5061, \"leads\": 5062, \"roy\": 1374, \"/\": 4108, \"@leezagibbons\": 5063, \"row\": 1375, \"1941\": 6916, \"@bretbaier\": 3249, \"passage\": 1506, \"environment\": 5064, \"charge\": 5065, \"advantage\": 3250, \"@briellezolciak\": 1376, \"03-31-\": 5203, \"cool\": 5067, \"impressive\": 1526, \"level\": 1377, \"philippines\": 5214, \"hawaii\": 5068, \"standards\": 1378, \"quick\": 6918, \"says\": 6919, \"tougher\": 1379, \"@kylekisskiss\": 6920, \"obsolete\": 5069, \"cyber\": 4187, \"pme\": 3252, \"colin\": 1380, \"08-30-\": 5070, \"@therealtmac11\": 3253, \"constitution\": 3254, \"#presidenttrump\": 1381, \"mall\": 5678, \"agrees\": 3255, \"goes\": 1382, \"reply\": 6922, \"@potus\": 6923, \"@bentrolling\": 1383, \"@yankzpat\": 3256, \"water\": 6924, \"07-26-\": 7164, \"witch\": 1384, \"disposed\": 7016, \"groups\": 3257, \"crippled\": 6926, \"[\": 3258, \"@strengthentheus\": 6927, \"healthy\": 5071, \"guilty\": 5072, \"@cgrubb85\": 963, \"22:20\": 4728, \"hospitality\": 5073, \"weird\": 3260, \"@heatherchilders\": 1385, \"shootings\": 1562, \"morals\": 3261, \"stubborn\": 6928, \"shark\": 6597, \"1st\": 3262, \"@dblsolo7\": 1568, \"crisis\": 1387, \"emmys\": 3263, \"handled\": 1573, \"tillerson\": 5076, \"10:17\": 5077, \"@thebingle\": 1388, \"sports\": 5078, \"msm\": 3264, \"andy\": 1389, \"iphone\": 5079, \"prez\": 1390, \"@xkidd92\": 3265, \"05:11\": 5980, \"today\": 1391, \"trophy\": 5990, \"kerry\": 3266, \"sessions\": 6932, \"flying\": 6049, \"cases\": 1392, \"insights\": 6933, \"states\": 1977, \"unbiased\": 1393, \"thousands\": 7167, \"ferry\": 6934, \"corrupted\": 5306, \"figure\": 1394, \"@kayleighmcenany\": 3267, \"03:24\": 1395, \"03:25\": 1396, \"03:27\": 1397, \"03:20\": 1398, \"03:21\": 1399, \"03:22\": 1400, \"03:23\": 1401, \"@curtismuddog\": 6938, \"counting\": 1615, \"@jebbush\": 6939, \"cuba\": 1646, \"1\": 5081, \"rubio\": 5082, \"vital\": 1402, \"endorsement\": 6940, \"plus\": 5050, \"speaks\": 3270, \"unbelievable\": 3271, \"crashes\": 5084, \"huge\": 231, \"#doral\": 5992, \"islamic\": 1404, \"birthday\": 5339, \"renovation\": 6942, \"unbelievably\": 3272, \"@ap\": 6272, \"mayweather\": 5086, \"stupidly\": 6943, \"inform\": 1405, \"exclusive\": 6944, \"12-13-\": 6945, \"worship\": 3273, \"blocked\": 3274, \"wallace\": 6947, \"he's\": 6948, \"he'd\": 6950, \"platform\": 1406, \"offers\": 5087, \"doonbeg\": 3275, \"pays\": 2269, \"happened\": 5088, \"lonely\": 5089, \"29,14\": 3276, \"conversations\": 3277, \"investigated\": 6086, \"qualified\": 1407, \"hamilton\": 6952, \"@sensanders\": 1408, \"@mrmet41\": 3278, \"term\": 5090, \"@paul1994loan\": 1409, \"name\": 5091, \"debating\": 1410, \"accomplishments\": 6891, \"haul\": 6192, \"begun\": 3280, \"myrtle\": 3281, \"buzz\": 2486, \"america's\": 1411, \"concur\": 1412, \"defund\": 5705, \"profit\": 3282, \"oklahoma\": 5093, \"factory\": 6954, \"shouldn't\": 5094, \"hacked\": 5406, \"08-17-\": 1413, \"attended\": 6955, \"theory\": 3283, \"yup\": 1414, \"kneel\": 5725, \"turn\": 1415, \"thsnks\": 3284, \"place\": 5096, \"raleigh\": 1416, \"swing\": 5097, \"charleston\": 6956, \"@espngolic\": 1417, \"\\uddfa\": 5437, \"1000\": 2670, \"suspend\": 6957, \"gala\": 7070, \"06-26-\": 233, \"millions\": 3285, \"given\": 5098, \"03-12-\": 1418, \"@newnonny\": 5099, \"district\": 5100, \"virgin\": 5053, \"trillion\": 6959, \"europe\": 5726, \"returns\": 5101, \"lago\": 3234, \"lobbyists\": 6960, \"convention\": 3287, \"legally\": 5102, \"scarborough\": 3288, \"gives\": 1751, \"9.00\": 5457, \"alan\": 5103, \"released\": 1757, \"copy\": 1765, \"09-27-\": 1419, \"01-02-\": 5104, \"wide\": 6963, \"unfortunately\": 5105, \"computer\": 4336, \"cards\": 1421, \"marines\": 6964, \"oath\": 5106, \"and\": 3290, \"00:20\": 4763, \"00:24\": 5108, \"00:27\": 5109, \"00:26\": 5110, \"00:29\": 1788, \"ann\": 3291, \"04-21-\": 1422, \"reno\": 5112, \"sells\": 5113, \"\\u201d\": 3292, \"any\": 3293, \"superman\": 1423, \"prosperity\": 6966, \"ideas\": 5114, \"ideal\": 5115, \"#gop\": 5492, \"@caleb2207\": 1424, \"01-29-\": 6867, \"sure\": 1425, \"multiple\": 6969, \"@dannbushh\": 1426, \"@mcilroyrory\": 3294, \"visitors\": 3295, \"icon\": 1427, \"closet\": 7178, \"#isis\": 6970, \"considered\": 3296, \"proud\": 1428, \"hungry\": 3578, \"@nbcsnl\": 5117, \"soho\": 5118, \"uncle\": 6896, \"senior\": 6971, \"#donaldforpresident\": 6972, \"greats\": 5688, \"cheap\": 1429, \"hack\": 6973, \"superb\": 7180, \"mister\": 5119, \"05-22-\": 1430, \"genius\": 6974, \"state\": 6275, \"crime\": 3297, \"@forevermcin\": 6975, \"believing\": 1431, \"@megynkelly\": 5120, \"07-10-\": 3298, \"begging\": 3299, \"responding\": 6976, \"@puppyslug\": 1432, \"@jollygoodman181\": 1433, \"regarding\": 3300, \"ceo's\": 5555, \"05-08-\": 3301, \"aluminum\": 6977, \"@theusalifestyle\": 5121, \"joker\": 1434, \"embassy\": 5122, \"clowns\": 5560, \"predicted\": 1866, \"discussing\": 5123, \"y'all\": 1435, \"ignored\": 6979, \"03:30\": 4124, \"college\": 5124, \"parking\": 6981, \"apologies\": 5125, \"@stkhlder3\": 5126, \"fails\": 3304, \"farmers\": 5127, \"federal\": 5128, \"review\": 6983, \"amen\": 7155, \"weapons\": 3305, \"outside\": 5129, \"@jwt19723\": 1437, \"caucus\": 3306, \"@terramarkov16\": 3307, \"@bettylovesdogs\": 6985, \"fearless\": 6986, \"08-09-\": 5605, \"cities\": 6987, \"come\": 6988, \"reaction\": 6989, \"successes\": 3308, \"contract\": 1438, \"02-09-\": 2702, \"senator\": 3309, \"@bernardcastro3\": 3310, \"duty\": 5130, \"pakistan\": 6990, \"pols\": 5626, \"merry\": 825, \"color\": 3311, \"@drudge_report\": 3312, \"period\": 1439, \"insist\": 1440, \"60\": 5132, \"61\": 5133, \"62\": 1921, \"63\": 5135, \"pundits\": 2417, \"#ibelieve\": 3313, \"66\": 5138, \"67\": 5139, \"68\": 5140, \"09:49\": 3314, \"poll\": 3315, \"precious\": 2616, \"nicole\": 1442, \"turkey\": 1443, \"howard\": 6992, \"peaceful\": 6993, \"helicopter\": 1930, \"featuring\": 1444, \"confessions\": 5144, \"hardly\": 3317, \"500\": 5145, \"ruining\": 5697, \"direction\": 1445, \"635\": 3318, \"andrew\": 1446, \"tiger\": 5147, \"mocking\": 3319, \"minister\": 5148, \"06-08-\": 1952, \"careful\": 5149, \"irrelevant\": 5150, \"spirit\": 1447, \"pilot\": 1448, \"case\": 1449, \"myself\": 5151, \"@marksteynonline\": 5152, \"cash\": 1450, \"arnold\": 3321, \"cast\": 1960, \"@realsonnynewman\": 3322, \"punches\": 3323, \"\\ude0d\": 5153, \"good\": 6604, \"ironic\": 1451, \"10:39\": 6994, \"bowe\": 6995, \"author\": 1452, \"10:33\": 6996, \"granted\": 1453, \"10:30\": 6997, \"bowl\": 795, \"check\": 6902, \"buys\": 3326, \"@cnnpolitics\": 1454, \"@princessdaytura\": 3241, \"events\": 3327, \"status\": 1455, \"07-12-\": 775, \"driver\": 6999, \"director\": 1456, \"unqualified\": 5154, \"footprint\": 5155, \"changing\": 3328, \"@ofccadjust\": 1457, \"@ginhay\": 3329, \"pennsylvania\": 5156, \"without\": 1458, \"relief\": 2006, \"model\": 3330, \"reward\": 5157, \"justify\": 1459, \"disloyal\": 7001, \"tip\": 6904, \"actions\": 6812, \"#trumpforprez\": 1460, \"03:40\": 3331, \"kill\": 7003, \"03:47\": 3332, \"03:44\": 5718, \"kneeling\": 7004, \"@wharton\": 7005, \"blow\": 7006, \"announcement\": 3333, \"ny\": 3247, \"10-05-\": 5729, \"rose\": 5158, \"everyone's\": 7008, \"seems\": 5159, \"except\": 3334, \"lets\": 1461, \"interested\": 7009, \"viewers\": 1110, \"poised\": 3335, \"ross\": 5160, \"kingdom\": 3606, \"kills\": 5161, \"soundly\": 1462, \"virginia\": 3336, \"tie\": 6908, \"accepted\": 2050, \"kennedy\": 5164, \"@trumpwaikiki\": 3337, \"donations\": 1463, \"tower\": 1464, \"12-15-\": 1465, \"competition\": 1466, \"cowboys\": 3339, \"irma\": 3340, \"legal\": 3341, \"resonate\": 2085, \"@waynedupreeshow\": 5165, \"slaughter\": 1468, \"polite\": 2278, \"pastors\": 7012, \"terrified\": 3342, \"immigrate\": 7014, \"@realollietaylor\": 1469, \"beaches\": 1470, \"on\": 519, \"ok\": 3343, \"oh\": 3344, \"of\": 3345, \"discussed\": 1471, \"medicare\": 3346, \"stand\": 5167, \"tariffs\": 6073, \"discusses\": 1472, \"or\": 3347, \"ladies\": 5168, \"@anncoulter\": 5169, \"communication\": 3348, \"@drewmadeoff\": 7015, \"rising\": 1473, \"gary\": 5170, \"england\": 5703, \"@joe3957\": 5171, \"there\": 1474, \"racism\": 3349, \"@t_sharp4\": 5172, \"racist\": 3350, \"08-15-\": 5826, \"tiffany\": 1113, \"@bethandersonesq\": 5173, \"11-23-\": 7185, \"757\": 3351, \"regard\": 5175, \"cabinet\": 7018, \"@realsquezz\": 1475, \"promote\": 5177, \"longer\": 6912, \"sleaze\": 7020, \"@sternshow\": 3354, \"sleazy\": 7021, \"strongly\": 5854, \"13:50\": 3355, \"13:51\": 3356, \"taste\": 1476, \"cbs\": 3357, \"britain\": 7022, \"politics\": 3358, \"@foxnation\": 1478, \"operation\": 251, \"incorrect\": 7024, \"@nflcommish\": 1479, \"heather\": 5180, \"@slaw116\": 2153, \"idiot\": 3359, \"deserve\": 1480, \"5\": 7026, \"trash\": 7027, \"championship\": 7028, \"28,0\": 1481, \"@damacofficial\": 1482, \"finale\": 1483, \"09-29-\": 611, \"serious\": 6915, \"funding\": 2936, \"stocks\": 7029, \"booked\": 7030, \"calls\": 7031, \"wife\": 1484, \"invest\": 3361, \"odds\": 3362, \"padraig\": 1485, \"10-20-\": 7032, \"missouri\": 1486, \"apparel\": 5181, \"11-16-\": 1487, \"all\": 5182, \"chinese\": 5183, \"04-27-\": 3363, \"lack\": 7033, \"00:03\": 7034, \"00:02\": 5901, \"@deptvetaffairs\": 3364, \"\\udc4b\": 5184, \"follow\": 3365, \"settlement\": 3366, \"decisions\": 1488, \"miller's\": 1489, \"thursday\": 5185, \"program\": 3367, \"presentation\": 3368, \"woman\": 3369, \"worse\": 3370, \"song\": 7037, \"far\": 7038, \"@nydailynews\": 1490, \"fav\": 7039, \"fat\": 7040, \"sons\": 7041, \"worst\": 3371, \"19:58\": 1491, \"19:59\": 1492, \"awful\": 5186, \"sony\": 7043, \"19:54\": 1493, \"19:50\": 1494, \"19:51\": 1495, \"treating\": 1496, \"list\": 1497, \"@renovacion\": 2204, \"salute\": 3845, \"liars\": 1498, \"ten\": 3372, \"tea\": 3373, \"@elizabethforma\": 5187, \"tee\": 3375, \"negotiator\": 1499, \"design\": 3377, \"nbc\": 7045, \"nba\": 7046, \"sue\": 1500, \"deeply\": 3378, \"follower\": 7047, \"greenville\": 2218, \"crush\": 5189, \"version\": 1502, \"@newtgingrich\": 3379, \"guns\": 3380, \"christian\": 1503, \"\\udcc8\": 3381, \"unprofessional\": 5190, \"theresa\": 1504, \"personable\": 5191, \"allows\": 7049, \"runoff\": 4197, \"coppins\": 3383, \"sticking\": 3384, \"members\": 4720, \"backed\": 1119, \"hoaxsters\": 6057, \"1900\": 3386, \"beginning\": 1120, \"@berniesanders\": 7050, \"#winner\": 3387, \"markets\": 5192, \"israel\": 1508, \"knows\": 5193, \"flag\": 1509, \"floyd\": 3388, \"stick\": 7051, \"20000\": 3389, \"known\": 5194, \"@garthdahdah\": 5195, \"glad\": 5196, \"debates\": 3390, \"policemen\": 3402, \"v\": 5197, \"@123jayne\": 1510, \"evangelicals\": 3391, \"embarrassing\": 3393, \"@up1775\": 1511, \"pond\": 5199, \"influenced\": 5200, \"court\": 5201, \"goal\": 5202, \"rather\": 1512, \"breaking\": 3394, \"#benghazi\": 3395, \"explains\": 2319, \"@andybran\": 1699, \"okay\": 1513, \"spitzer\": 3396, \"@oann\": 3397, \"sloppy\": 3251, \"short\": 1514, \"susan\": 1515, \"@mariadomenique9\": 3399, \"@washingtonpost\": 1516, \"don't\": 7052, \"september\": 3400, \"mission\": 3401, \"10:51\": 1517, \"outraged\": 5204, \"isnt\": 1518, \"10:55\": 1519, \"10:56\": 1520, \"10:59\": 1521, \"10:58\": 1522, \"avenue\": 1523, \"developer\": 5205, \"style\": 5206, \"cokie\": 7054, \"pray\": 5207, \"04-04-\": 7055, \"mattress\": 1524, \"resort\": 5208, \"parts\": 835, \"stephen\": 5209, \"argentina\": 3405, \"might\": 3406, \"somebody\": 1525, \"sucking\": 5210, \"hoping\": 5737, \"clippers\": 7057, \"brutally\": 256, \"belittle\": 3407, \"communities\": 5211, \"bigger\": 3408, \"@okcthunder\": 5212, \"friendship\": 5213, \"weight\": 1527, \"generation\": 7059, \"@1kathleen75\": 1528, \"brother\": 6917, \"expect\": 5215, \"undertake\": 7060, \"10-07-\": 5216, \"\\ude33\": 1529, \"rinos\": 3410, \"hill\": 1530, \"benjamin\": 3411, \"wisconsin\": 3412, \"friday\": 1531, \"teach\": 3414, \"guest\": 3851, \"thrown\": 3415, \"year's\": 3416, \"circuit\": 3417, \"fallen\": 1533, \"feed\": 2444, \"@business\": 4286, \"feel\": 5217, \"radical\": 6147, \"diller\": 5218, \"feet\": 5219, \"05-16-\": 3418, \"brave\": 6011, \"fees\": 5220, \"story\": 1534, \"\\\"\": 1535, \"#rt\": 5221, \"leading\": 2466, \"interviews\": 1536, \"storm\": 1537, \"01-24-\": 6288, \"finances\": 6157, \"store\": 1538, \"pipelines\": 5222, \"option\": 7064, \"\\udc4a\": 5223, \"convinced\": 7065, \"king\": 1539, \"kind\": 1540, \"double\": 7066, \"@scottwalker\": 7067, \"illegals\": 3421, \"cuff\": 2212, \"dana\": 7068, \"motivation\": 1541, \"@tiyah_valentina\": 5224, \"outstanding\": 3422, \"strengthen\": 3423, \"alike\": 6187, \"wilson\": 2499, \"nights\": 5225, \"chairman\": 3425, \"finding\": 5226, \"donor\": 5227, \"#trump4president\": 7071, \"added\": 3426, \"electric\": 6125, \"goldman\": 3427, \"reach\": 7072, \"77\": 5228, \"76\": 5229, \"75\": 5230, \"74\": 5231, \"73\": 5232, \"72\": 5233, \"71\": 5234, \"70\": 5235, \"nothing\": 5236, \"prestige\": 5237, \"measured\": 3428, \"79\": 5238, \"78\": 5239, \"n.y.times\": 5240, \"notch\": 5241, \"lying\": 1542, \"mexico\": 6412, \"13:34\": 5243, \"cdc\": 2541, \"09-10-\": 5245, \"rocket\": 7194, \"securing\": 3431, \"rampant\": 1999, \"@kpdelbridge\": 1673, \"penalty\": 3433, \"discuss\": 6041, \"his\": 5178, \"publicity\": 5246, \"gains\": 2556, \"08,3\": 5247, \"@sintianiej\": 7076, \"b\": 2952, \"@thefix\": 1543, \"emails\": 1545, \"#realestate\": 6291, \"timeless\": 5250, \"investigate\": 5251, \"vincent\": 3434, \"relentless\": 1546, \"wrote\": 1547, \"stump\": 6252, \"rocked\": 7195, \"dump\": 7080, \"achieved\": 5252, \"intelligence\": 7081, \"defense\": 1548, \"dumb\": 6259, \"are\": 7082, \"04-25-\": 5253, \"2.1\": 3435, \"@mitchellvii\": 7083, \"threats\": 1549, \"obstructionist\": 3436, \"nailed\": 3437, \"various\": 7084, \"contrary\": 6620, \"@joanrivers\": 3438, \"numerous\": 5254, \"corruption\": 3439, \"cancelling\": 3440, \"korea\": 3441, \"recently\": 3442, \"creating\": 5255, \"sold\": 1551, \"attention\": 1552, \"@loudobbsnews\": 5256, \"succeed\": 3444, \"@tigerwoods\": 5257, \"franchise\": 5258, \"c\": 7087, \"@tmz\": 3446, \"became\": 7088, \"context\": 5659, \"baseball\": 6925, \"9:00\": 1553, \"flies\": 3447, \"reasons\": 3448, \"sweet\": 1554, \"pr\": 6297, \"decline\": 5259, \"pt\": 3450, \"@ericshawnonfox\": 5260, \"political\": 5261, \"due\": 3451, \"strategy\": 3452, \"pc\": 3453, \"pa\": 3454, \"07-14-\": 7090, \"pm\": 6308, \"flight\": 1555, \"@thegurleygirl\": 5262, \"temperament\": 3456, \"plants\": 5263, \"georgia\": 5264, \"behavior\": 7092, \"rip\": 7093, \"#america\": 7094, \"rid\": 7095, \"shirt\": 1557, \"#votetrump\": 5266, \"9\": 1558, \"daughters\": 1559, \"higher\": 1560, \"@facethenation\": 7096, \"negotiate\": 7097, \"holidays\": 5267, \"patriotic\": 6018, \"arrived\": 6363, \"contractors\": 1561, \"@frankcaliendo\": 6366, \"lower\": 3457, \"limbaugh\": 7100, \"anybody\": 3458, \"analysis\": 7101, \"edge\": 7102, \"starved\": 6377, \"frontrunner\": 5720, \"halperin\": 5074, \"all-star\": 2704, \"keystone\": 5876, \"questions\": 1563, \"cpac\": 7200, \"vigilant\": 7104, \"prince\": 1564, \"08-05-\": 3459, \"workers\": 5268, \"exclusively\": 3460, \"contractor\": 5269, \"complaint\": 1693, \"lincoln\": 845, \"@vtdiva01\": 3461, \"jacksonville\": 1565, \"jcope\": 1566, \"confront\": 1567, \"ignore\": 7105, \"yorker\": 5272, \"essential\": 5273, \"front-runner\": 5274, \"fucking\": 3462, \"#g20summit\": 6929, \"understood\": 6438, \"01-05-\": 3463, \"@tdavistonya\": 5275, \"canadians\": 4409, \"04-06-\": 1569, \"pros\": 7106, \"innovation\": 5276, \"prob\": 7107, \"martin\": 6295, \"refused\": 1570, \"refuses\": 1571, \"intense\": 7110, \"vaccine\": 1572, \"russell\": 5075, \"pipeline\": 1574, \"entrepreneurs\": 7111, \"firing\": 2782, \"@ivankatrump\": 3464, \"range\": 1576, \"hatred\": 7113, \"podesta\": 3465, \"wanna\": 5277, \"dwight\": 7114, \"mommy\": 5278, \"because\": 7202, \"impressed\": 1577, \"sad\": 5576, \"pundit\": 3466, \"question\": 1578, \"fast\": 3468, \"we're\": 3469, \"06-15-\": 3470, \"@davidwohl\": 1580, \"files\": 5279, \"memory\": 6930, \"filed\": 2818, \"junior\": 5280, \"raising\": 5281, \"patriot\": 5282, \"@macys\": 3471, \"hasn't\": 1581, \"growth\": 7184, \"pres\": 1582, \"highlight\": 5283, \"z\": 7117, \"called\": 7118, \"associated\": 3472, \"#wakeupamerica\": 1583, \"12-19-\": 5284, \"05-10-\": 5285, \"rally\": 1584, \"graham\": 2842, \"independents\": 1759, \"lemon\": 3474, \"07-28-\": 5286, \"peace\": 1585, \"backs\": 1586, \"04-22-\": 4152, \"mock\": 5287, \"nice\": 1588, \"backbone\": 5288, \"problems\": 5289, \"helping\": 5290, \"meaning\": 1590, \"allowing\": 1591, \"suffers\": 3475, \"happier\": 1592, \"vice\": 5291, \"gr8\": 3476, \"narrative\": 5292, \"joining\": 6629, \"buffalo\": 1593, \"once\": 5293, \"pervert\": 6572, \"issued\": 3478, \"steve\": 3479, \"gang\": 1594, \"winds\": 1595, \"contributions\": 7120, \"issues\": 3480, \"@rosannascotto\": 1596, \"@joshuadummer\": 1597, \"\\u00bb\": 5294, \"include\": 1598, \"dramatically\": 1295, \"rag\": 6847, \"wished\": 7121, \"mainstream\": 2911, \"wishes\": 7122, \"bryant\": 3481, \"#tcot\": 2929, \"@michaelcohen212\": 2932, \"leader\": 7209, \"deals\": 7124, \"@mariabartiromo\": 5296, \"polling\": 5297, \"dealt\": 7125, \"someday\": 5298, \"smaller\": 5299, \"you'd\": 1599, \"13:11\": 7127, \"13:14\": 7128, \"#trump16\": 1600, \"fold\": 1601, \"makers\": 1602, \"folk\": 1603, \"reaching\": 852, \"man's\": 5300, \"waiting\": 7129, \"11-21-\": 5301, \"capital\": 5302, \"06-21-\": 3652, \"10-24-\": 3482, \"chose\": 1604, \"@lindseygrahamsc\": 3483, \"pushing\": 3484, \"ukraine\": 7131, \"@bane1349\": 3485, \"99th\": 5304, \"larger\": 1605, \"leaving\": 1606, \"@gen_yvette\": 1607, \"dad's\": 5305, \"apple\": 7133, \"spy\": 2301, \"egypt\": 1608, \"app\": 1609, \"apply\": 7134, \"trump\": 6935, \"fed\": 3486, \"lottery\": 3004, \"stream\": 6936, \"usa\": 3487, \"&\": 3488, \"few\": 3489, \"uss\": 3490, \"@drjamescabot\": 6674, \"eagles\": 1611, \"sort\": 3491, \"#pleaserun\": 7136, \"19:16\": 5307, \"journalists\": 3492, \"detail\": 1264, \"recount\": 5308, \"@ronmeier123\": 3493, \"heard\": 4157, \"@gzervs\": 1614, \"anywhere\": 5309, \"@marino_joanna\": 7140, \"dropped\": 3268, \"giants\": 4390, \"patrol\": 5310, \"spying\": 3494, \"tax\": 7142, \"@11sheila11\": 3495, \"gowdy\": 3496, \"something\": 3497, \"taj\": 6711, \"sir\": 3039, \"united\": 3259, \"sit\": 3042, \"six\": 5311, \"brian\": 1251, \"carrier\": 3498, \"sig\": 5312, \"instead\": 4919, \"puppets\": 3500, \"abuse\": 5313, \"2121\": 3501, \"light\": 5314, \"honestly\": 5315, \"@dcolon2112\": 1616, \"disrespecting\": 3503, \"133\": 5316, \"132\": 3073, \"131\": 5317, \"136\": 5318, \"134\": 5319, \"\\ude18\": 3505, \"139\": 5320, \"superior\": 1617, \"@gqforbes\": 5321, \"@johnlegere\": 3506, \"ships\": 3507, \"7:00\": 3269, \"choose\": 7145, \"inspecting\": 3508, \"@mmayer87\": 7146, \"covered\": 7147, \"@parker_votes\": 3509, \"holiday\": 1618, \"crowds\": 3088, \"\\u203c\": 7148, \"campaigned\": 1619, \"crash\": 7149, \"material\": 5322, \"flew\": 5323, \"ferguson\": 3510, \"republican\": 1620, \"investor\": 3511, \"worlds\": 5324, \"night's\": 1622, \"nfl\": 3512, \"@forq2\": 3513, \"promise\": 1687, \"bills\": 5325, \"8/\": 5326, \"8:\": 5327, \"88\": 5328, \"remove\": 4760, \"our\": 1624, \"80\": 3129, \"81\": 5330, \"86\": 5331, \"87\": 3130, \"84\": 5332, \"out\": 1625, \"category\": 7151, \"respects\": 6797, \"08-07-\": 5334, \"sentiment\": 1626, \"@buzzfeed\": 1627, \"supports\": 5335, \"@sal_lyann\": 1628, \"aol\": 7152, \"southern\": 6034, \"fawning\": 3514, \"york\": 7153, \"@usplaymoney\": 5336, \"8p\": 5337, \"g\": 1629, \"@royschuhmacher\": 1630, \"conversation\": 6819, \"4th\": 6941, \"hence\": 1631, \"noticed\": 2641, \"doesn't\": 1632, \"intention\": 7154, \"03-28-\": 5340, \"rasmussen\": 3516, \"priority\": 3182, \"their\": 5341, \"god's\": 3517, \"academy\": 3518, \"reversed\": 5342, \"debate\": 7163, \"regards\": 3519, \"july\": 5343, \"@shawnrss\": 5344, \"07-11-\": 6037, \"11-02-\": 3520, \"boring\": 3521, \"richer\": 7157, \"patients\": 3522, \"anti-trump\": 1633, \"1.5\": 7158, \"1.6\": 7159, \"laughingstock\": 5346, \"clip\": 3214, \"mogul\": 6871, \"01-23-\": 1634, \"afraid\": 7161, \"russians\": 5348, \"06-17-\": 5349, \"which\": 5350, \"@statedept\": 1635, \"asshole\": 3523, \"=\": 3524, \"10-03-\": 1636, \"25000\": 6883, \"combat\": 3525, \"knees\": 5721, \"leakers\": 1637, \"who\": 1638, \"why\": 1639, \"deny\": 7162, \"#letterman\": 1640, \"refreshing\": 3526, \"waldorf\": 5352, \"@stl_blonde\": 6914, \"gain\": 855, \"@chriscjackson\": 5354, \"latinos\": 1641, \"chances\": 5355, \"electoral\": 4766, \"agreed\": 4400, \"gail\": 856, \"@amstaffbru\": 5357, \"planning\": 3529, \"democrats\": 3530, \"fear\": 1642, \"pleased\": 1643, \"highest\": 857, \"mumbai\": 5358, \"kravis\": 1644, \"@warrenbuffett\": 7165, \"@bretmichaels\": 6931, \"local\": 1645, \"sued\": 6937, \"10:00\": 7168, \"watching\": 5359, \"dope\": 7169, \"ones\": 7170, \"words\": 7171, \"@aphonapelma\": 1690, \"ended\": 3531, \"married\": 1647, \"05-12-\": 7172, \"26000\": 1195, \"@foxnewspolitics\": 5360, \"generations\": 7173, \"view\": 7174, \"available\": 1648, \"@arseniohall\": 7175, \"paulson\": 6965, \"unfairly\": 7176, \"closer\": 7177, \"mentioned\": 6239, \"15-0\": 3532, \"#leadership\": 6946, \"favor\": 1649, \"identification\": 1650, \"closed\": 7181, \"bought\": 1651, \"ability\": 1652, \"opening\": 1653, \"joy\": 1654, \"agencies\": 5361, \"embarrassment\": 3533, \"job\": 1655, \"joe\": 1656, \"swift\": 3316, \"jon\": 1657, \"karzai\": 1658, \"@patti_page\": 3534, \"april\": 3325, \"bronx\": 3535, \"candidates\": 7166, \"49,0\": 3536, \"wall\": 5362, \"walk\": 5363, \"@wewantmitt2016\": 3537, \"subscribe\": 3538, \"table\": 3539, \"decent\": 1660, \"bbc\": 7183, \"agreements\": 7017, \"mike\": 5364, \"mika\": 5365, \"21:06\": 1661, \"present\": 5366, \"@trumppanama\": 5367, \"abandoned\": 5368, \"unlike\": 5369, \"@packerlegends\": 3540, \"choices\": 7186, \"will\": 7187, \"stunning\": 1662, \"wild\": 7188, \"~\": 1664, \"04-29-\": 3392, \"lightweight\": 1665, \"thug\": 1666, \"ave\": 3541, \"perhaps\": 1667, \"cross\": 3542, \"unite\": 5371, \"member\": 3543, \"unity\": 5372, \"largest\": 1668, \"gets\": 5373, \"difficult\": 1669, \"19:38\": 7189, \"#veterans\": 5374, \"19:30\": 7190, \"premiere\": 7191, \"disagree\": 1670, \"19:36\": 7192, \"19:37\": 7193, \"coaches\": 3951, \"student\": 5375, \"collar\": 5376, \"warming\": 1671, \"@usnewstravel\": 1672, \"approve\": 5730, \"fighting\": 3544, \"@sharylattkisson\": 3545, \"excessive\": 3430, \"cried\": 3546, \"heavily\": 3432, \"boot\": 7219, \"should've\": 1674, \"half\": 2316, \"batteries\": 2922, \"@ericleebow\": 1675, \"@channelguide\": 5377, \"@kellyannepolls\": 1676, \"rapid\": 3547, \"guts\": 1677, \"smith\": 5378, \"capabilities\": 3548, \"#tbt\": 5379, \"book\": 7221, \"@pauladuvall2\": 5380, \"@pbump\": 1678, \"unprecedented\": 5381, \"crooked's\": 7197, \"who's\": 3549, \"protesters\": 7198, \"know\": 7199, \"press\": 1679, \"equality\": 3279, \"racists\": 5382, \"miami\": 5383, \"30,13\": 1680, \"loser\": 3551, \"loses\": 3552, \"taxpayers\": 7201, \"hosts\": 1681, \"james\": 6043, \"@mdamelincourt\": 5384, \"drop\": 590, \"smoothly\": 3467, \"scared\": 5385, \"scottish\": 5386, \"115\": 7203, \"116\": 7116, \"111\": 7204, \"110\": 7205, \"07-09-\": 5387, \"empire\": 7119, \"@ahernandez85a\": 1682, \"lead\": 7207, \"leak\": 7208, \"@celebapprentice\": 3554, \"bosses\": 3555, \"murdoch\": 7123, \"300000\": 7126, \"mitt\": 7210, \"murdered\": 7211, \"bergdahl\": 1683, \"#missuniverse\": 7213, \"unmasking\": 5388, \"rare\": 1684, \"carried\": 1685, \"getting\": 7214, \"column\": 7138, \"universe\": 5389, \"swear\": 5390, \"sweat\": 3499, \"own\": 3556, \"owe\": 7144, \"@bensasse\": 3557, \"fundraiser\": 3558, \"#imwithyouhttps\": 3559, \"weather\": 1686, \"champ\": 3560, \"convicted\": 5732, \"nuke\": 1688, \"van\": 5391, \"*\": 5392, \"spiral\": 1689, \"kidding\": 5393, \"overtime\": 3561, \"i've\": 7216, \"funds\": 7217, \"@misscassie1230\": 5394, \"made\": 5395, \"tactics\": 5396, \"whether\": 5397, \"record\": 7179, \"below\": 5398, \"non-existent\": 7218, \"horrific\": 1691, \"intimidating\": 1692, \"@jamersonhayes\": 5399, \"happen\": 4162, \"incredible\": 1694, \"02-10-\": 1695, \"percent\": 2507, \"illinois\": 7220, \"@keksec_org\": 1696, \"other\": 3562, \"boom\": 7222, \"sick\": 763, \"what's\": 2035, \"lance\": 7223, \"illegally\": 7224, \"@jerrysan52\": 7225, \"@vincemcmahon\": 3563, \"@ichicagoscott\": 7206, \"june\": 7226, \"kinda\": 1697, \"@tonyschwartz\": 5400, \"100k\": 5401, \"untalented\": 7227}";
}, 521, null, "TalkPresidential/word_mappings.json");
__d(/* TalkPresidential/build/utils/networkUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isConnectedToInternet = isConnectedToInternet;

var _reactNative = require(12            ); // 12 = react-native

function isConnectedToInternet() {
    return regeneratorRuntime.async(function isConnectedToInternet$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    if (!(_reactNative.Platform.OS === 'ios')) {
                        _context.next = 2;
                        break;
                    }

                    return _context.abrupt('return', new Promise(function (resolve) {
                        var handleFirstConnectivityChangeIOS = function handleFirstConnectivityChangeIOS(isConnected) {
                            _reactNative.NetInfo.isConnected.removeEventListener('connectionChange', handleFirstConnectivityChangeIOS);
                            resolve(isConnected);
                        };
                        _reactNative.NetInfo.isConnected.addEventListener('connectionChange', handleFirstConnectivityChangeIOS);
                    }));

                case 2:
                    return _context.abrupt('return', _reactNative.NetInfo.isConnected.fetch());

                case 3:
                case 'end':
                    return _context.stop();
            }
        }
    }, null, this);
}
}, 522, null, "TalkPresidential/build/utils/networkUtils.js");
__d(/* TalkPresidential/build/utils/scoring/linear_scoring/linear_scoring_utils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.vectorizeText = vectorizeText;
exports.calculateProbOfPOTUS = calculateProbOfPOTUS;

var _naive = require(524                              ); // 524 = talisman/tokenizers/words/naive

var _naive2 = babelHelpers.interopRequireDefault(_naive);

function vectorizeText(text) {
    var lowercasedText = text.toLowerCase();
    var tokenizedWords = (0, _naive2.default)(lowercasedText);
    var vocabulary = require(529                                          ); // 529 = ../../../../linear_model_json/cv_vocab.json
    var numVocab = Object.keys(vocabulary).length;
    var coefArray = Array(numVocab);
    coefArray.fill(0, 0, numVocab - 1);
    tokenizedWords.forEach(function (word) {
        if (vocabulary[word] != undefined) {
            var index = vocabulary[word];
            var currentValue = coefArray[index];
            var newValue = currentValue + 1;
            coefArray[index] = newValue;
        }
    });
    return coefArray;
}
function calculateProbOfPOTUS(text) {
    var textCounts = vectorizeText(text);
    var lrModelInfo = require(530                                          ); // 530 = ../../../../linear_model_json/lr_model.json
    var coefs = lrModelInfo.coefs;
    var intercept = lrModelInfo.intercept;
    var weights = [];
    textCounts.forEach(function (count, idx) {
        var coef = coefs[idx];
        weights.push(count * coef);
    });
    var finalWeight = weights.reduce(function (weight, current) {
        return weight + current;
    }, 0.0);
    var odds = finalWeight + intercept;
    var probability = 1 / (1 + Math.pow(Math.E, -odds));
    return probability;
}
}, 523, null, "TalkPresidential/build/utils/scoring/linear_scoring/linear_scoring_utils.js");
__d(/* talisman/tokenizers/words/naive.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
                                    value: true
});

var _words = require(525           ); // 525 = lodash/words

var _words2 = _interopRequireDefault(_words);

function _interopRequireDefault(obj) {
                                    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _words2.default;

module.exports = exports['default'];
}, 524, null, "talisman/tokenizers/words/naive.js");
__d(/* lodash/words.js */function(global, require, module, exports) {var asciiWords = require(526            ), // 526 = ./_asciiWords
    hasUnicodeWord = require(527                ), // 527 = ./_hasUnicodeWord
    toString = require(461         ), // 461 = ./toString
    unicodeWords = require(528              ); // 528 = ./_unicodeWords

function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = words;
}, 525, null, "lodash/words.js");
__d(/* lodash/_asciiWords.js */function(global, require, module, exports) {
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

module.exports = asciiWords;
}, 526, null, "lodash/_asciiWords.js");
__d(/* lodash/_hasUnicodeWord.js */function(global, require, module, exports) {
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

module.exports = hasUnicodeWord;
}, 527, null, "lodash/_hasUnicodeWord.js");
__d(/* lodash/_unicodeWords.js */function(global, require, module, exports) {
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

var rsApos = '[\'\u2019]',
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
    rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');

function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
}

module.exports = unicodeWords;
}, 528, null, "lodash/_unicodeWords.js");
__d(/* TalkPresidential/linear_model_json/cv_vocab.json */function(global, require, module, exports) {module.exports = module.exports = { "endorsed": 1471, "hats": 1988, "child": 860, "dynamic": 1403, "ossoff": 3076, "thehill": 4247, "obstruction": 3017, "protest": 3378, "woods": 4684, "sleep": 3918, "controversial": 1050, "hating": 1986, "mansion": 2694, "captain": 761, "integrity": 2235, "marcorubio": 2699, "increase": 2191, "votes": 4565, "voter": 4563, "geraldo": 1828, "eligible": 1445, "gfeorg": 1833, "160": 61, "tweet": 4422, "closet": 921, "supported": 4123, "theapprentice9": 4237, "certain": 818, "voted": 4561, "lord": 2616, "sorry": 3960, "163": 64, "worth": 4700, "supreme": 4130, "usopen": 4492, "risk": 3627, "chancellor": 832, "rise": 3625, "ryanbushby": 3705, "trump_charlotte": 4376, "georgia": 1827, "jack": 2290, "chriscuomo": 875, "billmaher": 587, "politician": 3258, "bringing": 675, "excited": 1539, "vast": 4510, "tickets": 4277, "school": 3761, "receiving": 3490, "offend": 3026, "skills": 3908, "cause": 795, "responders": 3576, "companies": 977, "wednesday": 4628, "correct": 1063, "refreshing": 3506, "delegate": 1225, "neverhillary": 2952, "employees": 1463, "turnberrybuzz": 4416, "straight": 4066, "speakerryan": 3975, "smxtty_": 3932, "enjoy": 1482, "phoney": 3193, "force": 1726, "vladimir": 4555, "tired": 4295, "miller": 2810, "consistent": 1031, "rodman": 3647, "direct": 1290, "elections": 1440, "nail": 2908, "second": 3788, "fabulous": 1577, "imploding": 2173, "mooovin_on": 2864, "60minutes": 174, "draintheswamp": 1368, "oscar": 3074, "blue": 616, "brexit": 668, "ginhay": 1840, "hide": 2033, "christ": 876, "dept": 1247, "thunder": 4273, "panama": 3107, "beaten": 535, "trumpchicago": 4378, "near": 2929, "liberty": 2557, "journalist": 2360, "lights": 2566, "bonuses": 629, "omarosa": 3043, "endorse": 1470, "new": 2953, "tips": 4294, "poorly": 3268, "officially": 3033, "disney": 1313, "told": 4302, "kicked": 2420, "hero": 2027, "behavior": 552, "reporter": 3550, "men": 2774, "fronts": 1777, "drew": 1374, "hundreds": 2121, "met": 2788, "misstcassidy": 2830, "protection": 3377, "china": 862, "102": 20, "103": 21, "100": 13, "101": 19, "106": 24, "104": 22, "105": 23, "luther": 2652, "kids": 2424, "daughter": 1170, "tapes": 4170, "cahlrstorrie": 734, "leaves": 2524, "economics": 1419, "fav": 1627, "reports": 3553, "sethmeyers": 3834, "unwatchable": 4477, "credit": 1101, "mentor": 2780, "chrysler": 882, "military": 2809, "aka": 320, "settled": 3837, "changer": 836, "fell": 1647, "foxnewssunday": 1753, "doralresort": 1357, "golden": 1864, "fantastic": 1612, "strengthentheus": 4075, "secure": 3792, "campaign": 743, "owed": 3088, "ground": 1917, "explained": 1562, "mileycyrus": 2808, "replace": 3543, "bro": 680, "patience": 3137, "guests": 1930, "stern": 4042, "heartbeat": 2008, "10000": 15, "hgswiney": 2031, "total": 4317, "unit": 4458, "opponents": 3059, "sarah": 3727, "cheating": 853, "spoke": 3993, "dnc": 1322, "army": 429, "97musick": 217, "hospital": 2089, "motivate": 2875, "negative": 2937, "leaks": 2519, "samcgirl": 3721, "edward": 1427, "music": 2902, "wrestlemania": 4706, "unfortunately": 4453, "survive": 4142, "type": 4431, "renovations": 3540, "snowden": 3935, "graydon": 1903, "jennifer75ar": 2312, "successful": 4104, "brings": 676, "expose": 1566, "trumptowerny": 4394, "wars": 4600, "award": 479, "aware": 482, "lovely_laura21": 2638, "98": 218, "connecticut": 1022, "championships": 830, "arms": 427, "separates": 3819, "91": 209, "allies": 334, "93": 212, "92": 211, "95": 214, "94": 213, "97": 216, "96": 215, "shoot": 3865, "jenniferjjacobs": 2313, "pride": 3329, "join": 2343, "room": 3662, "rights": 3616, "gqforbes": 1895, "mo": 2841, "work": 4688, "refusing": 3511, "roof": 3661, "movies": 2885, "locker": 2604, "era": 1503, "ms": 2891, "mr": 2887, "criticizing": 1114, "im": 2162, "example": 1535, "piers": 3208, "saturday": 3735, "owes": 3089, "estate": 1517, "florida": 1700, "india": 2197, "currency": 1134, "marco": 2698, "want": 4586, "campaigning": 745, "appearance": 401, "story": 4065, "absolute": 235, "ceremony": 817, "ones": 3046, "doral": 1356, "turn": 4414, "provide": 3385, "travel": 4348, "returning": 3590, "nuts": 3001, "damage": 1153, "machine": 2661, "paying": 3151, "hot": 2096, "writers": 4709, "moron": 2871, "ny_police": 3003, "truthful": 4402, "salmond": 3717, "aboard": 233, "badly": 497, "1175": 33, "persdevquotes": 3176, "elizabeth": 1448, "beauty": 540, "randpaul": 3445, "mess": 2785, "cadillac": 732, "insecure": 2217, "hughhewitt": 2117, "vicious": 4525, "ball": 502, "vladimirrussia7": 4556, "thankyou": 4234, "wrong": 4713, "jumping": 2373, "fat": 1622, "destined": 1260, "charleston": 848, "president": 3313, "core": 1059, "law": 2501, "extortion": 1569, "types": 4432, "las": 2485, "davidaxelrod": 1174, "danny": 1163, "attempt": 458, "effective": 1429, "recieved": 3494, "aliens": 328, "appreciate": 405, "headquarters": 1999, "season": 3784, "capitalism": 758, "funniest": 1787, "ultimate": 4438, "keeps": 2401, "balancing": 501, "democratic": 1240, "make": 2682, "wind": 4656, "wine": 4660, "operations": 3055, "senators": 3809, "executed": 1546, "office": 3030, "enter": 1485, "clapper": 900, "fall": 1600, "satisfied": 3734, "guidance": 1931, "london": 2607, "japan": 2303, "mayor": 2738, "rizz_lizz": 3631, "bombing": 627, "position": 3271, "fit": 1685, "personal": 3178, "screaming": 3776, "fix": 1688, "blown": 614, "christie": 879, "imo": 2170, "crew": 1102, "better": 574, "production": 3349, "401": 146, "400": 144, "weeks": 4632, "maathewdavis": 2659, "easier": 1408, "pleasurable": 3237, "eventually": 1527, "jackwitty": 2295, "poised": 3250, "iowa": 2263, "combination": 952, "dem": 1233, "weakness": 4617, "slate": 3913, "safe": 3709, "supporter": 4124, "finish": 1679, "break": 661, "hispanics": 2052, "marthamaccallum": 2714, "hiring": 2050, "maxinerunner": 2736, "focus": 1708, "schools": 3762, "autographed": 471, "tourism": 4326, "bank": 507, "realjoemurray": 3476, "rhetoric": 3599, "alex": 326, "ericshawnonfox": 1508, "classified": 903, "arrested": 431, "chuck": 883, "detroit": 1270, "grows": 1922, "explode": 1565, "good": 1874, "victories": 4529, "victory": 4531, "reasonable": 3483, "ovation": 3082, "addicted": 268, "went": 4637, "soft": 3940, "377": 138, "mean": 2744, "lifted": 2564, "financial": 1675, "directly": 1293, "independent": 2195, "knockout": 2444, "series": 3821, "crimes": 1106, "abuse": 238, "group": 1918, "celebrating": 807, "vincemcmahon": 4541, "used": 4486, "forgot": 1735, "navy": 2924, "crimea": 1105, "message": 2786, "rt": 3680, "shame": 3844, "network": 2949, "wgc": 4641, "108": 25, "open": 3049, "ha": 1942, "pensacola": 3167, "nicklaus": 2969, "george": 1825, "millions": 2812, "encourage": 1464, "rare": 3450, "foolishly": 1722, "exxonmobil": 1573, "foxbusiness": 1749, "gov": 1888, "venezuela": 4514, "gop": 1877, "exclusive": 1542, "foundation": 1745, "hillaryclinton": 2046, "arizona": 425, "turning": 4418, "love": 2635, "trumpadvice": 4377, "tops": 4314, "harry": 1975, "fave": 1628, "given": 1845, "free": 1766, "solution": 3946, "244": 104, "masterpiece": 2723, "vets": 4522, "piersmorgan": 3209, "wanted": 4587, "silent": 3895, "liljon": 2575, "savehicno1": 3739, "billkristol": 586, "created": 1098, "starts": 4022, "messages": 2787, "days": 1177, "heading": 1997, "pence": 3161, "lousy": 2634, "heck": 2015, "100000": 16, "signature": 3890, "kingdom": 2437, "moving": 2886, "9pm": 220, "loud": 2629, "hire": 2048, "stewart": 4046, "rand": 3444, "ianziering": 2137, "features": 1637, "grade": 1897, "primary": 3331, "hearing": 2006, "hook": 2079, "spinning": 3989, "wasn": 4603, "hear": 2004, "176": 67, "instagram": 2229, "priority": 3335, "windmills": 4659, "basketball": 525, "service": 3827, "brandiglanville": 655, "sarcasm": 3730, "lawsuits": 2504, "girls": 1843, "carry": 779, "fiction": 1657, "needed": 2935, "master": 2721, "thoughts": 4263, "tom": 4303, "hollywood": 2069, "john": 2337, "penalties": 3159, "filibuster": 1668, "ceiling": 803, "murder": 2899, "collapse": 942, "happily": 1968, "ted": 4198, "yourfired": 4735, "albert": 325, "cancel": 748, "negotiating": 2940, "wisdom": 4670, "candidates": 754, "nancy": 2912, "western": 4640, "wasted": 4606, "kept": 2410, "scarborough": 3753, "positively": 3274, "donaldtrump": 1341, "begins": 549, "nflcommish": 2963, "target": 4172, "showed": 3877, "nominate": 2977, "immigrants": 2168, "negotiator": 2943, "nations": 2920, "project": 3359, "matter": 2731, "street": 4071, "williams": 4653, "charlie": 849, "hacking": 1945, "feeling": 1642, "brilliant": 673, "realestate": 3470, "benghazi": 564, "arabia": 416, "humble": 2119, "sees": 3798, "respecting": 3573, "boston": 642, "modern": 2846, "mind": 2813, "upset": 4481, "glass": 1850, "thr": 4265, "talking": 4166, "loudobbs": 2631, "seen": 3797, "picks": 3203, "seek": 3796, "tells": 4206, "dozen": 1365, "forced": 1727, "strength": 4073, "genuine": 1824, "thoroughly": 4261, "responsible": 3578, "snow": 3934, "subjects": 4097, "luxury": 2654, "doors": 1352, "paris": 3114, "unfair": 4450, "quarterback": 3416, "philadelphia": 3188, "citizens": 892, "thrilled": 4269, "kyleraccio": 2462, "meenah83": 2756, "patti_page": 3144, "savvy": 3743, "corruption": 1066, "mouth": 2880, "meddling": 2750, "plenty": 3240, "hearts": 2010, "oil": 3038, "grave": 1902, "attitude": 462, "dummy": 1394, "stupid": 4092, "don": 1337, "environmental": 1496, "palos": 3105, "mandate": 2691, "professor": 3354, "wreck": 4705, "dog": 1330, "swamp": 4145, "reputation": 3563, "women": 4678, "deeply": 1211, "entertaining": 1487, "voting": 4568, "germany": 1830, "scream": 3775, "came": 741, "saying": 3746, "sanctuary": 3725, "bomb": 625, "inspire": 2225, "pope": 3269, "departing": 1245, "lewis": 2551, "meetings": 2759, "retire": 3587, "ending": 1467, "radio": 3432, "solutions": 3947, "dopey": 1355, "participate": 3117, "earth": 1407, "whitehouse": 4646, "dopes": 1354, "enjoyed": 1483, "letterman": 2545, "lessons": 2541, "usnewstravel": 4491, "touches": 4321, "busy": 723, "headline": 1998, "catham11": 792, "explain": 1561, "character": 840, "hrs": 2108, "sugar": 4112, "rico": 3609, "theme": 4248, "touched": 4320, "rich": 3605, "mileswynn3": 2807, "folks": 1713, "announce": 374, "constant": 1032, "rice": 3604, "shortcakessheep": 3871, "african": 294, "personality": 3179, "wearing": 4623, "trumpnewyork": 4388, "rolemodel": 3651, "10": 12, "watch": 4608, "13": 44, "coast": 936, "criticized": 1113, "amazon": 342, "covered": 1086, "vaccinations": 4500, "wedding": 4627, "report": 3548, "nasty": 2915, "dr": 1366, "tribute": 4356, "14": 51, "bankruptcy": 509, "deny": 1244, "runs": 3694, "bar": 512, "die": 1282, "covering": 1087, "nicely": 2967, "dannyzucker": 1164, "collusion": 946, "bay": 528, "twice": 4426, "bad": 496, "shots": 3874, "18": 68, "release": 3524, "cufflinks": 1129, "steal": 4035, "secretary": 3790, "respond": 3575, "blew": 606, "decides": 1200, "disaster": 1298, "fair": 1595, "tattoos": 4176, "reported": 3549, "testing": 4226, "proclaims": 3344, "decided": 1199, "bed": 542, "trumpdoral": 4380, "horrendous": 2084, "fail": 1589, "christian": 877, "hammer": 1951, "best": 570, "subject": 4096, "02": 4, "03": 5, "00": 0, "said": 3711, "06": 8, "07": 9, "04": 6, "05": 7, "lots": 2627, "away": 483, "09": 11, "gentleman": 1823, "ailes": 311, "trumpferrypoint": 4381, "unable": 4440, "olympics": 3042, "hopefully": 2081, "sorts": 3962, "pinehurst": 3212, "360": 135, "6000000": 173, "warrior": 4599, "lazy": 2507, "omg": 3044, "korea": 2452, "adding": 269, "dumber": 1391, "weak": 4616, "wh": 4642, "chrischristie": 873, "383": 140, "wear": 4622, "ananavarro": 357, "dedication": 1207, "news": 2956, "picking": 3202, "debt": 1192, "received": 3489, "vp": 4569, "beck": 541, "country": 1075, "ill": 2157, "opportunities": 3060, "champ": 826, "lauer": 2492, "pat": 3133, "players": 3231, "rockinjoe1": 3643, "games": 1800, "planned": 3223, "hated": 1982, "hypocrites": 2134, "studio": 4088, "donnell": 1346, "torture": 4316, "asked": 443, "negotiation": 2941, "clowns": 925, "hdiallo": 1994, "bored": 636, "tone": 4305, "legs": 2537, "palin": 3102, "epidemic": 1498, "2nd": 117, "karen": 2388, "arsenio": 435, "path": 3134, "tony": 4308, "woofeous": 4685, "kwrcrow": 2460, "trust": 4399, "sassysexylove": 3732, "michmusm": 2798, "kateplusmy8": 2395, "speak": 3973, "gratitude": 1901, "strong": 4077, "asks": 445, "basis": 524, "union": 4457, "buffett": 701, "9th": 221, "tiny": 4292, "quickly": 3420, "realitytvbliss": 3473, "commission": 967, "stadium": 4006, "expected": 1555, "lovely": 2637, "pro": 3339, "idol": 2150, "location": 2603, "este": 1518, "25k": 108, "life": 2561, "partnership": 3122, "families": 1607, "easy": 1414, "attacked": 455, "drugs": 1386, "concerning": 1001, "ailsa": 312, "worker": 4690, "search": 3783, "wish": 4672, "fest": 1655, "lift": 2563, "tapping": 4171, "personally": 3180, "catch": 790, "deductibles": 1208, "worked": 4689, "haters": 1984, "spin": 3988, "signing": 3892, "162": 63, "gracious": 1896, "unpopular": 4472, "east": 1410, "tank": 4168, "presidency": 3312, "mogul": 2847, "fallon": 1602, "pollster": 3265, "kentucky": 2407, "air": 314, "employ": 1462, "ugly": 4435, "gardibates": 1805, "ain": 313, "gumbel": 1934, "hates": 1985, "stopping": 4060, "aid": 310, "property": 3370, "realbencarson": 3467, "study": 4089, "mistake": 2833, "seven": 3839, "changed": 835, "cont": 1038, "played": 3229, "iq": 2265, "allows": 338, "defeated": 1213, "fiorina": 1681, "player": 3230, "fortunemagazine": 1742, "writes": 4710, "experts": 1560, "brutal": 692, "ia": 2135, "victims": 4528, "id": 2144, "trusted": 4400, "memorial": 2772, "spy": 4001, "soldier": 3943, "things": 4254, "bluejoni": 617, "jerry": 2315, "clearly": 907, "palmer": 3104, "rnc": 3633, "complex": 994, "damages": 1154, "babies": 489, "incorrectly": 2190, "liberal": 2555, "couple": 1078, "david_cameron": 1173, "fairly": 1596, "blames": 600, "pick": 3200, "hang": 1961, "evil": 1531, "hand": 1953, "todayshow": 4300, "afraid": 292, "bloomberg": 612, "rex": 3598, "jealous": 2306, "tyson": 4434, "protected": 3375, "opportunity": 3061, "blamed": 599, "tune": 4408, "cycle": 1145, "shortly": 3872, "thx": 4275, "1600": 62, "youre": 4733, "suffering": 4110, "ocean": 3023, "hispanic": 2051, "savings": 3741, "client": 910, "greatest": 1906, "incapable": 2184, "mother": 2874, "dmregister": 1321, "claims": 899, "alabama": 322, "misrepresents": 2822, "corporate": 1062, "investments": 2257, "left": 2530, "opinions": 3057, "learning": 2522, "capitol": 759, "just": 2379, "unemployment": 4449, "yea": 4724, "photo": 3195, "warmest": 4592, "sleepy": 3919, "swearing": 4147, "quotes": 3425, "fighters": 1662, "thanks": 4232, "human": 2118, "facts": 1588, "yep": 4728, "yes": 4729, "previous": 3324, "johnkasich": 2338, "jose": 2357, "candidate": 753, "aberdeenshire": 230, "royal": 3677, "clintons": 914, "howardkurtz": 2106, "shout": 3876, "spread": 3998, "rumor": 3689, "innocent": 2214, "prison": 3336, "save": 3737, "hat": 1980, "latest": 2490, "theeconomist": 4241, "gave": 1811, "presidents": 3315, "casting": 789, "dignity": 1288, "sailors": 3712, "reagan": 3465, "breaks": 663, "online": 3047, "looks": 2614, "possible": 3276, "caps": 760, "arab": 415, "possibly": 3277, "ericleebow": 1506, "birth": 592, "performance": 3173, "judge": 2367, "apart": 393, "highly": 2040, "usually": 4495, "dreams": 1372, "vanity": 4507, "constitution": 1034, "brought": 689, "59": 170, "58": 169, "gift": 1836, "beliefheals": 555, "55": 166, "54": 165, "57": 168, "56": 167, "orlando": 3073, "unnecessary": 4470, "53": 164, "52": 163, "informative": 2209, "suffers": 4111, "steps": 4040, "overrated": 3084, "night": 2971, "allenwest": 333, "security": 3793, "attorney": 463, "hunt": 2122, "honored": 2077, "deal": 1181, "people": 3168, "sends": 3812, "dishonest": 1310, "rocked": 3641, "crown": 1121, "dead": 1180, "50": 159, "wwe": 4716, "born": 638, "donald": 1338, "seanhannity": 3781, "jupiter": 2376, "election": 1438, "scoffed": 3768, "dear": 1186, "nytimes": 3008, "asia": 441, "counts": 1076, "enemies": 1475, "congratulate": 1015, "friend": 1771, "humor": 2120, "richer": 3607, "phenomenal": 3186, "diamondandsilk": 1278, "normal": 2984, "fox": 1747, "comments": 964, "sternshow": 4043, "asking": 444, "honesty": 2075, "drudge": 1383, "cnn": 931, "beating": 536, "adorable": 280, "price": 3326, "masterbaxter8": 2722, "jinping": 2327, "pls": 3241, "bold": 624, "deleted": 1228, "marketing": 2709, "predicting": 3298, "plz": 3243, "decisions": 1202, "drudge_report": 1384, "huffingtonpost": 2115, "criminals": 1108, "schedule": 3757, "markhalperin": 2711, "bahia6085": 498, "losing": 2622, "eye": 1574, "post": 3278, "manufacturing": 2695, "super": 4119, "properties": 3369, "trophy": 4366, "projected": 3360, "laurencristmann": 2499, "everyday": 1529, "socalmike_sd": 3936, "attacks": 457, "dollars": 1333, "months": 2862, "words": 4687, "choke": 867, "mocking": 2843, "magazine": 2670, "montana": 2860, "plus": 3242, "afternoon": 297, "commit": 969, "efforts": 1431, "bannon": 511, "raised": 3436, "statements": 4028, "lied": 2559, "facility": 1582, "wasting": 4607, "lavar": 2500, "prisoners": 3337, "therealzach49": 4250, "dwight": 1401, "build": 702, "son": 3952, "foxnews": 1751, "thankful": 4231, "ppp": 3288, "winpropp": 4665, "balanced": 500, "old": 3041, "anderson": 359, "soon": 3954, "jollygoodman181": 2348, "chucktodd": 884, "america": 347, "abt": 237, "crowd": 1119, "support": 4122, "constantly": 1033, "legislation": 2535, "fight": 1660, "absolutely": 236, "golfchannel": 1866, "victorious": 4530, "editor": 1423, "way": 4613, "greatness": 1908, "letter": 2544, "icon": 2141, "war": 4590, "purposely": 3405, "happy": 1969, "lowest": 2644, "head": 1995, "amateur": 340, "form": 1737, "offer": 3028, "proudly": 3382, "recommend": 3496, "cuban": 1128, "landing": 2476, "ford": 1729, "failure": 1593, "heat": 2011, "uncle": 4442, "melania": 2764, "indiana": 2198, "amspec": 355, "surrender": 4139, "true": 4368, "deepest": 1210, "trump4prez": 4375, "week": 4629, "b4": 488, "congratulations": 1017, "isis": 2275, "builds": 706, "inside": 2218, "morning": 2867, "boss": 640, "ruined": 3684, "trumpforpresident": 4382, "adore": 281, "winery": 4661, "mountain": 2879, "daddy": 1148, "generals": 1817, "chriswerner1988": 881, "kaine": 2385, "150": 56, "promises": 3364, "realollietaylor": 3478, "disgrace": 1307, "moore": 2865, "_snurk": 222, "classic": 902, "159": 59, "stronger": 4078, "tournament": 4327, "medicaid": 2752, "proven": 3384, "drive": 1375, "somebody": 3950, "exist": 1550, "promised": 3363, "hillarysusans": 2047, "tea": 4186, "ship": 3858, "check": 854, "negotiations": 2942, "regime": 3514, "nh": 2964, "nj": 2975, "handel": 1955, "kudos": 2459, "churchill": 886, "faces": 1580, "commercials": 966, "stake": 4009, "tip": 4293, "actor": 260, "reality": 3472, "negotiators": 2944, "tim": 4286, "beheading": 553, "setting": 3835, "role": 3650, "holding": 2063, "soundly": 3964, "test": 4224, "tie": 4278, "unwilling": 4478, "roll": 3652, "picture": 3204, "brothers": 688, "phoenix": 3190, "irma": 2271, "models": 2845, "haha": 1946, "welcome": 4634, "update": 4480, "phony": 3194, "journey": 2362, "serta": 3823, "businessman": 720, "rolling": 3653, "charity": 845, "hurt": 2128, "weekend": 4630, "carlos": 772, "125": 42, "stops": 4061, "billion": 583, "99": 219, "sanctions": 3724, "apologizing": 397, "happening": 1965, "apology": 398, "phone": 3191, "rhino848484": 3600, "daily": 1149, "luckier": 2649, "warm": 4591, "reception": 3493, "time": 4288, "push": 3406, "drjamescabot": 1379, "jaayzen": 2289, "profits": 3356, "andybran": 365, "sebelius": 3786, "concept": 998, "doctor": 1324, "chain": 821, "pilots": 3211, "excellent": 1536, "rod": 3646, "fabricated": 1576, "leads": 2513, "roy": 3676, "manager": 2690, "latinos": 2491, "ice": 2139, "grateful": 1900, "90": 208, "battle": 527, "shot": 3873, "hole": 2065, "429": 149, "certainly": 819, "factories": 1587, "honoring": 2078, "1941": 74, "obamacare": 3012, "disgusting": 1309, "jeffjeffsc777": 2310, "passage": 3126, "environment": 1495, "chances": 833, "charge": 841, "praised": 3291, "videos": 4533, "ivankatrump": 2287, "terror": 4220, "realdbp": 3468, "suffered": 4109, "veterans": 4521, "ride": 3611, "tenacious": 4209, "vet": 4519, "jerk": 2314, "billionaire": 584, "kellyfile": 2405, "choice": 865, "wharton": 4643, "vegas": 4513, "chiefs": 859, "stays": 4034, "word": 4686, "trouble": 4367, "exact": 1533, "expectations": 1554, "minute": 2818, "cool": 1056, "impressive": 2179, "level": 2548, "did": 1279, "turns": 4420, "philippines": 3189, "gun": 1935, "venue": 4515, "standards": 4014, "leave": 2523, "solved": 3949, "soooo": 3957, "settle": 3836, "pauladuvall2": 3148, "team": 4189, "quick": 3419, "intheelections": 2250, "guy": 1938, "spent": 3987, "round": 3672, "yourefired": 4734, "jurciuoli19": 2377, "talked": 4165, "says": 3747, "villa": 4539, "tougher": 4323, "dealing": 1182, "samahdanash": 3720, "lovusa4": 2641, "obsolete": 3015, "cyber": 1144, "sign": 3888, "colin": 940, "cost": 1067, "184": 69, "shirts": 3861, "reply": 3547, "run": 3690, "rough": 3671, "majors": 2681, "laughingstock": 2496, "stands": 4016, "mt": 2895, "disease": 1306, "agrees": 307, "current": 1135, "remembered": 3535, "health": 2001, "suspect": 4144, "goes": 1861, "international": 2244, "falling": 1601, "appeal": 400, "filled": 1669, "temperatures": 4208, "supporting": 4126, "burn": 713, "jury": 2378, "stjude": 4049, "funeral": 1786, "muslim": 2903, "water": 4612, "hate": 1981, "witch": 4676, "groups": 1919, "address": 272, "confused": 1013, "roaring": 3636, "teacher": 4188, "change": 834, "wait": 4574, "oan": 3009, "sending": 3811, "hbo": 1993, "canadian": 747, "healthy": 2003, "mumbai": 2898, "funded": 1783, "united": 4460, "trial": 4355, "accomplished": 245, "ineffective": 2201, "franklin": 1761, "proclamation": 3345, "patriotic": 3141, "hospitality": 2090, "bob": 621, "ok": 3039, "dumb": 1390, "shootings": 3867, "elect": 1436, "emmanuelmacron": 1458, "merely": 2781, "sharpton": 3850, "prefer": 3301, "shark": 3847, "logical": 2605, "conversations": 1053, "sincerely": 3898, "patriots": 3142, "fake": 1598, "fool": 1720, "jordanspieth": 2356, "fbi": 1634, "rarely": 3451, "crisis": 1111, "market": 2708, "hotels": 2098, "everybody": 1528, "americafirst": 348, "voices": 4558, "wealth": 4618, "working": 4692, "prove": 3383, "sake": 3713, "tillerson": 4285, "angry": 368, "allaboutthetea_": 331, "visit": 4551, "predictions": 3300, "angela": 366, "sports": 3996, "parties": 3119, "insider": 2219, "live": 2592, "andy": 364, "iphone": 2264, "wondering": 4682, "prez": 3325, "clewandowski_": 909, "anniversary": 373, "pres": 3307, "loving": 2640, "justinrose99": 2383, "commissioner": 968, "kerry": 2411, "sessions": 3830, "afford": 289, "flying": 1706, "oregon": 3068, "clue": 928, "ignorant": 2151, "savior": 3742, "fitsnews": 1687, "cases": 785, "effort": 1430, "behalf": 551, "insights": 2222, "byronyork": 728, "pageant": 3099, "slogan": 3920, "pushed": 3407, "car": 762, "originally": 3072, "pretend": 3322, "believer": 557, "believes": 558, "reviews": 3596, "vega": 4512, "values": 4504, "hope": 2080, "mmayer87": 2840, "entrepreneurs": 1493, "following": 1718, "flunky": 1704, "newspapers": 2960, "fallontonight": 1603, "bridges": 671, "admired": 276, "crazy": 1095, "plaza": 3235, "trump": 4370, "figure": 1664, "predict": 3296, "december": 1196, "awesome": 484, "winston": 4667, "fuck": 1778, "jdickerson": 2305, "topic": 4312, "heard": 2005, "donaldtrumpforpresident": 1343, "sued": 4107, "dropped": 1381, "council": 1071, "allowed": 336, "spa": 3970, "dennis": 1243, "stole": 4054, "frankcaliendo": 1760, "theapprentice": 4236, "mariadomenique9": 2703, "monitoring": 2857, "winter": 4668, "discussion": 1305, "exceptional": 1537, "moves": 2883, "dinner": 1289, "write": 4707, "beat": 534, "rubio": 3681, "vital": 4554, "vancouver": 4506, "pure": 3403, "endorsement": 1472, "nyc": 3004, "speaks": 3977, "sworn": 4151, "dope": 1353, "economy": 1420, "146": 54, "hof": 2061, "product": 3348, "mar": 2696, "sassypantsjj": 3731, "landmark": 2477, "140": 52, "information": 2208, "critics": 1115, "confirmed": 1010, "snl": 3933, "stuart": 4083, "spot": 3997, "kylekisskiss": 2461, "lucky": 2650, "islamic": 2277, "mac": 2660, "4th": 158, "mad": 2666, "date": 1169, "end": 1465, "heroes": 2028, "destructive": 1266, "revealed": 3594, "grow": 1920, "unity": 4461, "man": 2688, "golfers": 1869, "natural": 2923, "neck": 2933, "80": 198, "121": 39, "stupidly": 4094, "sr": 4004, "st": 4005, "golfer": 1868, "inform": 2207, "123": 40, "jail": 2296, "block": 609, "unleash": 4465, "sc": 3748, "arrived": 432, "talk": 4164, "typical": 4433, "realgilbert": 3471, "cute": 1140, "serving": 3828, "joenbc": 2336, "shoes": 3864, "midas": 2799, "food": 1719, "trumpgolf": 4384, "wishing": 4675, "years": 4727, "brain": 651, "episodes": 1500, "shake": 3842, "hack": 1943, "whats": 4644, "cold": 938, "birds": 591, "christmas": 880, "thomas": 4259, "86": 204, "police": 3253, "djt": 1320, "wallace": 4584, "salesdan48": 3716, "interesting": 2242, "jim": 2323, "amazing": 341, "lyin": 2655, "civil": 895, "offers": 3029, "doonbeg": 1350, "politico": 3260, "pays": 3153, "policy": 3255, "mail": 2674, "msnbc": 2893, "main": 2676, "decades": 1195, "rketeltas": 3632, "texas": 4227, "happened": 1964, "non": 2980, "thebrodyfile": 4239, "finance": 1673, "views": 4537, "matches": 2726, "smarter": 3927, "killer": 2427, "hilarious": 2042, "sooner": 3955, "nation": 2917, "lunch": 2651, "qualified": 3413, "taliban": 4162, "makeamericagreatagain": 2683, "wealthy": 4619, "arriving": 433, "nov": 2989, "ppl": 3287, "hall": 1949, "84": 201, "wont": 4683, "term": 4212, "nikkio": 2974, "aluminum": 339, "lies": 2560, "reince": 3521, "james": 2300, "frank": 1759, "didn": 1280, "embarrassing": 1454, "beg": 544, "accomplishments": 246, "maher": 2673, "rock": 3640, "amnesty": 352, "quarter": 3415, "em": 1450, "el": 1435, "republican": 3560, "square": 4003, "fired": 1682, "mexico": 2791, "challenged": 824, "ed": 1421, "autumnandews08": 472, "crushing": 1124, "trumpturnberry": 4396, "challenges": 825, "ran": 3443, "replay": 3546, "ex": 1532, "entering": 1486, "signage": 3889, "hl3tweets": 2058, "et": 1519, "happen": 1963, "teams": 4194, "disasters": 1299, "scottish": 3773, "tried": 4358, "canada": 746, "living": 2595, "shown": 3879, "accomplish": 244, "jackson": 2293, "opened": 3050, "3rd": 142, "scottwalker": 3774, "terrorist": 4222, "oklahoma": 3040, "lowlife": 2645, "looking": 2613, "seriously": 3822, "investigation": 2254, "papers": 3110, "hacked": 1944, "internet": 2245, "roger": 3649, "dominate": 1335, "610": 176, "shows": 3880, "rebuilding": 3487, "cabinet": 730, "timbowoods": 4287, "monster": 2859, "state": 4024, "cars": 781, "https": 2110, "million": 2811, "possibility": 3275, "quite": 3422, "disrespect": 1314, "pistorious": 3215, "california": 736, "demanding": 1235, "carl": 771, "anchor": 358, "marine": 2704, "card": 764, "care": 766, "2014": 87, "advance": 283, "joanrivers": 2330, "couldn": 1070, "language": 2480, "yup": 4742, "transition": 4346, "breitbart": 665, "british": 679, "honest": 2073, "thing": 4253, "thegarybusey": 4245, "lindsey": 2578, "place": 3216, "massive": 2720, "invitation": 2259, "golfswingshirt": 1871, "global": 1853, "think": 4255, "waited": 4575, "1000": 14, "blind": 608, "xi": 4717, "saving": 3740, "stevens": 4045, "spoken": 3994, "conservatives": 1026, "opec": 3048, "rino": 3619, "untrue": 4476, "americans": 350, "fast": 1619, "rink": 3618, "15000": 57, "vote": 4560, "impossible": 2177, "sounds": 3965, "ways": 4615, "sheriffclarke": 3855, "tomorrow": 4304, "ripping": 3624, "size": 3907, "city": 894, "little": 2590, "checked": 855, "espn": 1512, "district": 1318, "stuck": 4086, "caught": 794, "trillion": 4360, "europe": 1521, "potusabroad": 3281, "leezagibbons": 2529, "carson": 782, "returns": 3591, "conservation": 1024, "tragic": 4341, "tell": 4204, "lobbyists": 2601, "convention": 1051, "white": 4645, "mittromney": 2839, "speaking": 3976, "gives": 1846, "kpdelbridge": 2454, "eyes": 1575, "fraction": 1754, "malachinorris": 2687, "purchase": 3401, "shawn": 3852, "brains": 652, "moscow": 2873, "surges": 4133, "proving": 3386, "accurately": 252, "alan": 323, "broadcast": 681, "released": 3525, "hillary": 2045, "ridiculous": 3612, "bravolebrity1": 659, "copy": 1058, "representing": 3557, "appreciated": 406, "11": 27, "professionals": 3353, "television": 4203, "12": 37, "15": 55, "lmao": 2597, "17": 66, "16": 60, "19": 70, "favors": 1631, "gotta": 1886, "buzzfeed": 727, "optimism": 3063, "chingaling3": 864, "computer": 997, "racists": 3430, "wins": 4666, "cards": 765, "marines": 2705, "russia": 3699, "paulson": 3149, "governorpataki": 1892, "newday": 2954, "voters": 4564, "san": 3723, "sam": 3719, "selection": 3801, "topics": 4313, "turned": 4417, "bentrolling": 565, "fucking": 1779, "say": 3745, "slam": 3912, "comedian": 956, "erictrump": 1509, "distorted": 1317, "anger": 367, "allen": 332, "recover": 3500, "saw": 3744, "worst": 4699, "kevin": 2413, "sat": 3733, "prosperity": 3373, "backontrackusa": 494, "coal": 934, "mitt": 2838, "veteran": 4520, "ideas": 2147, "1000000": 17, "mrmet41": 2889, "terrific": 4218, "equipment": 1502, "ideal": 2146, "potential": 3279, "forming": 1738, "wanting": 4588, "primaries": 3330, "channel": 839, "towers": 4329, "200": 80, "begin": 547, "sure": 4131, "205": 95, "norman": 2985, "trace": 4335, "opposite": 3062, "track": 4337, "melrivers": 2767, "knew": 2440, "fails": 1592, "paid": 3100, "pastor": 3131, "secy": 3794, "assault": 448, "importantly": 2176, "complaints": 990, "knowingly": 2447, "jackshallis": 2292, "amercia": 346, "planning": 3224, "michelle": 2796, "forever": 1731, "especially": 1511, "surprising": 4138, "considered": 1029, "average": 476, "proud": 3381, "sale": 3714, "mrs": 2890, "federal": 1639, "natashaownfan": 2916, "soho": 3941, "professional": 3352, "effect": 1428, "laws": 2502, "shop": 3868, "rating": 3454, "walking": 4582, "playoffs": 3233, "surplus": 4135, "enemy": 1476, "windfarms": 4658, "turnberry": 4415, "cheap": 852, "merit": 2782, "representatives": 3556, "russian": 3700, "bright": 672, "thefix": 4244, "coldest": 939, "corner": 1061, "mister": 2835, "maine": 2677, "fifth": 1659, "kissangel864": 2438, "slot": 3922, "weapons": 4621, "slow": 3923, "katrinapierson": 2396, "supporters": 4125, "genius": 1821, "scottienhughes": 3772, "husband": 2131, "crime": 1104, "tears": 4196, "going": 1862, "black": 596, "travesty": 4349, "espngolic": 1513, "watching": 4611, "fort": 1740, "congressional": 1019, "carolina": 775, "bridge": 670, "directed": 1291, "closed": 918, "not_that_actor": 2987, "merkel": 2783, "horrible": 2085, "freezing": 1768, "patriot": 3140, "truly": 4369, "tens": 4211, "youxia88": 4738, "killers": 2428, "nearly": 2930, "gee": 1813, "awaiting": 477, "celebrate": 806, "prime": 3332, "knight276": 2442, "regarding": 3512, "reading": 3463, "mattis": 2734, "girl": 1841, "seldom": 3800, "isnt": 2280, "worried": 4696, "skyline": 3911, "miles": 2806, "losers": 2620, "predicted": 3297, "michaelcohen212": 2795, "pennybishop16": 3166, "uswomensopen": 4496, "discussing": 1304, "16th": 65, "vision": 4550, "golfdigestmag": 1867, "ignored": 2153, "declared": 1205, "concert": 1003, "ericnlin": 1507, "committed": 971, "ends": 1474, "seat": 3785, "cologne": 947, "elected": 1437, "roniseale": 3659, "college": 945, "sean": 3780, "parking": 3116, "murdered": 2900, "york": 4731, "sport": 3995, "runoff": 3693, "wonder": 4680, "planet": 3222, "madison": 2667, "cbsnews": 800, "farmers": 1615, "crooked": 1117, "harvey": 1978, "review": 3595, "amen": 343, "sites": 3904, "vaccines": 4502, "outside": 3078, "fearless": 1636, "dummies": 1393, "toying": 4331, "affordable": 290, "forward": 1743, "notice": 2988, "infrastructure": 2211, "jobs": 2332, "august": 465, "anti": 385, "spitzer": 3992, "approvals": 411, "screen": 3777, "points": 3249, "style": 4095, "jr": 2364, "rapidly": 3449, "blame": 598, "awards": 481, "hurts": 2130, "jets": 2319, "comeback": 955, "killing": 2429, "come": 954, "danamira": 1159, "jfk": 2321, "reaction": 3460, "talented": 4161, "embarrassment": 1455, "missusa": 2832, "according": 248, "contract": 1046, "called": 737, "gstephanopoulos": 1924, "tour": 4324, "loudly": 2630, "comey": 958, "unfairly": 4451, "desperately": 1256, "senator": 3808, "theellenshow": 4242, "comes": 957, "duty": 1399, "pakistan": 3101, "madness": 2668, "key": 2415, "cancer": 751, "mails": 2675, "color": 948, "smartest": 3928, "153": 58, "stephenfhayes": 4039, "mccain": 2741, "60": 172, "61": 175, "pol": 3251, "63": 178, "64": 180, "65": 181, "66": 182, "article": 438, "68": 184, "ordered": 3066, "writing": 4711, "nicole": 2970, "math": 2729, "caring": 770, "destroyed": 1263, "cities": 890, "100k": 18, "capable": 755, "west": 4639, "rebuild": 3486, "informed": 2210, "vacation": 4499, "turkey": 4412, "breath": 664, "subscription": 4101, "reuters": 3593, "pennjillette": 3163, "sentedcruz": 3818, "peaceful": 3156, "thenewsclub_us": 4249, "borders": 635, "hardly": 1973, "mary": 2716, "500": 160, "wants": 4589, "direction": 1292, "shopping": 3869, "635": 179, "30000": 122, "andrew": 362, "tiger": 4281, "photos": 3196, "wake": 4577, "minister": 2817, "penn": 3162, "sleazebag": 3916, "irrelevant": 2273, "spirit": 3991, "standard": 4013, "pilot": 3210, "sound": 3963, "developing": 1274, "polls": 3264, "straighten": 4067, "arnold": 430, "presidenttrump2016": 3317, "career": 767, "tragedy": 4340, "policies": 3254, "rushlimbaugh": 3697, "newspaper": 2959, "situation": 3906, "landslide": 2478, "margin": 2700, "taking": 4159, "coolest": 1057, "understand": 4445, "ive": 2288, "vickybrush": 4527, "donors": 1348, "determination": 1268, "engaged": 1480, "commander": 960, "canceled": 749, "bias": 575, "embrace": 1456, "minds": 2815, "zuker": 4745, "tigerwoods": 4282, "ironic": 2272, "return": 3588, "obnoxious": 3014, "technology": 4197, "fame": 1606, "foxandfriends": 1748, "par": 3111, "develop": 1272, "ron_fournier": 3657, "author": 467, "media": 2751, "congratulation": 1016, "bowl": 644, "surveillance": 4140, "misleading": 2820, "ceo": 816, "pac": 3095, "followers": 1717, "underestimate": 4444, "buys": 726, "damon": 1156, "dealt": 1184, "events": 1526, "sterling": 4041, "putin": 3410, "driver": 1377, "director": 1294, "bronx": 686, "running": 3692, "driven": 1376, "changing": 838, "totally": 4318, "mentally": 2776, "joycegoodman64": 2363, "drain": 1367, "dying": 1402, "largely": 2482, "pennsylvania": 3164, "trumptoronto": 4392, "constitutional": 1035, "know": 2445, "costs": 1069, "solve": 3948, "glorious": 1854, "daca": 1146, "republicans": 3561, "reward": 3597, "justify": 2381, "gdp": 1812, "summer": 4116, "morons": 2872, "disloyal": 1312, "rooting": 3664, "210": 98, "money": 2856, "rest": 3579, "violent": 4545, "kill": 2425, "windfarm": 4657, "kasich": 2393, "touch": 4319, "pols": 3266, "priceless": 3327, "speed": 3982, "kneeling": 2439, "weekly": 4631, "blow": 613, "til": 4283, "death": 1187, "clueless": 929, "tooooo": 4311, "thinking": 4256, "rose": 3667, "trumpgolfla": 4386, "improvement": 2180, "cc": 801, "lets": 2543, "mariabartiromo": 2702, "treatment": 4353, "reilly": 3520, "jong": 2354, "struck": 4082, "ca": 729, "momentum": 2851, "ross": 3669, "real": 3466, "jake": 2297, "schwarzenegger": 3765, "spectacular": 3979, "code": 937, "rules": 3688, "handling": 1958, "virginia": 4546, "gonna": 1873, "period": 3174, "amy": 356, "traffic": 4339, "mon": 2853, "listening": 2588, "amp": 354, "disappointed": 1297, "dare": 1167, "ruled": 3687, "johnlegere": 2339, "fortune": 1741, "intel": 2236, "kennedy": 2406, "endorses": 1473, "62": 177, "bail": 499, "server": 3826, "facing": 1583, "oblivion": 3013, "blackberry": 597, "served": 3825, "tower": 4328, "carrillo_pete": 778, "trying": 4404, "making": 2686, "obstruct": 3016, "pepsidaisy": 3169, "exposed": 1567, "carolde": 774, "meetthepress": 2760, "competition": 986, "realdonaldtrump": 3469, "jacknicklaus": 2291, "loudobbsnews": 2632, "69": 185, "racial": 3428, "rocks": 3645, "joan": 2328, "thinks": 4257, "reasons": 3484, "booming": 633, "scandals": 3752, "poll": 3262, "confirm": 1009, "memories": 2773, "noon": 2982, "recorded": 3498, "unmatched": 4469, "moon": 2863, "voice": 4557, "critical": 1112, "deficit": 1218, "afrodeziak": 296, "911": 210, "restoring": 3583, "marklevinshow": 2712, "considering": 1030, "biased": 576, "football": 1724, "roast": 3637, "power": 3285, "quit": 3421, "leno": 2538, "iconic": 2142, "slaughter": 3914, "broken": 685, "leadership": 2511, "keatsben": 2399, "thailand": 4229, "exciting": 1541, "throw": 4270, "beaches": 533, "illegals": 2160, "trumpgolfdc": 4385, "comparison": 981, "stone": 4056, "central": 814, "841": 202, "oh": 3036, "island": 2278, "industry": 2200, "cares": 769, "discussed": 1303, "thousands": 4264, "addition": 270, "mugging": 2896, "medicare": 2754, "stand": 4012, "testimony": 4225, "referred": 3503, "road": 3634, "neilturner_": 2945, "howard": 2105, "ladies": 2467, "protests": 3380, "2nite": 118, "burning": 714, "communication": 974, "spreading": 3999, "blessed": 604, "johnny4arizona": 2341, "airlines": 317, "authorities": 468, "apologize": 395, "england": 1481, "mark": 2707, "grew": 1914, "legacy": 2531, "prepare": 3304, "area": 417, "aren": 419, "hey": 2030, "lol": 2606, "sides": 3886, "pic": 3199, "start": 4019, "mondays": 2855, "low": 2642, "stars": 4018, "dumping": 1396, "rag": 3433, "cspan": 1126, "combined": 953, "jones": 2353, "mornings": 2870, "757": 192, "complete": 991, "fleeing": 1695, "reduce": 3502, "huckabee": 2112, "pleased": 3236, "delayed": 1224, "strikes": 4076, "sophisticated": 3959, "reps": 3558, "taxreform": 4182, "ended": 1466, "announcement": 376, "hurricanes": 2126, "helicopter": 2018, "fighter": 1661, "promote": 3365, "4kmiddlebrook": 157, "buying": 725, "handsome": 1960, "pull": 3392, "rush": 3695, "fraud": 1763, "jonas": 2351, "circulation": 889, "rage": 3434, "2016election": 91, "bucket": 697, "geraldorivera": 1829, "dirty": 1295, "newtgingrich": 2961, "sleazy": 3917, "politically": 3257, "advantage": 284, "agree": 304, "shawnjohnson": 3853, "strongly": 4080, "gone": 1872, "cnbc": 930, "leaked": 2515, "citizenship": 893, "ag": 298, "taste": 4174, "turbines": 4411, "doug": 1362, "moved": 2881, "al": 321, "watches": 4610, "general": 1816, "cbs": 799, "leaker": 2516, "senses": 3815, "file": 1665, "racist": 3429, "girlfriend": 1842, "watched": 4609, "az": 487, "syrian": 4153, "defund": 1221, "stkhlder3": 4050, "incorrect": 2189, "heather": 2012, "wild": 4651, "idiot": 2148, "credibility": 1100, "green": 1910, "abolish": 234, "field": 1658, "unparalleled": 4471, "remarks": 3533, "fools": 1723, "puppy": 3399, "disgraceful": 1308, "ny": 3002, "poor": 3267, "jaketapper": 2298, "brandi": 654, "championship": 829, "donaldjtrumpjr": 1340, "congress": 1018, "multiple": 2897, "students": 4087, "rallies": 3439, "bombed": 626, "gifts": 1837, "podium": 3247, "important": 2175, "massachusetts": 2719, "coverage": 1085, "fresh": 1769, "chris": 871, "stocks": 4053, "pelosi": 3158, "africans": 295, "legal": 2532, "building": 704, "booked": 631, "assets": 450, "calls": 739, "wife": 4649, "invest": 2252, "tricks": 4357, "jamersonhayes": 2299, "hello": 2020, "fraudulent": 1764, "arianna": 422, "mass": 2718, "adam": 265, "missouri": 2829, "apparel": 399, "statedept": 4026, "starting": 4021, "original": 3071, "votetrump": 4566, "represent": 3554, "toure": 4325, "liar": 2552, "consider": 1027, "founder": 1746, "caused": 796, "instincts": 2231, "lack": 2466, "dollar": 1332, "month": 2861, "coach": 933, "talks": 4167, "follow": 1714, "faster": 1620, "religious": 3528, "children": 861, "careful": 768, "number": 2997, "ron": 3656, "tx": 4429, "tv": 4421, "empire": 1461, "thursday": 4274, "champions": 828, "riots": 3621, "trumpwinery": 4398, "program": 3357, "th": 4228, "smile": 3930, "enjoying": 1484, "presentation": 3310, "njoh1234": 2976, "mandela": 2692, "case": 784, "woman": 4677, "donaldtrump2016": 1342, "returned": 3589, "sitting": 3905, "far": 1613, "horror": 2087, "kraftywurker": 2456, "hard": 1971, "saved": 3738, "baton": 526, "trillions": 4361, "fan": 1610, "minded": 2814, "decide": 1198, "surprise": 4136, "awful": 485, "ticket": 4276, "difference": 1284, "condition": 1004, "treating": 4352, "moines": 2848, "norfolk": 2983, "cable": 731, "strategist": 4069, "celebrity": 809, "wsj": 4715, "list": 2585, "joined": 2344, "warrenbuffett": 4597, "gameanew": 1799, "large": 2481, "circuit": 888, "mile": 2805, "saudi": 3736, "liars": 2553, "megynkelly": 2763, "small": 3924, "fashion": 1618, "economically": 1418, "20th": 96, "ass": 446, "198": 77, "fence": 1652, "194": 73, "197": 76, "streets": 4072, "unheard": 4456, "mrinsaf": 2888, "193": 72, "192": 71, "past": 3130, "zero": 4743, "design": 1253, "lawyer": 2505, "pass": 3125, "link": 2582, "assaults": 449, "misrepresent": 2821, "leeza": 2528, "investment": 2256, "ribbon": 3601, "bully": 711, "putting": 3412, "sue": 4106, "abc": 226, "stood": 4057, "tcot": 4184, "richard": 3606, "clock": 916, "investing": 2255, "dailycaller": 1150, "eminent": 1457, "crush": 1123, "schumer": 3764, "version": 4517, "apologized": 396, "scientists": 3767, "corker": 1060, "learned": 2521, "charleshurt": 847, "public": 3389, "movement": 2882, "turmoil": 4413, "hasn": 1979, "5000": 161, "iran": 2266, "editorial": 1424, "sarasota": 3729, "ma": 2658, "unprofessional": 4474, "loose": 2615, "lobbyist": 2600, "21st": 100, "answers": 381, "hours": 2100, "cancelled": 750, "red": 3501, "disastrous": 1300, "196": 75, "nymag": 3006, "investigating": 2253, "november": 2990, "iraq": 2268, "25000": 106, "legend": 2533, "arena": 420, "speeches": 3981, "bible": 577, "ahead": 309, "inspired": 2226, "losses": 2624, "troops": 4365, "experience": 1557, "prior": 3334, "airport": 318, "advertising": 285, "rory": 3665, "social": 3937, "action": 258, "mentions": 2779, "luck": 2648, "inspires": 2227, "sticking": 4048, "followed": 1715, "megyn": 2762, "family": 1608, "kalevans": 2386, "father": 1625, "africa": 293, "busey": 716, "young": 4732, "ask": 442, "follower": 1716, "one4eternity": 3045, "enthusiasm": 1489, "trained": 4344, "broadway": 683, "ricardo": 3602, "gosh": 1881, "armed": 426, "fawning": 1633, "hurricaneharvey": 2125, "discuss": 1302, "attendance": 459, "khan": 2418, "takes": 4158, "beginning": 548, "destination": 1259, "finally": 1672, "nfl": 2962, "pearl": 3157, "amenities": 345, "fragrance": 1755, "gorgeous": 1879, "taken": 4157, "kick": 2419, "markets": 2710, "pay": 3150, "oreillyfactor": 3069, "plain": 3219, "israel": 2281, "diamond": 1277, "door": 1351, "knows": 2450, "company": 978, "traceadkins": 4336, "presedent": 3308, "excuse": 1544, "flag": 1692, "floyd": 1702, "newsmax_media": 2958, "stick": 4047, "broke": 684, "particular": 3118, "known": 2449, "nbc": 2925, "hurry": 2127, "producing": 3347, "glad": 1848, "foxnation": 1750, "town": 4330, "trump2016https": 4373, "keeping": 2400, "fatal": 1623, "debates": 1190, "hour": 2099, "middle": 2800, "science": 3766, "des": 1248, "sucks": 4105, "coalition": 935, "pr": 3289, "offended": 3027, "remain": 3529, "nebraska": 2931, "sent": 3817, "morgan": 2866, "learn": 2520, "dec": 1193, "evangelicals": 1522, "history": 2054, "beautiful": 539, "stubborn": 4085, "compare": 979, "scam": 3750, "celebapprentice": 805, "stated": 4025, "share": 3846, "ps": 3388, "accept": 242, "boycott": 648, "states": 4029, "biden": 579, "numbers": 2998, "purchased": 3402, "sense": 3814, "phrase": 3197, "tdudz5": 4185, "dress": 1373, "longest": 2610, "mainstream": 2678, "huge": 2116, "needs": 2936, "answer": 380, "court": 1082, "goal": 1857, "awkward": 486, "bedminster": 543, "acts": 261, "patton": 3145, "stayed": 4032, "royschuhmacher": 3678, "worry": 4697, "fed": 1638, "explains": 1564, "vietnam": 4534, "schultz": 3763, "plant": 3226, "driving": 1378, "plans": 3225, "rude": 3682, "paranormalfact": 3112, "advice": 286, "trumpcollection": 4379, "different": 1285, "roads": 3635, "entrepreneurship": 1494, "tries": 4359, "plane": 3221, "blood": 611, "coming": 959, "invasion": 2251, "ethics": 1520, "sloppy": 3921, "fl": 1691, "response": 3577, "harsh": 1976, "abe": 228, "refuse": 3508, "short": 3870, "newnonny": 2955, "brady": 650, "deserter": 1249, "susan": 4143, "tweeting": 4424, "bid": 578, "register": 3515, "jimmyfallon": 2326, "anytime": 390, "russiannavyblog": 3701, "bashing": 523, "broadcasting": 682, "ego": 1432, "forevermcin": 1732, "banks": 510, "pleasure": 3238, "dream": 1371, "playing": 3232, "lynch": 2657, "greats": 1909, "bravotv": 660, "mexican": 2790, "help": 2022, "september": 3820, "jsilva74366572": 2365, "heartfelt": 2009, "sooo": 3956, "charities": 844, "setback": 3832, "trade": 4338, "held": 2017, "wiener": 4648, "paper": 3109, "scott": 3771, "committee": 972, "signs": 3893, "helm": 2021, "hell": 2019, "turbine": 4410, "suffer": 4108, "avenue": 475, "arrogant": 434, "developer": 1273, "24": 103, "25": 105, "26": 109, "27": 112, "20": 79, "21": 97, "22": 101, "23": 102, "pray": 3292, "greatly": 1907, "28": 113, "29": 114, "mattress": 2735, "late": 2486, "resort": 3569, "strange": 4068, "ruining": 3685, "charlottesville": 851, "pga_com": 3185, "stephen": 4038, "speech": 3980, "abcpolitics": 227, "arias": 424, "vetting": 4523, "teamtrump": 4195, "wouldn": 4702, "hurting": 2129, "evening": 1524, "motivated": 2876, "calm": 740, "disrespectful": 1315, "drama": 1370, "ya": 4718, "club4growth": 927, "anticipated": 386, "blumenthal": 618, "motivates": 2877, "icymi": 2143, "drake4444444": 1369, "communities": 975, "yr": 4739, "complain": 988, "viewers": 4536, "respectful": 3572, "mystery": 2906, "feet": 1646, "holiday": 2067, "fully": 1780, "presented": 3311, "subscribers": 4100, "bless": 603, "courses": 1081, "goofy": 1875, "stopped": 4059, "2a": 115, "2b": 116, "vanityfair": 4508, "difficult": 1286, "friendship": 1774, "execs": 1545, "heavy": 2014, "status": 4030, "shock": 3863, "begged": 545, "mental": 2775, "generation": 1818, "house": 2101, "energy": 1478, "fees": 1645, "sintianiej": 3900, "idea": 2145, "wacky": 4572, "hawaii": 1992, "tonite": 4307, "expect": 1553, "undertake": 4447, "todd": 4301, "wacko": 4571, "operation": 3054, "event": 1525, "really": 3477, "try": 4403, "perry": 3175, "funding": 1784, "missed": 2824, "ernie": 1510, "bullied": 709, "robert": 3638, "01": 3, "tx_shaun": 4430, "douglas": 1363, "research": 3566, "10ajmccarron": 26, "acting": 257, "safety": 3710, "hill": 2044, "trump2016": 4372, "trump4president": 4374, "issue": 2282, "salute": 3718, "seankesser": 3782, "wisconsin": 4669, "belief": 554, "pathetic": 3135, "easily": 1409, "nbcnews": 2926, "friday": 1770, "hosted": 2093, "donaldforpresident": 1339, "bombshell": 628, "extraordinary": 1570, "reason": 3482, "base": 519, "members": 2771, "imagine": 2164, "backed": 492, "teach": 4187, "rises": 3626, "turnout": 4419, "bash": 522, "guest": 1929, "thrown": 4271, "definition": 1220, "owners": 3092, "benefits": 563, "borntobegop": 639, "launch": 2498, "ceasefire": 802, "terrible": 4217, "americas": 351, "american": 349, "apple": 402, "businessmen": 721, "threat": 4266, "scheduled": 3758, "syria": 4152, "july": 2371, "5th": 171, "feed": 1640, "flood": 1699, "major": 2679, "dont": 1349, "feel": 1641, "radical": 3431, "brutally": 693, "obstructionists": 3019, "celeb": 804, "brave": 656, "dominating": 1336, "blank": 601, "wages": 4573, "miss": 2823, "stage": 4008, "pledge": 3239, "guess": 1928, "heads": 2000, "leverage": 2550, "jet": 2318, "temperament": 4207, "leading": 2512, "interviews": 2249, "shooting": 3866, "phil": 3187, "jeb": 2307, "regulation": 3518, "wonderful": 4681, "aacrowellt": 224, "storm": 4064, "bravo": 658, "fought": 1744, "scheme": 3759, "stl_blonde": 4051, "carly": 773, "store": 4062, "summit": 4117, "billrancic": 588, "pipelines": 3214, "option": 3064, "relationship": 3523, "hotel": 2097, "park": 3115, "interviewed": 2247, "immediate": 2165, "prediction": 3299, "doctors": 1325, "focusing": 1710, "interviewer": 2248, "endlessly": 1469, "gilbert": 1838, "fred": 1765, "apprentice": 407, "king": 2436, "kind": 2433, "marksimoneny": 2713, "aaa": 223, "fold": 1711, "mikeandmike": 2804, "gotten": 1887, "yates": 4722, "pc": 3154, "levels": 2549, "bestbergerever": 571, "youth": 4736, "charges": 843, "determined": 1269, "2020": 94, "supposed": 4129, "tee": 4200, "nailed": 2909, "insightful": 2221, "treated": 4351, "declare": 1204, "dana": 1158, "charlotte": 850, "motivation": 2878, "rspbscotland": 3679, "outta": 3080, "picked": 3201, "nominee": 2979, "outstanding": 3079, "blewthebigone": 607, "selling": 3804, "contest": 1040, "yankees": 4720, "meltdown": 2768, "orders": 3067, "karl": 2390, "election2016": 1439, "sell": 3803, "ratings": 3455, "nights": 2973, "built": 707, "tough": 4322, "prayformetoo": 3294, "trip": 4362, "self": 3802, "scotland": 3770, "officers": 3031, "makers": 2684, "starved": 4023, "majority": 2680, "comment": 961, "chairman": 822, "gosselin": 1882, "finding": 1676, "commentary": 962, "kim": 2431, "tool": 4310, "failing": 1591, "club": 926, "aired": 316, "experienced": 1558, "electric": 1442, "afghanistan": 291, "leaking": 2518, "housegop": 2102, "350": 133, "reach": 3457, "macy": 2664, "took": 4309, "77": 194, "76": 193, "virus": 4548, "hired": 2049, "73": 189, "72": 188, "71": 187, "70": 186, "loan": 2598, "prestige": 3321, "extremely": 1572, "approved": 413, "79": 196, "78": 195, "bethandersonesq": 573, "understands": 4446, "hubby": 2111, "viciously": 4526, "spends": 3986, "clear": 906, "calling": 738, "cover": 1084, "bretbaier": 667, "argentina": 421, "berniesanders": 568, "clean": 905, "tpp": 4334, "ariannahuff": 423, "charged": 842, "statement": 4027, "attacking": 456, "lying": 2656, "joining": 2345, "despise": 1257, "golf": 1865, "mypresidentme": 2905, "gold": 1863, "gates": 1809, "celebrities": 808, "gitmo": 1844, "alexsalmond": 327, "session": 3829, "businesses": 719, "danscavino": 1166, "fine": 1677, "networks": 2950, "puppyslug": 3400, "gangs": 1802, "67": 183, "cell": 811, "giant": 1834, "believe": 556, "cried": 1103, "duncan": 1397, "justice": 2380, "rampant": 3442, "ruin": 3683, "writer": 4708, "unhappy": 4455, "penalty": 3160, "failed": 1590, "idiots": 2149, "pretty": 3323, "factor": 1586, "joseph": 2358, "obama": 3011, "msvivicafox": 2894, "cuomo": 1131, "giants": 1835, "toronto": 4315, "executive": 1547, "eastonwestwood": 1413, "gains": 1797, "express": 1568, "karentalk": 2389, "swing": 4150, "7pm": 197, "famous": 1609, "feels": 1644, "sarahpalinusa": 3728, "actions": 259, "closely": 919, "reporters": 3551, "compliments": 996, "emails": 1452, "votetrump2016": 4567, "kellyannepolls": 2404, "tmobile": 4296, "iranian": 2267, "remove": 3538, "condolences": 1006, "common": 973, "golfmagazine": 1870, "double": 1360, "ivanka": 2286, "river": 3628, "wrote": 4714, "restaurants": 3581, "insane": 2216, "anncoulter": 372, "set": 3831, "art": 437, "guys": 1939, "dump": 1395, "govt": 1894, "intelligence": 2237, "vine": 4542, "crippledamerica": 1110, "culture": 1130, "lion": 2584, "defense": 1217, "sec": 3787, "migration": 2801, "domain": 1334, "protecting": 3376, "close": 917, "11th": 36, "aberdeen": 229, "retweet": 3592, "definitely": 1219, "pacific": 3096, "tahmooressi": 4156, "threats": 4268, "expert": 1559, "handed": 1954, "obstructionist": 3018, "pictures": 3205, "wow": 4704, "exchange": 1538, "electoral": 1441, "fans": 1611, "won": 4679, "various": 4509, "nhpolitics": 2965, "use": 4485, "probably": 3340, "hold": 2062, "donate": 1344, "conditions": 1005, "inauguration": 2183, "compliment": 995, "wide": 4647, "knowing": 2446, "rosie": 3668, "recently": 3492, "creating": 1099, "missing": 2826, "sold": 3942, "attention": 461, "chris_r_2014": 872, "dossier": 1359, "aircraft": 315, "ranked": 3447, "competent": 985, "league": 2514, "restaurant": 3580, "influential": 2205, "barely": 517, "begun": 550, "foreign": 1730, "sensitive": 3816, "ogreuasshole": 3035, "context": 1041, "forgotten": 1736, "let": 2542, "geniuses": 1822, "approve": 412, "baltimore": 505, "insurance": 2233, "liked": 2569, "guts": 1937, "jeff": 2309, "simple": 3896, "g20summit": 1792, "acted": 256, "crippled": 1109, "community": 976, "tennessee": 4210, "simply": 3897, "likes": 2571, "shutdown": 3882, "church": 885, "mission": 2827, "expensive": 1556, "hannity": 1962, "decline": 1206, "worthless": 4701, "goangelo": 1859, "raise": 3435, "create": 1097, "political": 3256, "strategy": 4070, "hitting": 2057, "runner": 3691, "secret": 3789, "dropping": 1382, "damn": 1155, "ireland": 2269, "morning_joe": 2868, "threaten": 4267, "territory": 4219, "meeting": 2758, "pm": 3244, "firm": 1684, "sanders": 3726, "dialogue": 1276, "lived": 2593, "nro": 2992, "champion": 827, "boy": 647, "nra": 2991, "citizen": 891, "gas": 1808, "great": 1904, "anthony": 383, "fund": 1782, "races": 3427, "lives": 2594, "representative": 3555, "demand": 1234, "prices": 3328, "rosannascotto": 3666, "despite": 1258, "audience": 464, "plants": 3227, "stolen": 4055, "jijassim": 2322, "look": 2611, "solid": 3945, "socialist": 3938, "ericbolling": 1505, "budget": 698, "governor": 1891, "admire": 275, "receive": 3488, "replaced": 3544, "smart": 3926, "macleod": 2662, "involved": 2262, "fun": 1781, "antonio_annesi": 387, "huffington": 2114, "guide": 1932, "alike": 329, "listen": 2586, "larger": 2483, "costly": 1068, "hoping": 2083, "century": 815, "guilty": 1933, "rip": 3622, "alaska": 324, "hoax": 2060, "thedonald": 4240, "gatewaypundit": 1810, "triple": 4363, "strengthen": 4074, "ready": 3464, "rid": 3610, "dannyzuker": 1165, "weapon": 4620, "increased": 2192, "unfit": 4452, "funny": 1788, "january": 2302, "italy": 2284, "shirt": 3860, "anymore": 389, "gopdebate": 1878, "caucus": 793, "read": 3462, "keksec_org": 2402, "virtually": 4547, "grand": 1899, "products": 3351, "ray": 3456, "forgiveness": 1734, "conflict": 1011, "higher": 2036, "complaining": 989, "lawyers": 2506, "lie": 2558, "yesterday": 4730, "holidays": 2068, "teambrandi": 4190, "helped": 2023, "000": 1, "uses": 4487, "purpose": 3404, "finances": 1674, "koch": 2451, "brussels": 691, "highlander6700": 2038, "recent": 3491, "early": 1405, "thomasaroberts": 4260, "task": 4173, "schneiderman": 3760, "poland": 3252, "prstrong": 3387, "increases": 2193, "county": 1077, "obviously": 3021, "person": 3177, "edge": 1422, "flags": 1693, "inspirational": 2224, "trumpscotland": 4390, "kelly": 2403, "organization": 3070, "spend": 3984, "lateshow": 2489, "passed": 3127, "frontrunner": 1776, "mom": 2849, "andreatantaros": 361, "skin": 3909, "birthday": 593, "gzervs": 1941, "shape": 3845, "openly": 3052, "houstongunn": 2104, "questions": 3418, "world": 4694, "vigilant": 4538, "regardless": 3513, "pundits": 3396, "praying": 3295, "dishonesty": 1311, "prince": 3333, "ban": 506, "letting": 2547, "cut": 1139, "helping": 2024, "barry": 518, "cup": 1132, "lady": 2468, "workers": 4691, "danger": 1161, "guaranteed": 1926, "cuz": 1143, "exclusively": 1543, "barack": 513, "source": 3966, "causing": 797, "parents": 3113, "bravery": 657, "homeland": 2071, "cash": 786, "boardroom": 620, "easter": 1411, "remaining": 3530, "surprised": 4137, "hater": 1983, "ridiculously": 3613, "dude": 1389, "customers": 1138, "australia": 466, "talismanjohnnya": 4163, "forces": 1728, "demands": 1236, "big": 580, "showing": 3878, "laughed": 2494, "dubai": 1388, "judgement": 2369, "matters": 2732, "game": 1798, "biz": 595, "private": 3338, "potus": 3280, "bit": 594, "belllabooo13": 559, "jacksonville": 2294, "projects": 3361, "knock": 2443, "success": 4103, "govchristie": 1889, "slaw116": 3915, "confront": 1012, "toyota": 4332, "donny": 1347, "background": 493, "underway": 4448, "ignore": 2152, "miami": 2793, "continue": 1042, "surging": 4134, "popular": 3270, "mediocrity": 2755, "weiner": 4633, "foolish": 1721, "names": 2911, "google": 1876, "illinois": 2161, "hmunjal": 2059, "senate": 3806, "spring": 4000, "1st": 78, "magnificent": 2672, "play": 3228, "repubs": 3562, "delegation": 1227, "georgewill": 1826, "strongest": 4079, "economic": 1417, "palm": 3103, "admitted": 279, "serve": 3824, "scandal": 3751, "preparing": 3306, "leaders": 2510, "delivered": 1230, "crazymamaa": 1096, "scale": 3749, "colinswood": 941, "gillespie": 1839, "celebrityapprentice": 810, "decision": 1201, "shall": 3843, "benefit": 562, "cast": 788, "bruce": 690, "civilization": 896, "emmys": 1460, "innovation": 2215, "ac360": 240, "epic": 1497, "timenout": 4289, "laughing": 2495, "macys": 2665, "patient": 3138, "bobvanderplaats": 622, "300": 121, "lose": 2618, "continuing": 1045, "agreement": 306, "306": 124, "refused": 3509, "feelings": 1643, "step": 4037, "hostages": 2092, "bs": 695, "refuses": 3510, "lottery": 2628, "intense": 2239, "vaccine": 4501, "handled": 1957, "shine": 3857, "faith": 1597, "pipeline": 3213, "limbaugh": 2576, "usa": 4484, "deserved": 1251, "tump2016": 4407, "refugees": 3507, "firing": 1683, "75": 191, "melbourne": 2766, "deserves": 1252, "range": 3446, "74": 190, "tpgraf82": 4333, "positive": 3273, "blocked": 610, "congressman": 1020, "hatred": 1987, "podesta": 3246, "wanna": 4585, "kimguilfoyle": 2432, "silence": 3894, "plan": 3220, "deannaspillyard": 1185, "seeing": 3795, "jimmy": 2325, "clinton": 913, "colorado": 949, "garbage": 1803, "terrorists": 4223, "nsa": 2993, "mommy": 2852, "nydailynews": 3005, "nonsense": 2981, "trumpforprez": 4383, "democrat": 1239, "144": 53, "appropriate": 409, "remembrance": 3536, "lesson": 2540, "france": 1757, "delusional": 1232, "waynedupreeshow": 4614, "impressed": 2178, "rwsurfergirl": 3703, "span": 3971, "pundit": 3395, "warned": 4594, "spending": 3985, "measured": 2749, "question": 3417, "msm": 2892, "long": 2608, "accountability": 250, "infected": 2203, "achievement": 254, "suit": 4113, "hunterboss1996": 2123, "uss": 4493, "barackobama": 514, "twitter": 4428, "opens": 3053, "opponent": 3058, "files": 1667, "invite": 2260, "jewish": 2320, "la_loquita": 2464, "registered": 3516, "inept": 2202, "immigration": 2169, "boys": 649, "newsmax": 2957, "properly": 3368, "atlantic": 453, "authority": 469, "filed": 1666, "hopes": 2082, "episode": 1499, "line": 2580, "junior": 2375, "raising": 3437, "info": 2206, "115": 31, "cia": 887, "dcfoodsafety": 1179, "oscars": 3075, "decisive": 1203, "ur": 4482, "um": 4439, "mobile": 2842, "growth": 1923, "today": 4299, "uk": 4436, "highlight": 2039, "agenda": 300, "medical": 2753, "ap": 392, "camp": 742, "facethenation": 1581, "armstrong": 428, "likewise": 2572, "2timeslucky": 119, "influence": 2204, "doesn": 1329, "ronmeier123": 3660, "single": 3899, "cure": 1133, "rally": 3440, "cpac": 1091, "graham": 1898, "liking": 2573, "journalists": 2361, "independents": 2196, "thugs": 4272, "supportive": 4127, "amounts": 353, "fixing": 1690, "peace": 3155, "uranium": 4483, "backs": 495, "nick": 2968, "politicians": 3259, "bertshad": 569, "kansas": 2387, "ellen": 1449, "department": 1246, "wasserman": 4604, "manhattan": 2693, "nice": 2966, "wished": 4673, "explaining": 1563, "monmouth": 2858, "favourite": 1632, "sided": 3885, "backbone": 491, "problems": 3342, "triumph": 4364, "resign": 3567, "prepared": 3305, "regulations": 3519, "greenville": 1911, "meaning": 2745, "est": 1515, "allowing": 337, "cbnnews": 798, "tedcruz": 4199, "unfunny": 4454, "song": 3953, "krauthammer": 2457, "ago": 303, "lane": 2479, "land": 2473, "happier": 1967, "lead": 2508, "vice": 4524, "consumer": 1037, "age": 299, "holes": 2066, "walked": 4580, "dow": 1364, "iamsloany": 2136, "2000": 81, "carrying": 780, "verdes": 4516, "walker": 4581, "teamleeza": 4193, "2008": 83, "buffalo": 699, "having": 1990, "dvr": 1400, "gw": 1940, "tmz_politics": 4298, "gt": 1925, "evidence": 1530, "ashamed": 440, "results": 3586, "existing": 1552, "steve": 4044, "farms": 1616, "breitbartnews": 666, "gang": 1801, "ga": 1794, "tweeted": 4423, "contributions": 1047, "kate": 2394, "issues": 2283, "rebels": 3485, "pervert": 3181, "realsonnynewman": 3480, "terrorism": 4221, "baseball": 520, "shouldn": 3875, "iii": 2155, "concerned": 1000, "veryodddog": 4518, "send": 3810, "suits": 4115, "lower": 2643, "helps": 2025, "bbc": 529, "itsryanhilton": 2285, "suite": 4114, "maryland": 2717, "include": 2185, "friendly": 1772, "fakenews": 1599, "g7": 1793, "fly": 1705, "kdanielsk": 2398, "garden": 1804, "dnorrell": 1323, "continues": 1044, "miners": 2816, "grid": 1915, "wishes": 4674, "facebook": 1579, "telling": 4205, "assad": 447, "continued": 1043, "died": 1283, "bryant": 694, "entire": 1491, "meltsch": 2769, "magic": 2671, "announcing": 378, "succeed": 4102, "iliveamongyou": 2156, "harbor": 1970, "positions": 3272, "compassionate": 982, "michael": 2794, "eve": 1523, "ryan": 3704, "cadillacchamp": 733, "deals": 1183, "race": 3426, "congrats": 1014, "polling": 3263, "realpro4real": 3479, "barbara": 515, "kid": 2422, "bernie": 567, "someday": 3951, "smaller": 3925, "sharks": 3848, "carter": 783, "bleeding": 602, "glennbeck": 1852, "rivers": 3630, "jump": 2372, "crook": 1116, "video": 4532, "uncomfortable": 4443, "sad": 3707, "rinos": 3620, "rivera": 3629, "folk": 1712, "nevada": 2951, "plays": 3234, "business": 718, "rate": 3452, "chicago": 857, "giving": 1847, "anthem": 382, "asap": 439, "devastated": 1271, "frankluntz": 1762, "access": 243, "ovations": 3083, "waiting": 4576, "currently": 1136, "capital": 757, "numerologynow": 2999, "order": 3065, "bird": 590, "impact": 2171, "bdean1468": 531, "weneedyou": 4636, "lee": 2527, "stance": 4011, "gretawire": 1913, "got": 1883, "weren": 4638, "commercial": 965, "judges": 2370, "delivering": 1231, "growing": 1921, "poverty": 3284, "ferry": 1654, "consideration": 1028, "david360nc": 1172, "loser": 2619, "extreme": 1571, "ukraine": 4437, "theviewtv": 4252, "39": 141, "38": 139, "talent": 4160, "33": 128, "32": 126, "31": 125, "30": 120, "37": 137, "36": 134, "35": 132, "34": 131, "tuckercarlson": 4405, "agschneiderman": 308, "survey": 4141, "defeat": 1212, "existent": 1551, "opinion": 3056, "proof": 3366, "makes": 2685, "honor": 2076, "thats": 4235, "wig": 4650, "named": 2910, "ichicagoscott": 2140, "heart": 2007, "egypt": 1433, "win": 4655, "336": 130, "sgt": 3841, "clout": 923, "affected": 288, "presidenttrump": 3316, "bust": 722, "dumbest": 1392, "oval": 3081, "apply": 403, "standing": 4015, "confidence": 1008, "crap": 1093, "certificate": 820, "remains": 3531, "trumpwaikiki": 4397, "bush": 717, "spying": 4002, "doubt": 1361, "gen_yvette": 1814, "debbie": 1191, "jonathan": 2352, "rick": 3608, "sort": 3961, "danaperino": 1160, "dysfunctional": 1404, "upcoming": 4479, "started": 4020, "begging": 546, "strongvoice": 4081, "missile": 2825, "trail": 4342, "train": 4343, "agent": 301, "anthonyjmyers": 384, "baby": 490, "gladly": 1849, "thefamilyleader": 4243, "pocahontas": 3245, "appointed": 404, "carried": 776, "customer": 1137, "account": 249, "balls": 504, "animals": 370, "mcuban": 2743, "morningmika": 2869, "challenge": 823, "clients": 911, "pianobecca": 3198, "pour": 3282, "obvious": 3020, "praise": 3290, "universe": 4462, "meet": 2757, "closing": 922, "anybody": 388, "didnt": 1281, "institute": 2232, "yankeerunnerlv": 4719, "control": 1048, "violence": 4544, "patrol": 3143, "links": 2583, "chosen": 870, "process": 3343, "favorite": 1630, "admirer": 277, "tax": 4179, "pieces": 3207, "high": 2035, "pulling": 3393, "flake": 1694, "publicity": 3390, "keystone": 2417, "rape": 3448, "native": 2921, "sir": 3901, "educational": 1426, "counting": 1073, "democracy": 1238, "lame": 2471, "destroying": 1264, "protect": 3374, "candidacy": 752, "boxing": 646, "2014_vince": 88, "hampshire": 1952, "delay": 1223, "brian": 669, "sia": 3883, "winners": 4663, "sig": 3887, "durandsentinus": 1398, "animal": 369, "instead": 2230, "intelligent": 2238, "stock": 4052, "buildings": 705, "fitn": 1686, "farm": 1614, "stop": 4058, "incompetence": 2187, "act": 255, "11sheila11": 35, "tied": 4279, "dc": 1178, "ronald": 3658, "productive": 3350, "ties": 4280, "referring": 3504, "loyal": 2646, "bankrupt": 508, "fackinpeter": 1584, "realized": 3475, "owns": 3093, "boeing": 623, "concern": 999, "light": 2565, "sit": 3902, "lines": 2581, "element": 1443, "chief": 858, "courage": 1079, "honestly": 2074, "rove": 3674, "classy": 904, "furious": 1789, "davidwohl": 1175, "disrespecting": 1316, "jebbush": 2308, "divided": 1319, "kenyamoore": 2409, "fastest": 1621, "houston": 2103, "holds": 2064, "areas": 418, "insight": 2220, "forq2": 1739, "133": 47, "132": 46, "131": 45, "including": 2186, "136": 49, "134": 48, "mentioned": 2778, "smarts": 3929, "139": 50, "falsely": 1605, "dt": 1387, "warren": 4596, "perfect": 3171, "superior": 4121, "negotiated": 2939, "remark": 3532, "till": 4284, "jodi": 2333, "ll": 2596, "landed": 2474, "sunday": 4118, "winning": 4664, "meantime": 2748, "lt": 2647, "willing": 4654, "degrees": 1222, "2018": 93, "johnny": 2340, "gene70": 1815, "2015": 89, "ocare": 3022, "2017": 92, "2016": 90, "2011": 84, "2013": 86, "2012": 85, "dad": 1147, "prosper": 3372, "campaigned": 744, "crash": 1094, "greater": 1905, "later": 2488, "huff": 2113, "dan": 1157, "spell": 3983, "usga": 4488, "trump16": 4371, "flew": 1696, "mention": 2777, "cutting": 1142, "ferguson": 1653, "yuge": 4741, "hands": 1959, "craigdevlin": 1092, "kindness": 2435, "investor": 2258, "realize": 3474, "presidential": 3314, "worlds": 4695, "masters": 2724, "airports": 319, "establishment": 1516, "university": 4463, "countries": 1074, "teamcavuto": 4191, "pathway": 3136, "lifetime": 2562, "truth": 4401, "interview": 2246, "blessings": 605, "33000": 129, "donlemon": 1345, "warner": 4595, "mets": 2789, "eastern": 1412, "20000": 82, "doing": 1331, "gary": 1807, "staying": 4033, "funds": 1785, "society": 3939, "88": 206, "books": 632, "83": 200, "margins": 2701, "81": 199, "sexual": 3840, "87": 205, "special": 3978, "landexpo": 2475, "category": 791, "secretly": 3791, "matt": 2730, "asshole": 451, "entertainment": 1488, "announces": 377, "rep": 3541, "covers": 1088, "settlement": 3838, "mate": 2727, "narrative": 2913, "supports": 4128, "highs": 2041, "announced": 375, "trumplasvegas": 4387, "model": 2844, "shut": 3881, "aol": 391, "shit": 3862, "southern": 3969, "reacts": 3461, "quote": 3424, "delegates": 1226, "attending": 460, "completely": 993, "arseniohall": 436, "surely": 4132, "collection": 944, "advisor": 287, "stupidity": 4093, "quo": 3423, "williamgardanis": 4652, "scary": 3755, "zimmerman": 4744, "yard": 4721, "hostile": 2094, "teleprompter": 4202, "hes": 2029, "wakeupamerica": 4578, "times": 4290, "conversation": 1052, "produce": 3346, "felt": 1649, "hussein": 2132, "cnnpolitics": 932, "south": 3968, "finest": 1678, "pga": 3184, "powerful": 3286, "scene": 3756, "owned": 3090, "jesus": 2317, "embarrassed": 1453, "puppet": 3397, "lib": 2554, "owner": 3091, "reached": 3458, "blows": 615, "awarded": 480, "quality": 3414, "hiding": 2034, "nypost": 3007, "legislative": 2536, "management": 2689, "sadly": 3708, "fascinating": 1617, "table": 4154, "data": 1168, "judgejeanine": 2368, "hilary": 2043, "relations": 3522, "renovation": 3539, "einstein": 1434, "attack": 454, "swear": 4146, "rated": 3453, "final": 1670, "interests": 2243, "enforcement": 1479, "lot": 2626, "greta": 1912, "academy": 241, "completed": 992, "exactly": 1534, "megan": 2761, "aplemonlemon": 394, "lil": 2574, "bigger": 581, "karlrove": 2391, "rowleyrhonda": 3675, "overwhelming": 3086, "elite": 1447, "haven": 1989, "welovethedonald": 4635, "remember": 3534, "steel": 4036, "loved": 2636, "thisweekabc": 4258, "ben": 560, "johnson": 2342, "boring": 637, "mayweather": 2739, "youtube": 4737, "submitted": 4098, "ave": 474, "roberts": 3639, "moment": 2850, "patients": 3139, "individual": 2199, "injured": 2212, "howardstern": 2107, "loves": 2639, "maybe": 2737, "visited": 4552, "nervous": 2947, "bet": 572, "result": 3585, "jwil444": 2384, "flights": 1698, "false": 1604, "gotmyvote": 1884, "clip": 915, "lindseygrahamsc": 2579, "macmiller": 2663, "tonight": 4306, "corrupt": 1065, "buy": 724, "sharp": 3849, "defending": 1215, "sen": 3805, "need": 2934, "border": 634, "havn": 1991, "screw": 3778, "documents": 1327, "floydmayweather": 1703, "russians": 3702, "dallas": 1152, "4000": 145, "flotus": 1701, "able": 232, "contact": 1039, "concerns": 1002, "325": 127, "korean": 2453, "competence": 984, "pete": 3182, "unless": 4466, "allow": 335, "leakers": 2517, "healthcare": 2002, "regs": 3517, "intentions": 2240, "votefortrump": 4562, "negotiate": 2938, "rollout": 3654, "capacity": 756, "future": 1790, "segment": 3799, "littlevd23": 2591, "51": 162, "hypocrite": 2133, "mitch": 2836, "consequences": 1023, "enthusiastic": 1490, "visiting": 4553, "request": 3564, "thanksgiving": 4233, "face": 1578, "looked": 2612, "hi": 2032, "usnavy": 4490, "movie": 2884, "trumpsoho": 4391, "wounded": 4703, "08": 10, "fact": 1585, "goals": 1858, "irs": 2274, "convinced": 1055, "beaumontanthony": 538, "violation": 4543, "agreed": 305, "charles": 846, "terminate": 4213, "brother": 687, "pamking8628": 3106, "bring": 674, "raleigh": 3438, "traitor": 4345, "democrats": 1241, "rouge": 3670, "brithume": 678, "soldiers": 3944, "fear": 1635, "longer": 2609, "sparkleawin": 3972, "debate": 1189, "decade": 1194, "staff": 4007, "partners": 3121, "inspiring": 2228, "highest": 2037, "based": 521, "knowledge": 2448, "entrepreneur": 1492, "earned": 1406, "winner": 4662, "kravis": 2458, "pushing": 3408, "jan": 2301, "score": 3769, "tape": 4169, "chinese": 863, "reptommarino": 3559, "local": 2602, "interested": 2241, "achieve": 253, "meant": 2747, "ctobin22": 1127, "handle": 1956, "listened": 2587, "means": 2746, "crumbling": 1122, "michigan": 2797, "jonkarl": 2355, "tbt": 4183, "likely": 2570, "120": 38, "joint": 2346, "october": 3024, "124": 41, "perfection": 3172, "126": 43, "timing": 4291, "tactics": 4155, "added": 267, "gotrump": 1885, "214": 99, "endless": 1468, "fran": 1756, "365": 136, "katyperry": 2397, "glory": 1855, "gorsuch": 1880, "course": 1080, "numerous": 3000, "taxes": 4180, "tuned": 4409, "demdebate": 1237, "stuff": 4090, "26000": 110, "congresswoman": 1021, "ohio": 3037, "laughs": 2497, "fixed": 1689, "generations": 1819, "view": 4535, "available": 473, "btw": 696, "official": 3032, "prayers": 3293, "national": 2918, "cuts": 1141, "accord": 247, "immigrant": 2167, "puppets": 3398, "officials": 3034, "changes": 837, "desperate": 1255, "terms": 4215, "packed": 3097, "closer": 920, "puts": 3411, "destiny": 1261, "luv": 2653, "reform": 3505, "nuclear": 2994, "nightmare": 2972, "ralph": 3441, "superb": 4120, "favor": 1629, "written": 4712, "difficulties": 1287, "taunting": 4178, "box": 645, "correctly": 1064, "routine": 3673, "ebola": 1416, "progress": 3358, "bunch": 712, "email": 1451, "bought": 643, "keynote": 2416, "day": 1176, "ability": 231, "god": 1860, "opening": 3051, "importance": 2174, "deliver": 1229, "rockprincess818": 3644, "kicking": 2421, "job": 2331, "joe": 2335, "merry": 2784, "approval": 410, "maga": 2669, "theblaze": 4238, "lawsuit": 2503, "jon": 2349, "david": 1171, "karzai": 2392, "restrictions": 3584, "hits": 2056, "commenting": 963, "genes": 1820, "mitchellvii": 2837, "admin": 273, "joke": 2347, "invited": 2261, "la": 2463, "equal": 1501, "drug": 1385, "april": 414, "admit": 278, "harvard": 1977, "trumps": 4389, "illegal": 2158, "passing": 3128, "melaniatrump": 2765, "sharylattkisson": 3851, "jersey": 2316, "caleb2207": 735, "icahn": 2138, "relevant": 3527, "wall": 4583, "ships": 3859, "tuesday": 4406, "unbelievable": 4441, "ac": 239, "walk": 4579, "subscribe": 4099, "oann": 3010, "laugh": 2493, "carbon": 763, "phones": 3192, "respect": 3570, "labor": 2465, "nomination": 2978, "ad": 264, "pouring": 3283, "yay": 4723, "horrific": 2086, "tremendous": 4354, "decent": 1197, "cowboys": 1090, "led": 2526, "cent": 812, "cowards": 1089, "exhausted": 1549, "liberals": 2556, "007llisav": 2, "mike_pence": 2803, "treat": 4350, "rodmonium91": 3648, "proposal": 3371, "waste": 4605, "louisiana": 2633, "killed": 2426, "choose": 869, "puerto": 3391, "mike": 2802, "penny": 3165, "controlled": 1049, "mattginellagc": 2733, "vince": 4540, "releasing": 3526, "climate": 912, "netanyahu": 2948, "sales": 3715, "tweets": 4425, "finished": 1680, "senatemajldr": 3807, "deep": 1209, "bull": 708, "muslims": 2904, "gross": 1916, "atlanta": 452, "fellow": 1648, "apprenticenbc": 408, "present": 3309, "volunteer": 4559, "kenya": 2408, "homes": 2072, "criminal": 1107, "abandoned": 225, "unlike": 4467, "imagination": 2163, "crowds": 1120, "sacrifice": 3706, "harder": 1972, "britain": 677, "value": 4503, "choices": 866, "stunning": 4091, "inaccurately": 2182, "fault": 1626, "rigged": 3614, "jay": 2304, "va": 4498, "annual": 379, "ve": 4511, "site": 3903, "kevinjonas": 2414, "nafta": 2907, "respected": 3571, "vs": 4570, "dems": 1242, "lightweight": 2567, "claimed": 898, "partner": 3120, "ann": 371, "marino_joanna": 2706, "tattoo": 4175, "garthdahdah": 1806, "russell": 3698, "eliot": 1446, "juan": 2366, "kerrygold1914": 2412, "administration": 274, "cross": 1118, "unite": 4459, "eric": 1504, "member": 2770, "guns": 1936, "nbcsnl": 2927, "parts": 3123, "speaker": 3974, "largest": 2484, "party": 3124, "android": 363, "gets": 1831, "paula": 3147, "trumptower": 4393, "ben_techpro": 561, "nashville": 2914, "material": 2728, "http": 2109, "jodil792": 2334, "premiere": 3302, "reporting": 3552, "disagree": 1296, "nationally": 2919, "discredited": 1301, "islam": 2276, "joan_rivers": 2329, "impeccable": 2172, "collar": 943, "warming": 4593, "destruction": 1265, "energized": 1477, "univision": 4464, "center": 813, "records": 3499, "com": 951, "builder": 703, "incredible": 2194, "seth": 3833, "fighting": 1663, "thought": 4262, "mccabe": 2740, "sheer": 3854, "failures": 1594, "deserve": 1250, "hamilton": 1950, "knight": 2441, "conservative": 1025, "usual": 4494, "restore": 3582, "legendary": 2534, "rocket": 3642, "heavily": 2013, "percent": 3170, "accurate": 251, "half": 1948, "unstoppable": 4475, "dose": 1358, "sources": 3967, "mistakes": 2834, "rooms": 3663, "foxnewsinsider": 1752, "dakota": 1151, "lesm": 2539, "paul": 3146, "41": 147, "rescue": 3565, "web": 4625, "espngreeny": 1514, "claim": 897, "breaking": 662, "ads": 282, "defendingtheusa": 1216, "gma": 1856, "point": 3248, "sky": 3910, "lake": 2470, "mcconnell": 2742, "bullshit": 710, "heritage": 2026, "add": 266, "forbes": 1725, "nato": 2922, "developments": 1275, "sweet": 4149, "destroy": 1262, "unprecedented": 4473, "match": 2725, "meyers": 2792, "govmikehuckabee": 1893, "chriscjackson": 874, "hardworking": 1974, "jimlibertarian": 2324, "fate": 1624, "government": 1890, "checking": 856, "taunt": 4177, "utah": 4497, "protesters": 3379, "cruz": 1125, "historic": 2053, "267": 111, "missuniverse": 2831, "desk": 1254, "press": 3318, "immediately": 2166, "g0d_": 1791, "loss": 2623, "lincoln": 2577, "trash": 4347, "necessary": 2932, "like": 2568, "lost": 2625, "warrencasselljr": 4598, "lord_sugar": 2617, "ring": 3617, "11pm": 34, "clown": 924, "loses": 2621, "taxpayers": 4181, "payments": 3152, "heed": 2016, "martin": 2715, "agents": 302, "works": 4693, "emmy": 1459, "page": 3098, "replacement": 3545, "amendment": 344, "drop": 1380, "smoothly": 3931, "scared": 3754, "teamkevin": 4192, "alive": 330, "hair": 1947, "116": 32, "111": 29, "110": 28, "113": 30, "cleveland": 908, "proper": 3367, "home": 2070, "fiasco": 1656, "peter": 3183, "ballot": 503, "march": 2697, "happens": 1966, "tegodreaux": 4201, "251": 107, "competitor": 987, "pressjournal": 3319, "literally": 2589, "leaving": 2525, "hurricane": 2124, "thank": 4230, "fema": 1650, "does": 1328, "passion": 3129, "screwed": 3779, "bosses": 641, "lancebagley1": 2472, "leader": 2509, "300000": 123, "conference": 1007, "ripped": 3623, "finale": 1671, "inaccurate": 2181, "nc": 2928, "reaching": 3459, "journal": 2359, "beach": 532, "pressure": 3320, "host": 2091, "isn": 2279, "hosp": 2088, "bergdahl": 566, "sheriffs": 3856, "choked": 868, "loans": 2599, "panel": 3108, "gained": 1796, "unmasking": 4468, "bills": 589, "actual": 262, "justin": 2382, "tmz": 4297, "column": 950, "freedom": 1767, "ricardorossello": 3603, "headed": 1996, "jeffredman5": 2311, "carrier": 777, "sweat": 4148, "kilmeade": 2430, "documentary": 1326, "executives": 1548, "letters": 2546, "glenn": 1851, "owe": 3087, "pussy": 3409, "stuartpstevens": 4084, "washington": 4601, "commitment": 970, "billions": 585, "getting": 1832, "guard": 1927, "weather": 4624, "promise": 3362, "female": 1651, "premiums": 3303, "realsquezz": 3481, "ofccadjust": 3025, "forget": 1733, "terminated": 4214, "mississippi": 2828, "nuke": 2995, "van": 4505, "additional": 271, "rushed": 3696, "trumptrain": 4395, "museum": 2901, "elephants": 1444, "spiral": 3990, "kidding": 2423, "stamina": 4010, "overtime": 3085, "board": 619, "pa": 3094, "terrellowens": 4216, "inner": 2213, "cassidy": 787, "biggest": 582, "lago": 2469, "yrs": 4740, "flynn": 1707, "washingtonpost": 4602, "actually": 263, "north": 2986, "frisk": 1775, "bus": 715, "brand": 653, "yeah": 4725, "reminds": 3537, "construction": 1036, "plague": 3218, "gain": 1795, "courts": 1083, "buffalobills": 700, "kraft": 2455, "eat": 1415, "count": 1072, "wise": 4671, "places": 3217, "dangerous": 1162, "igotangeleyes": 2154, "politics": 3261, "hosting": 2095, "signed": 3891, "incompetent": 2188, "excitement": 1540, "record": 3497, "convince": 1054, "stories": 4063, "pumped": 3394, "problem": 3341, "piece": 3206, "minutes": 2819, "website": 4626, "irish": 2270, "thegrumpyhusky": 4246, "barbarajwalters": 516, "deaths": 1188, "int": 2234, "recognize": 3495, "year": 4726, "romney": 3655, "twist": 4427, "beats": 537, "nukes": 2996, "right": 3615, "hit": 2055, "flight": 1697, "education": 1425, "autism": 470, "visa": 4549, "compared": 980, "worse": 4698, "48": 155, "49": 156, "46": 153, "47": 154, "44": 151, "45": 152, "42": 148, "43": 150, "40": 143, "lately": 2487, "book": 630, "details": 1267, "sick": 3884, "andersoncooper": 360, "85": 203, "nelson": 2946, "jonahnro": 2350, "illegally": 2159, "francisco": 1758, "star": 4017, "monday": 2854, "respects": 3574, "sooooo": 3958, "class": 901, "june": 2374, "outlets": 3077, "stay": 4031, "chance": 831, "kinda": 2434, "senjohnmccain": 3813, "repeal": 3542, "friends": 1773, "christians": 878, "inspiration": 2223, "pastors": 3132, "theview": 4251, "focused": 1709, "using": 4489, "samsung": 3722, "resolution": 3568, "bc": 530, "rule": 3686, "profit": 3355, "compete": 983, "awake": 478, "defend": 1214, "8th": 207 };
}, 529, null, "TalkPresidential/linear_model_json/cv_vocab.json");
__d(/* TalkPresidential/linear_model_json/lr_model.json */function(global, require, module, exports) {module.exports = module.exports = { "intercept": -2.850290004918783, "coefs": [2.002940789330694, -0.6484471973717234, 4.955143965738359e-07, 0.0974765189399768, 0.035880925320636164, 1.2465664780801426, -0.6625338013881321, 0.9527342154206756, -0.23414665120461986, -0.07160872027586092, -0.39624711317288625, -0.7656675392914669, -0.7603391304717902, -0.06964881912979007, -0.5160754485481953, 0.30786213883741703, -0.001053908966792556, 1.7334176304904956, -0.1779771837357023, -0.41380491637301237, -0.06249430332819873, -0.40822091229666285, -0.15865094737577237, -0.22791303828570522, -0.23137137480903766, -0.013132065455086364, 2.177877223724795, -0.5313448640241738, -0.1708284452762293, -0.20028901126569756, 0.004389019230007551, -0.001753020671827847, 0.47958424485320433, -6.315249356904824e-05, -0.08859941946875569, 4.741009990552978e-05, 0.5126558637471882, -0.08124595950813059, -0.25478425171394614, -0.00887374796638217, -0.3967770647662966, -0.037321311957327775, 0.22454958521886345, -0.21407694150442264, -0.5841725373870789, -0.04632336424389529, -0.17856655805383598, -0.023548439369976745, -0.0004495480470329072, -0.08756443315335999, 0.3854088453588894, -0.014841043661639842, -0.5507788287454467, -0.07545579588823, -0.11367689112447055, -0.767116745246416, -0.034061481145825995, 0.9022476340602709, -9.960648197831523e-07, -9.489506405120373e-05, -0.4138241264619511, -0.43164990448855023, -0.009606950429929524, -1.04557097966984e-06, -0.03455118626148183, -0.2245179952204284, -0.6619183724359288, -1.4925990165428704e-05, -0.00443121171859831, -4.343151654563989e-05, -0.23181529640567453, -0.036286852792113224, -9.457326578586427e-08, -0.15034372404399088, 1.1876166234104677, -0.0022757492152027234, -0.0002564232094354412, -5.442723393776189e-07, -1.121681031357621, -0.40747085482722417, -0.9680818206969068, 0.09464645292005305, 0.010485472284953177, -0.3033996430333241, -0.0977646274587437, -0.6506045765835267, 1.472923638827974, 2.6678572868698476, 0.009878042617673933, 1.445768126357187, 1.6999832141263824, 0.00018217852545107175, 1.0008488829612683, 0.010140202473292418, -0.22565796236543473, -0.10631954800714924, 1.0551299593603924, -0.3237750677051141, -0.027349368968022182, -0.061463279292834606, -0.754226103708438, 0.19283901379395244, -1.4837287704797721, -0.16956660212761238, -0.0007887638771710899, -0.9756783210816062, 0.12241228514836855, -2.6743099834676412e-06, -0.24110903412698884, -0.8447199724893433, 0.05984310293901809, -3.075453512224807e-06, -0.9943179083898057, -0.7961453452530839, -0.6154617080066228, 0.1679864324910266, 0.34306557195636206, -0.67677507984123, -0.8455603996767778, 0.03752887499523835, -0.19301226259078968, -0.685163348380387, 0.5840980156637534, 0.5649272792517018, 0.8042385342434746, -0.38949982518665877, -0.07385075566502446, -0.0007366409417979007, -0.27507479524079725, 0.0016475840005133761, -0.01107403170239706, -0.24576788304353117, 0.6741340771652643, -0.04415448931325713, -0.24022990646819561, -0.7483576127450303, 0.0052676954984169945, -0.0066938872713194365, -4.905798583041608e-05, 0.11669201640057125, -0.025510209168759068, -0.7561094390889141, -0.3409165170702043, -0.5536484574782331, 0.7746100556712731, 0.7132452029554445, -0.047890486652670955, -0.5685773267128739, -0.43653344957963264, -8.803380118198762e-05, -0.5489386264440077, -0.46624795692482623, -0.16790542074417322, -0.2858855052219882, -0.05061830337370173, -0.6785484967444733, -0.45252440534350113, 0.011029189553273014, 0.0855511772816342, -0.1600443652545697, 0.5697005819698776, 0.16763124358629464, 0.05606686748582761, -0.15002442371172175, -0.2621988804572678, -0.3425824091972199, -0.15073676427879967, -0.2894141755400038, -0.17634770631316332, -0.033782792491815455, -0.002359464824549385, 0.1436145268733418, 0.2112148130354044, 0.30867089032539646, 1.3990048774071786, -0.07354387159106195, -0.0016547177263701086, -0.27713914858919914, -0.3660617681894755, 0.22543264340953717, -0.0909261641025453, -0.6808827712627005, -0.16184959858565, 0.01338674779003213, -0.390668523507636, -0.4322706202593773, -0.42315537377084567, -0.3333529223861632, -0.5331228434127742, -0.3052690228703465, -0.17655766792545355, -0.6667683700144521, 1.042246726419783, -0.17911164688185147, 0.35767249242937255, -0.3916171274515767, -0.24770549670832664, -0.7863804229945587, -0.2882211725264785, -0.16655961500179556, -0.30377935813512985, 0.03357035429476318, -0.015643097331367213, -0.10923714463439392, -0.29453854783128375, 0.9588133435362604, -0.113914891309745, -0.25688952899295125, -0.4247801439479745, -0.11592691070930781, -0.0962735409569119, -0.5403085076619952, -0.20431655519923364, -0.7131130607171995, -0.5209305881598282, -0.06722342142558374, -0.39539416461923066, -3.9871922118325584e-07, -0.043900296550164995, -1.1920575485389986, -0.3484616575202669, -0.14341800031749122, 0.0027857247770010527, 0.007204203407480797, 4.960094474610633e-06, 1.3885609502627176, 0.7110038374084898, 0.0048426088693239965, 0.9770120654545058, 0.2653054602523769, 0.4352669484859925, 8.012655610783477e-05, 0.20112375216847764, 1.2168997281420117, -0.035801203822247045, -0.0762979214555102, 0.08583220461749969, -0.67109493121809, 0.394456892536779, -0.3968109684780629, 1.4665938523058946, 1.3759177819859774, 0.3592805048710434, -0.8052247027850445, 1.1678270408820717, 0.7230690203142032, 0.15295411173209314, 0.20731955704828697, -0.2668745235511794, 0.10307373632540102, 0.6169392499193432, 0.5320415336285872, -0.26295269427074364, -0.40891646736353726, -0.4817748505361349, 0.4054286680716138, 0.09931182991014466, -0.9145951747255531, -0.0895945912450094, -1.0543994510006924, -0.3280122089925901, 0.6380459794034823, -0.6530643521238234, -0.4805135093028206, -0.7942233035162063, -0.3058582762093943, -0.22762679388822318, -0.8647971741858768, -0.3580122790859132, -0.10765199213771728, 0.04999162761081862, 0.8198670014226056, -0.6799432007720148, 0.10358720728597759, 2.4094867327051537, 2.1394667157650615, 0.19028862211015574, 0.1047896122532577, 1.2425185249951292, 0.23708341075917788, -0.36687437875547185, -0.20700701563754467, 0.2551701346720448, 0.049815615012984704, -0.40281608011240466, -0.4771690352077378, 0.5221090007542543, -0.12899785540959224, -0.5794603867256141, -0.5719027310026965, -0.17143187350966627, 0.13103214608154695, 0.5512973044310933, 1.7115068485688447, 0.723039122780676, 0.35613097942469096, 0.603172455898639, -0.4997628359794226, 0.40860473803365666, -0.16090326551977072, 0.020691557766301636, -0.619094151970312, -0.5297972822095721, -0.04283711184944272, 0.5722609767291246, -0.30622509289806266, 0.1953373897901262, -0.22222996389481564, 0.003214571352802214, 0.23817687511172092, -0.08786876774868595, 0.0006010615868081114, 0.04748685990698494, -0.9854201001372592, 0.29800530405916736, 0.8869676661497405, 0.4623788808039491, 0.44493540637830614, -1.1925808876889772, 0.8369331880217405, -0.6074540716944764, 0.45397898767952455, 2.35371684948907, 0.2692244981423903, 0.1837069229841888, 0.40868613269857906, 0.8874891977742564, 2.442810538459741, 0.40202147901805513, -0.36216724440051434, 0.0013170935311797864, 0.04541444086097149, 0.8932921516168378, 0.015636496464784065, -0.3411276031772025, 0.8422208409755152, 1.8408340245776484, 0.7516244656238903, 0.3621056913527004, -0.05685727593188941, 0.8412866741912431, 1.3483980449605266, 0.17527972458024701, -0.48246693627727494, 1.1823703691502307, -0.0002787394777107391, -6.343783268634719e-07, 2.982219722325821, 0.36805359465405374, 1.2833610226941488, 0.34897849756601607, -0.37336175263344007, 0.24329668105366162, -0.16283574102710488, 4.7072539841483545, 0.06283134612022563, -0.13447045747899328, 0.001001671836109026, 0.5983351184137364, -0.27312912211968615, 0.10419982039743662, -1.0817248779780076e-06, 0.9146154671252809, 0.5584413393435803, 0.28272598164240226, 0.004054143199433434, 0.5695661269059, 1.1280499409081433, 0.3981885212533674, -0.5406866740657761, -0.2826764428874721, -0.28767886391238007, 1.4951180940674593, -0.2701803499762974, 0.32182961598308063, 1.0153698586123718, 1.7405232116353402, -0.6817529420479356, 0.06676716748497111, -0.5694808707119653, -0.4954695308592812, -0.3450897266198016, 0.7035388549745331, 1.4699973381436708, 0.2055899427369665, -0.6629583846208001, 0.9243795689903588, 8.102132484026704e-05, 0.724953527452573, 0.5704119581843728, 0.3650704067591016, 0.2383190841916818, -1.34189816143186, 1.3052966124350556, 0.009800952680497741, 0.6396003034594849, 1.486084424934377, 0.8810748953372011, 1.7340392357570458, -0.29136725506596706, -0.3424569014995614, -0.3975069680225681, -0.003059984387553506, -0.07022697578259943, -0.10085239975342714, -1.6989534846696503, -0.3209768860417281, 4.634329745185251, 4.320409673866479, 0.1768775120262206, 0.12444333811267597, 0.011308676404348178, 1.4603539971247799, 0.2891653155937361, 0.8276733451391955, 1.083430643442159, 1.0103226044115137, -0.43510898299900025, -0.4595044806919511, -0.5469375026164023, 1.1789600640511064, 0.40651599639877695, 0.5526324277598372, 0.18439381105549982, 1.635319167100303, 0.8619973613235709, 0.16530942618027714, 0.16448980320434717, 0.028221139583614205, 0.7494595813166597, -0.1322459406334202, 0.7530340343729574, 0.6213605014034864, -0.0739668900407789, 0.3470754763981928, 0.2736506879615746, 0.281206177148694, 0.7382096094475621, -1.3445315606666792, -0.0005172376320201349, 0.7171905445520422, 0.5386491795550657, -0.7751609941918974, 0.9692619372545069, -0.05857967012211798, -0.10282749983737362, -0.19907929575558758, 0.03703351265184677, 0.26495223411431956, 0.5082195686104634, 0.6815742424004906, -0.5559640364297755, -1.2280625109283057, 2.085170286448245, 1.336706331398739, 1.8392474014180165, 1.4443105282502142, 0.1846605621006522, -0.22615438608596417, 0.017232888068050938, 0.6153213682512892, -0.6128419080814562, -0.3897193218468033, -0.3357577049445182, -0.3824774997738641, 0.05012505954123972, 0.8745950998342256, -0.8317347671197268, 0.6033609585146047, -0.3124904911784174, 2.2099251077631212, -0.2507503310022254, 8.199918919439829e-05, -0.8848403902963762, 0.37938408742292934, 0.5611258653378205, -0.761764332957404, -0.20015779438486828, 0.25010379277170364, -0.2516459993855367, -0.12493055906395611, 0.6308121290950425, -0.5269194716575476, -0.48221503266826093, -1.6920291096123534, 0.45420512455734785, 0.16674009445313526, -1.0179184188282666, -0.04975118189235288, 0.36725054997402323, -0.9622202699465514, -0.3197738282569989, -0.5576442441177175, 0.05479326181525996, 1.1270125694548836, -0.5869639972876268, 0.8885244746056435, 2.0623033512757845, 0.0014056961036441797, 0.17116772373605624, 0.30272855328170883, 2.233503629617638, -1.1220605549258234, 0.0776301445057776, -0.38792607641928034, 1.8072486362800595, 1.222839614497425, -0.9101265277691025, 2.561182006896314, 0.3646407393744588, 0.20203949773292768, 1.3584277780720435, -1.6483081079564765, -1.8812955731227212, 0.4157136940025429, 1.2135297664787708, 0.2815223030685931, -0.4286264533924772, -0.5901210374347977, 1.0834183408278224, 0.3070506312686125, 0.7359158999183852, -0.4203274578909568, -0.058977710334723175, 0.017709363373137155, 0.26280504514347763, 0.16464807136577467, 0.4465811325837452, -0.8911580837843561, -0.6063316125844537, -0.8985782459851988, 2.0420987328578213e-05, -0.5492125210066238, 0.836916122826372, -0.4336863064605929, 0.6603647216120219, 0.8814438284297061, -0.1161575631776503, 2.4814972536738864, 0.4936337708932725, 0.9773669248483691, -0.9007261806274997, -1.6231979103434826, 1.3834386596376984, 0.629151497252369, 0.5845724067103764, 0.9383816647100345, 0.9155667872769455, 1.197481333170682, 0.3765937970518367, 0.5700989053830515, -0.29271418895931245, -0.4034989984481597, 0.8945513272147677, 0.22759051875529876, 0.44659400256678194, 0.0384148892322197, 1.24637629988851, -0.10593776292706678, 0.40384276083598347, 0.6821851814076986, -1.7242511443551414e-08, -0.7448037442027655, 0.05576643599290446, 0.00027066074056879394, 0.00016311372662956196, 1.6435916803715, 2.1140661041297477, 0.0045651430224765005, 0.00019013954338868914, 0.2903291306384889, 0.0009900045430848157, 0.6490280707679084, 0.12973452586314083, 0.3970777557370148, 0.4052662401337805, 1.6995695193073812, -0.43417433139098704, -0.6386332753922581, -0.05805488469653724, 1.2484082982706672, 0.5956204646392667, 0.877004915871556, 1.992636699899831, 2.7513972086941227, 0.9205185230802041, 0.7397593455768037, 0.6290831258269662, 2.2327620646692414e-05, -0.21932675292834844, -0.22007884069063846, -0.4651670563085262, 0.38132754075439396, 0.914171680741062, -4.975171363191988, -1.2719007185093811, -1.3803423487881938, -0.4944516070485831, -0.5085730113751731, 1.333615714881169, 0.16812220181434953, 0.3203200739395703, 0.16591217956676294, 1.4727323331365552, -0.9370724832827126, -0.46239543468830563, 0.6508283744244924, 0.005453887911822249, -0.5898348496586763, -0.6403123431073705, -0.32834694553736443, -0.12372073278054337, 0.3489053011729029, -0.03325386842240756, -0.006401803125475517, -0.17576129040379615, -0.35609058648276615, 0.003020096135534749, 0.6847262905454939, -1.4275309740889672, 2.7655977229804525, 0.63222072223485, 0.16464899724817209, 1.14807408117512, 0.37934334927633223, -0.39178233600645307, 1.8328060275016929, 0.5141541811126713, 0.000601157952844918, 0.1978230872313211, 0.13993727452401253, 0.46863683281538465, -0.04369516935354744, -0.001156455953146634, 1.2341900286943643, 0.7407386465116591, 0.4232196468399968, 1.876303848614055, 1.0952346250478526, 0.17220346664124486, -0.16575900135271843, 0.8270721208047559, 1.3373605222659883, 0.12455634662737086, 0.4829290099387746, -0.9215189658062515, 0.43526306970193057, -0.906805450351969, 0.8951447000166307, -1.266710758658382, 0.5801969644101168, -0.6006782598827556, -0.15048259453988327, -0.8472720109816936, -0.09228423901585285, 2.062027246341297, 1.6556041242704895, 0.05575751000949937, -0.05038365976169729, 0.02278051017807394, 0.3971798990960905, -1.4340464257663825, -0.6433216871798673, -0.5823445606454783, 0.4606960896108343, -8.454903306968667e-05, 0.9451476594693591, 1.6876256686745739, 0.22235957351355945, -0.04918654610616985, 0.5278400917569845, -0.21311484988886403, -1.0844087868648056, 1.509194128272267, 0.6375211611968536, 0.16581565821866545, 0.39109758462459004, 0.4059758958063932, 0.6256389895943802, 1.5584250126512524, -1.4483798616513137, -0.0652313994871519, 0.057180329703947146, -0.24159779149334493, -0.3604123778383319, -0.44182382428533085, 0.017947260297612566, -0.6612503701305511, 0.3268236469741117, 0.7420166472308404, -0.6608335208685041, 0.41619360738335015, -0.2594125607011179, 1.30991934149993, 0.11487886560585864, 0.5942965725915382, -1.232837681637354, 1.134516336191292, 0.38376786196658297, 0.2768730956995633, 0.6248985227759962, 0.900355324240042, 0.3087975091769089, 0.2524757234244737, 0.9506349001526704, 1.1061761477187, 0.8934999914155513, 0.4359054483034219, -0.4541963082734058, -0.0010414366416692492, 0.5730095412889643, 0.2082608348287995, -0.8640832219206022, 0.022228633891229956, -0.20482211051661206, -0.5134901339406134, -0.22725970055081876, 1.3289690843410216, 0.31205759193257515, 0.08464904316547264, 0.23473476881169048, -0.33326272198665435, 0.6849197150405727, -0.4536094907618354, 0.10058683699058019, -1.037004664934095, -0.06683473028087016, 0.933018143114656, 0.0702622548903824, -0.19592566372327774, 1.5330671903469242, 0.4907041857599257, 0.07985856831516898, -8.612106404954473e-05, 0.16707121386191567, 0.0005923713395211994, -0.1384664487841961, 0.3782045532960845, -0.17546241487165884, -0.728851037130032, 0.40544137205924774, -0.3145957720581944, 0.1686678513230291, 1.4067941365808727, 0.019289352791488447, 0.9970718515487108, 0.5796802949752902, 0.5661639989465781, 0.8079402145111866, -0.3047107730856909, 1.3706022373819535, 0.033228087097976707, 0.6914724634686366, 1.6691808174038663, 0.897879410575677, -0.2820032993652923, 0.058340537285430434, -0.35054342301361596, 0.1023145695898144, -0.2465942186854193, -0.3392660338289761, -0.29705112904425035, -0.8607700101745976, 0.4736556064334169, -0.7020837545636287, -0.5365687710030884, 0.34319882730220197, -0.6100815237200271, 1.0228117274917383, 0.45640977096316304, -0.42000406673758234, -0.26519720959249343, -0.31389805860802217, 0.4676377243780813, 0.0037884631666072733, 1.5556085664629624, 0.5046037469495368, 0.8313756283675833, 0.00343753733505127, 0.18251357984531402, 0.15161428916617387, -0.685266588861446, 1.7350268359928394, 0.9398929991645912, 0.7643790067896885, -0.02828567612840154, -0.8249891295948967, 0.4963120299617749, 1.4665330380821262, -0.1510007584354145, -0.7163784829279997, -0.056460982164956534, 0.019887881345914387, 1.1652474418824013, 0.3046155721739188, -0.9034517588742138, 1.6441535600415107, 0.7313842002108678, 0.3304036744983538, 0.5527605784337227, 1.0779735955238585, -1.0011591382468406, 1.1258152941540562, -0.22426011771797652, -0.2920050096829517, 1.4777092024331433, 0.5362320164992163, -0.5140691237189272, 0.0778831469219965, 1.2892754395163546, 3.5902984475471924, -0.5334028478708416, 0.6889948768512378, -0.03961846559774071, 0.13408600847154412, 0.08393568892859368, 0.05485561682662455, -0.19447252189442019, 0.24399016499317147, 1.1744148966345955, 0.12016433072826353, -0.017424532082156084, 0.8275428637657809, 0.4957799092479492, 1.0040883570987278, -0.725270353200859, -0.2666945300602226, 1.3191268189604655, 0.38834673330167724, -0.23195351484855273, 0.017615280969340955, 0.738635348854599, 0.23634727775455072, -0.45350162244366626, 0.559986579032359, 0.27378127617188225, -0.0008074249450754916, 0.4182603842440185, 0.3874381551399536, -0.6969056816576715, -1.0920094497705475, 0.21128116133310096, -0.02148175356356149, -0.12850687112449274, 0.08559992768222038, 0.6252650461765847, -0.7324856763528473, 0.0011022767252512158, -0.07112397321452182, -0.04484579107262419, -0.6106468644210351, 0.36811898133179294, 0.6403726803815439, -0.029637019618119098, -0.9211453056191427, -0.48581620489455424, -0.4305012860120034, 1.240116621007242, 0.0003642055733913104, -0.29273358380665937, 0.7608975245447954, 0.6908509004700539, 1.8800839823646625, 0.34480068358573146, 0.016593776733912668, -0.5145768728917821, -0.20746368582143437, -0.2579016737697886, -0.14037101848275044, -0.7032183241102942, -0.3152965676338757, 0.9720240278377088, 0.016916209509210613, 0.0066196103478349385, 0.04226932235223913, 0.002888820855179914, -0.5703201854120009, 0.5323412584239174, 0.5151486752861038, -0.34969586780451034, -0.07465166284858517, 0.029612341371107527, -0.1824999654954718, 0.024211576745515263, 1.3246999478854458, -0.49953147088752786, 0.517525359800454, 0.3636987882695431, 0.8264185214713785, 0.4157114569271607, 0.5046589621958237, 0.5553033193800803, 1.1224410184695846, 0.32056294936854973, -0.14344464970092005, -0.6907906138950208, -0.012683481161306822, -0.5908236981956032, 0.8101628095144807, -0.19913437782629637, 0.6041470042664513, -0.4261742221616259, -0.1759553898666889, 1.4364486328875814, 1.2792475941609367, 0.14322663195406826, -0.23194907370733758, -0.37117467536036974, 1.5216091140556278, 0.03586164203620477, -1.3256284910866336, -0.6084066680775704, 0.331724687275255, 1.7746300290014134, -0.17035145365179366, -0.2684480313031042, 1.0701770323433877, 0.7187097794978439, 0.011312078035849427, 1.2991585269701365, -0.8164328077336863, 0.09423994851681335, -0.34032322999700576, -0.04485654050969957, 0.2869432304799642, 1.883663023548388, 0.22966390272964124, 1.3235346862386204, 1.084744673207567, 1.4739387146663165, 1.4201756514505415, 2.6438748512258603, 0.3889055465041599, 0.6737918020066477, 0.019404410321462062, 1.309988572838017, 0.12472417756774326, -0.292284111857032, -0.4836951308998394, 0.6059091855749021, 0.8148066866379388, 0.0005717076470404985, -0.031487370019923515, 0.16096775786249834, -0.32939528139024804, -0.40944474698417394, 2.722932694976704, -0.000876897554859069, -0.9894871844505367, 0.8827242813571072, -0.4094413227043331, -4.949162190497527, 0.35953941783278626, -0.19192932483149525, -0.6589672383930011, 1.0654700490843536, 0.3681224199541666, -0.31254092071361594, 1.6275939651587896, -0.013832560951666994, 0.6500470115774156, -0.7770822396876853, 0.062341776457753226, 0.047881857163754205, -0.11726468092615887, 0.4374016332224844, -0.29412181614830857, -0.29832142923678273, 0.04733306519670117, -0.05480132749301215, -0.5645284212359379, 0.5703367745986948, -0.01820417846641857, 1.3974710838133517, -0.4155901723663813, 0.1413558965759935, -0.010961780111790812, 0.7124944366661525, -0.3002259153827472, -0.30529313324311336, -0.5489652168801717, -0.21564478229108713, 0.9372540997280557, 0.4625092571442344, -0.019037775326789255, -0.0015549855340239824, 0.5732091937933419, 0.1286244673807722, 0.31703382178433237, 0.21466926184592525, 0.7808573354794797, 0.16009602594613465, 0.292766001587014, -0.5798512208031682, 0.3188413426191682, -0.8177619065093752, -0.2642648696862176, -0.3230439480516876, -0.4255017492357886, -0.8004837659382023, 1.03432662172287, 1.616541158052799, -0.1353355800820016, -0.9914339775179246, 0.5504988085651191, -0.08637583554616445, 0.7628120771261507, -0.39416495578801414, 1.57448948480859, -0.09380654826389835, 0.3597123164806559, 1.1244344119180667, 0.0021403498861080877, -0.6239859430942628, 0.001513058561213552, -0.0021181844561126545, 0.4571173334626165, 1.0628230871597035, 0.834494966608015, -0.43750348313490717, 0.14803095267147318, -0.05756465795397202, 0.42913417036858253, 0.3725655413256508, 0.9968209560123077, 1.2124421123544005, 0.43071490262830114, -0.38243806932376667, 0.5063836846564523, -0.19846971648591294, -0.07019463760513137, -0.45712059377252395, 0.6582323208432913, 0.7548326741460754, -0.1487646630099565, 0.49766175513868965, 1.0351910671917472, 0.48731694056599184, -0.7818924705714179, -0.22134586513720897, -1.451097841558772, 0.04810089100751865, 0.20142871474141177, -0.4621726021600328, -0.22673936139171016, 0.0036568505291431496, -0.3093698902497056, 0.19468530818594285, 0.8031995512268493, 0.9767228226722249, 0.5883651001121978, 0.749643083720845, -0.2299215073064601, 0.3810017907210557, 0.04293530578916327, 0.30566490982414285, -0.12330243721609378, -0.32141181864173624, -0.008061384728968876, 0.12859236237142074, 0.8935907182128078, 0.24750786797860042, -0.7578406632766798, 1.1702652602702606, 0.20568460298390534, 0.08758496417416209, 0.005223924312312292, 0.9637759117173977, -0.00421057169753551, -0.11588093472991523, -0.3669254052296913, -0.2958711807109001, -0.5995229501211581, -0.45426010935603856, 1.6221054862589148, 2.831446627323046, -0.45007796060126015, -0.39053543538431146, -1.2035912393100165, -0.04134019927297172, 0.5713928424415022, 1.7865713807465937, 1.2380313899858397, 1.2116853949237718, -0.18297195416190437, -0.5333200531803914, 0.35430522105441753, 0.4154586053998475, 0.009836270504349027, 0.05729798439859309, -0.33131831104864556, 2.509804358219294, 0.0003046984212952734, -0.13461926341553, 0.7209243524232191, 0.021902624810304895, 0.0016349338331545808, 0.40172114790213614, -0.24289756637891052, -0.7959774002982245, 0.08136275302624398, 0.37430545399857307, -0.3366570195394372, -0.23538030720156855, 1.0269825141472457, 0.5733943102413604, 0.6906252603042655, 1.293806347627345, 1.295872455123803, 0.9094674583011245, 0.007547866848523912, 0.38027797930885127, 0.2870228242774071, 0.2332447522352497, 0.13847784655607182, -0.27086217022177544, 0.06812070458645426, 1.850843758553096, -0.7927798449643029, 1.2453569664131015, 0.9041863523787947, 0.250578669586675, 0.24029309146500297, -0.4740655747433633, -0.18108968167910405, 2.6369307847804726, 0.019761984639839962, 0.0004018813624244608, 1.8682901962011447, 0.794862123604261, -1.0582776641184455, 0.42570564825558976, -0.3441805032161507, 0.12714488095718735, 1.376213666279679, -1.197125141710427, -0.3974676566489355, -1.253494696404752, -0.16869924349924917, 0.2177388718375685, 0.2617323715229313, 0.6883218387282375, -0.06404801233919223, -1.4707016226322553, -0.07595466633077519, 0.024333884603778666, 2.3609064373125914, 0.3168862314043865, -1.1360470221930723, -1.0889282395417097, 0.0002206250339332559, 0.04694670137235489, 0.7594439649839665, -0.060843814248731025, 0.7432386137171255, -1.3565415865142951, 0.33729404613446706, -0.811234981507535, -0.59669771160527, 0.6056423550795182, 1.3894462658855982, 0.3791324773398236, 0.01830059360779473, 1.827150785524423, 2.013254904036162, 2.571736533128816, 1.5867542036720297, 0.28186087046792163, -0.7594061820836724, 0.034130657125080135, 1.194139015433857, 0.630588943068684, 4.341478045962157e-05, 0.028177342578917415, 0.47166585413972695, 0.0042531892993476475, -0.8860949168234582, -0.909548158790127, -0.5194271178868047, 0.14078572639713896, 1.4238742841315057, 1.4906875994412288, 1.1936841100162447, 0.7674192711477591, 0.5631664677698122, 0.0003768405311622215, -0.9813292421244407, 0.47257820658950483, 0.3727975354966949, 2.003514963174568, 0.17591140192534543, -0.20052391930532804, 0.18521024781767317, -0.607913958723369, 0.9749520768382673, 0.3698850356997298, 0.314969623403719, -0.27957143311424554, 0.2550592268009614, -0.9175142253293637, -0.2869178820940032, 1.1449041793399513, 0.06674486600189937, 0.5925310319449186, 1.210712140921765, -0.11227001607947298, -0.4621819660751141, -0.3507844537163339, 0.4544608962048867, -0.803396963380369, 0.0974796674227064, -0.42120834066857205, 0.3183854634998146, 0.01738808598388578, 0.10045701521198182, -0.5533844589351389, 0.0005228981696895434, -0.6688777801995639, -0.637460015398129, -0.47923178335710026, -0.3326613411692845, 0.11437813757274957, 0.06348117777220832, -0.2505529338031407, -0.22601081260873687, 0.7973202387905693, 1.8827702765555612, 0.952283601094369, 1.1908443894117526, 0.37427595225820726, 0.1630031663228352, -0.1778211652619548, -0.3093712398522729, 0.2725689811797019, 0.020107810831455106, 0.4029500479038061, -0.015506027073135835, 0.8876241592950395, 0.15593791573699825, 1.5432861103816595, -0.2976920567316068, 2.5613579408149385, 1.5743421941183882, 0.08237537485879963, -0.23276292670707316, 0.007328854240404781, 0.4306612656394408, 0.5546212622765772, 0.9335501405306676, 0.23272112526213956, 0.6710547309667118, -0.14264258558268203, 0.16472927729381964, -0.8347105417395826, 0.004488083034836419, -0.2484200923246118, 0.08792917768012283, -0.07156746024930846, 0.2438644657928167, 0.33053972819910193, -0.03272513564376114, -0.2429805549117698, 0.9986599445593136, 0.22054632322681564, 0.31313812339196034, 0.05433717256229055, 0.03310818312526483, -0.25319650073015654, -0.8317536261109403, -0.11981284236868595, -0.27322128222973163, 0.2015479784692222, 0.10898418216838927, -0.8208095555434893, 0.3418083324220907, 0.04786886897660276, -0.07256288277301667, -0.29637445967351056, 0.0084109820990219, 0.011691308815282181, -0.16274994544228866, -0.685089482284766, -1.5342232138997953, 0.8036348718460279, 0.13284873158933302, 0.11571815905328836, 0.24106091695406975, 0.3133521494891876, 1.1357685761601781, -0.9198866525025409, -0.5961142212874319, 0.001693897742909955, -0.7692241324842178, -0.041449677675538095, 0.691530560524605, 0.31084789258998713, -0.03939469678657366, 0.32868453866446096, 2.856710797582258, -0.3670674797388711, 0.006683403464745699, 0.4280451402561879, 0.8671706784763276, 0.20341383971315777, 0.06309608131642651, -0.28426572493759933, -0.8078063573991233, 0.9729267751262053, 1.5613495844318814, 0.2117244473482427, 1.8407595566657042, 0.002182180246374935, 1.3718006178561142, -0.8100519867670657, 0.007728151350381025, 0.19291467297063522, 0.11768816993529466, 0.7315249388748911, 0.7395700678555701, 0.15854328808690704, 0.8855600170513328, 0.000556762537291065, 1.5226474935690215, 0.06715451833905231, 0.22959556708940873, 0.6840496881610569, 0.2736976379070304, 0.12731094950188265, -0.24150796589417517, 0.563326555605436, -0.70735509078023, 0.6120973889812402, 0.36255861997850347, 1.7346791243434205, -0.115147278692718, 0.13751903638281837, -0.5409734755569222, 0.38652099522731426, 3.4231776253917094, 0.007519650441954395, 0.48846231643588606, 4.6596805583283825, 0.011613945290230356, 0.0050769005111775765, -0.4524844842190655, 0.7326042901799085, 0.12345923877254095, -0.12297548560391716, 0.2382597724994754, -1.875868310288974, 0.35721267619022345, -0.9424602349391322, -0.2082386539470399, 0.412795439859428, 0.5520298513785928, 2.8041625743246237, 1.8574500151722444, -0.0020907841592463297, 0.11992959040627113, 0.0993029426371151, -0.841260434429786, -0.04490571655937667, 0.10918328437600398, 2.0829326506491745, 1.732807161505949, -0.174744550972392, -0.1514089143416884, 0.8974356171508702, 0.13912949876961192, 2.016613632639248e-05, 0.21523469273651036, -0.8569952399995086, -0.27804473786574957, -0.9148921220119929, -0.3226700539171877, -0.5799720867460783, -0.11135311367437493, 0.04645472977982754, -0.788745823998523, 1.027297694682662, -0.7229987859922674, 0.7321065133279083, -0.5601810494845462, 0.1894696985772142, 1.2237551473538482, 1.3215647951967888, 0.6502402867547397, 2.5818321845636234, 0.5765720674317121, -1.2069023072956149, 1.9419107926133248, 0.30934554636599776, 1.0021179592324312, 2.4874539458241993, 3.470728620374002, 1.6247269029614513, 0.0023803185702205945, 0.249547903219732, 0.20387976848566486, -0.6980888601246626, -0.328645809249199, 0.9776426948256688, 0.36659944625832397, 0.13423897807177312, 0.010654574311169968, -0.9273166061939662, -0.5053388571014975, 0.0949309699339532, -0.43370405954858404, 0.0074209833269900626, -0.857834954730605, 2.3352121182134677, 0.31346331280579737, 0.0035404520451383465, 0.6188633480303367, -1.4678761315139552, 3.3784059515858393, 1.3187513802415005, 0.04067827018998903, 0.4362688118386325, 1.1115364622146058, -0.9816127802258043, -0.5365646781591429, -0.5579416116089208, 1.0737607455592335, -0.21536146488428853, 1.0862994483237756, -0.4538100341085747, -1.0273565831840996, 0.5739974769271496, -0.2333033954622201, 0.649989835593874, 0.3330807132956548, 0.9912954624645557, 0.6761756027006439, -0.816638341533069, -0.01652143724507543, 0.8104194404315246, 1.7881749553966133, 0.004215066586242652, 0.8790492049097259, 1.0567833427805018, 0.6850194898967115, -0.1896383613252594, 0.7939347697784868, 0.5227629317737769, 0.1612560833270432, -0.5841473572835275, 0.5100798268669288, 1.4531369429596779, -1.2260844684288394, -1.5611676443682758, -0.7651749742471852, 1.2095074014152747, -0.14604055709678207, 0.08069988979711978, 0.7864762598021242, 0.6372842411874727, 0.25886040809034533, -0.1885086797932215, 0.17354474344138104, 0.34359845449598464, 0.11925845543072773, 0.12775184114465232, -0.31704786727699363, -0.23411837491295717, -0.2923693221021061, 1.058630600727954, -0.19399743821180196, 1.7046914649297134, 0.9702912055002223, 1.2863783517353005, 1.4829567534425399, -0.31140430457191526, -0.3959874997333058, 1.7408685498385217, 0.5890472280493624, 0.10456807005672271, 0.9563813661513368, 1.1872380802072027, -0.4972323932223464, 0.34545097188579443, 1.6077612919178947, -0.22386927798811726, -0.5167696532154993, -0.056281596437865365, -0.48487025135570777, 2.058216757914819, -0.8096213214343764, 0.10599107309387165, 0.28063193903061273, 0.19347679265125672, -0.03258057610236615, 0.46104775920731805, 0.4350281236899009, -0.9044969144223891, 0.5423965207691296, -0.1421735334735409, 0.697083800636492, 1.030315082771677, 0.2491828084046116, 0.15350068655262739, 0.42156354131094986, 0.28517960652261326, 1.1317408200549721, 1.2282324636746889, 0.11322316440336395, 1.5023977293407586e-05, 3.755572999263243e-05, 0.9105030473390789, -0.04813941968790693, 0.2093091790428439, 0.6344598124261055, 0.002382184077073742, 0.048777717404611565, -0.9902359464440329, 1.1301272642313263, 0.904440827402531, -0.054084868729154224, -0.5315935519777135, 1.0088770836288403, 0.2139583012832604, 0.4783280144831313, -0.29123687455796443, 0.8979583914910848, -0.4214094907167469, -1.2694343285283023, -0.7355327208551882, -0.49829080460217495, -0.1385474910117182, -0.18293657143640288, 0.0881692023788276, -0.047801751957952714, 0.2850208347568791, -0.6658728431835278, -0.4877899390002129, 1.199607762539801, -0.012691361112949617, -0.4896085974894196, -0.7511596381660328, 0.3910121047558148, 0.9754977494927701, -0.21681640218411502, 1.5358935607960091, -0.7183488888861618, -0.03887107847589212, 0.20762180852061302, -0.33506371314036765, -0.013510776873346867, 0.053475848732085295, -0.11896817497843587, -0.020497241249267505, -0.17904438895939717, -0.4109415686295539, -0.2676227883830215, -0.029554932202607256, 0.22078429203614794, -0.41355252354225835, -0.06548045419413315, 0.241540715339363, 1.1776492727031376, 0.7045434436837841, 0.5979743396782681, -0.013868450132178488, 0.7701691727376749, -0.20468427084095636, -0.24124295750717797, -0.08240810339488083, -0.3673817434071653, 0.2288146376407367, -0.17052608673044264, -0.024493774189407725, 0.046122299578664004, 0.0002225247309893551, -0.5275559567676377, 0.08226975562503061, 1.1786052839036323, -0.7217237893866324, 0.5265196531513328, -1.4896747654836575, 0.4308259925253943, 0.3201631650440023, 0.44570414124836283, 0.21065587387403165, 0.4698518955063365, 0.36763565883478, -0.4734670552383636, 0.9250340470166856, 0.7741602548816086, -0.8173756242760142, 1.545414700714212, 2.0688522975557304, -0.14288896283753125, 0.9554078905579514, -0.23314121175145655, 0.2919283435718326, 1.1882194520554046, 0.2504254492975322, 2.3256282236480206, 1.8488062788850834, -0.43506282037721755, -0.202836013184576, 1.0931482297813864, 5.216650996504277e-05, 1.5490812199330137, 0.3256904835594266, 0.23572715966231758, -0.454217102447562, 0.34201030540783334, -0.7094215933905749, -0.4208690010473498, -0.6878313224037029, 1.80972464105682, 0.7762292439270985, -0.6398556062591619, -0.5504956673082176, 0.07767108413325592, 0.5706659118487893, 0.0930157458050705, 1.452409211816113, -0.5824141754114535, 0.5020501603443854, -0.7858370130041542, -0.032312068439708005, -0.11552664892115831, 0.2184791672984631, 0.025434211470322446, -0.8898684754503412, -0.6785980264115026, 0.5571926882514933, -0.3122573621741218, -0.3668274386870831, -0.08542297594935702, 0.34202301357041587, 2.7728188532420615, -0.5975109983537974, -0.10725976970140391, -0.3219928096487796, -0.43984944126098774, 1.1261568698041375, -0.4600140998168416, -1.0245344010357207, -1.0236819728689053, 0.08845357482893179, -0.521422165368329, 1.1939454667586675, -0.5878494808908805, -0.4824718956757184, -0.4909475353540276, -0.4496472476140506, 1.3729087422178303, 0.024825731118642086, 0.03973851394512613, -0.021487865597451406, 0.713362525245175, -0.7311324545157836, 0.7994509983460429, -0.1417732909634912, 0.2592877935138202, 0.5796035005695784, 0.28385629727566736, -0.07982332899442594, 0.1294221365951368, 0.5518193249037419, -0.45795155647884134, 0.31950147649584265, 0.16968929924235027, 0.5578610345357979, 1.3345471324199287, -0.48240120981542284, 0.5022806307550741, -0.8396241651809347, -0.03797906581829497, 1.39613403638507, 0.5822367911375502, -0.6678083746222923, -0.7637442989457499, -0.0716653109390165, 1.1712500514341364, -0.251939644114865, -1.3733297812659204, 0.7032050590737061, 2.3910622623206508, 0.1804691324547192, 0.0037016078915216763, -0.07969720624041984, 0.874659884037486, 0.0001412731897343614, 0.6547120444540422, -0.9041721780077447, 0.6428871444924563, -0.9473087702498231, 1.0268201881877044, 0.36816388660164, 0.7456842913080968, 0.02892006210955078, 0.17543951070369243, -0.295217800860349, 1.095468951147233, 0.14367829233957188, 0.7035201759074685, 0.39609840256291934, 1.205559209514836, 1.9941172349050702, 0.23286345896764818, -0.4282344055054785, -1.1255810092905598, 0.30882556954388846, 0.6189336723330413, 0.48866099602926605, 1.3580318856436617, -0.30534726629520614, -0.36883328196771464, 0.31097149548610137, -0.8293623578800193, -0.4928636980953996, 0.5033443584494897, -1.1338001900027728, -1.788951385459638, -1.0623749774150197, 0.5660845389788823, 1.433311153392824, 0.3225517429967286, 0.024153926959851472, 0.498484989214133, -0.05061305648326228, 0.6532008257613768, 0.7504540397088107, -0.1208928344880078, 0.7543579463510272, 0.4223153746441032, -0.45790078824722863, 0.00024715386497276833, 0.11113677314827677, 0.7389342862346538, -1.0833466886202243, 0.7227894161037645, 0.12398044159106035, -0.05549530416202299, 0.015485167919563355, -0.47007048542859464, 0.69402254838996, 0.0031682533423686805, 0.6323710629694932, -0.006542151329933017, -0.28046562157805505, -0.18484491857886076, 2.051427464687122, 4.731106311103186, 1.2434172790238724, 0.006687891937311802, 4.292582738382999, 0.6681256316507533, 2.3870550312890866, 0.00841914451562078, 0.04391698938732454, 1.2923833334266903, 0.8697145436927384, -0.6337036583263875, 0.2416302768857212, 1.1698296927402656, -0.5309021033561077, 0.9220672940978487, 0.40176441896837256, 0.1463177543978623, -0.2088842036285573, -0.25509030629462237, 0.10133964942165898, 0.360570424298122, -0.06324853065209514, -1.191545245618254, -0.5327506989809518, 0.7748413339908293, 0.26995574214311463, 0.7329866933261432, 0.21747370381671616, -0.05579923222035819, 0.2426169794960706, -1.6516951150329127, -1.9851458028185123, 0.5093838043898947, 0.05441482405238513, -0.517561315635162, -0.035088619315628546, 0.6479437367293018, 0.11726688653139446, 0.08147869999206857, -0.11678592288885568, -1.0957537432121567, 0.3372023880193009, 0.3327332727473127, 5.1584184609893215e-05, 0.2743426083961281, 0.09863666284307711, -0.4233083836110865, -0.3638396009282937, -0.4094950301120826, -0.07542390933704961, -0.42713753719829234, 0.00022167550415910268, -0.394789201120497, -0.3525084671895035, 0.0022791881279708532, 0.5281609597255732, 0.01940968492533969, 0.001001671836109026, 8.069734689193517e-05, 0.8542862041693111, 0.12852224503431572, 1.3892055421135496, 0.0003684275475654202, 0.47568845777629504, 0.7278693223045388, -0.3389474487712064, 1.2922649808387632, 0.21273076578027472, 1.594365566301176, 1.5326574631083887, 0.8633999040305288, -0.16319745373001812, 0.6049974895317587, 0.5978135745063804, 0.4557237843933302, 0.0460324118776477, -0.24391620476200684, -0.06229136140110529, 0.5949943536865387, -0.02841294353686491, 0.09694034841486732, 0.9029423428685657, 2.2111455744419772, -0.24928513920833767, 0.4278626898139196, 1.3903351989773565e-05, -0.4507787738683013, 0.9185861874036045, -1.2884609470901605, -0.20844289894530887, 0.318246590453163, 0.01429008473250895, 0.0022816345877445183, -0.5873329917291944, 0.40826553881070654, -1.426499754559587, 0.7482536986120885, 1.1580214318619593, 0.7528936798985439, -0.5731233834039514, -1.177143162950023, 0.4753356362842441, -0.5804790998452262, -0.5158082627508958, 0.4342624607440937, 0.9009452128361092, -0.11398944040737871, 0.0012902108381194473, 1.3614114999425362, -1.2483961240740231, -0.6310553309546773, 0.0075633995576592245, -1.2707567882977622, -0.5763654309301212, 0.4823459834679942, -0.3931995532559296, 0.5209087719301476, 1.9839735284875715, 1.3908579200648863, 1.2274299908044322, 0.5207914574055036, 0.006316242878598638, 0.48368965043635787, 0.5696499309837428, -0.20817197009824207, -1.6686858148557018, 0.4591677303931293, 0.8838158708207535, -1.7140440527198062, 0.36815409241469155, 0.018634627130792485, -0.38088840018077386, 0.3862189711399257, 0.4909656020684774, -0.1493664970087433, -0.24713633590827117, 0.00825366247288043, -5.4232043299138e-06, -1.534018456268072, 0.6625097420826156, -0.4888426741405792, 0.0034318675182049936, 0.8552513838300599, 0.9227715976829883, 0.08418852607912121, 0.021247732319380198, 0.04787504682161065, 0.0010713598820181378, 0.10329091046004205, -0.16443797974219496, -0.07554164295259282, -0.22673200486604508, -0.6048494908800917, -0.35136891505775786, 0.5931279284473405, 1.04439763238174, 1.9276552105904332, 0.8868951978460511, 1.0678543708526447, 1.5316309405905861, -0.19340387015957533, 0.9476077566611815, -1.096320974634998, -0.4733229735193522, 3.0504525119888437, 0.8399031472593111, -0.5029860030380688, -0.3765602140752951, 0.17712187962449344, 0.19074871823518957, -0.33938928828701626, 0.6906121047810798, -1.1187555190434737, -0.8202705787118145, -0.2838299040751318, 0.1470583244814984, 0.6787806313427504, -0.3918404806880915, 0.19673184235735644, 0.8238198985589438, -0.7927135574853404, 0.6094666332668877, -0.2453159537358953, -0.12205552499656701, -0.6659784801506182, 1.2303827932628368, 0.20666616995415202, 1.3561512040192534, 0.4414148235342863, 1.8988030065182746, 0.1941106993238285, -1.2113107377676078, -0.5539958710237254, 0.0004094048122852411, -1.1351883738321478, 0.43612406188699715, 0.4398207720775797, 3.1890080442104045, -2.249908247384738, -0.7817828557879722, -1.3145121422721213, 1.3282935400478237, 0.2056192247762765, -0.3281360512976033, 2.812993817390926, -0.16043798812285917, -0.363352708395896, 0.4643738873313125, 0.867668629189379, 1.1741868441000807, -0.018658448479712753, 0.012102756548711973, 0.6296000738364763, -0.3160031183921485, -0.0628327368522801, 0.35583672393163557, 0.899878910425709, 0.9415168562282157, -0.5574081576837481, 1.6671457560414547, 0.3722831798028961, 0.248164319463144, 0.8838795669523951, 1.1707185008672696, 1.0124812858825947, -0.2189982620515941, 0.11369048040610114, 0.36033017559563807, 0.06836813413278893, 0.43044324981730697, 1.0177720707264142, -0.2666522467134082, -0.2151230798605297, -0.32645120207901046, -0.19977336375847674, 0.5912043490505268, 2.0289654754210265, -0.014748210771588997, 0.4617221387755736, 0.9176699817223205, -0.19330907958957105, -0.28494810971670753, 0.09142735459705617, 0.3492607172708534, -0.2975581125947973, 1.0473452004111925, 0.00022312075506696294, -0.3008730505340877, -0.9816831214093581, 0.4423977778085224, 0.4637661951418219, -0.04011541611103569, -0.05354715925083694, -1.3457839294970446, 1.2550935835377133, 0.6049094762618299, -0.5836340565911033, -0.5572365463198141, 0.05567302423244664, -0.6153641415915405, -0.20689933437479757, 0.14765615503873225, 0.5748277427434679, 0.6027803222182667, 0.532098092186036, -0.0807470277166541, 0.164096709939932, -1.2829571477016906, 0.07099181780358792, 0.46012077086600456, 0.012231930626852613, 0.7192834639482084, 0.22814829003772427, -0.00014446995990116917, 0.1427823210114896, -0.23788241794177642, -0.46264720563117057, 0.06316318469794864, -0.3106137835571908, -0.5261577445548702, -0.5199631117849383, -0.323257018992955, -2.0191151514229473, 0.0001733683842366871, 0.4573633376820415, -0.24569717297558932, 0.6459751512556954, 0.5632055887251998, 0.5078122931035045, 1.5846022302594145, 0.433159227173297, -0.16268543770347174, 0.6638709602340946, -0.3090576516663768, -0.9802460171083234, -0.01704094873427609, -1.1359475767365597, 3.425757965104098, 1.9051232669041995, 0.8665028793639309, -0.6774186445833776, -0.5192405351070464, -0.16538576551609696, -0.09138779463081959, 0.06571518642289949, 0.09475407153580047, 1.4343812877367867, -0.05803923378475294, -0.7690114520939952, -0.38113767695431816, 0.7524033441558649, 1.04994337359703, -0.20899306128302456, 2.399281798738831, -0.2237536960200764, 0.3513876098932658, -0.4139683630833502, -0.5051766884681363, -0.44372841831798715, -1.26775241162758, -0.8719650875102994, 0.10081461817609592, -0.5926498668930528, 0.3276055210726936, 0.005250734624408917, 1.0613593799918766, -0.7169526108581853, -0.3000871465034117, 1.458597255609108, -0.04058550357846157, 1.277308720547281, 0.5242482794189463, -0.5701248539907291, 0.718045981444068, -0.7193441689853618, -1.3870122157278324, 0.2450252260065008, 1.3860428511146996, 0.7528747821704644, 0.8391035097203162, 0.02889248546842657, -0.6891997848926781, 0.09923952749063454, 0.5019395290485544, 0.17536014775705852, -0.6001804711846347, 0.7041919944590265, -0.009590762158372654, -1.590832020527639, 1.1153614847748152, 1.1001381481537509, -1.122592307180778, -0.3696564025196341, 0.06597972984109694, 0.000214430625767061, -0.06676222502895239, 0.007458139850379722, 1.4476309786300101, 0.019564794720080842, 0.03347213399450452, -0.938332171118963, -1.3257160907145982, 6.3453951066508125, -0.5229358966068136, -0.10173675795604509, 0.12982603586421132, 1.099518778909921, 0.5887850177728339, -0.8079050972221933, 0.07506500018310462, -0.49253062545454995, 1.0668462148761473, -0.7333603389467397, 0.41047049553730897, 0.2093198305203607, 7.016245898585518e-06, 1.4685184516554322, 0.11685620143005436, 0.6092690632313735, 1.4183711972905075, -0.42635473765701704, 0.4160283909863585, -0.9334948416584458, -0.48812453964090224, 0.5413841351421532, 0.12888326162230707, 0.46174777787195925, -0.31313068380723, 0.001006567435018417, 1.2765803258612567, 0.9965818117298243, 1.120712554213212, 0.0003971388826342833, -0.6181050396647169, 0.4026555146923736, 0.011461168040077869, -0.577843475906114, 0.32168734574499513, -0.20283501239931737, -1.2406456490477842, 0.9620819922216821, 1.1323807468519924, 0.12142237833742334, -0.1569597599526744, 0.31509906496619766, -0.6081001067729978, 0.005329857087102752, -0.5491734303292385, 2.261367930947713e-05, -0.9703991550018328, 1.652316689848143, 0.3804903570451983, 0.760540566024441, -0.44125655782386203, -2.227655227883482, 1.2507352696003844, 0.8565759639734748, -0.2078638385664811, 1.4508030639233924, 0.3268997416107473, 1.2677268618646083, 1.2780542733766505, -0.2262361077505272, 1.3401189805808849, 1.5023138359967343, 0.004359223157245101, 0.34235902664523266, 1.1222494787174517, 0.16851930155496145, 0.16263397302585467, 0.4507458243408846, -0.16275039311189562, -0.3985767705279616, 0.5750361572245922, 0.8029995029795741, 0.7647804347650675, -0.2317119099749034, 0.4444005578781248, 0.3486729684446504, 0.6403273693510648, 1.5085440036981124, 0.4929883245729231, 1.1368610562581118, 0.3706630057204438, -0.04469077507500178, -0.43791786925555115, 0.9332134366511077, 0.3416869626166334, -0.3039371421491213, 0.9576401407878427, 0.91499417932234, -0.6998333879134372, -0.38251109145641965, 0.5048107517961432, 0.12503624790728604, 0.3107101108065954, -0.60375450333124, -0.3851841648710668, -0.3708727480961445, 0.9747447580411618, -0.5254786315127276, 0.5685789803179422, -0.1853918522172082, 0.42798767716957425, 0.020327034869687625, -0.430155895099288, 1.1466645387026513, -0.749164600490573, -0.2998838885900031, 0.8144564527467245, -0.16915634185240588, -0.24994456078752827, 0.4816902516606345, 0.6466217138785469, -0.17887937896028877, -0.3922491619034343, -0.1030265221995538, 1.3386925815807276, -0.16299612771736824, -0.1514982124409558, -0.27765428406619935, -3.475214028336623e-05, -1.4297772657736205, 0.08514892373591201, -0.6890960338739249, 0.08045586228387318, 0.007226279108787598, -0.22268307924515765, 0.027583187923127573, 0.8746361585658476, 0.4783615926703093, -0.5344734427523342, 0.10869554349647251, 0.3123571264742469, 1.87978414774223, 1.0959126636951138, -0.8727698703980945, -1.128971820000545, 0.6573049190869528, 2.722788904075494, 1.1985147103257774, -0.5761824750576445, 0.0005769722445465127, 0.3542927940416644, -0.1295930943063932, 0.019960939860174175, -0.17140476308298644, 0.17429097521204823, -0.4529474351623808, 1.5316398801265354, 0.5202403072274421, -0.09014510539880922, 0.43348716320928193, -0.0992063214342389, 0.15619820302395138, 1.8626104465957476, -1.0497161950115774, 0.561279694561297, 1.9998696332986892, -0.02263655799125029, 2.0998048123117306, 1.3046246514151496, 0.7277312092328223, 0.9497726302071978, -0.24976500030250384, 1.2575826082692207, 0.1279121518018543, 3.0983737476135245, 0.47836120565276263, 1.0833661868459992, 0.23289027197660925, -0.18480879161879105, -0.43813652458872177, 0.3926103137382673, -0.8862779168740131, 0.21382152956935416, -0.46903274630425346, 0.000547447028073247, 1.7201104448934754, 1.4593033215549642, -0.520341801896265, 0.7219520446674234, -1.3135309079848678, 2.947369431240593, 3.519163997349038e-05, -0.5667947635955893, 0.39209685064014826, 1.0552934777836564e-05, -0.17932220626060127, -0.17226944778790773, 0.9243349629098137, 0.00016916000126660419, 0.4873734763880843, 0.32225157323742976, 1.0507878273805553, 0.6686024295932705, -0.19057105536110425, 0.0174921302904099, -0.5809207623040968, 3.5353376732338875, 1.2757713209836103, -0.14578098663711542, 0.17207290535966116, 0.003231774532721773, 0.16945258411948644, 0.00029240199330000515, 1.270700835160652, 1.3345229576252169, 0.8776177024705765, -0.40445958802326715, 0.6218029006191057, 0.9039656223896618, 0.024504837553389197, 1.7043187456466922, 0.0012941090194157766, -0.7694549196248516, 0.000216751147400987, 0.42124427902004696, 0.7133220941583792, 0.008860724414452768, 2.00028993527663, 0.8140611276260036, 0.20196293636544096, 0.9101331465138519, 1.4391696513812486, 1.3773470382813835, 0.002260335787379996, -0.1016577642780228, 0.8331917582147977, 0.05409668683662716, 0.13717150160016098, 1.2696766487183797, 0.8915247543038627, 0.00018142806427556168, -0.7080393150758088, -0.14883213760101, -0.49265882517445836, -0.16064793900405983, 0.06332456312907543, 0.8120768665567286, -3.776763769183316e-07, 0.5587774165154946, 0.25879675412251796, -0.1911713305173303, -0.31327684401967937, -0.5628637517813865, 0.49694868609812426, 2.3381265094938004, 0.00044623877719694613, -0.3173253236668008, 0.48359076694660025, -0.22431390308461777, 0.3315451840535759, 0.6535410084753057, -0.5484436542528393, 0.00439494784611699, 0.3435773665310909, 0.20709248475195172, -0.08775960707424768, 0.03527679580286536, 0.32680649554164287, 0.8391348555637927, 1.2759185528986285, -0.40748793476716977, -0.6516981086263702, 0.623789684537186, -0.3382696754874162, -0.4366370109687304, 1.0356863810145738, 1.1434250850895311, 0.6248716526211526, 0.08398699462780516, 0.007047009186316774, -0.14248510082158258, -0.3828883591306891, 0.1775771301922491, 4.249907657563643e-06, 0.6092984354130581, 1.4429921159463883, -0.2615945244795776, 1.3943578449940828, 0.16173619601359723, 0.3786266219672597, 0.5082063095486598, 0.9545622710279593, 0.7773878514071431, 0.09674419513000286, 1.0454469457680604, 0.0003037002258063564, -0.012620451035373131, 0.04541444086097149, 4.66420852486574e-07, -0.4270345288116746, -1.0311923833325547, 0.00013713235710351003, 0.9820532415464811, 0.49464983142240176, 0.413559294677283, -0.1782850932677243, 0.3431495308255962, -0.47372386299710795, 1.7690327524846123, 0.457337051513101, 0.9366322533395353, 0.00012172920324795332, 0.1582183642088914, 1.877182068509793, -1.131312503892369, 0.14716695167876714, 0.02224591305434165, 0.23189487307916698, -0.23072735224713634, 0.5941270663491413, 0.6061991842927479, -1.5881682079780073, -0.13360175879590094, -0.35483924206489975, -0.2597287152462988, 1.2274545284930203, 1.5841064700027374, -0.1644817895200072, 1.5132546284915374, 0.22211729214592765, 0.14477595378462846, 1.0801242141352352, -0.7129143173564452, -0.9862698071294379, -0.1890183989930225, -0.3393278799414146, -0.0703040419107438, 4.1553343187196435e-06, 0.03251558280065279, 0.31720667602650443, 0.1466470590918353, 1.5626889506008817e-05, -0.6616348637432068, 2.1116170002842334, -0.10095884782464959, -0.3156333550524685, 0.35688242284429544, 0.47103639418460785, 0.1711029699073474, 1.072582899899985, 0.10655930673533923, 2.3934961064688762, 0.2795259096157749, 0.11454764471105014, 0.1525808078552792, 0.00010248141548459959, 0.2737980025382488, 1.122095534467877, -0.22416351464861756, 0.4729357462332027, 2.9546102570791705e-05, 0.0002696142742098917, -1.2966203294235636, 4.428033877365767e-05, -0.9464365608143027, -0.4852286521218314, -0.9645626024330995, -0.5704609428033097, 1.5566952405636647, -0.9630134136754331, -0.396167939817312, 0.1011139685513487, 1.1918954397135118, 0.29492181439976645, 0.03725763532367197, 1.1886856298733475, -0.27269346551632023, 0.29761540298097877, -0.41017382673023456, -0.8407122443389454, 1.16193214475609, 0.6379346836726885, 0.8210683488465794, 0.11340495683314786, 1.092723560181489, 0.002539202869444271, -0.6679144884315408, -1.0155487030662231, 0.006041006280937954, -0.694479203705725, -0.10143591293227806, 0.009788253961968195, -0.7417783117682974, -0.5718209049480093, 1.5493868140179847, 0.6686001738293309, 0.18682424517363214, -0.391241462098291, 0.9071163028822383, 0.5558657348406639, 0.7030044047854063, 0.07772696097113732, -0.023875869157739264, 0.36237333106306, 0.9431128864189965, 0.7660928019854074, -0.5197289201390484, -0.2017901998894314, 0.7622319706526357, 1.1691067387546636, 1.1957607961462076, 0.8771929506245032, -0.7638565733656666, 0.4379440228867948, 0.3690523232345762, 0.5030265273074852, 2.132422229340779, 1.046752361334746, 0.13598418257820527, 0.2846790911580873, -0.6553939892336815, -0.9720397575973876, -0.12205296723560462, -0.05683653817459667, 1.1823607107819198, -0.4483107483532536, -0.3975859933204372, 0.9683194607567012, 2.024617451342952, 0.5132386776441965, 0.00839314217928887, 0.17817206281971504, -0.4027900348736634, 0.20918909612560213, 0.5469011314670504, 0.40194717349264664, -0.11246980775241869, 0.8162633709271222, 1.896305453186648, 0.06535794603077204, -0.15874386898235932, -0.22731212504411757, -0.39439871287690836, 0.1696397806842683, 1.9457081761106492, -0.5933456893759124, -0.888912271052177, 0.05990582485328087, 0.34299435655512484, 0.38183418535087404, -0.03792426804851859, 1.2976859543208832, 0.00420585944604473, 0.41487351732372135, 1.1828489255341126, 0.30350759936313687, -0.46780869795234553, 0.6342466456946358, 0.2312936048667088, 0.658302750237909, 0.02222759172169109, -0.4697258024706539, 0.7502422019222224, 0.31255463634858943, -0.5931979768784666, -0.6683666291332875, 1.1453572132391818, 0.11813652710069639, 0.27074787482900364, 0.742057516639547, -0.3952335651491527, 0.14570846757439226, 0.22082232933721213, -1.2864652623996615, 0.18345526549969235, 1.2817324308642963, 1.4471912048266367, 0.11893726848845627, 0.136421836350968, -0.7926945868354747, -0.782438448269509, -1.3786432881080224, -0.36631958134586823, 0.7417566568850035, -0.35590587846558025, -0.3056712679827846, -0.7725735886955227, -1.045873955384297, -0.6676772003837677, 0.12418554649351178, 0.00036089388461379426, 0.07429252512898912, 0.122107856161365, -0.1912019637815085, -1.5413622228713042, -0.43364645847232036, -1.7757200180762436, 0.0821893186080047, 0.08664710727723235, 1.3138810448472653, 0.6144869716419697, -0.5322364312085723, -0.4496085852361811, 0.4780755883803675, -0.00038457944472161285, -2.90138219352367, 0.2465111136483327, 0.8255991082204118, 0.06505388275097239, -0.11553835144482139, 0.4437618064964894, 0.015421996715214327, 0.09929681914584021, 0.3448124312148343, -0.6356220002033975, -0.07454630868657852, 1.1578727818728412, -0.5362651287090648, 2.1424056873123924, 2.716753770386346, -0.16119916696460537, 1.3182708218912873, -0.027129664824631763, 0.23376478081580906, 0.1579623871788911, -0.040798375615733413, -0.4021768751164428, -0.43889542081865507, -0.28387403462300487, 0.24848916961614317, 0.4612859713624318, 0.8929300250860268, 0.8897734226911829, 2.329387314439532, -0.509158461264266, 0.06924663732546509, -1.2153640532483698, 0.00025451602580303054, 0.13807455364243712, -0.7285760237051935, 0.670534344784496, 0.8009685803837818, 0.06896682486243945, 1.024327154182941, 0.34849340590634537, 0.25857183538088485, -0.5672947930478338, 0.5503148688481683, 2.024343148847159, 0.17252737681763355, -1.7999059342747437, 0.568419849587935, -1.5712318004550059, -0.36037324314154434, 0.10445425597244119, 0.4620888093576347, 0.5252102827422699, -1.131191408268254, 0.013476088439122865, -0.7137309741670514, -0.9943493496515742, 0.00019487652820776133, 0.018954987894175747, 3.29937178470581, 1.738712831435897, -0.8858431870334613, -0.025842441124485034, -0.008626974914987637, 1.7294890955768023, 0.42453106112784433, -0.6582976646892786, 0.4805804371962776, 0.5108862639140932, -1.037725683159197, 1.5195301637248422, -0.6848579996678097, -0.3923975191461026, -0.03427759342461914, 0.7956482838092539, 1.7363664039405673, -0.07541395575724416, -0.0900022635790754, 2.3186387952948313, -0.4117819530316734, -0.03285583825646968, 0.4618637524577214, 0.001030609760447911, -0.039532658818073683, -0.9771440204423807, -0.6863499772393503, 0.28709495411012, 0.4775352417131258, 0.011065056366175045, -0.025037772859899634, 2.6270409963427452, 1.1021327906980887, 0.8408919971031976, -0.08186099698030677, 0.1959287359881187, 0.05071697724300512, -0.06381459296396996, 0.7610181589086127, 0.004656234603088406, 0.2671296261021342, -0.3281656965848601, 0.003075142902241786, 0.8492504786224948, 0.47391957475983476, -1.2249207070587018, -0.3615975181405876, 1.1530901674799292, 1.210446881703323, 0.7956197936092233, 0.029805451235069554, 0.6652013800935566, -0.5313964279807581, -0.35275790778321714, -0.20673754127800703, 0.3239292454258591, 1.5858530636768888, -0.7516271119874149, 0.5586820152834286, 0.1589377961963777, 1.4368162250708851, -0.06025847805729093, 0.6498515746835046, -0.3169800803668207, -0.7486482282103214, -0.0754705726108811, 0.5492962678062479, 0.23749327209062993, -0.03611749998115109, 0.15459683851402128, 0.32884730263343487, -0.09983000985246158, 0.003563836091907777, -0.5081461807631065, 1.0730532862617357, 1.557598534472873, 0.4547756221266585, 1.2465769022032498, 0.30629974959411205, 2.635794341166624, -1.2798487403671424, -0.05066855343526992, -0.8994643382251792, -0.9342523680092604, 0.4445966707285847, 1.1135830932803694, 0.03348660049687757, 1.5646241496978646, 0.11195320312289066, 0.09329880852345672, -0.48834499249746005, 0.007358931855239778, 0.002356748107777496, -0.348254323819935, 0.04376892838988076, 0.5654049479690051, 1.43504512469402, -0.5611714347833141, 2.3545212194710423, 3.4745325911005502, 2.39547782580758, 3.6935241356568342, 1.2235980969379834, 0.01753046155380908, -0.09535005656085363, 0.0006591074029156231, -1.4415139531641759, 0.39243330331407605, 1.0347299289924072, -1.2099421783953206, -0.5889028995852607, -0.3625006270605152, -0.15912044990104016, -1.0752893853743175, -0.3034487242661688, -1.2040794655630074, -0.07681798928564586, 1.284688034025006, 0.4707831723104977, 0.28416999473665366, 2.8711285386165115, 1.1382459934707965, 0.12032787524546011, -0.032507089730070535, 0.11665409263542595, 0.836356959094411, 0.9425617591932728, 1.9214835531337817, -0.03519070857951075, 1.1958948990010243, 0.7337199261504268, 0.8795722348821409, 0.858193542394865, 0.19038978551423794, 0.8007376600360755, -0.0005704923679301557, 0.6441079525193593, 0.7046991328721665, 0.31476567222290686, 0.7154345235229982, 1.5834855049826992, -0.9897096594135012, -1.031518108961363, 0.1656616718215856, 0.8754818687057048, 1.5011946540040664, 0.41631738758934456, 1.0430706371703313, 1.3508166288766288, 0.03045714598111081, -0.2726628364752248, -0.2776766408507928, 0.00012968789309396783, 1.1630818185180523, -0.9456175296194227, 1.6434035227314623, 0.11959508749364398, 0.21392994772112048, 0.6447665621534772, 0.2849351014437283, -0.08350850543868242, 0.03999011831947168, -0.658562953694705, -0.1402899157259246, 1.3765495867459694, 1.2718872851159293, 0.04541444086097149, 3.0585323195218597, 0.6274411052159503, 1.635864646456971, 1.5614684078312497, -0.16743946072467664, 1.5604462889837944, 0.001073484937651405, 1.05268699632895, 0.2117454170709348, 1.7165136709377277e-05, -0.7209898870402838, 0.2196118431048837, 2.068019557985427, 0.43308173526364346, -0.5717840811094526, 0.9375976694190447, -0.12619471975460786, 0.9763404804282804, -1.6440251967585182, -0.8172698174122064, 0.2693082564568167, 0.11074297193404255, -0.9071969156381846, -1.1539056425415855, -0.41210874639005773, 0.7685179744300309, 0.2353506105622277, -0.01097376093424164, 0.28865074633157634, 0.37006295988297505, -0.5950578354865198, 0.7671724615101901, -1.0098001816265207, 2.447033421886047e-06, -0.2964246805377788, 0.06379924335929509, -0.07021215138625554, 2.0766872929474136, 0.8131539912255785, -0.3352498567705869, 2.016382743819268, -0.3315662921552688, 0.6086747494236696, -0.15374385020081893, -0.051547675297283845, -0.350791623646288, 0.004595875037937382, 0.41898727442616057, -0.10191178942711825, -0.19099378114017992, -0.1597665856477059, 0.0843089679030491, 0.24579303692221696, -0.61802985726849, -1.4327836442967001, -0.41294755135205036, 0.41770355378721785, 6.172700892819411e-05, 4.2086561230794545e-06, -0.3622068429825438, -0.38772106189860084, 0.8158678780811027, -0.33971375590614095, 1.5287636827609652, -0.3579219484994698, 1.421502084984587, -0.5520798905321425, 0.18719255911065477, 0.4731904965538898, 0.15829447727551624, -0.5632471307886827, -2.316362569232217, -0.07542194065521408, 0.7126460792855169, 0.00018096811528584144, -0.4425076301663703, 0.42964106036245914, -0.46454368759103415, 0.7011977677057669, 0.059499508090281365, 0.18478361388952727, -0.2967568946842662, 0.28706516288990513, 1.1668539617485554, 0.5912872345500684, 0.0020702224146532167, 1.8005498692927644, 1.4654727997175627, -0.11211583848400088, 2.05722198909303, -0.34157127550038874, 0.8670329465402479, -0.15496405014393463, 0.7337177438053772, 1.6908381779060644, 0.8274474762072015, 2.675413756311471, -0.7789755174383743, -0.10013603632152265, 0.6811864782743237, -0.15977217752441897, -0.3578397468918068, -0.6645224165404776, -0.44578839445021307, 0.19477580313748669, 0.17942941336766782, 1.2330932736278162, 0.7529661571428288, 0.16830983153497772, 2.490055109518847, 0.27360894404458397, 2.0906508571497895, 0.497365257671867, 0.40615861600150377, 0.0012522664622331597, -0.37380525981839774, -0.6519889689397267, 0.06360220081890183, -0.22056126340713794, 0.21054568056232437, 0.5123155106573951, 0.6207299600849243, -0.4231116094792125, 0.06956258662310236, 0.00031216966988940556, 0.08128809690845959, 0.007733908757627798, 0.2639291350588336, 0.7204711277488397, 1.0596421568234426, 0.4073959086879651, 0.5691647983883976, 0.026881317504820403, 0.6729442394165149, 0.011307597070588473, 0.6898719300942961, -0.6024684078784379, -0.4374394657632036, 0.13530044890640078, 0.2539038655362845, -0.45611158181202494, -0.21110318537735656, 0.1368134406203171, 2.28139966044624, -0.3277545221027301, -1.2599815567001377e-05, -0.18102359626602074, -0.3151335674925749, 0.7468499953799097, -0.6550849710741465, 0.07530548026414162, -0.5546138772277189, 1.9413421410988498, 0.1689055077756797, -0.2844942286308112, 0.28023419541856537, 2.1874111210885543, 0.6205441249991785, -0.8958692364238557, -0.6154825722227397, 1.7318638285542898, 0.4260919409762826, 1.1861790126647658, 0.700173000572656, -0.08017310003419524, 0.2862995908022384, 0.2980572535668139, 1.5351113935980523, 0.0020730013298228787, 1.3579999383172898, -0.36926788668280514, -0.3572311822818178, -3.128764326961356e-06, 0.3136873428340168, 0.28230687529871135, 1.7515517420997746, 0.9904034191546597, 2.4098731789192103, 2.273015689456983, 0.11920047347252544, 0.9848430264061744, 3.936430175387112, 0.024920337362718724, 1.039981761995279, 1.658833949776359, 0.2579909145300052, 0.769694895755221, 0.002891206596665115, 0.4033462274021837, -0.4757097356686189, 0.22009865706539558, 0.5317800391266242, 0.7405703655240765, -1.0183389565806322, 0.8795241534755338, 0.392361299787867, -0.0952194605171104, -1.0603989044627609, -0.7363537864357473, 0.7651217116080697, -0.14591918579250732, -1.100412968086435, -0.503365768895496, 0.24387668210932337, 0.8008167788365901, -1.5986335098826896, 0.6507195487916331, 1.1240907411035965, -1.9777972244632909, 0.07782819933988441, 0.17899266705430822, -0.15435590507080604, 2.093133511223114, -1.5575524247912587, 2.692370466324103e-05, 0.23544575692630534, -0.9868189187338198, 0.8796541230114703, -0.12197333444810272, -0.2169583709535603, 1.5930391579335499, 0.6538557181047749, 0.5978301407118665, -0.11289349795720004, 0.9247736778036731, 0.726923408075937, 0.03306943276757351, 0.5058989341226265, 0.1569526661006105, -0.6289645632049324, -0.5171314497153916, 0.19925790294073967, 2.8345534350217325, 0.0746030861339784, 0.30270440546886623, 0.8001197770536421, -0.56029973100937, -0.7662257572278092, 2.682750805307578, -0.48546354066572545, 0.26639592498860837, 0.38105068609953774, 0.08688362881786349, 0.8917889627462683, 2.9657472938407796, 0.00034793064555564256, 0.00039263377390493827, -0.3538948314493602, -0.3216075385375226, -0.3601845940036625, -0.366858916151365, 0.1483469871782388, 0.18181843813123363, 0.11168733760131036, 0.7342694830125553, 0.5165084481994329, -0.21161140301383463, 0.6853840636964016, 0.006052946874625197, 0.32412919654656674, 0.40332072496533006, -0.4573516053558233, 1.1079639557422922, 0.19049221409624434, 0.22991879264771647, -0.1311417789899212, 0.948442304639605, -1.1492454470199298, 1.6727161013804572, 1.0351108531421755, 0.07151794169126269, -0.7256920563309432, 0.746795373570486, -0.2494386100562331, 0.07368624232195298, 0.004598561552701459, 0.6912427236380854, -0.06384450369399866, -0.9555438088083227, 0.33173273780811424, -0.2021049203680811, -5.124148596797517e-07, -0.49898178785357755, 0.23378040156682825, 0.4382001428906418, 0.19927043390385082, -0.04441984688086689, -0.048612635397451885, -0.16129910024054364, -0.6836327399393061, -0.29646932201765264, 0.3395066389292594, 0.03481077014761891, -0.1477204060568244, -0.24886758456644395, -0.2988659147058269, 0.5784732386306769, -0.2246946486687429, 1.3977078982587945, -0.0947810961193925, -0.6459862609549586, 0.02183475869411888, -0.7310190868520533, 0.7993157626028448, 2.760380369451873, -0.15692375864797087, 0.8195982242075244, -0.17149764212962487, -0.49212190846974274, 1.2032843733877245, -0.07991950821693541, -0.9174052698403653, 0.09374457419011108, 5.6889243280115315e-05, 0.21780328428892962, 1.1157328140053362, 0.8329418964547805, 1.2561626137783621, 0.2836392468429984, 0.7089363803939378, 2.1645624520437594, -0.062009169931601694, 0.2179806261649386, -0.8635329993598571, -0.32543417629687693, 0.3742596551749524, 0.28008718192835236, -0.7937259261343065, 0.5345305637785315, 1.5683440025849782, 1.7399920080743378, 0.9562350913410298, 0.45486476427040995, 1.8219324259943857, -0.6481492973439138, 8.316124267502536e-06, -0.08368130853303217, 0.8185616159853046, 0.00020618775493211303, -0.33637149476921835, -0.6259614256359632, -0.21478530349474037, -0.5482219865427399, 0.34133234583781435, -0.2705832421964244, 0.011794908374573514, 0.18680219427834374, -0.9117241886040002, 0.20840224459017548, 0.4876974652294123, 1.1425180274834201, 0.9990221619275593, -0.7167011644018655, 2.181060477719708, 0.43586899267232204, -0.13661743533716164, -0.5401333928498634, -0.7278495401586715, 0.031109236922833402, 0.13803498994786825, -0.5291578755415802, -0.17265960485454968, 0.568111193538948, 1.4228046857603207, -0.033508393298264966, -0.895952457835788, 0.28600319039113314, 0.30854747614458183, -1.377931037894075, 0.792070994997688, -0.8623375989950403, 0.2758916744542332, 0.23295416430611776, 0.6151951136940376, -0.24857873326787028, -0.2560231228571337, -0.6073719369087368, 1.474101403182855, 1.6228761191902712, 0.256394114411062, 0.9400912940092162, 2.583511031184244, 0.0007423308997337773, 0.38582910399638803, 1.2650662974461657, 0.2889583196477513, -0.582385465556342, 0.32412965430795637, 0.673304948246434, 0.11632220720226912, 1.2562999673392121, 0.7371554682979362, 1.5110906055986424, -1.2628503809116858, -0.17209164991434858, 0.33261480619036554, 1.3258473042085894, -0.22310494572702075, 0.6728317400454714, 0.4719829816241016, -0.06187514820169828, -0.06402579108082165, -0.28007276027453676, -1.0232012173731244, -0.019880943386437845, 0.07662782085255068, 0.0034113650442315602, -0.14424913385413424, -0.32495272080005333, 0.7263448920418482, -0.05902187614033195, -0.5541829793208138, 0.5034703561959653, -0.6858085057508183, 1.452610616235166, 1.0813884588945093, 0.7896705401345849, -0.5225918794629867, -0.5962608640928334, 0.0093010801060704, 0.6558933297881197, 0.9221161217139509, 0.7615771413513752, 0.09333209128194589, -0.36533237225661236, 0.8833357914950275, 1.4447271487447229, 0.9850579770176873, 1.6178661886077503, 0.10232135444088733, 1.5633186050876302, 1.6512498033953356, 1.717514338557974, 3.4486737432895813, 0.13496245415887997, 1.4044692463617465, 0.16389350675223707, 1.270612234621791, 2.6347655321205945, 0.18082090102302348, 0.07536321355954555, 0.5845791682314508, -0.497318558359038, -0.08596476059638687, -0.0076134475549105764, 0.4916440078460683, -0.4632527611632207, -1.056213640843206, -0.06695160649432937, 0.930251722933248, 0.10379165144346436, -0.008056952380153425, 0.56990311548922, -0.025340145409178772, 0.2758935436991098, 0.44817065629153796, -1.0929378116737336, -0.03229745633928161, -1.8358616190361388, 0.024943645662879828, 0.01240717347109703, 0.7210536347043236, 0.6690499921264674, 0.0015979986179393273, -0.581875766338708, 0.4825672732967941, 2.035207577806666, 0.9810089362499776, 0.3949338479819249, -0.056606046686593, -0.812657374730086, -0.8575383345152788, 0.012060276457690233, 0.06753438509626454, 0.7172072799583481, 0.5131953525748422, 0.9925990672704031, 0.0007492040741113765, -0.2729276398959316, -1.3591359526316265, 0.1773764621239848, 1.6067175647425365, 2.9538805482378008, 2.645530220033145, 1.548323897060385, 0.014390232334882411, 0.013009934295064555, 1.5679635999740158, 1.2031983683029022, 0.4858964552352793, -0.02730023293198518, -0.31137461810117256, -2.501851044567079, -0.6714111180772513, 0.3760207609752807, 0.1517628264379662, -0.11899991440829871, 0.1963850028552815, -0.15800755112393655, 0.6535129060008682, 0.7272055231085087, 0.9967363320374569, 0.15077320694248408, -0.024956465593881372, -0.027221257575717292, 0.884523163418525, 0.16197705520188327, 0.2613708251371204, -0.311872284664899, -0.5482636769411608, 0.25303635088878057, 0.763219728851749, 0.29825391199389184, 6.517754366025569e-07, 0.682780734721635, -0.6151719551799415, 0.08976219898596587, -0.20669175377027038, -0.11683911981991166, 0.32030425539483853, -0.6907221876938427, 0.7957576752027279, -0.24421600387983203, -0.7922407868545143, 1.2870896449240483, 0.32318583849734844, 0.08110687030733589, 0.7501500122929222, -0.465924549931839, -0.2895322655989444, -0.22119207698019505, -0.6702217581757971, 0.11776173144204735, -0.5100755247233218, -0.3653832430303661, 0.22523394392438392, 0.023738793217197646, 0.16191894532918297, -0.09640298409127591, 0.0171126687772176, -0.1734712278052224, 0.022515538809685685, -0.28085052910546116, 1.0297341878262751, 0.24474568227629803, 0.13059428305469786, 0.6899169541144686, 0.39077925925745227, 0.5749451860639028, 1.1230371456950543, 1.0464322653069171, -0.4229490848793878, 0.354776653862447, 0.556403943863065, -0.14388404428706256, -0.2016548020275151, 0.5012136800356098, -0.38049664161817703, -0.09865842843048166, 0.016804256562462185, 1.2485014091578368, 0.14313166568062388, -0.6237074728602333, -0.20473472355329017, -0.006506353796091124, 0.3476099224848033, 0.2947644709986539, 0.7362559540909424, 1.2345135230032667, 0.13808960602531598, -0.08068730048429311, -0.37378407392422147, 0.31782342108232653, 0.15605552741570547, 0.6783305584871608, 1.3458314091828012, -0.5797164175236909, 0.059788821361852415, 0.0774938602863541, 2.7883331823160518, 0.5263584369067804, -1.2520156377181264, -0.029364417946533616, -0.6232663192701715, 0.20571276355241522, 0.7038528271744063, 0.6324702700483279, -0.5951838852965988, 0.5637865870384765, 1.1406644014095755, -0.8005838056524801, -1.5020832765534506, -0.0678485044568439, -0.6631415599830159, -0.042402392231542387, -0.3630639621936415, -0.34398000862645095, 0.6619815882539233, 2.0673928194134437, 0.2534080323348691, 1.3868920318905151, -1.119840136753048, 0.2731126832024216, -0.23186784945860248, -0.08309865247344632, 1.096037072655624, -0.36779527035102405, -0.1257553411718974, 1.4044627937338519, 1.2219700893563021, -0.34536800992949546, 0.09672649688398134, -0.16756873520995536, 1.6363095027256003, 0.37139174154879373, -0.3928193769493207, -0.1560842389691928, 0.327763509164166, 0.8699612784027031, 1.7361347247871861, -0.3301613188775851, -0.3233247428794903, 1.1783519186278129, 0.6720660915838063, 2.7162246454638903, -0.9685047185094869, -0.02359169231572065, -0.21483605824906213, -0.35154960388695217, -0.024336575108917537, 0.004101491951462216, -0.3348455659755139, -0.8803268362450746, 0.04703078413052741, 0.12566103150596883, 0.4086071397933382, 0.04085676427061268, 4.105365907021849e-07, 9.973214596996428, 0.0018057971059335794, 0.055175523501414, -0.4405378417323254, 0.000394201733810783, 0.0730691035637562, -0.9844465578978677, 7.075380698656268e-05, 0.27618724288739577, 0.3235727298103874, 0.3141323213496724, 1.9483023220113638, 0.0070559554956696096, -0.019668308253955883, -0.3093082862781155, -0.2020087689544034, 1.2827789166788006, 0.26984256125182704, 0.1442957703283145, -0.47742173621927547, -0.5271165240422585, -0.2000706453377246, 0.49485103340340497, -0.5961321165784726, -0.4088517426698944, 1.1843286151762384, -0.11153135098884612, -0.905602056939237, 0.5669061689778204, 0.3838381882507806, 1.1897255344571078, 0.05709211584999519, -1.1922995913668264, -0.6384172253878209, 0.2088199539388198, -0.49946765427455375, -0.11538459387783126, -0.0360363865865386, 0.3694712384225576, -0.26723061905498496, 1.0106759264180707, 0.33215471308625477, 0.08751355412439563, 0.3483582448433863, -0.18625762958556846, -0.04710485618451686, -0.39781377710373794, -0.6036692989122122, 0.27963537654658965, -0.18071121795181475, 1.5742491967684213, 1.5132408123672423, 0.4263454316213457, 0.16398099776470648, 0.3548653750191022, 0.23306012857794423, 0.7724479974291177, -0.2840001923198542, -0.597712667665808, 0.111417010165682, 0.18912081269608694, -0.03793540739134599, -0.05849225844842577, -0.031013702979493005, 0.14946927086778092, 0.7020447762530937, -0.11942684849131886, 1.1219957186384866, -0.7938367082782659, -0.07481354001880923, 1.0991947091660008, -0.013555044840935046, 0.14883672120596875, 0.25859469572891186, 0.19056007804541242, 0.3204441939221231, -0.2177032846633742, -0.17006285609320618, -1.320043604863282, 0.8168476219783849, 1.3691450860299412, 1.7694558318940532, 1.3484770677934612, 0.7876799794374947, 0.6052644210531216, -0.09680113240454986, -0.25685214066975487, 0.3772302200266044, -0.07510495443197644, -1.1014332130244042, 0.7297497282564379, 2.383639083388489, 2.136663633047275, -0.3402406307831752, -0.07265489755721286, 0.34975698479184636, 1.6347978052566299, -1.0967271827200598, 0.463441245884387, -0.44208274705995815, 0.2211315065741328, 1.0292290152418502, 1.4900464564645208, 1.133677270003081, 0.2239811837173564, 0.2619624436142556, -0.21238415831083357, 0.23409074694709822, -0.8177730835918131, -0.03809915888304095, 0.1948868021735977, -0.6626857801554743, 0.09437540028368459, 0.13538166192573037, 0.025876048050227942, -0.006958470182546976, -0.3694077509872235, 0.6136373765311413, 0.24115665990644608, 0.17348447788196483, 0.8851974094909336, -0.12289603661828954, 0.23907205879851323, -1.9481870038617801, 1.3829313712596198, -0.006340859988186185, -0.6553273001498023, 1.457724142902966, -0.2637014400493576, 1.3026766489962054, 1.3944441048123182, 7.390764668678964e-05, -0.055002810735608185, -0.043606883599146155, 0.32897374440694926, -0.36631612885367076, 0.683462064471907, -0.29606100641164773, -0.002460130867462214, -0.21735563482299164, 1.282055576369641, 0.9963682142476527, -1.0787673568685676, 0.6415431740018032, 0.005511407861278118, 2.5908892664868435, -0.13034058627211517, 1.4989661027433852, -0.6615475920541506, 1.6711636490156183, 0.23199836599438187, 0.3649000161733908, 1.4540216227357436, -0.6128287190096181, 0.5586951027277139, 1.259387152237786, -0.6004517299728173, -0.06367103358797845, -0.6480393013791353, -0.5390129185290453, -0.029844222452996325, 0.19376254047673824, 0.00045988154410050655, 0.10218663980315386, -0.17939414499426293, -0.6683994301570185, -0.07252778325757075, -0.037676167448944316, -0.07281119889845049, -0.30132376984578374, 0.021711732808078917, -1.6231803953739232, -0.5361345564490425, 0.9608962098269364, 0.002061553866997293, 0.09466942553943093, -0.6525837713331152, 2.2298721808470914, 0.38636904308534575, 0.0023545438489602803, 0.36295654973769725, 0.18727677391879988, 0.6715149315930197, -0.8174663332894042, 0.31161497831162877, -0.517078763592117, 1.7844308715216755, -0.9119749081316824, -0.0003784434123438597, -0.5824204106475344, 0.09984193079882038, 0.10983665459630693, 0.32158294848771435, -0.15848837473366345, -0.10289255745459161, -0.3119773477224917, 0.48538965389848204, 0.0026787186172595825, 0.847430505517727, 1.708257061848635, -0.2602738156289034, 0.10335025261700663, 0.41449264770632005, 0.26590683255543973, -0.16798482468444745, 0.08066967950676035, 0.004855577109102506, -0.42198103809174814, -0.24209459315795354, 1.1537178517746096, 0.04023850516832475, -3.094305478580104, 2.5174628785734576, 0.035527479616433634, 1.024585143206365, -0.1859638566601609, -0.07742893072742138, -0.027376309971612618, 0.002331184374008139, -0.19870398869816458, -0.49323477329065696, 0.960531949987621, -0.18841802606117022, 0.15592953675546586, 0.337464166498888, 0.15806590418059688, 0.12618172576918532, 8.636900601076847e-05, 0.00016469235204900835, -0.11387496489500466, 2.2014229852756904, 0.5811241785089468, 9.710865573906814e-07, 0.8036861946303006, 0.002630619371263839, -0.16148380215390018, 6.154217067704898e-05, -0.050875551632559586, 0.7599423992717136, 0.8751374431884736, 0.10396213708097597, 0.702690792745357, 0.5864394869376041, -0.2167465096160511, 0.6234149838749997, -1.2100011901946517, -0.23786142927336468, 0.0019713060439411683, -8.547330528739911e-07, 0.11630217975438605, 0.046821332009372774, 0.007716240248601205, 0.1537833490306769, 1.5617122746365124, -0.5944024780622932, 0.0623038937650297, 0.8687492233475459, 1.3447062544513273, -0.8750010417475644, 0.5437063474441678, 0.053597824579216274, 0.6863859526732053, 1.2516569543748104, 0.02466768130385078, -1.026794322018487, -0.017375530721097238, 0.6151831354916225, 0.7205788936326195, 0.4964763087020466, 1.0849321361747546, 9.755682571719588e-05, -0.4644406754663944, -0.10417864665281412, -0.1990305897757067, -0.020951206416096685, -0.16047595179003415, 0.21656639348278298, 0.2787188835973449, -1.0461846110143336, -1.0250689086091715, 0.9475578284857034, 1.044626196231768, -0.0048960663903570255, 0.01761526660657071, -0.00020710500901307129, -0.49002199020981735, -0.8550153550683656, -1.129776890748144, 0.019645702973065296, -0.3891722871085675, 0.009404928198212297, 1.4650336207782382, -1.0045393943091623, -0.7936948107184798, -0.02058296055180088, 1.3741329986365831, -0.28637025864595245, -0.5005141181522886, 0.10080492261499031, 0.7105498287858067, 0.22668387937074494, 1.8928346962978482, 0.7048284824257418, 0.1912330467751597, -0.3132036976224654, 0.09135753082685256, -0.027989995411463155, 0.060812936232348215, 0.7682521647105489, 0.734271793570233, -0.3169298745944765, -0.21140667915460307, 2.2922745190794447, 0.002243564166158845, -1.2444178837410773, -0.6352060161919092, -0.5222526041701142, 0.7768841645065084, -0.7512231917493614, -0.21278610958618327, -0.3417847882725044, 1.1281152369304974, -0.05200722429370205, 0.18377973290422425, 1.1566232661842561, 0.4897622139683856, -0.2253844014625834, -0.2969781543690949, 0.11361764156792153, -0.307342384524831, -0.06859920190706645, -0.020700262052277343, -0.1615362733568801, -0.36619420602715197, 0.22994460015600596, -0.9082108806875167, -0.13908131217896097, 1.1880846559472378, 0.5391160790489161, 1.2339318300697752, 0.5743078199246942, 0.4539591360599105, -0.04520069498714381, -0.08133518513482145, -0.050110118950246675, 0.3046769798989505, 0.43381673915256697, 0.14426831201733423, -0.652872116621663, 0.6830317749530975, -0.12279030537182124, 0.5376908047160007, 0.1689767904500597, -0.6947639219222476, 0.6850486423776767, -0.3650753243863829, -0.9842606309938366, -0.33065079712099815, -0.12771943529640517, -1.0727439972338897, -1.1104841198098432, 0.45257597682584455, 0.42302612980919535, 0.8407396828346682, 1.0926903803953871, 0.40616386955831857, 0.597779125555193, -0.4422064294429869, 0.3688448765905622, 1.3127692324566602, 1.4393417727453481, 0.6971896144773911, 1.7568824380121362, -0.651431607072349, 0.1936077510688684, 0.14094327219770156, -0.059466345968666026, 0.11412450741348416, -0.6451712229351045, -0.25074002144461455, -0.01750753035836734, 0.8559476565007167, 0.06577728088284138, 0.09658876927208668, 0.1418718142384827, 1.6872952419179774, 0.18646845488344185, -0.08040769897185132, -0.34239396407282546, 1.0712501969774757, 1.0746502211091913, -0.7198031364931834, 0.584706239121388, -1.7579102304470435, -0.42247287279885065, -0.3640350563391907, -0.6460610948594313, 0.1720265317244731, 0.03103021173535119, -0.479998168998964, -0.42677187337478745, -0.4698211534164982, 0.05397469592521142, 0.1932403026764338, -0.09961435667464409, -0.23789479656117726, -0.8933217641603854, -1.5114609500215992, -0.07872977941880757, -0.9787600926523911, 0.6644606667090904, -0.0778593543480241, 0.010489451483712471, 0.015865152360091908, 0.009967550131607925, 0.32951421760124094, 1.4072673866207077, 0.015942519844230785, 0.23423452922971094, 0.6543694303476845, -0.17265417047872214, -0.13428692542481785, 1.1157004523534098, 0.0919171073890228, -0.9821615591970416, -0.6786262391750479, 2.131452734423443, -1.0452788495930314, -0.36207353839339895, -0.07897479137382148, -0.0056650117504009325, -7.472163485551791e-07, -0.12442737380069868, 0.7887755384276616, -1.014588440094379, -0.9691328621921952, -1.0785366387920865, -0.4739943847832931, 0.3840504005012888, -0.6937852894296465, -0.7397592458528943, -0.46589683656888775, 2.1885683948523345, 0.9834504533685144, -0.3368914345552124, 0.3044188008455245, 0.000297347148998211, 0.37818655863143297, 0.1134757291860029, -0.15557479368997226, -0.2869364260287999, -0.3932405793954919, 0.529839249616989, 0.9205243094486429, -0.15422114925420466, 0.27642617937572617, 0.37110614266824393, 1.7718377416008273, 0.8216727705549404, 0.23257528223243237, 0.0061043626806741875, -0.612559242320042, -0.20178168165737106, 0.8700327648083929, -0.5560983598306193, -0.5995620925055339, 2.49297871805708, 1.4485642159073032e-05, -2.308854882605979, -0.1557311612256174, -0.5102625402295297, 0.3988892921052473, -0.031118083928782188, -0.7714308615223441, 0.9254146375391671, 0.3795219671490494, -0.16997620482577808, -0.5227266329935233, -0.29578998572574294, 0.7825693925401612, -0.45114450979581777, 0.35762877416522976, 0.5749650537131223, -0.28139301483420587, -1.5623293606778157, 0.602547647880169, -0.0699447718660628, -0.12171800583564557, -0.723234498480895, -0.017810325630199315, 0.9005533311068233, 0.11015566943155426, -0.7015904587641488, 0.09614080880119931, -1.0119752524471812, 0.0992692921011534, -2.243872733844513, -0.6702088966298373, 0.659562064113049, -0.1346119775262252, -0.14261728663535952, -0.48392123463677056, 1.0142446989256368, 0.12456228017414275, 0.9993846364801601, -0.9815561156748787, 0.3465361339220324, 0.5002237027447486, -0.4916062752798247, 0.565130472755477, 1.0997219143682573, 2.5039269195009584, 0.7095387223244335, -0.6076328268607987, 0.5380259491793652, 0.3013250024229746, 0.0995680743305498, 0.4867203468649882, 0.6094164893134655, -0.23471579400041748, 0.6822199046694727, 0.20287509572109494, 0.5823757892805836, 1.2237526075908867, 1.6183560399088244, 0.39754143890190435, -0.18401499575369334, -0.9155171621932313, -0.49646310223580364, -1.0787675037005733, 1.62753822190554, -0.14819978438504575, 0.7635797437080204, 0.4270612250911755, -0.47195767582391307, -0.3278638608055905, -1.4796733730571487, -0.534878792795855, 0.08290973732681162, 0.5158657179094505, 0.5390529635600916, 0.6940461774974266, -0.00044277756046775326, 0.27388020284541315, 0.23623648140200107, -0.3475992619859741, 0.6286069644473298, -0.3406373735166644, 0.6772589485005787, 0.776547631757289, -0.16752614440468447, 0.5142680186654829, 0.7559350907977591, 0.3757701583734253, 0.11630759064931664, -0.01775923279567755, 2.124713188414335, 4.162473510437022e-06, 1.0442449578119057, 1.4091359714424208, 1.7612845179618815, 0.19649744797699026, 0.22579071842303033, 0.5030351176258391, 0.6571302615690425, 1.4294969971025961, -0.29377715385933684, 0.13610357428114692, -0.7024577454115408, 0.8652350508542684, 0.34983649973938075, -0.7084728532664948, 1.1203047012807612, 1.140562938658933, 0.026297748859385094, 0.5694140738172355, -0.13233683087683745, 1.3736569710714737, -0.2501719212367841, -0.3278473767553385, 0.8808467590357599, 0.00126854630041904, 0.0005396141430907377, 1.4039934660788542, -0.21850558723308589, 0.8484527445315713, 0.055960934537562027, -0.20921865893630268, 1.181524743747746, 0.479009810778348, 0.33542922104370176, -0.327409582683124, -0.1844903457485718, -0.8791795763167575, -0.2811674095286358, 0.17750836503984074, 0.05167704345507511, -0.27330804533611813, 0.21227804320646376, 0.11532235367688018, 0.1560144427263402, -0.5744002043401114, -0.2837240814577567, -0.5036353767636322, 0.3711274142072419, 0.37060008076564155, 5.13176424748468e-06, -0.19597504362914683, 0.589974924231822, 1.0102918839610702, 0.27436588202682016, 0.24028140605917434, 0.002828497978101826, -0.48490276858839754, -0.07930901827022514, 0.0550204834595368, 0.23146885412891668, 0.23717764885890005, -0.7743607978845868, -0.5964458843740272, -1.2031110527373334, -1.1607720030911843, -0.5092465924535489, 1.3125751462614865, 1.7580051405032961, 0.1872029574395173, -1.0487024525454198, -0.029860243848482893, 0.27895869106017723, 0.40216347111174655, -0.3205050934651053, 0.5048071872739276, -0.2156718383729141, 0.44403949944490667, 0.14025088146879258, 2.2527887416546504, 0.4428963546936218, 1.0469031269618707, 0.5848334745344357, -0.47929965156578064, 0.4615815497617155, 0.25067672092575166, 0.030955804054113172, 0.9693400932284526, 0.5331166139918895, 0.8235646321240541, -0.06963722491127672, -0.29628194389303497, -0.430327321165689, -0.2111415901975549, -0.2704637415622667, -0.01097200613658484, -0.13833479385979272, -0.24719232191416707, -0.06134418540228066, 0.0509404435361401, 1.433196424762585, 0.2264421679074276, 0.3585634665004648, 0.7637677165345643, -0.9203467946905215, 1.720845652125852, -0.7380833747209571, -0.2596832415551869, -0.030324910051448262, 0.16071534824488717, 0.012060974601979068, -0.11516479171408682, 0.16747071740208977, -0.3511400789747791, -0.006883605294421981, 0.9787813460515672, -0.3585104089291819, 0.08559770062662762, -0.202917286924934, -0.4531498140269063, 0.7336709338668317, -0.6203126159859282, -0.15504513640725243, -0.2496329124697654, -1.5302588241982404, -0.5426961117599484, 0.3390474253012849, 2.7017230077848136, 1.182557816392246, -1.1495077900682824, -0.18188933155031306, 0.625213697069566, 0.5841174157792648, 0.5862722870310818, 0.22585458870443587, 1.1795485954549922, 0.23159450110710822, -0.2918656534161862, 0.12919126861433283, 0.38077933702868616, -0.42566489754855036, 0.5557436776188547, 0.12286492420026046, -0.03624890000334658, -0.09278368304778355, 1.1531391416753618, 0.19187925573456088, -0.7984365149188276, 0.5467003114612845, 0.3335327175034553, 0.9462980127322934, 1.312109594858501, 0.09979258019024581, 0.369941958619312, 1.3879931926445528, 2.3226607612100487, 0.23585822673098847, 6.154935801061675e-05, 1.236020322930959, -2.4032199341287406, 1.7569052428605705e-06, -0.20603583654520574, 0.06725918296314774, -0.6931229509152771, -0.6503173023687532, 0.538425825337173, -2.185466776528515e-05, -9.860621725753618e-09, 0.004598498427895173, -0.5790168007282088, 0.6385234408299041, -0.6143457228470559, -0.6589454670933728, 1.4586807963773634, 1.5883735264847252, -0.20123686066707258, 0.4349689161472391, 0.2523292343025366, 1.9897203894972415, 0.18784022362005218, -0.3155974354193266, -0.4664985753327553, 0.012261011515138963, 0.3286875944994548, -0.1577004515742817, 1.3345531463153129, 0.38052407573948444, 0.31092931359730497, 0.3810457892297824, 0.16681882244222448, 0.05916030044376746, 0.33458128476246335, 2.401189127471575, 2.7602574671238784, -0.0847849868687019, 1.1539127018122375, 1.564684437832429, 1.7416745914520404, 2.220214682936825, -0.8542976493162264, -0.055936609959079814, 0.17263056799165213, 0.8900303965642256, -1.1005035238429475, -0.06526942726891988, 2.418692409273543, -0.7568437813929175, 2.5622215560889043, -0.8067539501297851, -0.15374474776655753, -1.657094610947428, 0.5077392047864873, 0.45737973852495745, 0.000631241322311609, 1.5079144353190017, 0.008631004681631006, 0.000984898387310227, 0.05129354725922829, 0.2454317760556588, 0.008017874751830136, 0.019549418940634514, 1.813767667764144, 0.5523634910875159, -0.2796236072503561, 2.273016973218296, 0.00013776353714078425, 0.5329600163950365, 1.0941795833547598, -0.5011879439604182, -0.5661290410366752, -0.16446527077125953, -0.6595177802010285, -0.036031236509913564, 1.4329878301339964, -0.4229796100694751, 3.045123608414137, -0.43076988898945845, 0.12478323187306263, 0.03137187076335502, 0.945179945081798, 0.09794312877055257, -0.3138797687149314, 0.020560072638003097, -0.05711873380086857, -0.5803370757311805, -0.7963743210836672, -0.2634418084975151, 0.10086854004900395, -0.24041356902234445, -1.0939136408983725, -1.456031273796436, -0.7533343480839126, -0.3316709525995629, -0.6306536890121148, -0.40904361170979364, 1.2270807510844195, -0.926974745178205, 1.095472704887275, -1.504162934366744, -0.8593010555063229, 1.1146287949721612, 0.20931063360426858, 0.0030817724859285808, 0.18986488505151033, 1.927259267068451e-06, 0.002387267221231356, -0.022598602122574172, -0.4507206202028157, -1.6794385579476425, -0.05640606722550222, -0.41008848660350405, 1.7757379363034629, -0.28726523070867366, 7.296695789821525e-05, -0.8701431399728368, 0.446154352249052, 0.6376268311888453, 0.5014574519376606, -0.1676873158689783, -0.2941766391890821, 0.23953899319116026, -0.11848654454628658, 0.15947196808762235, 0.3098028532201712, -0.5722826349711889, -1.0253388316915946, -0.050132722166765516, -1.226227842602478, 0.09220376258664643, -0.12208912387686979, -0.23947358254629236, 0.3865181893924088, 2.336728712430878, 0.846320896082997, -0.4725233247930928, -0.019282781505555766, -0.07726616883816805, 1.4922959438488483, 0.27574588627075985, -1.0388954486669306, 0.17302874975717442, 0.005085645811550874, -0.1782113141796009, 2.7519006612636465, 9.214527115446121e-05, -1.3832637159734895, 1.3012290820371293, -0.027343034438525766, 0.0005887360214985165, -0.04300882046749973, -0.1611314419225409, 0.019475643445130256, -1.2689226641848208, 2.004526519522007, -0.8239177515531619, 1.6715425872881433, -0.3040024252115715, -0.38718303003453447, -0.47258193133001386, 0.03467184136770516, 0.07210794092560698, 0.1718627680205814, -0.8448161490081302, 0.1569971090280232, 0.4469602327286618, -0.5350093020758847, 0.46421165250660945, -0.3081533150986303, 1.5645938434466065, 2.1837932742189645, 0.2625461543315011, -0.22055339609518976, -0.0016867560237982739, 0.026965546944228223, 0.706596380762992, 0.8031920488378622, 0.041361531489981736, 0.016436140382498684, -0.34725776617309995, 0.5366960817352222, 0.3568131246484892, 0.37038493161333486, 0.85017828290253, 2.311468827885937, 1.005025239360251, 5.434723173104273, 0.6586919471022814, 3.589442739474693, -1.841269490120647e-05, 0.003755377330349618, 0.08264774170736752, 0.49003114457113756, 0.014499747375024765, 2.61388462025958, 0.001273644297031593, 2.544128293066299, 0.17975310097405053, 0.45077735620771403, 0.0007243084626339656, 0.003841082156713957, 0.003564227174455216, 2.237697816965326, 1.1677837165962066, 1.3852951987696334, -0.20664780213663533, 2.329462929072784, -0.001057871741343001, 0.03351588581633671, 0.5628513085023423, 0.04445368476657351, 1.6478058750124016, 0.06354483812918275, 0.03273018019761377, 0.006030960999807146, 0.7471549222055072, 0.5348135402405739, 1.1540964576387092, 0.061076214240219584, -0.5397621899525007, -0.30547121448518716, 0.016879548940305935, -0.08540415851376236, 0.0048209121733586244, -0.9922853799965412, 1.3447619195437563, 0.27724484185104187, 1.9786006003685543, -0.013564084412127596, 0.003722399964741088, 0.6583901695117232, 2.779798747729033, 2.1369694339025984, 0.4603571516791856, -0.2965040096727013, -0.5624408259076029, 0.027699401857421056, -0.8972750774973787, -0.2071168428230567, -0.4652105477239204, 1.4674071168143255, -1.0311546960173894, -0.9630610188460494, -0.3671833337928178, -1.0645958421895694, -0.4621490977195261, 0.00024176091224366062, -0.8997824039104222, 0.5811235057921195, 0.3597880477805547, -0.18277757302551828, -0.15275412501782543, -1.166651064634015, 0.4487284747863365, -0.09877534398994749, -0.8913038637827803, 0.631042335431796, 0.09961905053562914, -0.16428207574322995, 0.8818997443332894, 0.6113073548327816, 0.0062648804305352425, -0.18787112181664417, 1.4049017659976586, 0.43793239853572496, 0.2104442898096106, 1.8294136892794655, 1.6801530939852245, 9.594388405376573e-05, -0.2530262144233233, -0.2009171812746776, 0.1622471704264709, 0.4209077019112105, -0.4961691439881561, 0.04241449857901631, 0.24670833357979624, 1.1655505537962116, 0.9719171122326811, 0.3311768279932819, -0.8717593670963216, 1.4506472316269758, 0.04655828319747334, -0.777704625900059, 0.3329182967369919, 0.7790665349699838, 0.24909258342116403, 0.0016163254208248932, 0.007174747187338363, -0.01648705596257278, 0.0007710952688670805, 0.016845270953328814, -0.036182996806794834, -0.16044240696858023, 1.176210479899156, -0.26811743073195216, -0.5989998855731519, -1.4396903242220138, -0.41634058661720236, -0.7767650630923649, 0.5266316968846901, 1.4841375020752317, -0.042526460983373655, -0.055851614203837496, 0.29737862194826514, 0.6083945636232962, -1.2610331500891971, 0.1367382973491416, 1.399832648373712, 1.1678657655045466, 0.03301377424587191, -0.18170796090589042, -1.2777961202826433, 1.4482259916449145, -0.19164827400315138, 0.062300226797788114, -0.28813856969699814, 0.1123443968054365, 0.6376022762736241, 1.1902919183872025, -0.7966680901560176, -0.051213229988746195, -0.9481430446112019, -0.24581237184864455, 0.2139115145838787, 0.6731767843811675, 1.264579648510291, 0.3574420018833566, -0.7659843943705498, 0.02869882753118746, -0.23449929723673638, 1.3531046361900765, 0.010792936658930209, 0.07368624232195298, -0.7807583668747426, 0.4157608001111212, -0.46577141889154267, 0.4400058965546033, -0.43076771679985176, 1.2304404828977396, 0.6008708288909155, -0.6839264840533607, 1.074020171113238, 1.056427079672432, 6.508315747580075e-05, 1.1446912553106545, 2.4433813818282517, -0.044892006409544126, 2.2125405104711255, -1.1545667220503033, -0.9322864213508453, 1.4091981156714761, 0.04600563692201356, 0.1520234696527128, 0.21892347114216462, 0.18098530431165777, 0.3324525362066572, 0.25601168434272314, 0.009297588567529259, -0.0335075739827177, 0.18000785707290456, -0.19651624269254625, 0.897606687900542, 1.6882277057268236, 0.7940009674404624, -0.16707087367028278, 0.043394722214714986, -0.06360820598473726, -0.11170238577829786, 0.9659332099938169, -0.5064242767759342, 0.07211872821776624, -0.06621124057711932, 0.0005030461064200566, -1.0209044800264389, -0.39679521798655293, -0.027537580406619917, 1.6979349000036992, -0.6263019533815132, 0.0032690868372023322, 0.29874655587639337, 0.6337963309777679, 1.3892067260902456, 0.013497685054321794, 0.0008743102384593625, 1.128766314258273, 0.46314501367224725, -1.3012761327969349, 0.7890566000456553, 0.20281881889010306, 0.14754495367909412, -0.30376095999821945, -0.1038883797231358, -1.2436515208974277, -1.2848925247765148, -1.6311354589385693e-06, -1.021546035284744, -0.8634325710939681, 0.14919100995848045, -0.19817054959436212, 1.0712029385225181, 0.8296325891567643, -1.7196463015377605, -0.0980033121347047, -0.1331557202779696, 0.2552200331451668, 0.13611011746293797, 0.1522537465469282, -0.2675946234971087, 0.47196138548265204, 3.0617615413800916, -0.14299113365324054, 0.28229518249603464, 0.5109416309342731, 0.4355368459532051, 0.0008269986300712188, 0.1982550964016986, -0.34299699301522635, 2.1805067813611294, 1.1467000982516877, -0.3513758257998262, 0.015504098039113495, 0.5019272117695288, 0.4376708353632118, -0.23541091472932557, 0.3557315226368743, -0.04964737189060357, -0.3066787271163547, -0.16824890989302593, 0.1856880503826936, 0.12288810359356542, 0.09737365480897495, -0.21724835106544987, 2.4868970009483173, 0.2736141492007501, -0.027070587548329465, -0.32446672937200605, 0.19586164661926353, -0.24603825020394246, 0.10732307607301203, -0.8033557075399552, -0.8420972626667604, -0.8611189109390227, -0.3932923041935029, -0.7417980525801117, -0.8079677988339087, -0.8292038492170781, -1.195395507093829, -0.3388728247956062, -0.29337134099617274, 1.666628189483539, -1.0550565304100867, 1.6490043317727683, 7.438798473062253e-05, -0.46906457443667327, -0.06646027396963865, -0.244776946410912, -0.7535612790436657, 0.10840373257167091, 0.06430008692680651, 1.1698542332490063, -1.6743208213402154, 0.678322259104323, 2.757914080392294, -0.6397805548898671, 1.8528335880478655, 0.4285645126766105, 1.0232073149254557, 0.29310081530510934, 0.22196572172983756, 0.028858212855073347, 0.6255277886900606, 0.7550036876149482, 0.6559341654973412, 0.08641508665504757, 0.8422206868372956, -0.004588125017594237, -1.4313094324279592, -0.05351490118060385, 1.5204064405019806, -0.5466779820345773, 0.4197716703671679, 0.0015982434527179214, 0.47703746805346914, 0.9181922555528133, -0.5519332314032934, 2.1111249002827965, -1.3365455568201607, 0.7230411467584678, -0.1050600670399467, 0.09368961100667829, 0.39613973569363176, -0.3508090234311872, 0.8821474174748084, 0.8355377897412308, 0.5745223878949092, 0.7643873359892515, 0.4980763165544122, 1.125078597618326, -0.34164335564134163, -0.4356331651484568, -0.8903386951530559, -8.030379495455647e-08, 0.4278223822038723, 0.3898515632576368, -0.02713920933486966, -0.672719827995643, -0.15621990264821092, 0.36481188518041413, 0.3607226422735948, -0.29493581257304086, -0.027101175747097656, 0.12074844404403828, 0.0036226800120998494, 0.17748648480710877, 1.0865286718269658, 0.9512258321288153, -0.3140794779412338, 2.1254476381137044, 0.09940152222969541, 0.5066945247340354, 0.36856696931542876, 0.2412692189201102, 0.062293591003105955, -1.0618627602858253, -0.3063575009448928, 0.3551484134952199, 0.3117386424436198, -0.4453095156986523, 0.9329296820621946, 1.052005827329802, -0.2666503794286849, 1.1355244864984708, 0.23182342672556927, -0.026516292279672733, -1.1069137615712243, 0.6556320710110678, -0.818020573582044, -1.3395539038101059, 1.0672025913085772, -1.5847625616109622, -0.6102268257179934, -2.0932829643267494, 0.4050603334664821, 0.7663215089509856, -0.9915145229529888, 0.4101277479930951, -0.09288795364273954, 1.7069327662915013, -0.06696262985307755, -0.25128612956008817, 0.08578021511471154, 0.0002256007380370171, 0.032530399504222984, -0.5737402911947297, 0.00035458879758059854, -1.1571372559445408, -0.10782509297080553, 0.00025450566439123715, -0.9225166294492313, 0.9136620327090695, 0.7541318906033154, 0.30220866587519685] };
}, 530, null, "TalkPresidential/linear_model_json/lr_model.json");
__d(/* TalkPresidential/build/sagas/gamesListSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fetchNextGamesSaga = fetchNextGamesSaga;
exports.gamesListSaga = gamesListSaga;

var _dataActions = require(406                       ); // 406 = ./../actions/dataActions

var _gamesListActions = require(505                            ); // 505 = ./../actions/gamesListActions

var _gamesListSelectors = require(532                                ); // 532 = ./../selectors/gamesListSelectors

var _effects = require(394                 ); // 394 = redux-saga/effects

var _gamesListActions2 = require(505                          ); // 505 = ../actions/gamesListActions

var _api = require(474    ); // 474 = ./api

var _marked = regeneratorRuntime.mark(fetchNextGamesSaga),
    _marked2 = regeneratorRuntime.mark(gamesListSaga);

function fetchNextGamesSaga(action) {
    var clearExistingData, isFetching, isAtEnd, nextPageParams, response;
    return regeneratorRuntime.wrap(function fetchNextGamesSaga$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    clearExistingData = action.payload;
                    _context.next = 3;
                    return (0, _effects.select)(_gamesListSelectors.getIsFetchingGames);

                case 3:
                    isFetching = _context.sent;

                    if (!isFetching) {
                        _context.next = 6;
                        break;
                    }

                    return _context.abrupt('return', undefined);

                case 6:
                    _context.next = 8;
                    return (0, _effects.put)((0, _gamesListActions.setIsFetchingGames)(true));

                case 8:
                    if (!clearExistingData) {
                        _context.next = 11;
                        break;
                    }

                    _context.next = 11;
                    return (0, _effects.put)((0, _gamesListActions.resetState)());

                case 11:
                    _context.next = 13;
                    return (0, _effects.select)(_gamesListSelectors.getAtEndOfGames);

                case 13:
                    isAtEnd = _context.sent;

                    if (!isAtEnd) {
                        _context.next = 18;
                        break;
                    }

                    _context.next = 17;
                    return (0, _effects.put)((0, _gamesListActions.setIsFetchingGames)(false));

                case 17:
                    return _context.abrupt('return', undefined);

                case 18:
                    _context.next = 20;
                    return (0, _effects.select)(_gamesListSelectors.getNextPageParams);

                case 20:
                    nextPageParams = _context.sent;
                    _context.prev = 21;
                    _context.next = 24;
                    return (0, _effects.call)(_api.getAPI, 'user/games', nextPageParams);

                case 24:
                    response = _context.sent;

                    if (!(response.response.updatedAt && response.response.pageLimit && response.response.pageNumber)) {
                        _context.next = 30;
                        break;
                    }

                    _context.next = 28;
                    return (0, _effects.put)((0, _gamesListActions2.setNextPageParams)(response.response.updatedAt, response.response.pageLimit, response.response.pageNumber));

                case 28:
                    _context.next = 32;
                    break;

                case 30:
                    _context.next = 32;
                    return (0, _effects.put)((0, _gamesListActions.setAtEndOfGames)(true));

                case 32:
                    if (!response.response.games) {
                        _context.next = 38;
                        break;
                    }

                    if (!clearExistingData) {
                        _context.next = 36;
                        break;
                    }

                    _context.next = 36;
                    return (0, _effects.put)((0, _dataActions.clearGames)());

                case 36:
                    _context.next = 38;
                    return (0, _effects.put)((0, _dataActions.addGames)(response.response.games));

                case 38:
                    _context.next = 44;
                    break;

                case 40:
                    _context.prev = 40;
                    _context.t0 = _context['catch'](21);
                    _context.next = 44;
                    return (0, _effects.put)((0, _gamesListActions2.setGetGamesError)(_context.t0));

                case 44:
                    _context.next = 46;
                    return (0, _effects.put)((0, _gamesListActions.setIsFetchingGames)(false));

                case 46:
                case 'end':
                    return _context.stop();
            }
        }
    }, _marked, this, [[21, 40]]);
}
function gamesListSaga() {
    return regeneratorRuntime.wrap(function gamesListSaga$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    _context2.next = 2;
                    return (0, _effects.takeLatest)(_gamesListActions2.fetchGames.toString(), fetchNextGamesSaga);

                case 2:
                case 'end':
                    return _context2.stop();
            }
        }
    }, _marked2, this);
}
}, 531, null, "TalkPresidential/build/sagas/gamesListSagas.js");
__d(/* TalkPresidential/build/selectors/gamesListSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getGameSummaryProps = exports.getCompletedGames = exports.getOpenGames = exports.getIsFetchingGames = exports.getNextPageParams = exports.getAtEndOfGames = undefined;

var _gameSelectors = require(511              ); // 511 = ./gameSelectors

var _reselect = require(476       ); // 476 = reselect

var _dataSelectors = require(477              ); // 477 = ./dataSelectors

var _gameUtils = require(478                      ); // 478 = ../utils/game/gameUtils

var getAtEndOfGames = exports.getAtEndOfGames = function getAtEndOfGames(state) {
    return state.gamesList.atEndOfGames;
};
var getNextPageParams = exports.getNextPageParams = function getNextPageParams(state) {
    return state.gamesList.nextPageParams;
};
var getIsFetchingGames = exports.getIsFetchingGames = function getIsFetchingGames(state) {
    return state.gamesList.fetchingGames;
};
var getOpenGames = exports.getOpenGames = (0, _reselect.createSelector)(_dataSelectors.getGames, _dataSelectors.getUserID, _gameSelectors.getGameOpponentID, function (games, userID, opponentID) {
    return games.filter(function (game) {
        return (0, _gameUtils.gameIsOpen)(game, userID, opponentID);
    });
});
var getCompletedGames = exports.getCompletedGames = (0, _reselect.createSelector)(_dataSelectors.getGames, _dataSelectors.getUserID, _gameSelectors.getGameOpponentID, function (games, userID, opponentID) {
    return games.filter(function (game) {
        return !(0, _gameUtils.gameIsOpen)(game, userID, opponentID);
    });
});
var getGameCompleteProps = (0, _reselect.createSelector)(_gameSelectors.getGameIsOpen, _gameSelectors.getTopRoundRequiredWords, _gameSelectors.getUserTopTurnScore, _gameSelectors.getUserTopTurnText, _gameSelectors.getUserWonGame, function (gameOpen, requiredWords, topTurnScore, topTurnText, userWon) {
    if (gameOpen) {
        return undefined;
    }
    return {
        userTopTurnScore: topTurnScore,
        userTopTurnText: topTurnText,
        requiredWords: requiredWords,
        userWonGame: userWon
    };
});
var getGameSummaryProps = exports.getGameSummaryProps = (0, _reselect.createStructuredSelector)({
    userName: _dataSelectors.getUserNameWithLastNameAbr,
    userProfilePicture: _dataSelectors.getUserProfilePicture,
    userRoundsWon: _gameSelectors.getUserRoundWinsCount,
    userCanPlay: _gameSelectors.getGameUserCanPlayMostRecentRound,
    opponentName: _gameSelectors.getGameOpponentNameWithLastNameAbbr,
    opponentFirstName: _gameSelectors.getGameOpponentFirstName,
    opponentProfilePicture: _gameSelectors.getGameOpponentProfilePicture,
    opponentRoundsWon: _gameSelectors.getGameOpponentRoundWinsCount,
    waitingForOpponent: _gameSelectors.getGameWaitingForOpponent,
    canDeclineGame: _gameSelectors.getUserCanDeclineGame,
    gameComplete: getGameCompleteProps
});
}, 532, null, "TalkPresidential/build/selectors/gamesListSelectors.js");
__d(/* redux-persist/es/storage/index.native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

exports.default = _reactNative.AsyncStorage;
}, 533, null, "redux-persist/es/storage/index.native.js");
__d(/* redux-saga/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.utils = exports.effects = exports.detach = exports.CANCEL = exports.delay = exports.throttle = exports.takeLatest = exports.takeEvery = exports.buffers = exports.channel = exports.eventChannel = exports.END = exports.runSaga = undefined;

var _runSaga = require(535                 ); // 535 = ./internal/runSaga

Object.defineProperty(exports, 'runSaga', {
  enumerable: true,
  get: function get() {
    return _runSaga.runSaga;
  }
});

var _channel = require(400                 ); // 400 = ./internal/channel

Object.defineProperty(exports, 'END', {
  enumerable: true,
  get: function get() {
    return _channel.END;
  }
});
Object.defineProperty(exports, 'eventChannel', {
  enumerable: true,
  get: function get() {
    return _channel.eventChannel;
  }
});
Object.defineProperty(exports, 'channel', {
  enumerable: true,
  get: function get() {
    return _channel.channel;
  }
});

var _buffers = require(401                 ); // 401 = ./internal/buffers

Object.defineProperty(exports, 'buffers', {
  enumerable: true,
  get: function get() {
    return _buffers.buffers;
  }
});

var _sagaHelpers = require(397                     ); // 397 = ./internal/sagaHelpers

Object.defineProperty(exports, 'takeEvery', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.takeEvery;
  }
});
Object.defineProperty(exports, 'takeLatest', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.takeLatest;
  }
});
Object.defineProperty(exports, 'throttle', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.throttle;
  }
});

var _utils = require(396               ); // 396 = ./internal/utils

Object.defineProperty(exports, 'delay', {
  enumerable: true,
  get: function get() {
    return _utils.delay;
  }
});
Object.defineProperty(exports, 'CANCEL', {
  enumerable: true,
  get: function get() {
    return _utils.CANCEL;
  }
});

var _io = require(395            ); // 395 = ./internal/io

Object.defineProperty(exports, 'detach', {
  enumerable: true,
  get: function get() {
    return _io.detach;
  }
});

var _middleware = require(537                    ); // 537 = ./internal/middleware

var _middleware2 = _interopRequireDefault(_middleware);

var _effects = require(394        ); // 394 = ./effects

var effects = _interopRequireWildcard(_effects);

var _utils2 = require(538      ); // 538 = ./utils

var utils = _interopRequireWildcard(_utils2);

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }newObj.default = obj;return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _middleware2.default;
exports.effects = effects;
exports.utils = utils;
}, 534, null, "redux-saga/lib/index.js");
__d(/* redux-saga/lib/internal/runSaga.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.runSaga = runSaga;

var _utils = require(396      ); // 396 = ./utils

var _proc = require(536     ); // 536 = ./proc

var _proc2 = _interopRequireDefault(_proc);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var RUN_SAGA_SIGNATURE = 'runSaga(storeInterface, saga, ...args)';
var NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ': saga argument must be a Generator function!';

function runSaga(storeInterface, saga) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var iterator = void 0;

  if (_utils.is.iterator(storeInterface)) {
    if (process.env.NODE_ENV === 'development') {
      (0, _utils.log)('warn', 'runSaga(iterator, storeInterface) has been deprecated in favor of ' + RUN_SAGA_SIGNATURE);
    }
    iterator = storeInterface;
    storeInterface = saga;
  } else {
    (0, _utils.check)(saga, _utils.is.func, NON_GENERATOR_ERR);
    iterator = saga.apply(undefined, args);
    (0, _utils.check)(iterator, _utils.is.iterator, NON_GENERATOR_ERR);
  }

  var _storeInterface = storeInterface,
      subscribe = _storeInterface.subscribe,
      dispatch = _storeInterface.dispatch,
      getState = _storeInterface.getState,
      context = _storeInterface.context,
      sagaMonitor = _storeInterface.sagaMonitor,
      logger = _storeInterface.logger,
      onError = _storeInterface.onError;

  var effectId = (0, _utils.uid)();

  if (sagaMonitor) {
    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || _utils.noop;
    sagaMonitor.effectResolved = sagaMonitor.effectResolved || _utils.noop;
    sagaMonitor.effectRejected = sagaMonitor.effectRejected || _utils.noop;
    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || _utils.noop;
    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || _utils.noop;

    sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: saga, args: args } });
  }

  var task = (0, _proc2.default)(iterator, subscribe, (0, _utils.wrapSagaDispatch)(dispatch), getState, context, { sagaMonitor: sagaMonitor, logger: logger, onError: onError }, effectId, saga.name);

  if (sagaMonitor) {
    sagaMonitor.effectResolved(effectId, task);
  }

  return task;
}
}, 535, null, "redux-saga/lib/internal/runSaga.js");
__d(/* redux-saga/lib/internal/proc.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.TASK_CANCEL = exports.CHANNEL_END = exports.NOT_ITERATOR_ERROR = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = proc;

var _utils = require(396      ); // 396 = ./utils

var _scheduler = require(402          ); // 402 = ./scheduler

var _io = require(395   ); // 395 = ./io

var _channel = require(400        ); // 400 = ./channel

var _buffers = require(401        ); // 401 = ./buffers

function _defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];desc.configurable = desc.enumerable = true;if ("value" in desc) desc.writable = true;Object.defineProperty(obj, key, desc);
  }return obj;
}

var NOT_ITERATOR_ERROR = exports.NOT_ITERATOR_ERROR = 'proc first argument (Saga function result) must be an iterator';

var CHANNEL_END = exports.CHANNEL_END = {
  toString: function toString() {
    return '@@redux-saga/CHANNEL_END';
  }
};
var TASK_CANCEL = exports.TASK_CANCEL = {
  toString: function toString() {
    return '@@redux-saga/TASK_CANCEL';
  }
};

var matchers = {
  wildcard: function wildcard() {
    return _utils.kTrue;
  },
  default: function _default(pattern) {
    return (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'symbol' ? function (input) {
      return input.type === pattern;
    } : function (input) {
      return input.type === String(pattern);
    };
  },
  array: function array(patterns) {
    return function (input) {
      return patterns.some(function (p) {
        return matcher(p)(input);
      });
    };
  },
  predicate: function predicate(_predicate) {
    return function (input) {
      return _predicate(input);
    };
  }
};

function matcher(pattern) {
  return (pattern === '*' ? matchers.wildcard : _utils.is.array(pattern) ? matchers.array : _utils.is.stringableFunc(pattern) ? matchers.default : _utils.is.func(pattern) ? matchers.predicate : matchers.default)(pattern);
}

function forkQueue(name, mainTask, cb) {
  var tasks = [],
      result = void 0,
      completed = false;
  addTask(mainTask);

  function abort(err) {
    cancelAll();
    cb(err, true);
  }

  function addTask(task) {
    tasks.push(task);
    task.cont = function (res, isErr) {
      if (completed) {
        return;
      }

      (0, _utils.remove)(tasks, task);
      task.cont = _utils.noop;
      if (isErr) {
        abort(res);
      } else {
        if (task === mainTask) {
          result = res;
        }
        if (!tasks.length) {
          completed = true;
          cb(result);
        }
      }
    };
  }

  function cancelAll() {
    if (completed) {
      return;
    }
    completed = true;
    tasks.forEach(function (t) {
      t.cont = _utils.noop;
      t.cancel();
    });
    tasks = [];
  }

  return {
    addTask: addTask,
    cancelAll: cancelAll,
    abort: abort,
    getTasks: function getTasks() {
      return tasks;
    },
    taskNames: function taskNames() {
      return tasks.map(function (t) {
        return t.name;
      });
    }
  };
}

function createTaskIterator(_ref) {
  var context = _ref.context,
      fn = _ref.fn,
      args = _ref.args;

  if (_utils.is.iterator(fn)) {
    return fn;
  }

  var result = void 0,
      error = void 0;
  try {
    result = fn.apply(context, args);
  } catch (err) {
    error = err;
  }

  if (_utils.is.iterator(result)) {
    return result;
  }

  return error ? (0, _utils.makeIterator)(function () {
    throw error;
  }) : (0, _utils.makeIterator)(function () {
    var pc = void 0;
    var eff = { done: false, value: result };
    var ret = function ret(value) {
      return { done: true, value: value };
    };
    return function (arg) {
      if (!pc) {
        pc = true;
        return eff;
      } else {
        return ret(arg);
      }
    };
  }());
}

var wrapHelper = function wrapHelper(helper) {
  return { fn: helper };
};

function proc(iterator) {
  var subscribe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return _utils.noop;
  };
  var dispatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _utils.noop;
  var getState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _utils.noop;
  var parentContext = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
  var parentEffectId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  var name = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'anonymous';
  var cont = arguments[8];

  (0, _utils.check)(iterator, _utils.is.iterator, NOT_ITERATOR_ERROR);

  var effectsString = '[...effects]';
  var runParallelEffect = (0, _utils.deprecate)(runAllEffect, (0, _utils.updateIncentive)(effectsString, 'all(' + effectsString + ')'));

  var sagaMonitor = options.sagaMonitor,
      logger = options.logger,
      onError = options.onError;

  var log = logger || _utils.log;
  var logError = function logError(err) {
    var message = err.sagaStack;

    if (!message && err.stack) {
      message = err.stack.split('\n')[0].indexOf(err.message) !== -1 ? err.stack : 'Error: ' + err.message + '\n' + err.stack;
    }

    log('error', 'uncaught at ' + name, message || err.message || err);
  };
  var stdChannel = (0, _channel.stdChannel)(subscribe);
  var taskContext = Object.create(parentContext);

  next.cancel = _utils.noop;

  var task = newTask(parentEffectId, name, iterator, cont);
  var mainTask = { name: name, cancel: cancelMain, isRunning: true };
  var taskQueue = forkQueue(name, mainTask, end);

  function cancelMain() {
    if (mainTask.isRunning && !mainTask.isCancelled) {
      mainTask.isCancelled = true;
      next(TASK_CANCEL);
    }
  }

  function cancel() {
    if (iterator._isRunning && !iterator._isCancelled) {
      iterator._isCancelled = true;
      taskQueue.cancelAll();

      end(TASK_CANCEL);
    }
  }

  cont && (cont.cancel = cancel);

  iterator._isRunning = true;

  next();

  return task;

  function next(arg, isErr) {
    if (!mainTask.isRunning) {
      throw new Error('Trying to resume an already finished generator');
    }

    try {
      var result = void 0;
      if (isErr) {
        result = iterator.throw(arg);
      } else if (arg === TASK_CANCEL) {
        mainTask.isCancelled = true;

        next.cancel();

        result = _utils.is.func(iterator.return) ? iterator.return(TASK_CANCEL) : { done: true, value: TASK_CANCEL };
      } else if (arg === CHANNEL_END) {
        result = _utils.is.func(iterator.return) ? iterator.return() : { done: true };
      } else {
        result = iterator.next(arg);
      }

      if (!result.done) {
        runEffect(result.value, parentEffectId, '', next);
      } else {
        mainTask.isMainRunning = false;
        mainTask.cont && mainTask.cont(result.value);
      }
    } catch (error) {
      if (mainTask.isCancelled) {
        logError(error);
      }
      mainTask.isMainRunning = false;
      mainTask.cont(error, true);
    }
  }

  function end(result, isErr) {
    iterator._isRunning = false;
    stdChannel.close();
    if (!isErr) {
      iterator._result = result;
      iterator._deferredEnd && iterator._deferredEnd.resolve(result);
    } else {
      if (result instanceof Error) {
        Object.defineProperty(result, 'sagaStack', {
          value: 'at ' + name + ' \n ' + (result.sagaStack || result.stack),
          configurable: true
        });
      }
      if (!task.cont) {
        if (result instanceof Error && onError) {
          onError(result);
        } else {
          logError(result);
        }
      }
      iterator._error = result;
      iterator._isAborted = true;
      iterator._deferredEnd && iterator._deferredEnd.reject(result);
    }
    task.cont && task.cont(result, isErr);
    task.joiners.forEach(function (j) {
      return j.cb(result, isErr);
    });
    task.joiners = null;
  }

  function runEffect(effect, parentEffectId) {
    var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var cb = arguments[3];

    var effectId = (0, _utils.uid)();
    sagaMonitor && sagaMonitor.effectTriggered({ effectId: effectId, parentEffectId: parentEffectId, label: label, effect: effect });

    var effectSettled = void 0;

    function currCb(res, isErr) {
      if (effectSettled) {
        return;
      }

      effectSettled = true;
      cb.cancel = _utils.noop;
      if (sagaMonitor) {
        isErr ? sagaMonitor.effectRejected(effectId, res) : sagaMonitor.effectResolved(effectId, res);
      }
      cb(res, isErr);
    }

    currCb.cancel = _utils.noop;

    cb.cancel = function () {
      if (effectSettled) {
        return;
      }

      effectSettled = true;

      try {
        currCb.cancel();
      } catch (err) {
        logError(err);
      }
      currCb.cancel = _utils.noop;

      sagaMonitor && sagaMonitor.effectCancelled(effectId);
    };

    var data = void 0;

    return _utils.is.promise(effect) ? resolvePromise(effect, currCb) : _utils.is.helper(effect) ? runForkEffect(wrapHelper(effect), effectId, currCb) : _utils.is.iterator(effect) ? resolveIterator(effect, effectId, name, currCb) : _utils.is.array(effect) ? runParallelEffect(effect, effectId, currCb) : (data = _io.asEffect.take(effect)) ? runTakeEffect(data, currCb) : (data = _io.asEffect.put(effect)) ? runPutEffect(data, currCb) : (data = _io.asEffect.all(effect)) ? runAllEffect(data, effectId, currCb) : (data = _io.asEffect.race(effect)) ? runRaceEffect(data, effectId, currCb) : (data = _io.asEffect.call(effect)) ? runCallEffect(data, effectId, currCb) : (data = _io.asEffect.cps(effect)) ? runCPSEffect(data, currCb) : (data = _io.asEffect.fork(effect)) ? runForkEffect(data, effectId, currCb) : (data = _io.asEffect.join(effect)) ? runJoinEffect(data, currCb) : (data = _io.asEffect.cancel(effect)) ? runCancelEffect(data, currCb) : (data = _io.asEffect.select(effect)) ? runSelectEffect(data, currCb) : (data = _io.asEffect.actionChannel(effect)) ? runChannelEffect(data, currCb) : (data = _io.asEffect.flush(effect)) ? runFlushEffect(data, currCb) : (data = _io.asEffect.cancelled(effect)) ? runCancelledEffect(data, currCb) : (data = _io.asEffect.getContext(effect)) ? runGetContextEffect(data, currCb) : (data = _io.asEffect.setContext(effect)) ? runSetContextEffect(data, currCb) : currCb(effect);
  }

  function resolvePromise(promise, cb) {
    var cancelPromise = promise[_utils.CANCEL];
    if (_utils.is.func(cancelPromise)) {
      cb.cancel = cancelPromise;
    } else if (_utils.is.func(promise.abort)) {
      cb.cancel = function () {
        return promise.abort();
      };
    }
    promise.then(cb, function (error) {
      return cb(error, true);
    });
  }

  function resolveIterator(iterator, effectId, name, cb) {
    proc(iterator, subscribe, dispatch, getState, taskContext, options, effectId, name, cb);
  }

  function runTakeEffect(_ref2, cb) {
    var channel = _ref2.channel,
        pattern = _ref2.pattern,
        maybe = _ref2.maybe;

    channel = channel || stdChannel;
    var takeCb = function takeCb(inp) {
      return inp instanceof Error ? cb(inp, true) : (0, _channel.isEnd)(inp) && !maybe ? cb(CHANNEL_END) : cb(inp);
    };
    try {
      channel.take(takeCb, matcher(pattern));
    } catch (err) {
      return cb(err, true);
    }
    cb.cancel = takeCb.cancel;
  }

  function runPutEffect(_ref3, cb) {
    var channel = _ref3.channel,
        action = _ref3.action,
        resolve = _ref3.resolve;

    (0, _scheduler.asap)(function () {
      var result = void 0;
      try {
        result = (channel ? channel.put : dispatch)(action);
      } catch (error) {
        if (channel || resolve) return cb(error, true);
        logError(error);
      }

      if (resolve && _utils.is.promise(result)) {
        resolvePromise(result, cb);
      } else {
        return cb(result);
      }
    });
  }

  function runCallEffect(_ref4, effectId, cb) {
    var context = _ref4.context,
        fn = _ref4.fn,
        args = _ref4.args;

    var result = void 0;

    try {
      result = fn.apply(context, args);
    } catch (error) {
      return cb(error, true);
    }
    return _utils.is.promise(result) ? resolvePromise(result, cb) : _utils.is.iterator(result) ? resolveIterator(result, effectId, fn.name, cb) : cb(result);
  }

  function runCPSEffect(_ref5, cb) {
    var context = _ref5.context,
        fn = _ref5.fn,
        args = _ref5.args;

    try {
      var cpsCb = function cpsCb(err, res) {
        return _utils.is.undef(err) ? cb(res) : cb(err, true);
      };
      fn.apply(context, args.concat(cpsCb));
      if (cpsCb.cancel) {
        cb.cancel = function () {
          return cpsCb.cancel();
        };
      }
    } catch (error) {
      return cb(error, true);
    }
  }

  function runForkEffect(_ref6, effectId, cb) {
    var context = _ref6.context,
        fn = _ref6.fn,
        args = _ref6.args,
        detached = _ref6.detached;

    var taskIterator = createTaskIterator({ context: context, fn: fn, args: args });

    try {
      (0, _scheduler.suspend)();
      var _task = proc(taskIterator, subscribe, dispatch, getState, taskContext, options, effectId, fn.name, detached ? null : _utils.noop);

      if (detached) {
        cb(_task);
      } else {
        if (taskIterator._isRunning) {
          taskQueue.addTask(_task);
          cb(_task);
        } else if (taskIterator._error) {
          taskQueue.abort(taskIterator._error);
        } else {
          cb(_task);
        }
      }
    } finally {
      (0, _scheduler.flush)();
    }
  }

  function runJoinEffect(t, cb) {
    if (t.isRunning()) {
      var joiner = { task: task, cb: cb };
      cb.cancel = function () {
        return (0, _utils.remove)(t.joiners, joiner);
      };
      t.joiners.push(joiner);
    } else {
      t.isAborted() ? cb(t.error(), true) : cb(t.result());
    }
  }

  function runCancelEffect(taskToCancel, cb) {
    if (taskToCancel === _utils.SELF_CANCELLATION) {
      taskToCancel = task;
    }
    if (taskToCancel.isRunning()) {
      taskToCancel.cancel();
    }
    cb();
  }

  function runAllEffect(effects, effectId, cb) {
    var keys = Object.keys(effects);

    if (!keys.length) {
      return cb(_utils.is.array(effects) ? [] : {});
    }

    var completedCount = 0;
    var completed = void 0;
    var results = {};
    var childCbs = {};

    function checkEffectEnd() {
      if (completedCount === keys.length) {
        completed = true;
        cb(_utils.is.array(effects) ? _utils.array.from(_extends({}, results, { length: keys.length })) : results);
      }
    }

    keys.forEach(function (key) {
      var chCbAtKey = function chCbAtKey(res, isErr) {
        if (completed) {
          return;
        }
        if (isErr || (0, _channel.isEnd)(res) || res === CHANNEL_END || res === TASK_CANCEL) {
          cb.cancel();
          cb(res, isErr);
        } else {
          results[key] = res;
          completedCount++;
          checkEffectEnd();
        }
      };
      chCbAtKey.cancel = _utils.noop;
      childCbs[key] = chCbAtKey;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        keys.forEach(function (key) {
          return childCbs[key].cancel();
        });
      }
    };

    keys.forEach(function (key) {
      return runEffect(effects[key], effectId, key, childCbs[key]);
    });
  }

  function runRaceEffect(effects, effectId, cb) {
    var completed = void 0;
    var keys = Object.keys(effects);
    var childCbs = {};

    keys.forEach(function (key) {
      var chCbAtKey = function chCbAtKey(res, isErr) {
        if (completed) {
          return;
        }

        if (isErr) {
          cb.cancel();
          cb(res, true);
        } else if (!(0, _channel.isEnd)(res) && res !== CHANNEL_END && res !== TASK_CANCEL) {
          var _response;

          cb.cancel();
          completed = true;
          var response = (_response = {}, _response[key] = res, _response);
          cb(_utils.is.array(effects) ? [].slice.call(_extends({}, response, { length: keys.length })) : response);
        }
      };
      chCbAtKey.cancel = _utils.noop;
      childCbs[key] = chCbAtKey;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        keys.forEach(function (key) {
          return childCbs[key].cancel();
        });
      }
    };
    keys.forEach(function (key) {
      if (completed) {
        return;
      }
      runEffect(effects[key], effectId, key, childCbs[key]);
    });
  }

  function runSelectEffect(_ref7, cb) {
    var selector = _ref7.selector,
        args = _ref7.args;

    try {
      var state = selector.apply(undefined, [getState()].concat(args));
      cb(state);
    } catch (error) {
      cb(error, true);
    }
  }

  function runChannelEffect(_ref8, cb) {
    var pattern = _ref8.pattern,
        buffer = _ref8.buffer;

    var match = matcher(pattern);
    match.pattern = pattern;
    cb((0, _channel.eventChannel)(subscribe, buffer || _buffers.buffers.fixed(), match));
  }

  function runCancelledEffect(data, cb) {
    cb(!!mainTask.isCancelled);
  }

  function runFlushEffect(channel, cb) {
    channel.flush(cb);
  }

  function runGetContextEffect(prop, cb) {
    cb(taskContext[prop]);
  }

  function runSetContextEffect(props, cb) {
    _utils.object.assign(taskContext, props);
    cb();
  }

  function newTask(id, name, iterator, cont) {
    var _done, _ref9, _mutatorMap;

    iterator._deferredEnd = null;
    return _ref9 = {}, _ref9[_utils.TASK] = true, _ref9.id = id, _ref9.name = name, _done = 'done', _mutatorMap = {}, _mutatorMap[_done] = _mutatorMap[_done] || {}, _mutatorMap[_done].get = function () {
      if (iterator._deferredEnd) {
        return iterator._deferredEnd.promise;
      } else {
        var def = (0, _utils.deferred)();
        iterator._deferredEnd = def;
        if (!iterator._isRunning) {
          iterator._error ? def.reject(iterator._error) : def.resolve(iterator._result);
        }
        return def.promise;
      }
    }, _ref9.cont = cont, _ref9.joiners = [], _ref9.cancel = cancel, _ref9.isRunning = function isRunning() {
      return iterator._isRunning;
    }, _ref9.isCancelled = function isCancelled() {
      return iterator._isCancelled;
    }, _ref9.isAborted = function isAborted() {
      return iterator._isAborted;
    }, _ref9.result = function result() {
      return iterator._result;
    }, _ref9.error = function error() {
      return iterator._error;
    }, _ref9.setContext = function setContext(props) {
      (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)('task', props));
      _utils.object.assign(taskContext, props);
    }, _defineEnumerableProperties(_ref9, _mutatorMap), _ref9;
  }
}
}, 536, null, "redux-saga/lib/internal/proc.js");
__d(/* redux-saga/lib/internal/middleware.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = sagaMiddlewareFactory;

var _utils = require(396      ); // 396 = ./utils

var _channel = require(400        ); // 400 = ./channel

var _runSaga = require(535        ); // 535 = ./runSaga

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function sagaMiddlewareFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _ref$context = _ref.context,
      context = _ref$context === undefined ? {} : _ref$context,
      options = _objectWithoutProperties(_ref, ['context']);

  var sagaMonitor = options.sagaMonitor,
      logger = options.logger,
      onError = options.onError;

  if (_utils.is.func(options)) {
    if (process.env.NODE_ENV === 'production') {
      throw new Error('Saga middleware no longer accept Generator functions. Use sagaMiddleware.run instead');
    } else {
      throw new Error('You passed a function to the Saga middleware. You are likely trying to start a        Saga by directly passing it to the middleware. This is no longer possible starting from 0.10.0.        To run a Saga, you must do it dynamically AFTER mounting the middleware into the store.\n        Example:\n          import createSagaMiddleware from \'redux-saga\'\n          ... other imports\n\n          const sagaMiddleware = createSagaMiddleware()\n          const store = createStore(reducer, applyMiddleware(sagaMiddleware))\n          sagaMiddleware.run(saga, ...args)\n      ');
    }
  }

  if (logger && !_utils.is.func(logger)) {
    throw new Error('`options.logger` passed to the Saga middleware is not a function!');
  }

  if (process.env.NODE_ENV === 'development' && options.onerror) {
    throw new Error('`options.onerror` was removed. Use `options.onError` instead.');
  }

  if (onError && !_utils.is.func(onError)) {
    throw new Error('`options.onError` passed to the Saga middleware is not a function!');
  }

  if (options.emitter && !_utils.is.func(options.emitter)) {
    throw new Error('`options.emitter` passed to the Saga middleware is not a function!');
  }

  function sagaMiddleware(_ref2) {
    var getState = _ref2.getState,
        dispatch = _ref2.dispatch;

    var sagaEmitter = (0, _channel.emitter)();
    sagaEmitter.emit = (options.emitter || _utils.ident)(sagaEmitter.emit);

    sagaMiddleware.run = _runSaga.runSaga.bind(null, {
      context: context,
      subscribe: sagaEmitter.subscribe,
      dispatch: dispatch,
      getState: getState,
      sagaMonitor: sagaMonitor,
      logger: logger,
      onError: onError
    });

    return function (next) {
      return function (action) {
        if (sagaMonitor && sagaMonitor.actionDispatched) {
          sagaMonitor.actionDispatched(action);
        }
        var result = next(action);
        sagaEmitter.emit(action);
        return result;
      };
    };
  }

  sagaMiddleware.run = function () {
    throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');
  };

  sagaMiddleware.setContext = function (props) {
    (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)('sagaMiddleware', props));
    _utils.object.assign(context, props);
  };

  return sagaMiddleware;
}
}, 537, null, "redux-saga/lib/internal/middleware.js");
__d(/* redux-saga/lib/utils.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _utils = require(396               ); // 396 = ./internal/utils

Object.defineProperty(exports, 'TASK', {
  enumerable: true,
  get: function get() {
    return _utils.TASK;
  }
});
Object.defineProperty(exports, 'SAGA_ACTION', {
  enumerable: true,
  get: function get() {
    return _utils.SAGA_ACTION;
  }
});
Object.defineProperty(exports, 'noop', {
  enumerable: true,
  get: function get() {
    return _utils.noop;
  }
});
Object.defineProperty(exports, 'is', {
  enumerable: true,
  get: function get() {
    return _utils.is;
  }
});
Object.defineProperty(exports, 'deferred', {
  enumerable: true,
  get: function get() {
    return _utils.deferred;
  }
});
Object.defineProperty(exports, 'arrayOfDeffered', {
  enumerable: true,
  get: function get() {
    return _utils.arrayOfDeffered;
  }
});
Object.defineProperty(exports, 'createMockTask', {
  enumerable: true,
  get: function get() {
    return _utils.createMockTask;
  }
});
Object.defineProperty(exports, 'cloneableGenerator', {
  enumerable: true,
  get: function get() {
    return _utils.cloneableGenerator;
  }
});

var _io = require(395            ); // 395 = ./internal/io

Object.defineProperty(exports, 'asEffect', {
  enumerable: true,
  get: function get() {
    return _io.asEffect;
  }
});

var _proc = require(536              ); // 536 = ./internal/proc

Object.defineProperty(exports, 'CHANNEL_END', {
  enumerable: true,
  get: function get() {
    return _proc.CHANNEL_END;
  }
});
}, 538, null, "redux-saga/lib/utils.js");
__d(/* remote-redux-devtools/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.composeWithDevTools = exports.default = undefined;

var _devTools = require(540         ); // 540 = ./devTools

Object.defineProperty(exports, 'composeWithDevTools', {
  enumerable: true,
  get: function get() {
    return _devTools.composeWithDevTools;
  }
});

var _devTools2 = _interopRequireDefault(_devTools);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _devTools2.default;
}, 539, null, "remote-redux-devtools/lib/index.js");
__d(/* remote-redux-devtools/lib/devTools.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = devToolsEnhancer;
exports.preEnhancer = preEnhancer;
exports.composeWithDevTools = composeWithDevTools;

var _jsan = require(541   ); // 541 = jsan

var _socketclusterClient = require(546                   ); // 546 = socketcluster-client

var _socketclusterClient2 = _interopRequireDefault(_socketclusterClient);

var _configureStore = require(567               ); // 567 = ./configureStore

var _configureStore2 = _interopRequireDefault(_configureStore);

var _constants = require(617          ); // 617 = ./constants

var _rnHostDetect = require(618             ); // 618 = rn-host-detect

var _rnHostDetect2 = _interopRequireDefault(_rnHostDetect);

var _remotedevUtils = require(619              ); // 619 = remotedev-utils

var _catchErrors = require(633                              ); // 633 = remotedev-utils/lib/catchErrors

var _catchErrors2 = _interopRequireDefault(_catchErrors);

var _filters = require(634                          ); // 634 = remotedev-utils/lib/filters

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var instanceId = void 0;
var instanceName = void 0;
var suppressConnectErrors = void 0;
var errorCounts = {};
var socketOptions = void 0;
var socket = void 0;
var channel = void 0;
var store = {};
var lastAction = void 0;
var filters = void 0;
var isExcess = void 0;
var isMonitored = void 0;
var started = void 0;
var startOn = void 0;
var stopOn = void 0;
var sendOn = void 0;
var sendOnError = void 0;
var sendTo = void 0;
var lastErrorMsg = void 0;
var locked = void 0;
var paused = void 0;
var actionCreators = void 0;
var stateSanitizer = void 0;
var actionSanitizer = void 0;

function getLiftedState() {
  return (0, _filters.filterStagedActions)(store.liftedStore.getState(), filters);
}

function send() {
  if (!instanceId) instanceId = socket && socket.id || Math.random().toString(36).substr(2);
  try {
    fetch(sendTo, {
      method: 'POST',
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify({
        type: 'STATE',
        id: instanceId,
        name: instanceName,
        payload: (0, _jsan.stringify)(getLiftedState())
      })
    }).catch(function (err) {
      console.log(err);
    });
  } catch (err) {
    console.log(err);
  }
}

function relay(type, state, action, nextActionId) {
  var message = {
    type: type,
    id: socket.id,
    name: instanceName
  };
  if (state) {
    message.payload = type === 'ERROR' ? state : (0, _jsan.stringify)((0, _filters.filterState)(state, type, filters, stateSanitizer, actionSanitizer, nextActionId));
  }
  if (type === 'ACTION') {
    message.action = (0, _jsan.stringify)(!actionSanitizer ? action : actionSanitizer(action.action, nextActionId - 1));
    message.isExcess = isExcess;
    message.nextActionId = nextActionId;
  } else if (action) {
    message.action = action;
  }
  socket.emit(socket.id ? 'log' : 'log-noid', message);
}

function dispatchRemotely(action) {
  try {
    var result = (0, _remotedevUtils.evalAction)(action, actionCreators);
    store.dispatch(result);
  } catch (e) {
    relay('ERROR', e.message);
  }
}

function handleMessages(message) {
  if (message.type === 'IMPORT' || message.type === 'SYNC' && socket.id && message.id !== socket.id) {
    store.liftedStore.dispatch({
      type: 'IMPORT_STATE', nextLiftedState: (0, _jsan.parse)(message.state)
    });
  } else if (message.type === 'UPDATE') {
    relay('STATE', getLiftedState());
  } else if (message.type === 'START') {
    isMonitored = true;
    if (typeof actionCreators === 'function') actionCreators = actionCreators();
    relay('STATE', getLiftedState(), actionCreators);
  } else if (message.type === 'STOP' || message.type === 'DISCONNECTED') {
    isMonitored = false;
    relay('STOP');
  } else if (message.type === 'ACTION') {
    dispatchRemotely(message.action);
  } else if (message.type === 'DISPATCH') {
    store.liftedStore.dispatch(message.action);
  }
}

function async(fn) {
  setTimeout(fn, 0);
}

function sendError(errorAction) {
  if (errorAction.message && errorAction.message === lastErrorMsg) return;
  lastErrorMsg = errorAction.message;

  async(function () {
    store.dispatch(errorAction);
    if (!started) send();
  });
}

function str2array(str) {
  return typeof str === 'string' ? [str] : str && str.length;
}

function init(options) {
  instanceName = options.name;

  var _ref = options.filters || {};

  var blacklist = _ref.blacklist;
  var whitelist = _ref.whitelist;

  filters = (0, _filters.getLocalFilter)({
    actionsBlacklist: blacklist || options.actionsBlacklist,
    actionsWhitelist: whitelist || options.actionsWhitelist
  });
  if (options.port) {
    socketOptions = {
      port: options.port,
      hostname: options.hostname || 'localhost',
      secure: options.secure
    };
  } else socketOptions = _constants.defaultSocketOptions;

  suppressConnectErrors = options.suppressConnectErrors !== undefined ? options.suppressConnectErrors : true;

  startOn = str2array(options.startOn);
  stopOn = str2array(options.stopOn);
  sendOn = str2array(options.sendOn);
  sendOnError = options.sendOnError;
  if (sendOn || sendOnError) {
    sendTo = options.sendTo || (socketOptions.secure ? 'https' : 'http') + '://' + socketOptions.hostname + ':' + socketOptions.port;
    instanceId = options.id;
  }
  if (sendOnError === 1) (0, _catchErrors2.default)(sendError);

  if (options.actionCreators) actionCreators = function actionCreators() {
    return (0, _remotedevUtils.getActionsArray)(options.actionCreators);
  };
  stateSanitizer = options.stateSanitizer;
  actionSanitizer = options.actionSanitizer;
}

function login() {
  socket.emit('login', 'master', function (err, channelName) {
    if (err) {
      console.log(err);return;
    }
    channel = channelName;
    socket.subscribe(channelName).watch(handleMessages);
    socket.on(channelName, handleMessages);
  });
  started = true;
  relay('START');
}

function stop(keepConnected) {
  started = false;
  isMonitored = false;
  if (!socket) return;
  socket.destroyChannel(channel);
  if (keepConnected) {
    socket.off(channel, handleMessages);
  } else {
    socket.off();
    socket.disconnect();
  }
}

function start() {
  if (started || socket && socket.getState() === socket.CONNECTING) return;

  socket = _socketclusterClient2.default.connect(socketOptions);

  socket.on('error', function (err) {
    errorCounts[err.name] = errorCounts.hasOwnProperty(err.name) ? errorCounts[err.name] + 1 : 1;

    if (suppressConnectErrors) {
      if (errorCounts[err.name] === 1) {
        console.log('remote-redux-devtools: Socket connection errors are being suppressed. ' + '\n' + 'This can be disabled by setting suppressConnectErrors to \'false\'.');
        console.log(err);
      }
    } else {
      console.log(err);
    }
  });
  socket.on('connect', function () {
    console.log('connected to remotedev-server');
    errorCounts = {};
    login();
  });
  socket.on('disconnect', function () {
    stop(true);
  });
}

function checkForReducerErrors() {
  var liftedState = arguments.length <= 0 || arguments[0] === undefined ? store.liftedStore.getState() : arguments[0];

  if (liftedState.computedStates[liftedState.currentStateIndex].error) {
    if (started) relay('STATE', (0, _filters.filterStagedActions)(liftedState, filters));else send();
    return true;
  }
  return false;
}

function monitorReducer() {
  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  var action = arguments[1];

  lastAction = action.type;
  if (!started && sendOnError === 2 && store.liftedStore) async(checkForReducerErrors);else if (action.action) {
    if (startOn && !started && startOn.indexOf(action.action.type) !== -1) async(start);else if (stopOn && started && stopOn.indexOf(action.action.type) !== -1) async(stop);else if (sendOn && !started && sendOn.indexOf(action.action.type) !== -1) async(send);
  }
  return state;
}

function handleChange(state, liftedState, maxAge) {
  if (checkForReducerErrors(liftedState)) return;

  if (lastAction === 'PERFORM_ACTION') {
    var nextActionId = liftedState.nextActionId;
    var liftedAction = liftedState.actionsById[nextActionId - 1];
    if ((0, _filters.isFiltered)(liftedAction.action, filters)) return;
    relay('ACTION', state, liftedAction, nextActionId);
    if (!isExcess && maxAge) isExcess = liftedState.stagedActionIds.length >= maxAge;
  } else {
    if (lastAction === 'JUMP_TO_STATE') return;
    if (lastAction === 'PAUSE_RECORDING') {
      paused = liftedState.isPaused;
    } else if (lastAction === 'LOCK_CHANGES') {
      locked = liftedState.isLocked;
    }
    if (paused || locked) {
      if (lastAction) lastAction = undefined;else return;
    }
    relay('STATE', (0, _filters.filterStagedActions)(liftedState, filters));
  }
}

function devToolsEnhancer() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  init(_extends({}, options, {
    hostname: (0, _rnHostDetect2.default)(options.hostname || 'localhost')
  }));
  var realtime = typeof options.realtime === 'undefined' ? process.env.NODE_ENV === 'development' : options.realtime;
  if (!realtime && !(startOn || sendOn || sendOnError)) return function (f) {
    return f;
  };

  var maxAge = options.maxAge || 30;
  return function (next) {
    return function (reducer, initialState) {
      store = (0, _configureStore2.default)(next, monitorReducer, {
        maxAge: maxAge,
        shouldCatchErrors: !!sendOnError,
        shouldHotReload: options.shouldHotReload,
        shouldRecordChanges: options.shouldRecordChanges,
        shouldStartLocked: options.shouldStartLocked,
        pauseActionType: options.pauseActionType || '@@PAUSED'
      })(reducer, initialState);

      if (realtime) start();
      store.subscribe(function () {
        if (isMonitored) handleChange(store.getState(), store.liftedStore.getState(), maxAge);
      });
      return store;
    };
  };
}

function preEnhancer(createStore) {
  return function (reducer, preloadedState, enhancer) {
    store = createStore(reducer, preloadedState, enhancer);
    return _extends({}, store, {
      dispatch: function dispatch(action) {
        return locked ? action : store.dispatch(action);
      }
    });
  };
}

devToolsEnhancer.updateStore = function (newStore) {
  console.warn('devTools.updateStore is deprecated use composeWithDevTools instead: ' + 'https://github.com/zalmoxisus/remote-redux-devtools#use-devtools-compose-helper');
  store = newStore;
};

var compose = function compose(options) {
  return function () {
    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    return function () {
      return [preEnhancer].concat(funcs).reduceRight(function (composed, f) {
        return f(composed);
      }, devToolsEnhancer(options).apply(undefined, arguments));
    };
  };
};

function composeWithDevTools() {
  if (arguments.length === 0) {
    return devToolsEnhancer();
  }
  if (arguments.length === 1 && _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {
    return compose(arguments.length <= 0 ? undefined : arguments[0]);
  }
  return compose({}).apply(undefined, arguments);
}
}, 540, null, "remote-redux-devtools/lib/devTools.js");
__d(/* jsan/index.js */function(global, require, module, exports) {module.exports = require(542    ); // 542 = ./lib
}, 541, null, "jsan/index.js");
__d(/* jsan/lib/index.js */function(global, require, module, exports) {var cycle = require(543      ); // 543 = ./cycle

exports.stringify = function stringify(value, replacer, space, _options) {

  if (arguments.length < 4) {
    try {
      if (arguments.length === 1) {
        return JSON.stringify(value);
      } else {
        return JSON.stringify.apply(JSON, arguments);
      }
    } catch (e) {}
  }

  var options = _options || false;
  if (typeof options === 'boolean') {
    options = {
      'date': options,
      'function': options,
      'regex': options,
      'undefined': options,
      'error': options,
      'symbol': options,
      'map': options,
      'set': options,
      'nan': options,
      'infinity': options
    };
  }

  var decycled = cycle.decycle(value, options, replacer);
  if (arguments.length === 1) {
    return JSON.stringify(decycled);
  } else {
    return JSON.stringify(decycled, replacer, space);
  }
};

exports.parse = function parse(text, reviver) {
  var needsRetrocycle = /"\$jsan"/.test(text);
  var parsed;
  if (arguments.length === 1) {
    parsed = JSON.parse(text);
  } else {
    parsed = JSON.parse(text, reviver);
  }
  if (needsRetrocycle) {
    parsed = cycle.retrocycle(parsed);
  }
  return parsed;
};
}, 542, null, "jsan/lib/index.js");
__d(/* jsan/lib/cycle.js */function(global, require, module, exports) {var pathGetter = require(544            ); // 544 = ./path-getter
var utils = require(545      ); // 545 = ./utils

var WMap = typeof WeakMap !== 'undefined' ? WeakMap : function () {
  var keys = [];
  var values = [];
  return {
    set: function set(key, value) {
      keys.push(key);
      values.push(value);
    },
    get: function get(key) {
      for (var i = 0; i < keys.length; i++) {
        if (keys[i] === key) {
          return values[i];
        }
      }
    }
  };
};

exports.decycle = function decycle(object, options, replacer) {
  'use strict';

  var map = new WMap();

  var hasCircular = Object.prototype.hasOwnProperty.call(options, 'circular');

  return function derez(_value, path, key) {

    var i, name, nu;

    var value = replacer ? replacer(key || '', _value) : _value;

    if (options.date && value instanceof Date) {
      return { $jsan: 'd' + value.getTime() };
    }
    if (options.regex && value instanceof RegExp) {
      return { $jsan: 'r' + utils.getRegexFlags(value) + ',' + value.source };
    }
    if (options['function'] && typeof value === 'function') {
      return { $jsan: 'f' + utils.stringifyFunction(value, options['function']) };
    }
    if (options['nan'] && typeof value === 'number' && isNaN(value)) {
      return { $jsan: 'n' };
    }
    if (options['infinity']) {
      if (Number.POSITIVE_INFINITY === value) return { $jsan: 'i' };
      if (Number.NEGATIVE_INFINITY === value) return { $jsan: 'y' };
    }
    if (options['undefined'] && value === undefined) {
      return { $jsan: 'u' };
    }
    if (options['error'] && value instanceof Error) {
      return { $jsan: 'e' + value.message };
    }
    if (options['symbol'] && typeof value === 'symbol') {
      var symbolKey = (typeof Symbol === 'function' ? Symbol.keyFor : '@@keyFor')(value);
      if (symbolKey !== undefined) {
        return { $jsan: 'g' + symbolKey };
      }

      return { $jsan: 's' + value.toString().slice(7, -1) };
    }

    if (options['map'] && typeof Map === 'function' && value instanceof Map && typeof Array.from === 'function') {
      return { $jsan: 'm' + JSON.stringify(decycle(Array.from(value), options, replacer)) };
    }

    if (options['set'] && typeof Set === 'function' && value instanceof Set && typeof Array.from === 'function') {
      return { $jsan: 'l' + JSON.stringify(decycle(Array.from(value), options, replacer)) };
    }

    if (value && typeof value.toJSON === 'function') {
      value = value.toJSON(key);
    }

    if (typeof value === 'object' && value !== null && !(value instanceof Boolean) && !(value instanceof Date) && !(value instanceof Number) && !(value instanceof RegExp) && !(value instanceof String) && !(typeof value === 'symbol') && !(value instanceof Error)) {

      if (typeof value === 'object' && value !== null) {
        var foundPath = map.get(value);
        if (foundPath) {
          if (hasCircular && path.indexOf(foundPath) === 0) {
            return typeof options.circular === 'function' ? options.circular(value, path, foundPath) : options.circular;
          }
          return { $jsan: foundPath };
        }
        map.set(value, path);
      }

      if (Object.prototype.toString.apply(value) === '[object Array]') {
        nu = [];
        for (i = 0; i < value.length; i += 1) {
          nu[i] = derez(value[i], path + '[' + i + ']', i);
        }
      } else {

        nu = {};
        for (name in value) {
          if (Object.prototype.hasOwnProperty.call(value, name)) {
            var nextPath = /^\w+$/.test(name) ? '.' + name : '[' + JSON.stringify(name) + ']';
            nu[name] = name === '$jsan' ? [derez(value[name], path + nextPath)] : derez(value[name], path + nextPath, name);
          }
        }
      }
      return nu;
    }
    return value;
  }(object, '$');
};

exports.retrocycle = function retrocycle($) {
  'use strict';

  return function rez(value) {

    var i, item, name, path;

    if (value && typeof value === 'object') {
      if (Object.prototype.toString.apply(value) === '[object Array]') {
        for (i = 0; i < value.length; i += 1) {
          item = value[i];
          if (item && typeof item === 'object') {
            if (item.$jsan) {
              value[i] = utils.restore(item.$jsan, $);
            } else {
              rez(item);
            }
          }
        }
      } else {
        for (name in value) {
          if (typeof value[name] === 'string' && name === '$jsan') {
            return utils.restore(value.$jsan, $);
            break;
          } else {
            if (name === '$jsan') {
              value[name] = value[name][0];
            }
            if (typeof value[name] === 'object') {
              item = value[name];
              if (item && typeof item === 'object') {
                if (item.$jsan) {
                  value[name] = utils.restore(item.$jsan, $);
                } else {
                  rez(item);
                }
              }
            }
          }
        }
      }
    }
    return value;
  }($);
};
}, 543, null, "jsan/lib/cycle.js");
__d(/* jsan/lib/path-getter.js */function(global, require, module, exports) {module.exports = pathGetter;

function pathGetter(obj, path) {
  if (path !== '$') {
    var paths = getPaths(path);
    for (var i = 0; i < paths.length; i++) {
      path = paths[i].toString().replace(/\\"/g, '"');
      if (typeof obj[path] === 'undefined' && i !== paths.length - 1) continue;
      obj = obj[path];
    }
  }
  return obj;
}

function getPaths(pathString) {
  var regex = /(?:\.(\w+))|(?:\[(\d+)\])|(?:\["((?:[^\\"]|\\.)*)"\])/g;
  var matches = [];
  var match;
  while (match = regex.exec(pathString)) {
    matches.push(match[1] || match[2] || match[3]);
  }
  return matches;
}
}, 544, null, "jsan/lib/path-getter.js");
__d(/* jsan/lib/utils.js */function(global, require, module, exports) {var pathGetter = require(544            ); // 544 = ./path-getter
var jsan = require(542 ); // 542 = ./

exports.getRegexFlags = function getRegexFlags(regex) {
  var flags = '';
  if (regex.ignoreCase) flags += 'i';
  if (regex.global) flags += 'g';
  if (regex.multiline) flags += 'm';
  return flags;
};

exports.stringifyFunction = function stringifyFunction(fn, customToString) {
  if (typeof customToString === 'function') {
    return customToString(fn);
  }
  var str = fn.toString();
  var match = str.match(/^[^{]*{|^[^=]*=>/);
  var start = match ? match[0] : '<function> ';
  var end = str[str.length - 1] === '}' ? '}' : '';
  return start.replace(/\r\n|\n/g, ' ').replace(/\s+/g, ' ') + ' /* ... */ ' + end;
};

exports.restore = function restore(obj, root) {
  var type = obj[0];
  var rest = obj.slice(1);
  switch (type) {
    case '$':
      return pathGetter(root, obj);
    case 'r':
      var comma = rest.indexOf(',');
      var flags = rest.slice(0, comma);
      var source = rest.slice(comma + 1);
      return RegExp(source, flags);
    case 'd':
      return new Date(+rest);
    case 'f':
      var fn = function fn() {
        throw new Error("can't run jsan parsed function");
      };
      fn.toString = function () {
        return rest;
      };
      return fn;
    case 'u':
      return undefined;
    case 'e':
      var error = new Error(rest);
      error.stack = 'Stack is unavailable for jsan parsed errors';
      return error;
    case 's':
      return Symbol(rest);
    case 'g':
      return (typeof Symbol === 'function' ? Symbol.for : '@@for')(rest);
    case 'm':
      return new Map(jsan.parse(rest));
    case 'l':
      return new Set(jsan.parse(rest));
    case 'n':
      return NaN;
    case 'i':
      return Infinity;
    case 'y':
      return -Infinity;
    default:
      console.warn('unknown type', obj);
      return obj;
  }
};
}, 545, null, "jsan/lib/utils.js");
__d(/* socketcluster-client/index.js */function(global, require, module, exports) {var SCSocket = require(547             ); // 547 = ./lib/scsocket
var SCSocketCreator = require(566                    ); // 566 = ./lib/scsocketcreator

module.exports.SCSocketCreator = SCSocketCreator;
module.exports.SCSocket = SCSocket;

module.exports.SCEmitter = require(548         ).SCEmitter; // 548 = sc-emitter

module.exports.connect = function (options) {
  return SCSocketCreator.connect(options);
};

module.exports.destroy = function (options) {
  return SCSocketCreator.destroy(options);
};

module.exports.connections = SCSocketCreator.connections;

module.exports.version = '5.5.2';
}, 546, null, "socketcluster-client/index.js");
__d(/* socketcluster-client/lib/scsocket.js */function(global, require, module, exports) {var SCEmitter = require(548         ).SCEmitter; // 548 = sc-emitter
var SCChannel = require(551         ).SCChannel; // 551 = sc-channel
var Response = require(552         ).Response; // 552 = ./response
var AuthEngine = require(555     ).AuthEngine; // 555 = ./auth
var formatter = require(556           ); // 556 = sc-formatter
var SCTransport = require(557            ).SCTransport; // 557 = ./sctransport
var querystring = require(558          ); // 558 = querystring
var LinkedList = require(562          ); // 562 = linked-list
var base64 = require(564      ); // 564 = base-64
var clone = require(565    ); // 565 = clone

var scErrors = require(553        ); // 553 = sc-errors
var InvalidArgumentsError = scErrors.InvalidArgumentsError;
var InvalidMessageError = scErrors.InvalidMessageError;
var SocketProtocolError = scErrors.SocketProtocolError;
var TimeoutError = scErrors.TimeoutError;

var isBrowser = typeof window != 'undefined';

var SCSocket = function SCSocket(opts) {
  var self = this;

  SCEmitter.call(this);

  this.id = null;
  this.state = this.CLOSED;
  this.authState = this.PENDING;
  this.signedAuthToken = null;
  this.authToken = null;
  this.pendingReconnect = false;
  this.pendingReconnectTimeout = null;
  this.pendingConnectCallback = false;

  this.connectTimeout = opts.connectTimeout;
  this.ackTimeout = opts.ackTimeout;
  this.channelPrefix = opts.channelPrefix || null;
  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;

  this.pingTimeout = this.ackTimeout;

  var maxTimeout = Math.pow(2, 31) - 1;

  var verifyDuration = function verifyDuration(propertyName) {
    if (self[propertyName] > maxTimeout) {
      throw new InvalidArgumentsError('The ' + propertyName + ' value provided exceeded the maximum amount allowed');
    }
  };

  verifyDuration('connectTimeout');
  verifyDuration('ackTimeout');
  verifyDuration('pingTimeout');

  this._localEvents = {
    'connect': 1,
    'connectAbort': 1,
    'disconnect': 1,
    'message': 1,
    'error': 1,
    'raw': 1,
    'fail': 1,
    'kickOut': 1,
    'subscribe': 1,
    'unsubscribe': 1,
    'subscribeStateChange': 1,
    'authStateChange': 1,
    'authenticate': 1,
    'deauthenticate': 1,
    'removeAuthToken': 1,
    'subscribeRequest': 1
  };

  this.connectAttempts = 0;

  this._emitBuffer = new LinkedList();
  this._channels = {};

  this.options = opts;

  this._cid = 1;

  this.options.callIdGenerator = function () {
    return self._callIdGenerator();
  };

  if (this.options.autoReconnect) {
    if (this.options.autoReconnectOptions == null) {
      this.options.autoReconnectOptions = {};
    }

    var reconnectOptions = this.options.autoReconnectOptions;
    if (reconnectOptions.initialDelay == null) {
      reconnectOptions.initialDelay = 10000;
    }
    if (reconnectOptions.randomness == null) {
      reconnectOptions.randomness = 10000;
    }
    if (reconnectOptions.multiplier == null) {
      reconnectOptions.multiplier = 1.5;
    }
    if (reconnectOptions.maxDelay == null) {
      reconnectOptions.maxDelay = 60000;
    }
  }

  if (this.options.subscriptionRetryOptions == null) {
    this.options.subscriptionRetryOptions = {};
  }

  if (this.options.authEngine) {
    this.auth = this.options.authEngine;
  } else {
    this.auth = new AuthEngine();
  }

  if (this.options.codecEngine) {
    this.codec = this.options.codecEngine;
  } else {
    this.codec = formatter;
  }

  this.options.path = this.options.path.replace(/\/$/, '') + '/';

  this.options.query = opts.query || {};
  if (typeof this.options.query == 'string') {
    this.options.query = querystring.parse(this.options.query);
  }

  if (this.options.autoConnect) {
    this.connect();
  }

  this._channelEmitter = new SCEmitter();

  if (isBrowser && this.disconnectOnUnload) {
    var unloadHandler = function unloadHandler() {
      self.disconnect();
    };

    if (global.attachEvent) {
      global.attachEvent('onunload', unloadHandler);
    } else if (global.addEventListener) {
      global.addEventListener('beforeunload', unloadHandler, false);
    }
  }
};

SCSocket.prototype = Object.create(SCEmitter.prototype);

SCSocket.CONNECTING = SCSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;
SCSocket.OPEN = SCSocket.prototype.OPEN = SCTransport.prototype.OPEN;
SCSocket.CLOSED = SCSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;

SCSocket.AUTHENTICATED = SCSocket.prototype.AUTHENTICATED = 'authenticated';
SCSocket.UNAUTHENTICATED = SCSocket.prototype.UNAUTHENTICATED = 'unauthenticated';
SCSocket.PENDING = SCSocket.prototype.PENDING = 'pending';

SCSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;
SCSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;

SCSocket.prototype._privateEventHandlerMap = {
  '#publish': function publish(data) {
    var undecoratedChannelName = this._undecorateChannelName(data.channel);
    var isSubscribed = this.isSubscribed(undecoratedChannelName, true);

    if (isSubscribed) {
      this._channelEmitter.emit(undecoratedChannelName, data.data);
    }
  },
  '#kickOut': function kickOut(data) {
    var undecoratedChannelName = this._undecorateChannelName(data.channel);
    var channel = this._channels[undecoratedChannelName];
    if (channel) {
      SCEmitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);
      channel.emit('kickOut', data.message, undecoratedChannelName);
      this._triggerChannelUnsubscribe(channel);
    }
  },
  '#setAuthToken': function setAuthToken(data, response) {
    var self = this;

    if (data) {
      var triggerAuthenticate = function triggerAuthenticate(err) {
        if (err) {
          response.error(err);
          self._onSCError(err);
        } else {
          self._changeToAuthenticatedState(data.token);
          response.end();
        }
      };

      this.auth.saveToken(this.options.authTokenName, data.token, {}, triggerAuthenticate);
    } else {
      response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));
    }
  },
  '#removeAuthToken': function removeAuthToken(data, response) {
    var self = this;

    this.auth.removeToken(this.options.authTokenName, function (err, oldToken) {
      if (err) {
        response.error(err);
        self._onSCError(err);
      } else {
        SCEmitter.prototype.emit.call(self, 'removeAuthToken', oldToken);
        self._changeToUnauthenticatedState();
        response.end();
      }
    });
  },
  '#disconnect': function disconnect(data) {
    this.transport.close(data.code, data.data);
  }
};

SCSocket.prototype._callIdGenerator = function () {
  return this._cid++;
};

SCSocket.prototype.getState = function () {
  return this.state;
};

SCSocket.prototype.getBytesReceived = function () {
  return this.transport.getBytesReceived();
};

SCSocket.prototype.deauthenticate = function (callback) {
  var self = this;

  this.auth.removeToken(this.options.authTokenName, function (err, oldToken) {
    if (err) {
      self._onSCError(err);
    } else {
      self.emit('#removeAuthToken');
      SCEmitter.prototype.emit.call(self, 'removeAuthToken', oldToken);
      self._changeToUnauthenticatedState();
    }
    callback && callback(err);
  });
};

SCSocket.prototype.connect = SCSocket.prototype.open = function () {
  var self = this;

  if (this.state == this.CLOSED) {
    this.pendingReconnect = false;
    this.pendingReconnectTimeout = null;
    clearTimeout(this._reconnectTimeoutRef);

    this.state = this.CONNECTING;
    SCEmitter.prototype.emit.call(this, 'connecting');

    this._changeToPendingAuthState();

    if (this.transport) {
      this.transport.off();
    }

    this.transport = new SCTransport(this.auth, this.codec, this.options);

    this.transport.on('open', function (status) {
      self.state = self.OPEN;
      self._onSCOpen(status);
    });

    this.transport.on('error', function (err) {
      self._onSCError(err);
    });

    this.transport.on('close', function (code, data) {
      self.state = self.CLOSED;
      self._onSCClose(code, data);
    });

    this.transport.on('openAbort', function (code, data) {
      self.state = self.CLOSED;
      self._onSCClose(code, data, true);
    });

    this.transport.on('event', function (event, data, res) {
      self._onSCEvent(event, data, res);
    });
  }
};

SCSocket.prototype.reconnect = function () {
  this.disconnect();
  this.connect();
};

SCSocket.prototype.disconnect = function (code, data) {
  code = code || 1000;

  if (typeof code != 'number') {
    throw new InvalidArgumentsError('If specified, the code argument must be a number');
  }

  if (this.state == this.OPEN || this.state == this.CONNECTING) {
    this.transport.close(code, data);
  } else {
    this.pendingReconnect = false;
    this.pendingReconnectTimeout = null;
    clearTimeout(this._reconnectTimeoutRef);
  }
};

SCSocket.prototype._changeToPendingAuthState = function () {
  if (this.authState != this.PENDING) {
    var oldState = this.authState;
    this.authState = this.PENDING;
    var stateChangeData = {
      oldState: oldState,
      newState: this.authState
    };
    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);
  }
};

SCSocket.prototype._changeToUnauthenticatedState = function () {
  if (this.authState != this.UNAUTHENTICATED) {
    var oldState = this.authState;
    this.authState = this.UNAUTHENTICATED;
    this.signedAuthToken = null;
    this.authToken = null;

    var stateChangeData = {
      oldState: oldState,
      newState: this.authState
    };
    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);
    if (oldState == this.AUTHENTICATED) {
      SCEmitter.prototype.emit.call(this, 'deauthenticate');
    }
    SCEmitter.prototype.emit.call(this, 'authTokenChange', this.signedAuthToken);
  }
};

SCSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {
  this.signedAuthToken = signedAuthToken;
  this.authToken = this._extractAuthTokenData(signedAuthToken);

  if (this.authState != this.AUTHENTICATED) {
    var oldState = this.authState;
    this.authState = this.AUTHENTICATED;
    var stateChangeData = {
      oldState: oldState,
      newState: this.authState,
      signedAuthToken: signedAuthToken,
      authToken: this.authToken
    };
    this.processPendingSubscriptions();

    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);
    SCEmitter.prototype.emit.call(this, 'authenticate', signedAuthToken);
  }
  SCEmitter.prototype.emit.call(this, 'authTokenChange', signedAuthToken);
};

SCSocket.prototype.decodeBase64 = function (encodedString) {
  var decodedString;
  if (typeof Buffer == 'undefined') {
    if (global.atob) {
      decodedString = global.atob(encodedString);
    } else {
      decodedString = base64.decode(encodedString);
    }
  } else {
    var buffer = new Buffer(encodedString, 'base64');
    decodedString = buffer.toString('utf8');
  }
  return decodedString;
};

SCSocket.prototype.encodeBase64 = function (decodedString) {
  var encodedString;
  if (typeof Buffer == 'undefined') {
    if (global.btoa) {
      encodedString = global.btoa(decodedString);
    } else {
      encodedString = base64.encode(decodedString);
    }
  } else {
    var buffer = new Buffer(decodedString, 'utf8');
    encodedString = buffer.toString('base64');
  }
  return encodedString;
};

SCSocket.prototype._extractAuthTokenData = function (signedAuthToken) {
  var tokenParts = (signedAuthToken || '').split('.');
  var encodedTokenData = tokenParts[1];
  if (encodedTokenData != null) {
    var tokenData = encodedTokenData;
    try {
      tokenData = this.decodeBase64(tokenData);
      return JSON.parse(tokenData);
    } catch (e) {
      return tokenData;
    }
  }
  return null;
};

SCSocket.prototype.getAuthToken = function () {
  return this.authToken;
};

SCSocket.prototype.getSignedAuthToken = function () {
  return this.signedAuthToken;
};

SCSocket.prototype.authenticate = function (signedAuthToken, callback) {
  var self = this;

  this._changeToPendingAuthState();

  this.emit('#authenticate', signedAuthToken, function (err, authStatus) {
    if (authStatus && authStatus.authError) {
      authStatus.authError = scErrors.hydrateError(authStatus.authError);
    }
    if (err) {
      self._changeToUnauthenticatedState();
      callback && callback(err, authStatus);
    } else {
      self.auth.saveToken(self.options.authTokenName, signedAuthToken, {}, function (err) {
        callback && callback(err, authStatus);
        if (err) {
          self._changeToUnauthenticatedState();
          self._onSCError(err);
        } else {
          if (authStatus.isAuthenticated) {
            self._changeToAuthenticatedState(signedAuthToken);
          } else {
            self._changeToUnauthenticatedState();
          }
        }
      });
    }
  });
};

SCSocket.prototype._tryReconnect = function (initialDelay) {
  var self = this;

  var exponent = this.connectAttempts++;
  var reconnectOptions = this.options.autoReconnectOptions;
  var timeout;

  if (initialDelay == null || exponent > 0) {
    var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());

    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));
  } else {
    timeout = initialDelay;
  }

  if (timeout > reconnectOptions.maxDelay) {
    timeout = reconnectOptions.maxDelay;
  }

  clearTimeout(this._reconnectTimeoutRef);

  this.pendingReconnect = true;
  this.pendingReconnectTimeout = timeout;
  this._reconnectTimeoutRef = setTimeout(function () {
    self.connect();
  }, timeout);
};

SCSocket.prototype._onSCOpen = function (status) {
  var self = this;

  if (status) {
    this.id = status.id;
    this.pingTimeout = status.pingTimeout;
    this.transport.pingTimeout = this.pingTimeout;
    if (status.isAuthenticated) {
      this._changeToAuthenticatedState(status.authToken);
    } else {
      this._changeToUnauthenticatedState();
    }
  } else {
    this._changeToUnauthenticatedState();
  }

  this.connectAttempts = 0;
  if (this.options.autoProcessSubscriptions) {
    this.processPendingSubscriptions();
  } else {
    this.pendingConnectCallback = true;
  }

  SCEmitter.prototype.emit.call(this, 'connect', status, function () {
    self.processPendingSubscriptions();
  });

  this._flushEmitBuffer();
};

SCSocket.prototype._onSCError = function (err) {
  var self = this;

  setTimeout(function () {
    if (self.listeners('error').length < 1) {
      throw err;
    } else {
      SCEmitter.prototype.emit.call(self, 'error', err);
    }
  }, 0);
};

SCSocket.prototype._suspendSubscriptions = function () {
  var channel, newState;
  for (var channelName in this._channels) {
    if (this._channels.hasOwnProperty(channelName)) {
      channel = this._channels[channelName];
      if (channel.state == channel.SUBSCRIBED || channel.state == channel.PENDING) {

        newState = channel.PENDING;
      } else {
        newState = channel.UNSUBSCRIBED;
      }

      this._triggerChannelUnsubscribe(channel, newState);
    }
  }
};

SCSocket.prototype._onSCClose = function (code, data, openAbort) {
  var self = this;

  this.id = null;

  if (this.transport) {
    this.transport.off();
  }
  this.pendingReconnect = false;
  this.pendingReconnectTimeout = null;
  clearTimeout(this._reconnectTimeoutRef);

  this._changeToPendingAuthState();
  this._suspendSubscriptions();

  if (this.options.autoReconnect) {
    if (code == 4000 || code == 4001 || code == 1005) {
      this._tryReconnect(0);
    } else if (code != 1000 && code < 4500) {
      this._tryReconnect();
    }
  }

  if (openAbort) {
    SCEmitter.prototype.emit.call(self, 'connectAbort', code, data);
  } else {
    SCEmitter.prototype.emit.call(self, 'disconnect', code, data);
  }

  if (!SCSocket.ignoreStatuses[code]) {
    var failureMessage;
    if (data) {
      failureMessage = 'Socket connection failed: ' + data;
    } else {
      failureMessage = 'Socket connection failed for unknown reasons';
    }
    var err = new SocketProtocolError(SCSocket.errorStatuses[code] || failureMessage, code);
    this._onSCError(err);
  }
};

SCSocket.prototype._onSCEvent = function (event, data, res) {
  var handler = this._privateEventHandlerMap[event];
  if (handler) {
    handler.call(this, data, res);
  } else {
    SCEmitter.prototype.emit.call(this, event, data, function () {
      res && res.callback.apply(res, arguments);
    });
  }
};

SCSocket.prototype.decode = function (message) {
  return this.transport.decode(message);
};

SCSocket.prototype.encode = function (object) {
  return this.transport.encode(object);
};

SCSocket.prototype._flushEmitBuffer = function () {
  var currentNode = this._emitBuffer.head;
  var nextNode;

  while (currentNode) {
    nextNode = currentNode.next;
    var eventObject = currentNode.data;
    currentNode.detach();
    this.transport.emitObject(eventObject);
    currentNode = nextNode;
  }
};

SCSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {
  if (eventNode) {
    eventNode.detach();
  }
  var callback = eventObject.callback;
  if (callback) {
    delete eventObject.callback;
    var error = new TimeoutError("Event response for '" + eventObject.event + "' timed out");
    callback.call(eventObject, error, eventObject);
  }
};

SCSocket.prototype._emit = function (event, data, callback) {
  var self = this;

  if (this.state == this.CLOSED) {
    this.connect();
  }
  var eventObject = {
    event: event,
    data: data,
    callback: callback
  };

  var eventNode = new LinkedList.Item();

  if (this.options.cloneData) {
    eventNode.data = clone(eventObject);
  } else {
    eventNode.data = eventObject;
  }

  eventObject.timeout = setTimeout(function () {
    self._handleEventAckTimeout(eventObject, eventNode);
  }, this.ackTimeout);

  this._emitBuffer.append(eventNode);

  if (this.state == this.OPEN) {
    this._flushEmitBuffer();
  }
};

SCSocket.prototype.send = function (data) {
  this.transport.send(data);
};

SCSocket.prototype.emit = function (event, data, callback) {
  if (this._localEvents[event] == null) {
    this._emit(event, data, callback);
  } else {
    SCEmitter.prototype.emit.call(this, event, data);
  }
};

SCSocket.prototype.publish = function (channelName, data, callback) {
  var pubData = {
    channel: this._decorateChannelName(channelName),
    data: data
  };
  this.emit('#publish', pubData, callback);
};

SCSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {
  var channelName = channel.name;

  if (channel.state != channel.SUBSCRIBED) {
    var oldState = channel.state;
    channel.state = channel.SUBSCRIBED;

    var stateChangeData = {
      channel: channelName,
      oldState: oldState,
      newState: channel.state,
      subscriptionOptions: subscriptionOptions
    };
    channel.emit('subscribeStateChange', stateChangeData);
    channel.emit('subscribe', channelName, subscriptionOptions);
    SCEmitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);
    SCEmitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);
  }
};

SCSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {
  var channelName = channel.name;
  var meetsAuthRequirements = !channel.waitForAuth || this.authState == this.AUTHENTICATED;

  if (channel.state != channel.UNSUBSCRIBED && meetsAuthRequirements) {
    channel.state = channel.UNSUBSCRIBED;

    channel.emit('subscribeFail', err, channelName, subscriptionOptions);
    SCEmitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);
  }
};

SCSocket.prototype._cancelPendingSubscribeCallback = function (channel) {
  if (channel._pendingSubscriptionCid != null) {
    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);
    delete channel._pendingSubscriptionCid;
  }
};

SCSocket.prototype._decorateChannelName = function (channelName) {
  if (this.channelPrefix) {
    channelName = this.channelPrefix + channelName;
  }
  return channelName;
};

SCSocket.prototype._undecorateChannelName = function (decoratedChannelName) {
  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) == 0) {
    return decoratedChannelName.replace(this.channelPrefix, '');
  }
  return decoratedChannelName;
};

SCSocket.prototype._trySubscribe = function (channel) {
  var self = this;

  var meetsAuthRequirements = !channel.waitForAuth || this.authState == this.AUTHENTICATED;

  if (this.state == this.OPEN && !this.pendingConnectCallback && channel._pendingSubscriptionCid == null && meetsAuthRequirements) {

    var options = {
      noTimeout: true
    };

    var subscriptionOptions = {
      channel: this._decorateChannelName(channel.name)
    };
    if (channel.waitForAuth) {
      options.waitForAuth = true;
      subscriptionOptions.waitForAuth = options.waitForAuth;
    }
    if (channel.data) {
      subscriptionOptions.data = channel.data;
    }

    channel._pendingSubscriptionCid = this.transport.emit('#subscribe', subscriptionOptions, options, function (err) {
      delete channel._pendingSubscriptionCid;
      if (err) {
        self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);
      } else {
        self._triggerChannelSubscribe(channel, subscriptionOptions);
      }
    });
    SCEmitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);
  }
};

SCSocket.prototype.subscribe = function (channelName, options) {
  var channel = this._channels[channelName];

  if (!channel) {
    channel = new SCChannel(channelName, this, options);
    this._channels[channelName] = channel;
  } else if (options) {
    channel.setOptions(options);
  }

  if (channel.state == channel.UNSUBSCRIBED) {
    channel.state = channel.PENDING;
    this._trySubscribe(channel);
  }

  return channel;
};

SCSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {
  var channelName = channel.name;
  var oldState = channel.state;

  if (newState) {
    channel.state = newState;
  } else {
    channel.state = channel.UNSUBSCRIBED;
  }
  this._cancelPendingSubscribeCallback(channel);

  if (oldState == channel.SUBSCRIBED) {
    var stateChangeData = {
      channel: channelName,
      oldState: oldState,
      newState: channel.state
    };
    channel.emit('subscribeStateChange', stateChangeData);
    channel.emit('unsubscribe', channelName);
    SCEmitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);
    SCEmitter.prototype.emit.call(this, 'unsubscribe', channelName);
  }
};

SCSocket.prototype._tryUnsubscribe = function (channel) {
  var self = this;

  if (this.state == this.OPEN) {
    var options = {
      noTimeout: true
    };

    this._cancelPendingSubscribeCallback(channel);

    var decoratedChannelName = this._decorateChannelName(channel.name);
    this.transport.emit('#unsubscribe', decoratedChannelName, options);
  }
};

SCSocket.prototype.unsubscribe = function (channelName) {

  var channel = this._channels[channelName];

  if (channel) {
    if (channel.state != channel.UNSUBSCRIBED) {

      this._triggerChannelUnsubscribe(channel);
      this._tryUnsubscribe(channel);
    }
  }
};

SCSocket.prototype.channel = function (channelName, options) {
  var currentChannel = this._channels[channelName];

  if (!currentChannel) {
    currentChannel = new SCChannel(channelName, this, options);
    this._channels[channelName] = currentChannel;
  }
  return currentChannel;
};

SCSocket.prototype.destroyChannel = function (channelName) {
  var channel = this._channels[channelName];
  channel.unwatch();
  channel.unsubscribe();
  delete this._channels[channelName];
};

SCSocket.prototype.subscriptions = function (includePending) {
  var subs = [];
  var channel, includeChannel;
  for (var channelName in this._channels) {
    if (this._channels.hasOwnProperty(channelName)) {
      channel = this._channels[channelName];

      if (includePending) {
        includeChannel = channel && (channel.state == channel.SUBSCRIBED || channel.state == channel.PENDING);
      } else {
        includeChannel = channel && channel.state == channel.SUBSCRIBED;
      }

      if (includeChannel) {
        subs.push(channelName);
      }
    }
  }
  return subs;
};

SCSocket.prototype.isSubscribed = function (channelName, includePending) {
  var channel = this._channels[channelName];
  if (includePending) {
    return !!channel && (channel.state == channel.SUBSCRIBED || channel.state == channel.PENDING);
  }
  return !!channel && channel.state == channel.SUBSCRIBED;
};

SCSocket.prototype.processPendingSubscriptions = function () {
  var self = this;

  this.pendingConnectCallback = false;

  for (var i in this._channels) {
    if (this._channels.hasOwnProperty(i)) {
      (function (channel) {
        if (channel.state == channel.PENDING) {
          self._trySubscribe(channel);
        }
      })(this._channels[i]);
    }
  }
};

SCSocket.prototype.watch = function (channelName, handler) {
  if (typeof handler != 'function') {
    throw new InvalidArgumentsError('No handler function was provided');
  }
  this._channelEmitter.on(channelName, handler);
};

SCSocket.prototype.unwatch = function (channelName, handler) {
  if (handler) {
    this._channelEmitter.removeListener(channelName, handler);
  } else {
    this._channelEmitter.removeAllListeners(channelName);
  }
};

SCSocket.prototype.watchers = function (channelName) {
  return this._channelEmitter.listeners(channelName);
};

module.exports = SCSocket;
}, 547, null, "socketcluster-client/lib/scsocket.js");
__d(/* sc-emitter/index.js */function(global, require, module, exports) {var Emitter = require(549                ); // 549 = component-emitter

if (!Object.create) {
  Object.create = require(550             ); // 550 = ./objectcreate
}

var SCEmitter = function SCEmitter() {
  Emitter.call(this);
};

SCEmitter.prototype = Object.create(Emitter.prototype);

SCEmitter.prototype.emit = function (event) {
  if (event == 'error') {
    var domainErrorArgs = ['__domainError'];
    if (arguments[1] !== undefined) {
      domainErrorArgs.push(arguments[1]);
    }

    Emitter.prototype.emit.apply(this, domainErrorArgs);

    if (this.domain) {

      var err = arguments[1];

      if (!err) {
        err = new Error('Uncaught, unspecified "error" event.');
      }
      err.domainEmitter = this;
      err.domain = this.domain;
      err.domainThrown = false;
      this.domain.emit('error', err);
    }
  }
  Emitter.prototype.emit.apply(this, arguments);
};

module.exports.SCEmitter = SCEmitter;
}, 548, null, "sc-emitter/index.js");
__d(/* component-emitter/index.js */function(global, require, module, exports) {

module.exports = Emitter;

function Emitter(obj) {
  if (obj) return mixin(obj);
};

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
  return this;
};

Emitter.prototype.once = function (event, fn) {
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
  this._callbacks = this._callbacks || {};

  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

Emitter.prototype.emit = function (event) {
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1),
      callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

Emitter.prototype.listeners = function (event) {
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

Emitter.prototype.hasListeners = function (event) {
  return !!this.listeners(event).length;
};
}, 549, null, "component-emitter/index.js");
__d(/* sc-emitter/objectcreate.js */function(global, require, module, exports) {module.exports.create = function () {
  function F() {};

  return function (o) {
    if (arguments.length != 1) {
      throw new Error('Object.create implementation only accepts one parameter.');
    }
    F.prototype = o;
    return new F();
  };
}();
}, 550, null, "sc-emitter/objectcreate.js");
__d(/* sc-channel/index.js */function(global, require, module, exports) {var SCEmitter = require(548         ).SCEmitter; // 548 = sc-emitter

var SCChannel = function SCChannel(name, client, options) {
  var self = this;

  SCEmitter.call(this);

  this.PENDING = 'pending';
  this.SUBSCRIBED = 'subscribed';
  this.UNSUBSCRIBED = 'unsubscribed';

  this.name = name;
  this.state = this.UNSUBSCRIBED;
  this.client = client;

  this.options = options || {};
  this.setOptions(this.options);
};

SCChannel.prototype = Object.create(SCEmitter.prototype);

SCChannel.prototype.setOptions = function (options) {
  if (!options) {
    options = {};
  }
  this.waitForAuth = options.waitForAuth || false;
  if (options.data !== undefined) {
    this.data = options.data;
  }
};

SCChannel.prototype.getState = function () {
  return this.state;
};

SCChannel.prototype.subscribe = function (options) {
  this.client.subscribe(this.name, options);
};

SCChannel.prototype.unsubscribe = function () {
  this.client.unsubscribe(this.name);
};

SCChannel.prototype.isSubscribed = function (includePending) {
  return this.client.isSubscribed(this.name, includePending);
};

SCChannel.prototype.publish = function (data, callback) {
  this.client.publish(this.name, data, callback);
};

SCChannel.prototype.watch = function (handler) {
  this.client.watch(this.name, handler);
};

SCChannel.prototype.unwatch = function (handler) {
  this.client.unwatch(this.name, handler);
};

SCChannel.prototype.watchers = function () {
  return this.client.watchers(this.name);
};

SCChannel.prototype.destroy = function () {
  this.client.destroyChannel(this.name);
};

module.exports.SCChannel = SCChannel;
}, 551, null, "sc-channel/index.js");
__d(/* socketcluster-client/lib/response.js */function(global, require, module, exports) {var scErrors = require(553        ); // 553 = sc-errors
var InvalidActionError = scErrors.InvalidActionError;

var Response = function Response(socket, id) {
  this.socket = socket;
  this.id = id;
  this.sent = false;
};

Response.prototype._respond = function (responseData) {
  if (this.sent) {
    throw new InvalidActionError('Response ' + this.id + ' has already been sent');
  } else {
    this.sent = true;
    this.socket.send(this.socket.encode(responseData));
  }
};

Response.prototype.end = function (data) {
  if (this.id) {
    var responseData = {
      rid: this.id
    };
    if (data !== undefined) {
      responseData.data = data;
    }
    this._respond(responseData);
  }
};

Response.prototype.error = function (error, data) {
  if (this.id) {
    var err = scErrors.dehydrateError(error);

    var responseData = {
      rid: this.id,
      error: err
    };
    if (data !== undefined) {
      responseData.data = data;
    }

    this._respond(responseData);
  }
};

Response.prototype.callback = function (error, data) {
  if (error) {
    this.error(error, data);
  } else {
    this.end(data);
  }
};

module.exports.Response = Response;
}, 552, null, "socketcluster-client/lib/response.js");
__d(/* sc-errors/index.js */function(global, require, module, exports) {var decycle = require(554        ); // 554 = ./decycle

var isStrict = function () {
  return !this;
}();

function AuthTokenExpiredError(message, expiry) {
  this.name = 'AuthTokenExpiredError';
  this.message = message;
  this.expiry = expiry;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
AuthTokenExpiredError.prototype = Object.create(Error.prototype);

function AuthTokenInvalidError(message) {
  this.name = 'AuthTokenInvalidError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
AuthTokenInvalidError.prototype = Object.create(Error.prototype);

function AuthTokenNotBeforeError(message, date) {
  this.name = 'AuthTokenNotBeforeError';
  this.message = message;
  this.date = date;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
AuthTokenNotBeforeError.prototype = Object.create(Error.prototype);

function AuthTokenError(message) {
  this.name = 'AuthTokenError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
AuthTokenError.prototype = Object.create(Error.prototype);

function SilentMiddlewareBlockedError(message, type) {
  this.name = 'SilentMiddlewareBlockedError';
  this.message = message;
  this.type = type;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
SilentMiddlewareBlockedError.prototype = Object.create(Error.prototype);

function InvalidActionError(message) {
  this.name = 'InvalidActionError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
InvalidActionError.prototype = Object.create(Error.prototype);

function InvalidArgumentsError(message) {
  this.name = 'InvalidArgumentsError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
InvalidArgumentsError.prototype = Object.create(Error.prototype);

function InvalidOptionsError(message) {
  this.name = 'InvalidOptionsError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
InvalidOptionsError.prototype = Object.create(Error.prototype);

function InvalidMessageError(message) {
  this.name = 'InvalidMessageError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
InvalidMessageError.prototype = Object.create(Error.prototype);

function SocketProtocolError(message, code) {
  this.name = 'SocketProtocolError';
  this.message = message;
  this.code = code;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
SocketProtocolError.prototype = Object.create(Error.prototype);

function ServerProtocolError(message) {
  this.name = 'ServerProtocolError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
ServerProtocolError.prototype = Object.create(Error.prototype);

function HTTPServerError(message) {
  this.name = 'HTTPServerError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
HTTPServerError.prototype = Object.create(Error.prototype);

function ResourceLimitError(message) {
  this.name = 'ResourceLimitError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
ResourceLimitError.prototype = Object.create(Error.prototype);

function TimeoutError(message) {
  this.name = 'TimeoutError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
TimeoutError.prototype = Object.create(Error.prototype);

function BadConnectionError(message, type) {
  this.name = 'BadConnectionError';
  this.message = message;
  this.type = type;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
BadConnectionError.prototype = Object.create(Error.prototype);

function BrokerError(message) {
  this.name = 'BrokerError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
BrokerError.prototype = Object.create(Error.prototype);

function ProcessExitError(message, code) {
  this.name = 'ProcessExitError';
  this.message = message;
  this.code = code;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
ProcessExitError.prototype = Object.create(Error.prototype);

function UnknownError(message) {
  this.name = 'UnknownError';
  this.message = message;
  if (Error.captureStackTrace && !isStrict) {
    Error.captureStackTrace(this, arguments.callee);
  } else {
    this.stack = new Error().stack;
  }
}
UnknownError.prototype = Object.create(Error.prototype);

module.exports = {
  AuthTokenExpiredError: AuthTokenExpiredError,
  AuthTokenInvalidError: AuthTokenInvalidError,
  AuthTokenNotBeforeError: AuthTokenNotBeforeError,
  AuthTokenError: AuthTokenError,
  SilentMiddlewareBlockedError: SilentMiddlewareBlockedError,
  InvalidActionError: InvalidActionError,
  InvalidArgumentsError: InvalidArgumentsError,
  InvalidOptionsError: InvalidOptionsError,
  InvalidMessageError: InvalidMessageError,
  SocketProtocolError: SocketProtocolError,
  ServerProtocolError: ServerProtocolError,
  HTTPServerError: HTTPServerError,
  ResourceLimitError: ResourceLimitError,
  TimeoutError: TimeoutError,
  BadConnectionError: BadConnectionError,
  BrokerError: BrokerError,
  ProcessExitError: ProcessExitError,
  UnknownError: UnknownError
};

module.exports.socketProtocolErrorStatuses = {
  1001: 'Socket was disconnected',
  1002: 'A WebSocket protocol error was encountered',
  1003: 'Server terminated socket because it received invalid data',
  1005: 'Socket closed without status code',
  1006: 'Socket hung up',
  1007: 'Message format was incorrect',
  1008: 'Encountered a policy violation',
  1009: 'Message was too big to process',
  1010: 'Client ended the connection because the server did not comply with extension requirements',
  1011: 'Server encountered an unexpected fatal condition',
  4000: 'Server ping timed out',
  4001: 'Client pong timed out',
  4002: 'Server failed to sign auth token',
  4003: 'Failed to complete handshake',
  4004: 'Client failed to save auth token',
  4005: 'Did not receive #handshake from client before timeout',
  4006: 'Failed to bind socket to message broker',
  4007: 'Client connection establishment timed out'
};

module.exports.socketProtocolIgnoreStatuses = {
  1000: 'Socket closed normally',
  1001: 'Socket hung up'
};

var unserializableErrorProperties = {
  domain: 1,
  domainEmitter: 1,
  domainThrown: 1
};

module.exports.dehydrateError = function (error, includeStackTrace) {
  var dehydratedError;

  if (error && typeof error == 'object') {
    dehydratedError = {
      message: error.message
    };
    if (includeStackTrace) {
      dehydratedError.stack = error.stack;
    }
    for (var i in error) {
      if (!unserializableErrorProperties[i]) {
        dehydratedError[i] = error[i];
      }
    }
  } else if (typeof error == 'function') {
    dehydratedError = '[function ' + (error.name || 'anonymous') + ']';
  } else {
    dehydratedError = error;
  }

  return decycle(dehydratedError);
};

module.exports.hydrateError = function (error) {
  var hydratedError = null;
  if (error != null) {
    if (typeof error == 'object') {
      hydratedError = new Error(error.message);
      for (var i in error) {
        if (error.hasOwnProperty(i)) {
          hydratedError[i] = error[i];
        }
      }
    } else {
      hydratedError = error;
    }
  }
  return hydratedError;
};

module.exports.decycle = decycle;
}, 553, null, "sc-errors/index.js");
__d(/* sc-errors/decycle.js */function(global, require, module, exports) {

module.exports = function decycle(object) {

    var objects = [],
        paths = [];

    return function derez(value, path) {

        var i, name, nu;

        if (typeof value === 'object' && value !== null && !(value instanceof Boolean) && !(value instanceof Date) && !(value instanceof Number) && !(value instanceof RegExp) && !(value instanceof String)) {

            for (i = 0; i < objects.length; i += 1) {
                if (objects[i] === value) {
                    return { $ref: paths[i] };
                }
            }

            objects.push(value);
            paths.push(path);

            if (Object.prototype.toString.apply(value) === '[object Array]') {
                nu = [];
                for (i = 0; i < value.length; i += 1) {
                    nu[i] = derez(value[i], path + '[' + i + ']');
                }
            } else {

                nu = {};
                for (name in value) {
                    if (Object.prototype.hasOwnProperty.call(value, name)) {
                        nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');
                    }
                }
            }
            return nu;
        }
        return value;
    }(object, '$');
};
}, 554, null, "sc-errors/decycle.js");
__d(/* socketcluster-client/lib/auth.js */function(global, require, module, exports) {var AuthEngine = function AuthEngine() {
  this._internalStorage = {};
};

AuthEngine.prototype._isLocalStorageEnabled = function () {
  var err;
  try {
    global.localStorage;

    global.localStorage.setItem('__scLocalStorageTest', 1);
    global.localStorage.removeItem('__scLocalStorageTest');
  } catch (e) {
    err = e;
  }
  return !err;
};

AuthEngine.prototype.saveToken = function (name, token, options, callback) {
  if (this._isLocalStorageEnabled() && global.localStorage) {
    global.localStorage.setItem(name, token);
  } else {
    this._internalStorage[name] = token;
  }
  callback && callback(null, token);
};

AuthEngine.prototype.removeToken = function (name, callback) {
  var token;

  this.loadToken(name, function (err, authToken) {
    token = authToken;
  });

  if (this._isLocalStorageEnabled() && global.localStorage) {
    global.localStorage.removeItem(name);
  }
  delete this._internalStorage[name];

  callback && callback(null, token);
};

AuthEngine.prototype.loadToken = function (name, callback) {
  var token;

  if (this._isLocalStorageEnabled() && global.localStorage) {
    token = global.localStorage.getItem(name);
  } else {
    token = this._internalStorage[name] || null;
  }
  callback(null, token);
};

module.exports.AuthEngine = AuthEngine;
}, 555, null, "socketcluster-client/lib/auth.js");
__d(/* sc-formatter/index.js */function(global, require, module, exports) {var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

var arrayBufferToBase64 = function arrayBufferToBase64(arraybuffer) {
  var bytes = new Uint8Array(arraybuffer);
  var len = bytes.length;
  var base64 = '';

  for (var i = 0; i < len; i += 3) {
    base64 += base64Chars[bytes[i] >> 2];
    base64 += base64Chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
    base64 += base64Chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
    base64 += base64Chars[bytes[i + 2] & 63];
  }

  if (len % 3 === 2) {
    base64 = base64.substring(0, base64.length - 1) + '=';
  } else if (len % 3 === 1) {
    base64 = base64.substring(0, base64.length - 2) + '==';
  }

  return base64;
};

var binaryToBase64Replacer = function binaryToBase64Replacer(key, value) {
  if (global.ArrayBuffer && value instanceof global.ArrayBuffer) {
    return {
      base64: true,
      data: arrayBufferToBase64(value)
    };
  } else if (global.Buffer) {
    if (value instanceof global.Buffer) {
      return {
        base64: true,
        data: value.toString('base64')
      };
    }

    if (value && value.type === 'Buffer' && Array.isArray(value.data)) {
      var rehydratedBuffer;
      if (global.Buffer.from) {
        rehydratedBuffer = global.Buffer.from(value.data);
      } else {
        rehydratedBuffer = new global.Buffer(value.data);
      }
      return {
        base64: true,
        data: rehydratedBuffer.toString('base64')
      };
    }
  }
  return value;
};

module.exports.decode = function (input) {
  if (input == null) {
    return null;
  }

  if (input === '#1' || input === '#2') {
    return input;
  }
  var message = input.toString();

  try {
    return JSON.parse(message);
  } catch (err) {}
  return message;
};

module.exports.encode = function (object) {
  if (object === '#1' || object === '#2') {
    return object;
  }
  return JSON.stringify(object, binaryToBase64Replacer);
};
}, 556, null, "sc-formatter/index.js");
__d(/* socketcluster-client/lib/sctransport.js */function(global, require, module, exports) {var SCEmitter = require(548         ).SCEmitter; // 548 = sc-emitter
var Response = require(552         ).Response; // 552 = ./response
var querystring = require(558          ); // 558 = querystring
var WebSocket;
var createWebSocket;

if (global.WebSocket) {
  WebSocket = global.WebSocket;
  createWebSocket = function createWebSocket(uri, options) {
    return new WebSocket(uri);
  };
} else {
  WebSocket = require(561 ); // 561 = ws
  createWebSocket = function createWebSocket(uri, options) {
    return new WebSocket(uri, null, options);
  };
}

var scErrors = require(553        ); // 553 = sc-errors
var TimeoutError = scErrors.TimeoutError;

var SCTransport = function SCTransport(authEngine, codecEngine, options) {
  this.state = this.CLOSED;
  this.auth = authEngine;
  this.codec = codecEngine;
  this.options = options;
  this.connectTimeout = options.connectTimeout;
  this.pingTimeout = options.ackTimeout;
  this.callIdGenerator = options.callIdGenerator;

  this._pingTimeoutTicker = null;
  this._callbackMap = {};

  this.open();
};

SCTransport.prototype = Object.create(SCEmitter.prototype);

SCTransport.CONNECTING = SCTransport.prototype.CONNECTING = 'connecting';
SCTransport.OPEN = SCTransport.prototype.OPEN = 'open';
SCTransport.CLOSED = SCTransport.prototype.CLOSED = 'closed';

SCTransport.prototype.uri = function () {
  var query = this.options.query || {};
  var schema = this.options.secure ? 'wss' : 'ws';

  if (this.options.timestampRequests) {
    query[this.options.timestampParam] = new Date().getTime();
  }

  query = querystring.encode(query);

  if (query.length) {
    query = '?' + query;
  }

  var host;
  if (this.options.host) {
    host = this.options.host;
  } else {
    var port = '';

    if (this.options.port && (schema == 'wss' && this.options.port != 443 || schema == 'ws' && this.options.port != 80)) {
      port = ':' + this.options.port;
    }
    host = this.options.hostname + port;
  }

  return schema + '://' + host + this.options.path + query;
};

SCTransport.prototype.open = function () {
  var self = this;

  this.state = this.CONNECTING;
  var uri = this.uri();

  var wsSocket = createWebSocket(uri, this.options);
  wsSocket.binaryType = this.options.binaryType;
  this.socket = wsSocket;

  wsSocket.onopen = function () {
    self._onOpen();
  };

  wsSocket.onclose = function (event) {
    var code;
    if (event.code == null) {
      code = 1005;
    } else {
      code = event.code;
    }
    self._onClose(code, event.reason);
  };

  wsSocket.onmessage = function (message, flags) {
    self._onMessage(message.data);
  };

  wsSocket.onerror = function (error) {

    if (self.state === self.CONNECTING) {
      self._onClose(1006);
    }
  };

  this._connectTimeoutRef = setTimeout(function () {
    self._onClose(4007);
    self.socket.close(4007);
  }, this.connectTimeout);
};

SCTransport.prototype._onOpen = function () {
  var self = this;

  clearTimeout(this._connectTimeoutRef);
  this._resetPingTimeout();

  this._handshake(function (err, status) {
    if (err) {
      self._onError(err);
      self._onClose(4003);
      self.socket.close(4003);
    } else {
      self.state = self.OPEN;
      SCEmitter.prototype.emit.call(self, 'open', status);
      self._resetPingTimeout();
    }
  });
};

SCTransport.prototype._handshake = function (callback) {
  var self = this;
  this.auth.loadToken(this.options.authTokenName, function (err, token) {
    if (err) {
      callback(err);
    } else {
      var options = {
        force: true
      };
      self.emit('#handshake', {
        authToken: token
      }, options, function (err, status) {
        if (status) {
          status.authToken = token;
          if (status.authError) {
            status.authError = scErrors.hydrateError(status.authError);
          }
        }
        callback(err, status);
      });
    }
  });
};

SCTransport.prototype._onClose = function (code, data) {
  delete this.socket.onopen;
  delete this.socket.onclose;
  delete this.socket.onmessage;
  delete this.socket.onerror;

  clearTimeout(this._connectTimeoutRef);

  if (this.state == this.OPEN) {
    this.state = this.CLOSED;
    SCEmitter.prototype.emit.call(this, 'close', code, data);
  } else if (this.state == this.CONNECTING) {
    this.state = this.CLOSED;
    SCEmitter.prototype.emit.call(this, 'openAbort', code, data);
  }
};

SCTransport.prototype._onMessage = function (message) {
  SCEmitter.prototype.emit.call(this, 'event', 'message', message);

  var obj = this.decode(message);

  if (obj == '#1') {
    this._resetPingTimeout();
    if (this.socket.readyState == this.socket.OPEN) {
      this.sendObject('#2');
    }
  } else {
    var event = obj.event;

    if (event) {
      var response = new Response(this, obj.cid);
      SCEmitter.prototype.emit.call(this, 'event', event, obj.data, response);
    } else if (obj.rid != null) {

      var eventObject = this._callbackMap[obj.rid];
      if (eventObject) {
        clearTimeout(eventObject.timeout);
        delete this._callbackMap[obj.rid];

        if (eventObject.callback) {
          var rehydratedError = scErrors.hydrateError(obj.error);
          eventObject.callback(rehydratedError, obj.data);
        }
      }
    } else {
      SCEmitter.prototype.emit.call(this, 'event', 'raw', obj);
    }
  }
};

SCTransport.prototype._onError = function (err) {
  SCEmitter.prototype.emit.call(this, 'error', err);
};

SCTransport.prototype._resetPingTimeout = function () {
  var self = this;

  var now = new Date().getTime();
  clearTimeout(this._pingTimeoutTicker);

  this._pingTimeoutTicker = setTimeout(function () {
    self._onClose(4000);
    self.socket.close(4000);
  }, this.pingTimeout);
};

SCTransport.prototype.getBytesReceived = function () {
  return this.socket.bytesReceived;
};

SCTransport.prototype.close = function (code, data) {
  code = code || 1000;

  if (this.state == this.OPEN) {
    var packet = {
      code: code,
      data: data
    };
    this.emit('#disconnect', packet);

    this._onClose(code, data);
    this.socket.close(code);
  } else if (this.state == this.CONNECTING) {
    this._onClose(code, data);
    this.socket.close(code);
  }
};

SCTransport.prototype.emitObject = function (eventObject) {
  var simpleEventObject = {
    event: eventObject.event,
    data: eventObject.data
  };

  if (eventObject.callback) {
    simpleEventObject.cid = eventObject.cid = this.callIdGenerator();
    this._callbackMap[eventObject.cid] = eventObject;
  }

  this.sendObject(simpleEventObject);
  return eventObject.cid || null;
};

SCTransport.prototype._handleEventAckTimeout = function (eventObject) {
  var errorMessage = "Event response for '" + eventObject.event + "' timed out";
  var error = new TimeoutError(errorMessage);

  if (eventObject.cid) {
    delete this._callbackMap[eventObject.cid];
  }
  var callback = eventObject.callback;
  delete eventObject.callback;
  callback.call(eventObject, error, eventObject);
};

SCTransport.prototype.emit = function (event, data, a, b) {
  var self = this;

  var callback, options;

  if (b) {
    options = a;
    callback = b;
  } else {
    if (a instanceof Function) {
      options = {};
      callback = a;
    } else {
      options = a;
    }
  }

  var eventObject = {
    event: event,
    data: data,
    callback: callback
  };

  if (callback && !options.noTimeout) {
    eventObject.timeout = setTimeout(function () {
      self._handleEventAckTimeout(eventObject);
    }, this.options.ackTimeout);
  }

  var cid = null;
  if (this.state == this.OPEN || options.force) {
    cid = this.emitObject(eventObject);
  }
  return cid;
};

SCTransport.prototype.cancelPendingResponse = function (cid) {
  delete this._callbackMap[cid];
};

SCTransport.prototype.decode = function (message) {
  return this.codec.decode(message);
};

SCTransport.prototype.encode = function (object) {
  return this.codec.encode(object);
};

SCTransport.prototype.send = function (data) {
  if (this.socket.readyState != this.socket.OPEN) {
    this._onClose(1005);
  } else {
    this.socket.send(data);
  }
};

SCTransport.prototype.serializeObject = function (object) {
  var str, formatError;
  try {
    str = this.encode(object);
  } catch (err) {
    formatError = err;
    this._onError(formatError);
  }
  if (!formatError) {
    return str;
  }
  return null;
};

SCTransport.prototype.sendObject = function (object) {
  var str = this.serializeObject(object);
  if (str != null) {
    this.send(str);
  }
};

module.exports.SCTransport = SCTransport;
}, 557, null, "socketcluster-client/lib/sctransport.js");
__d(/* querystring/index.js */function(global, require, module, exports) {'use strict';

exports.decode = exports.parse = require(559       ); // 559 = ./decode
exports.encode = exports.stringify = require(560       ); // 560 = ./encode
}, 558, null, "querystring/index.js");
__d(/* querystring/decode.js */function(global, require, module, exports) {

'use strict';

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (Array.isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};
}, 559, null, "querystring/decode.js");
__d(/* querystring/encode.js */function(global, require, module, exports) {

'use strict';

var stringifyPrimitive = function stringifyPrimitive(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return Object.keys(obj).map(function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (Array.isArray(obj[k])) {
        return obj[k].map(function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};
}, 560, null, "querystring/encode.js");
__d(/* socketcluster-client/lib/ws-browser.js */function(global, require, module, exports) {var global;
if (typeof WorkerGlobalScope !== 'undefined') {
  global = self;
} else {
  global = typeof window != 'undefined' && window || function () {
    return this;
  }();
}

var WebSocket = global.WebSocket || global.MozWebSocket;

function ws(uri, protocols, opts) {
  var instance;
  if (protocols) {
    instance = new WebSocket(uri, protocols);
  } else {
    instance = new WebSocket(uri);
  }
  return instance;
}

if (WebSocket) ws.prototype = WebSocket.prototype;

module.exports = WebSocket ? ws : null;
}, 561, null, "socketcluster-client/lib/ws-browser.js");
__d(/* linked-list/index.js */function(global, require, module, exports) {'use strict';

module.exports = require(563                       ); // 563 = ./_source/linked-list.js
}, 562, null, "linked-list/index.js");
__d(/* linked-list/_source/linked-list.js */function(global, require, module, exports) {'use strict';

var errorMessage;

errorMessage = 'An argument without append, prepend, ' + 'or detach methods was given to `List';

function List() {
    if (arguments.length) {
        return List.from(arguments);
    }
}

var ListPrototype;

ListPrototype = List.prototype;

List.of = function () {
    return List.from.call(this, arguments);
};

List.from = function (items) {
    var list = new this(),
        length,
        iterator,
        item;

    if (items && (length = items.length)) {
        iterator = -1;

        while (++iterator < length) {
            item = items[iterator];

            if (item !== null && item !== undefined) {
                list.append(item);
            }
        }
    }

    return list;
};

ListPrototype.head = null;

ListPrototype.tail = null;

ListPrototype.toArray = function () {
    var item = this.head,
        result = [];

    while (item) {
        result.push(item);
        item = item.next;
    }

    return result;
};

ListPrototype.prepend = function (item) {
    if (!item) {
        return false;
    }

    if (!item.append || !item.prepend || !item.detach) {
        throw new Error(errorMessage + '#prepend`.');
    }

    var self, head;

    self = this;

    head = self.head;

    if (head) {
        return head.prepend(item);
    }

    item.detach();

    item.list = self;

    self.head = item;

    return item;
};

ListPrototype.append = function (item) {
    if (!item) {
        return false;
    }

    if (!item.append || !item.prepend || !item.detach) {
        throw new Error(errorMessage + '#append`.');
    }

    var self, head, tail;

    self = this;

    tail = self.tail;

    if (tail) {
        return tail.append(item);
    }

    head = self.head;

    if (head) {
        return head.append(item);
    }

    item.detach();

    item.list = self;

    self.head = item;

    return item;
};

function ListItem() {}

List.Item = ListItem;

var ListItemPrototype = ListItem.prototype;

ListItemPrototype.next = null;

ListItemPrototype.prev = null;

ListItemPrototype.list = null;

ListItemPrototype.detach = function () {
    var self = this,
        list = self.list,
        prev = self.prev,
        next = self.next;

    if (!list) {
        return self;
    }

    if (list.tail === self) {
        list.tail = prev;
    }

    if (list.head === self) {
        list.head = next;
    }

    if (list.tail === list.head) {
        list.tail = null;
    }

    if (prev) {
        prev.next = next;
    }

    if (next) {
        next.prev = prev;
    }

    self.prev = self.next = self.list = null;

    return self;
};

ListItemPrototype.prepend = function (item) {
    if (!item || !item.append || !item.prepend || !item.detach) {
        throw new Error(errorMessage + 'Item#prepend`.');
    }

    var self = this,
        list = self.list,
        prev = self.prev;

    if (!list) {
        return false;
    }

    item.detach();

    if (prev) {
        item.prev = prev;

        prev.next = item;
    }

    item.next = self;

    item.list = list;

    self.prev = item;

    if (self === list.head) {
        list.head = item;
    }

    if (!list.tail) {
        list.tail = self;
    }

    return item;
};

ListItemPrototype.append = function (item) {
    if (!item || !item.append || !item.prepend || !item.detach) {
        throw new Error(errorMessage + 'Item#append`.');
    }

    var self = this,
        list = self.list,
        next = self.next;

    if (!list) {
        return false;
    }

    item.detach();

    if (next) {
        item.next = next;

        next.prev = item;
    }

    item.prev = self;

    item.list = list;

    self.next = item;

    if (self === list.tail || !list.tail) {
        list.tail = item;
    }

    return item;
};

module.exports = List;
}, 563, null, "linked-list/_source/linked-list.js");
__d(/* base-64/base64.js */function(global, require, module, exports) {
;(function (root) {
	var freeExports = typeof exports == 'object' && exports;

	var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;

	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	var InvalidCharacterError = function InvalidCharacterError(message) {
		this.message = message;
	};
	InvalidCharacterError.prototype = new Error();
	InvalidCharacterError.prototype.name = 'InvalidCharacterError';

	var error = function error(message) {
		throw new InvalidCharacterError(message);
	};

	var TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	var REGEX_SPACE_CHARACTERS = /[\t\n\f\r ]/g;

	var decode = function decode(input) {
		input = String(input).replace(REGEX_SPACE_CHARACTERS, '');
		var length = input.length;
		if (length % 4 == 0) {
			input = input.replace(/==?$/, '');
			length = input.length;
		}
		if (length % 4 == 1 || /[^+a-zA-Z0-9/]/.test(input)) {
			error('Invalid character: the string to be decoded is not correctly encoded.');
		}
		var bitCounter = 0;
		var bitStorage;
		var buffer;
		var output = '';
		var position = -1;
		while (++position < length) {
			buffer = TABLE.indexOf(input.charAt(position));
			bitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;

			if (bitCounter++ % 4) {
				output += String.fromCharCode(0xFF & bitStorage >> (-2 * bitCounter & 6));
			}
		}
		return output;
	};

	var encode = function encode(input) {
		input = String(input);
		if (/[^\0-\xFF]/.test(input)) {
			error('The string to be encoded contains characters outside of the ' + 'Latin1 range.');
		}
		var padding = input.length % 3;
		var output = '';
		var position = -1;
		var a;
		var b;
		var c;
		var d;
		var buffer;

		var length = input.length - padding;

		while (++position < length) {
			a = input.charCodeAt(position) << 16;
			b = input.charCodeAt(++position) << 8;
			c = input.charCodeAt(++position);
			buffer = a + b + c;

			output += TABLE.charAt(buffer >> 18 & 0x3F) + TABLE.charAt(buffer >> 12 & 0x3F) + TABLE.charAt(buffer >> 6 & 0x3F) + TABLE.charAt(buffer & 0x3F);
		}

		if (padding == 2) {
			a = input.charCodeAt(position) << 8;
			b = input.charCodeAt(++position);
			buffer = a + b;
			output += TABLE.charAt(buffer >> 10) + TABLE.charAt(buffer >> 4 & 0x3F) + TABLE.charAt(buffer << 2 & 0x3F) + '=';
		} else if (padding == 1) {
			buffer = input.charCodeAt(position);
			output += TABLE.charAt(buffer >> 2) + TABLE.charAt(buffer << 4 & 0x3F) + '==';
		}

		return output;
	};

	var base64 = {
		'encode': encode,
		'decode': decode,
		'version': '0.1.0'
	};

	if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
		define(function () {
			return base64;
		});
	} else if (freeExports && !freeExports.nodeType) {
		if (freeModule) {
			freeModule.exports = base64;
		} else {
			for (var key in base64) {
				base64.hasOwnProperty(key) && (freeExports[key] = base64[key]);
			}
		}
	} else {
		root.base64 = base64;
	}
})(this);
}, 564, null, "base-64/base64.js");
__d(/* clone/clone.js */function(global, require, module, exports) {var clone = function () {
  'use strict';

  function _instanceof(obj, type) {
    return type != null && obj instanceof type;
  }

  var nativeMap;
  try {
    nativeMap = Map;
  } catch (_) {
    nativeMap = function nativeMap() {};
  }

  var nativeSet;
  try {
    nativeSet = Set;
  } catch (_) {
    nativeSet = function nativeSet() {};
  }

  var nativePromise;
  try {
    nativePromise = Promise;
  } catch (_) {
    nativePromise = function nativePromise() {};
  }

  function clone(parent, circular, depth, prototype, includeNonEnumerable) {
    if (typeof circular === 'object') {
      depth = circular.depth;
      prototype = circular.prototype;
      includeNonEnumerable = circular.includeNonEnumerable;
      circular = circular.circular;
    }

    var allParents = [];
    var allChildren = [];

    var useBuffer = typeof Buffer != 'undefined';

    if (typeof circular == 'undefined') circular = true;

    if (typeof depth == 'undefined') depth = Infinity;

    function _clone(parent, depth) {
      if (parent === null) return null;

      if (depth === 0) return parent;

      var child;
      var proto;
      if (typeof parent != 'object') {
        return parent;
      }

      if (_instanceof(parent, nativeMap)) {
        child = new nativeMap();
      } else if (_instanceof(parent, nativeSet)) {
        child = new nativeSet();
      } else if (_instanceof(parent, nativePromise)) {
        child = new nativePromise(function (resolve, reject) {
          parent.then(function (value) {
            resolve(_clone(value, depth - 1));
          }, function (err) {
            reject(_clone(err, depth - 1));
          });
        });
      } else if (clone.__isArray(parent)) {
        child = [];
      } else if (clone.__isRegExp(parent)) {
        child = new RegExp(parent.source, __getRegExpFlags(parent));
        if (parent.lastIndex) child.lastIndex = parent.lastIndex;
      } else if (clone.__isDate(parent)) {
        child = new Date(parent.getTime());
      } else if (useBuffer && Buffer.isBuffer(parent)) {
        child = new Buffer(parent.length);
        parent.copy(child);
        return child;
      } else if (_instanceof(parent, Error)) {
        child = Object.create(parent);
      } else {
        if (typeof prototype == 'undefined') {
          proto = Object.getPrototypeOf(parent);
          child = Object.create(proto);
        } else {
          child = Object.create(prototype);
          proto = prototype;
        }
      }

      if (circular) {
        var index = allParents.indexOf(parent);

        if (index != -1) {
          return allChildren[index];
        }
        allParents.push(parent);
        allChildren.push(child);
      }

      if (_instanceof(parent, nativeMap)) {
        parent.forEach(function (value, key) {
          var keyChild = _clone(key, depth - 1);
          var valueChild = _clone(value, depth - 1);
          child.set(keyChild, valueChild);
        });
      }
      if (_instanceof(parent, nativeSet)) {
        parent.forEach(function (value) {
          var entryChild = _clone(value, depth - 1);
          child.add(entryChild);
        });
      }

      for (var i in parent) {
        var attrs;
        if (proto) {
          attrs = Object.getOwnPropertyDescriptor(proto, i);
        }

        if (attrs && attrs.set == null) {
          continue;
        }
        child[i] = _clone(parent[i], depth - 1);
      }

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(parent);
        for (var i = 0; i < symbols.length; i++) {
          var symbol = symbols[i];
          var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
          if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
            continue;
          }
          child[symbol] = _clone(parent[symbol], depth - 1);
          if (!descriptor.enumerable) {
            Object.defineProperty(child, symbol, {
              enumerable: false
            });
          }
        }
      }

      if (includeNonEnumerable) {
        var allPropertyNames = Object.getOwnPropertyNames(parent);
        for (var i = 0; i < allPropertyNames.length; i++) {
          var propertyName = allPropertyNames[i];
          var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
          if (descriptor && descriptor.enumerable) {
            continue;
          }
          child[propertyName] = _clone(parent[propertyName], depth - 1);
          Object.defineProperty(child, propertyName, {
            enumerable: false
          });
        }
      }

      return child;
    }

    return _clone(parent, depth);
  }

  clone.clonePrototype = function clonePrototype(parent) {
    if (parent === null) return null;

    var c = function c() {};
    c.prototype = parent;
    return new c();
  };

  function __objToStr(o) {
    return Object.prototype.toString.call(o);
  }
  clone.__objToStr = __objToStr;

  function __isDate(o) {
    return typeof o === 'object' && __objToStr(o) === '[object Date]';
  }
  clone.__isDate = __isDate;

  function __isArray(o) {
    return typeof o === 'object' && __objToStr(o) === '[object Array]';
  }
  clone.__isArray = __isArray;

  function __isRegExp(o) {
    return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
  }
  clone.__isRegExp = __isRegExp;

  function __getRegExpFlags(re) {
    var flags = '';
    if (re.global) flags += 'g';
    if (re.ignoreCase) flags += 'i';
    if (re.multiline) flags += 'm';
    return flags;
  }
  clone.__getRegExpFlags = __getRegExpFlags;

  return clone;
}();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}
}, 565, null, "clone/clone.js");
__d(/* socketcluster-client/lib/scsocketcreator.js */function(global, require, module, exports) {var SCSocket = require(547         ); // 547 = ./scsocket
var scErrors = require(553        ); // 553 = sc-errors
var InvalidArgumentsError = scErrors.InvalidArgumentsError;

var _connections = {};

function getMultiplexId(options) {
  var protocolPrefix = options.secure ? 'https://' : 'http://';
  var queryString = '';
  if (options.query) {
    if (typeof options.query == 'string') {
      queryString = options.query;
    } else {
      var queryArray = [];
      var queryMap = options.query;
      for (var key in queryMap) {
        if (queryMap.hasOwnProperty(key)) {
          queryArray.push(key + '=' + queryMap[key]);
        }
      }
      if (queryArray.length) {
        queryString = '?' + queryArray.join('&');
      }
    }
  }
  var host;
  if (options.host) {
    host = options.host;
  } else {
    host = options.hostname + ':' + options.port;
  }
  return protocolPrefix + host + options.path + queryString;
}

function isUrlSecure() {
  return global.location && location.protocol == 'https:';
}

function getPort(options, isSecureDefault) {
  var isSecure = options.secure == null ? isSecureDefault : options.secure;
  return options.port || (global.location && location.port ? location.port : isSecure ? 443 : 80);
}

function connect(options) {
  var self = this;

  options = options || {};

  if (options.host && options.port) {
    throw new InvalidArgumentsError('The host option should already include the' + ' port number in the format hostname:port - Because of this, the host and port options' + ' cannot be specified together; use the hostname option instead');
  }

  var isSecureDefault = isUrlSecure();

  var opts = {
    port: getPort(options, isSecureDefault),
    hostname: global.location && location.hostname,
    path: '/socketcluster/',
    secure: isSecureDefault,
    autoConnect: true,
    autoReconnect: true,
    autoProcessSubscriptions: true,
    connectTimeout: 20000,
    ackTimeout: 10000,
    timestampRequests: false,
    timestampParam: 't',
    authEngine: null,
    authTokenName: 'socketCluster.authToken',
    binaryType: 'arraybuffer',
    multiplex: true,
    cloneData: false
  };
  for (var i in options) {
    if (options.hasOwnProperty(i)) {
      opts[i] = options[i];
    }
  }
  var multiplexId = getMultiplexId(opts);
  if (opts.multiplex === false) {
    return new SCSocket(opts);
  }
  if (_connections[multiplexId]) {
    _connections[multiplexId].connect();
  } else {
    _connections[multiplexId] = new SCSocket(opts);
  }
  return _connections[multiplexId];
}

function destroy(options) {
  var self = this;

  options = options || {};
  var isSecureDefault = isUrlSecure();

  var opts = {
    port: getPort(options, isSecureDefault),
    hostname: global.location && location.hostname,
    path: '/socketcluster/',
    secure: isSecureDefault
  };
  for (var i in options) {
    if (options.hasOwnProperty(i)) {
      opts[i] = options[i];
    }
  }
  var multiplexId = getMultiplexId(opts);
  var socket = _connections[multiplexId];
  if (socket) {
    socket.disconnect();
  }
  delete _connections[multiplexId];
}

module.exports = {
  connect: connect,
  destroy: destroy,
  connections: _connections
};
}, 566, null, "socketcluster-client/lib/scsocketcreator.js");
__d(/* remote-redux-devtools/lib/configureStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = configureStore;

var _reduxDevtoolsInstrument = require(568                        ); // 568 = redux-devtools-instrument

var _reduxDevtoolsInstrument2 = _interopRequireDefault(_reduxDevtoolsInstrument);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function configureStore(next, subscriber, options) {
  return (0, _reduxDevtoolsInstrument2.default)(subscriber, options)(next);
}
}, 567, null, "remote-redux-devtools/lib/configureStore.js");
__d(/* redux-devtools-instrument/lib/instrument.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.INIT_ACTION = exports.ActionCreators = exports.ActionTypes = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

exports.liftAction = liftAction;
exports.liftReducerWith = liftReducerWith;
exports.unliftState = unliftState;
exports.unliftStore = unliftStore;
exports.default = instrument;

var _difference = require(569                ); // 569 = lodash/difference

var _difference2 = _interopRequireDefault(_difference);

var _union = require(612           ); // 612 = lodash/union

var _union2 = _interopRequireDefault(_union);

var _isPlainObject = require(355                   ); // 355 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require(365                ); // 365 = symbol-observable

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var ActionTypes = exports.ActionTypes = {
  PERFORM_ACTION: 'PERFORM_ACTION',
  RESET: 'RESET',
  ROLLBACK: 'ROLLBACK',
  COMMIT: 'COMMIT',
  SWEEP: 'SWEEP',
  TOGGLE_ACTION: 'TOGGLE_ACTION',
  SET_ACTIONS_ACTIVE: 'SET_ACTIONS_ACTIVE',
  JUMP_TO_STATE: 'JUMP_TO_STATE',
  JUMP_TO_ACTION: 'JUMP_TO_ACTION',
  REORDER_ACTION: 'REORDER_ACTION',
  IMPORT_STATE: 'IMPORT_STATE',
  LOCK_CHANGES: 'LOCK_CHANGES',
  PAUSE_RECORDING: 'PAUSE_RECORDING'
};

var ActionCreators = exports.ActionCreators = {
  performAction: function performAction(action) {
    if (!(0, _isPlainObject2.default)(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    return { type: ActionTypes.PERFORM_ACTION, action: action, timestamp: Date.now() };
  },
  reset: function reset() {
    return { type: ActionTypes.RESET, timestamp: Date.now() };
  },
  rollback: function rollback() {
    return { type: ActionTypes.ROLLBACK, timestamp: Date.now() };
  },
  commit: function commit() {
    return { type: ActionTypes.COMMIT, timestamp: Date.now() };
  },
  sweep: function sweep() {
    return { type: ActionTypes.SWEEP };
  },
  toggleAction: function toggleAction(id) {
    return { type: ActionTypes.TOGGLE_ACTION, id: id };
  },
  setActionsActive: function setActionsActive(start, end) {
    var active = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

    return { type: ActionTypes.SET_ACTIONS_ACTIVE, start: start, end: end, active: active };
  },
  reorderAction: function reorderAction(actionId, beforeActionId) {
    return { type: ActionTypes.REORDER_ACTION, actionId: actionId, beforeActionId: beforeActionId };
  },
  jumpToState: function jumpToState(index) {
    return { type: ActionTypes.JUMP_TO_STATE, index: index };
  },
  jumpToAction: function jumpToAction(actionId) {
    return { type: ActionTypes.JUMP_TO_ACTION, actionId: actionId };
  },
  importState: function importState(nextLiftedState, noRecompute) {
    return { type: ActionTypes.IMPORT_STATE, nextLiftedState: nextLiftedState, noRecompute: noRecompute };
  },
  lockChanges: function lockChanges(status) {
    return { type: ActionTypes.LOCK_CHANGES, status: status };
  },
  pauseRecording: function pauseRecording(status) {
    return { type: ActionTypes.PAUSE_RECORDING, status: status };
  }
};

var INIT_ACTION = exports.INIT_ACTION = { type: '@@INIT' };

function computeWithTryCatch(reducer, action, state) {
  var nextState = state;
  var nextError = void 0;
  try {
    nextState = reducer(state, action);
  } catch (err) {
    nextError = err.toString();
    if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof window.chrome !== 'undefined' || typeof window.process !== 'undefined' && window.process.type === 'renderer')) {
      setTimeout(function () {
        throw err;
      });
    } else {
      console.error(err);
    }
  }

  return {
    state: nextState,
    error: nextError
  };
}

function computeNextEntry(reducer, action, state, shouldCatchErrors) {
  if (!shouldCatchErrors) {
    return { state: reducer(state, action) };
  }
  return computeWithTryCatch(reducer, action, state);
}

function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, shouldCatchErrors) {
  if (!computedStates || minInvalidatedStateIndex === -1 || minInvalidatedStateIndex >= computedStates.length && computedStates.length === stagedActionIds.length) {
    return computedStates;
  }

  var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);
  for (var i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {
    var actionId = stagedActionIds[i];
    var action = actionsById[actionId].action;

    var previousEntry = nextComputedStates[i - 1];
    var previousState = previousEntry ? previousEntry.state : committedState;

    var shouldSkip = skippedActionIds.indexOf(actionId) > -1;
    var entry = void 0;
    if (shouldSkip) {
      entry = previousEntry;
    } else {
      if (shouldCatchErrors && previousEntry && previousEntry.error) {
        entry = {
          state: previousState,
          error: 'Interrupted by an error up the chain'
        };
      } else {
        entry = computeNextEntry(reducer, action, previousState, shouldCatchErrors);
      }
    }
    nextComputedStates.push(entry);
  }

  return nextComputedStates;
}

function liftAction(action) {
  return ActionCreators.performAction(action);
}

function liftReducerWith(reducer, initialCommittedState, monitorReducer, options) {
  var initialLiftedState = {
    monitorState: monitorReducer(undefined, {}),
    nextActionId: 1,
    actionsById: { 0: liftAction(INIT_ACTION) },
    stagedActionIds: [0],
    skippedActionIds: [],
    committedState: initialCommittedState,
    currentStateIndex: 0,
    computedStates: [],
    isLocked: options.shouldStartLocked === true,
    isPaused: options.shouldRecordChanges === false
  };

  return function (liftedState, liftedAction) {
    var _ref = liftedState || initialLiftedState;

    var monitorState = _ref.monitorState;
    var actionsById = _ref.actionsById;
    var nextActionId = _ref.nextActionId;
    var stagedActionIds = _ref.stagedActionIds;
    var skippedActionIds = _ref.skippedActionIds;
    var committedState = _ref.committedState;
    var currentStateIndex = _ref.currentStateIndex;
    var computedStates = _ref.computedStates;
    var isLocked = _ref.isLocked;
    var isPaused = _ref.isPaused;

    if (!liftedState) {
      actionsById = _extends({}, actionsById);
    }

    function commitExcessActions(n) {
      var excess = n;
      var idsToDelete = stagedActionIds.slice(1, excess + 1);

      for (var i = 0; i < idsToDelete.length; i++) {
        if (computedStates[i + 1].error) {
          excess = i;
          idsToDelete = stagedActionIds.slice(1, excess + 1);
          break;
        } else {
          delete actionsById[idsToDelete[i]];
        }
      }

      skippedActionIds = skippedActionIds.filter(function (id) {
        return idsToDelete.indexOf(id) === -1;
      });
      stagedActionIds = [0].concat(stagedActionIds.slice(excess + 1));
      committedState = computedStates[excess].state;
      computedStates = computedStates.slice(excess);
      currentStateIndex = currentStateIndex > excess ? currentStateIndex - excess : 0;
    }

    function computePausedAction(shouldInit) {
      var _extends2;

      var computedState = void 0;
      if (shouldInit) {
        computedState = computedStates[currentStateIndex];
        monitorState = monitorReducer(monitorState, liftedAction);
      } else {
        computedState = computeNextEntry(reducer, liftedAction.action, computedStates[currentStateIndex].state, false);
      }
      if (!options.pauseActionType || nextActionId === 1) {
        return {
          monitorState: monitorState,
          actionsById: { 0: liftAction(INIT_ACTION) },
          nextActionId: 1,
          stagedActionIds: [0],
          skippedActionIds: [],
          committedState: computedState.state,
          currentStateIndex: 0,
          computedStates: [computedState],
          isLocked: isLocked,
          isPaused: true
        };
      }
      if (shouldInit) {
        if (currentStateIndex === stagedActionIds.length - 1) {
          currentStateIndex++;
        }
        stagedActionIds = [].concat(stagedActionIds, [nextActionId]);
        nextActionId++;
      }
      return {
        monitorState: monitorState,
        actionsById: _extends({}, actionsById, (_extends2 = {}, _extends2[nextActionId - 1] = liftAction({ type: options.pauseActionType }), _extends2)),
        nextActionId: nextActionId,
        stagedActionIds: stagedActionIds,
        skippedActionIds: skippedActionIds,
        committedState: committedState,
        currentStateIndex: currentStateIndex,
        computedStates: [].concat(computedStates.slice(0, stagedActionIds.length - 1), [computedState]),
        isLocked: isLocked,
        isPaused: true
      };
    }

    var minInvalidatedStateIndex = 0;

    switch (liftedAction.type) {
      case ActionTypes.PERFORM_ACTION:
        {
          if (isLocked) return liftedState || initialLiftedState;
          if (isPaused) return computePausedAction();

          if (options.maxAge && stagedActionIds.length === options.maxAge) {
            commitExcessActions(1);
          }

          if (currentStateIndex === stagedActionIds.length - 1) {
            currentStateIndex++;
          }
          var actionId = nextActionId++;

          actionsById[actionId] = liftedAction;
          stagedActionIds = [].concat(stagedActionIds, [actionId]);

          minInvalidatedStateIndex = stagedActionIds.length - 1;
          break;
        }
      case ActionTypes.RESET:
        {
          actionsById = { 0: liftAction(INIT_ACTION) };
          nextActionId = 1;
          stagedActionIds = [0];
          skippedActionIds = [];
          committedState = initialCommittedState;
          currentStateIndex = 0;
          computedStates = [];
          break;
        }
      case ActionTypes.COMMIT:
        {
          actionsById = { 0: liftAction(INIT_ACTION) };
          nextActionId = 1;
          stagedActionIds = [0];
          skippedActionIds = [];
          committedState = computedStates[currentStateIndex].state;
          currentStateIndex = 0;
          computedStates = [];
          break;
        }
      case ActionTypes.ROLLBACK:
        {
          actionsById = { 0: liftAction(INIT_ACTION) };
          nextActionId = 1;
          stagedActionIds = [0];
          skippedActionIds = [];
          currentStateIndex = 0;
          computedStates = [];
          break;
        }
      case ActionTypes.TOGGLE_ACTION:
        {
          var _ret = function () {
            var actionId = liftedAction.id;

            var index = skippedActionIds.indexOf(actionId);
            if (index === -1) {
              skippedActionIds = [actionId].concat(skippedActionIds);
            } else {
              skippedActionIds = skippedActionIds.filter(function (id) {
                return id !== actionId;
              });
            }

            minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);
            return 'break';
          }();

          if (_ret === 'break') break;
        }
      case ActionTypes.SET_ACTIONS_ACTIVE:
        {
          var start = liftedAction.start;
          var end = liftedAction.end;
          var active = liftedAction.active;

          var actionIds = [];
          for (var i = start; i < end; i++) {
            actionIds.push(i);
          }if (active) {
            skippedActionIds = (0, _difference2.default)(skippedActionIds, actionIds);
          } else {
            skippedActionIds = (0, _union2.default)(skippedActionIds, actionIds);
          }

          minInvalidatedStateIndex = stagedActionIds.indexOf(start);
          break;
        }
      case ActionTypes.JUMP_TO_STATE:
        {
          currentStateIndex = liftedAction.index;

          minInvalidatedStateIndex = Infinity;
          break;
        }
      case ActionTypes.JUMP_TO_ACTION:
        {
          var _index = stagedActionIds.indexOf(liftedAction.actionId);
          if (_index !== -1) currentStateIndex = _index;
          minInvalidatedStateIndex = Infinity;
          break;
        }
      case ActionTypes.SWEEP:
        {
          stagedActionIds = (0, _difference2.default)(stagedActionIds, skippedActionIds);
          skippedActionIds = [];
          currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);
          break;
        }
      case ActionTypes.REORDER_ACTION:
        {
          var _actionId = liftedAction.actionId;
          var idx = stagedActionIds.indexOf(_actionId);

          if (idx < 1) break;
          var beforeActionId = liftedAction.beforeActionId;
          var newIdx = stagedActionIds.indexOf(beforeActionId);
          if (newIdx < 1) {
            var count = stagedActionIds.length;
            newIdx = beforeActionId > stagedActionIds[count - 1] ? count : 1;
          }
          var diff = idx - newIdx;

          if (diff > 0) {
            stagedActionIds = [].concat(stagedActionIds.slice(0, newIdx), [_actionId], stagedActionIds.slice(newIdx, idx), stagedActionIds.slice(idx + 1));
            minInvalidatedStateIndex = newIdx;
          } else if (diff < 0) {
            stagedActionIds = [].concat(stagedActionIds.slice(0, idx), stagedActionIds.slice(idx + 1, newIdx), [_actionId], stagedActionIds.slice(newIdx));
            minInvalidatedStateIndex = idx;
          }
          break;
        }
      case ActionTypes.IMPORT_STATE:
        {
          if (Array.isArray(liftedAction.nextLiftedState)) {
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            currentStateIndex = liftedAction.nextLiftedState.length;
            computedStates = [];
            committedState = liftedAction.preloadedState;
            minInvalidatedStateIndex = 0;

            liftedAction.nextLiftedState.forEach(function (action) {
              actionsById[nextActionId] = liftAction(action);
              stagedActionIds.push(nextActionId);
              nextActionId++;
            });
          } else {
            var _liftedAction$nextLif = liftedAction.nextLiftedState;


            monitorState = _liftedAction$nextLif.monitorState;
            actionsById = _liftedAction$nextLif.actionsById;
            nextActionId = _liftedAction$nextLif.nextActionId;
            stagedActionIds = _liftedAction$nextLif.stagedActionIds;
            skippedActionIds = _liftedAction$nextLif.skippedActionIds;
            committedState = _liftedAction$nextLif.committedState;
            currentStateIndex = _liftedAction$nextLif.currentStateIndex;
            computedStates = _liftedAction$nextLif.computedStates;

            if (liftedAction.noRecompute) {
              minInvalidatedStateIndex = Infinity;
            }
          }

          break;
        }
      case ActionTypes.LOCK_CHANGES:
        {
          isLocked = liftedAction.status;
          minInvalidatedStateIndex = Infinity;
          break;
        }
      case ActionTypes.PAUSE_RECORDING:
        {
          isPaused = liftedAction.status;
          if (isPaused) {
            return computePausedAction(true);
          }

          actionsById = { 0: liftAction(INIT_ACTION) };
          nextActionId = 1;
          stagedActionIds = [0];
          skippedActionIds = [];
          committedState = computedStates[currentStateIndex].state;
          currentStateIndex = 0;
          computedStates = [];
          break;
        }
      case '@@redux/INIT':
        {
          if (options.shouldHotReload === false) {
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            committedState = computedStates.length === 0 ? initialCommittedState : computedStates[currentStateIndex].state;
            currentStateIndex = 0;
            computedStates = [];
          }

          minInvalidatedStateIndex = 0;

          if (options.maxAge && stagedActionIds.length > options.maxAge) {
            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);

            commitExcessActions(stagedActionIds.length - options.maxAge);

            minInvalidatedStateIndex = Infinity;
          }

          break;
        }
      default:
        {
          minInvalidatedStateIndex = Infinity;
          break;
        }
    }

    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);
    monitorState = monitorReducer(monitorState, liftedAction);
    return {
      monitorState: monitorState,
      actionsById: actionsById,
      nextActionId: nextActionId,
      stagedActionIds: stagedActionIds,
      skippedActionIds: skippedActionIds,
      committedState: committedState,
      currentStateIndex: currentStateIndex,
      computedStates: computedStates,
      isLocked: isLocked,
      isPaused: isPaused
    };
  };
}

function unliftState(liftedState) {
  var computedStates = liftedState.computedStates;
  var currentStateIndex = liftedState.currentStateIndex;
  var state = computedStates[currentStateIndex].state;

  return state;
}

function unliftStore(liftedStore, liftReducer) {
  var _extends3;

  var lastDefinedState = void 0;

  function getState() {
    var state = unliftState(liftedStore.getState());
    if (state !== undefined) {
      lastDefinedState = state;
    }
    return lastDefinedState;
  }

  return _extends({}, liftedStore, (_extends3 = {

    liftedStore: liftedStore,

    dispatch: function dispatch(action) {
      liftedStore.dispatch(liftAction(action));
      return action;
    },

    getState: getState,

    replaceReducer: function replaceReducer(nextReducer) {
      liftedStore.replaceReducer(liftReducer(nextReducer));
    }
  }, _extends3[_symbolObservable2.default] = function () {
    return _extends({}, liftedStore[_symbolObservable2.default](), {
      subscribe: function subscribe(observer) {
        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = liftedStore.subscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    });
  }, _extends3));
}

function instrument() {
  var monitorReducer = arguments.length <= 0 || arguments[0] === undefined ? function () {
    return null;
  } : arguments[0];
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  if (options.maxAge != null && options.maxAge < 2) {
    throw new Error('DevTools.instrument({ maxAge }) option, if specified, ' + 'may not be less than 2.');
  }

  return function (createStore) {
    return function (reducer, initialState, enhancer) {

      function liftReducer(r) {
        if (typeof r !== 'function') {
          if (r && typeof r.default === 'function') {
            throw new Error('Expected the reducer to be a function. ' + 'Instead got an object with a "default" field. ' + 'Did you pass a module instead of the default export? ' + 'Try passing require(...).default instead.');
          }
          throw new Error('Expected the reducer to be a function.');
        }
        return liftReducerWith(r, initialState, monitorReducer, options);
      }

      var liftedStore = createStore(liftReducer(reducer), enhancer);
      if (liftedStore.liftedStore) {
        throw new Error('DevTools instrumentation should not be applied more than once. ' + 'Check your store configuration.');
      }

      return unliftStore(liftedStore, liftReducer);
    };
  };
}
}, 568, null, "redux-devtools-instrument/lib/instrument.js");
__d(/* lodash/difference.js */function(global, require, module, exports) {var baseDifference = require(570                ), // 570 = ./_baseDifference
    baseFlatten = require(600             ), // 600 = ./_baseFlatten
    baseRest = require(603          ), // 603 = ./_baseRest
    isArrayLikeObject = require(611                  ); // 611 = ./isArrayLikeObject

var difference = baseRest(function (array, values) {
    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
});

module.exports = difference;
}, 569, null, "lodash/difference.js");
__d(/* lodash/_baseDifference.js */function(global, require, module, exports) {var SetCache = require(571          ), // 571 = ./_SetCache
    arrayIncludes = require(597               ), // 597 = ./_arrayIncludes
    arrayIncludesWith = require(598                   ), // 598 = ./_arrayIncludesWith
    arrayMap = require(431          ), // 431 = ./_arrayMap
    baseUnary = require(442           ), // 442 = ./_baseUnary
    cacheHas = require(599          ); // 599 = ./_cacheHas

var LARGE_ARRAY_SIZE = 200;

function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  } else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer: while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = comparator || value !== 0 ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    } else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;
}, 570, null, "lodash/_baseDifference.js");
__d(/* lodash/_SetCache.js */function(global, require, module, exports) {var MapCache = require(572          ), // 572 = ./_MapCache
    setCacheAdd = require(595             ), // 595 = ./_setCacheAdd
    setCacheHas = require(596             ); // 596 = ./_setCacheHas

function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache();
    while (++index < length) {
        this.add(values[index]);
    }
}

SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;
}, 571, null, "lodash/_SetCache.js");
__d(/* lodash/_MapCache.js */function(global, require, module, exports) {var mapCacheClear = require(573               ), // 573 = ./_mapCacheClear
    mapCacheDelete = require(589                ), // 589 = ./_mapCacheDelete
    mapCacheGet = require(592             ), // 592 = ./_mapCacheGet
    mapCacheHas = require(593             ), // 593 = ./_mapCacheHas
    mapCacheSet = require(594             ); // 594 = ./_mapCacheSet

function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;
}, 572, null, "lodash/_MapCache.js");
__d(/* lodash/_mapCacheClear.js */function(global, require, module, exports) {var Hash = require(574      ), // 574 = ./_Hash
    ListCache = require(581           ), // 581 = ./_ListCache
    Map = require(457     ); // 457 = ./_Map

function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;
}, 573, null, "lodash/_mapCacheClear.js");
__d(/* lodash/_Hash.js */function(global, require, module, exports) {var hashClear = require(575           ), // 575 = ./_hashClear
    hashDelete = require(577            ), // 577 = ./_hashDelete
    hashGet = require(578         ), // 578 = ./_hashGet
    hashHas = require(579         ), // 579 = ./_hashHas
    hashSet = require(580         ); // 580 = ./_hashSet

function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;
}, 574, null, "lodash/_Hash.js");
__d(/* lodash/_hashClear.js */function(global, require, module, exports) {var nativeCreate = require(576              ); // 576 = ./_nativeCreate

function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;
}, 575, null, "lodash/_hashClear.js");
__d(/* lodash/_nativeCreate.js */function(global, require, module, exports) {var getNative = require(451           ); // 451 = ./_getNative

var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;
}, 576, null, "lodash/_nativeCreate.js");
__d(/* lodash/_hashDelete.js */function(global, require, module, exports) {
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;
}, 577, null, "lodash/_hashDelete.js");
__d(/* lodash/_hashGet.js */function(global, require, module, exports) {var nativeCreate = require(576              ); // 576 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;
}, 578, null, "lodash/_hashGet.js");
__d(/* lodash/_hashHas.js */function(global, require, module, exports) {var nativeCreate = require(576              ); // 576 = ./_nativeCreate

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;
}, 579, null, "lodash/_hashHas.js");
__d(/* lodash/_hashSet.js */function(global, require, module, exports) {var nativeCreate = require(576              ); // 576 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;
}, 580, null, "lodash/_hashSet.js");
__d(/* lodash/_ListCache.js */function(global, require, module, exports) {var listCacheClear = require(582                ), // 582 = ./_listCacheClear
    listCacheDelete = require(583                 ), // 583 = ./_listCacheDelete
    listCacheGet = require(586              ), // 586 = ./_listCacheGet
    listCacheHas = require(587              ), // 587 = ./_listCacheHas
    listCacheSet = require(588              ); // 588 = ./_listCacheSet

function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;
}, 581, null, "lodash/_ListCache.js");
__d(/* lodash/_listCacheClear.js */function(global, require, module, exports) {
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;
}, 582, null, "lodash/_listCacheClear.js");
__d(/* lodash/_listCacheDelete.js */function(global, require, module, exports) {var assocIndexOf = require(584              ); // 584 = ./_assocIndexOf

var arrayProto = Array.prototype;

var splice = arrayProto.splice;

function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;
}, 583, null, "lodash/_listCacheDelete.js");
__d(/* lodash/_assocIndexOf.js */function(global, require, module, exports) {var eq = require(585   ); // 585 = ./eq

function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;
}, 584, null, "lodash/_assocIndexOf.js");
__d(/* lodash/eq.js */function(global, require, module, exports) {
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;
}, 585, null, "lodash/eq.js");
__d(/* lodash/_listCacheGet.js */function(global, require, module, exports) {var assocIndexOf = require(584              ); // 584 = ./_assocIndexOf

function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;
}, 586, null, "lodash/_listCacheGet.js");
__d(/* lodash/_listCacheHas.js */function(global, require, module, exports) {var assocIndexOf = require(584              ); // 584 = ./_assocIndexOf

function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;
}, 587, null, "lodash/_listCacheHas.js");
__d(/* lodash/_listCacheSet.js */function(global, require, module, exports) {var assocIndexOf = require(584              ); // 584 = ./_assocIndexOf

function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;
}, 588, null, "lodash/_listCacheSet.js");
__d(/* lodash/_mapCacheDelete.js */function(global, require, module, exports) {var getMapData = require(590            ); // 590 = ./_getMapData

function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;
}, 589, null, "lodash/_mapCacheDelete.js");
__d(/* lodash/_getMapData.js */function(global, require, module, exports) {var isKeyable = require(591           ); // 591 = ./_isKeyable

function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;
}, 590, null, "lodash/_getMapData.js");
__d(/* lodash/_isKeyable.js */function(global, require, module, exports) {
function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;
}, 591, null, "lodash/_isKeyable.js");
__d(/* lodash/_mapCacheGet.js */function(global, require, module, exports) {var getMapData = require(590            ); // 590 = ./_getMapData

function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;
}, 592, null, "lodash/_mapCacheGet.js");
__d(/* lodash/_mapCacheHas.js */function(global, require, module, exports) {var getMapData = require(590            ); // 590 = ./_getMapData

function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;
}, 593, null, "lodash/_mapCacheHas.js");
__d(/* lodash/_mapCacheSet.js */function(global, require, module, exports) {var getMapData = require(590            ); // 590 = ./_getMapData

function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;
}, 594, null, "lodash/_mapCacheSet.js");
__d(/* lodash/_setCacheAdd.js */function(global, require, module, exports) {
var HASH_UNDEFINED = '__lodash_hash_undefined__';

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;
}, 595, null, "lodash/_setCacheAdd.js");
__d(/* lodash/_setCacheHas.js */function(global, require, module, exports) {
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;
}, 596, null, "lodash/_setCacheHas.js");
__d(/* lodash/_arrayIncludes.js */function(global, require, module, exports) {var baseIndexOf = require(417             ); // 417 = ./_baseIndexOf

function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;
}, 597, null, "lodash/_arrayIncludes.js");
__d(/* lodash/_arrayIncludesWith.js */function(global, require, module, exports) {
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;
}, 598, null, "lodash/_arrayIncludesWith.js");
__d(/* lodash/_cacheHas.js */function(global, require, module, exports) {
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;
}, 599, null, "lodash/_cacheHas.js");
__d(/* lodash/_baseFlatten.js */function(global, require, module, exports) {var arrayPush = require(601           ), // 601 = ./_arrayPush
    isFlattenable = require(602               ); // 602 = ./_isFlattenable

function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;
}, 600, null, "lodash/_baseFlatten.js");
__d(/* lodash/_arrayPush.js */function(global, require, module, exports) {
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;
}, 601, null, "lodash/_arrayPush.js");
__d(/* lodash/_isFlattenable.js */function(global, require, module, exports) {var Symbol = require(357        ), // 357 = ./_Symbol
    isArguments = require(435            ), // 435 = ./isArguments
    isArray = require(424        ); // 424 = ./isArray

var spreadableSymbol = Symbol ? typeof Symbol === 'function' ? Symbol.isConcatSpreadable : '@@isConcatSpreadable' : undefined;

function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;
}, 602, null, "lodash/_isFlattenable.js");
__d(/* lodash/_baseRest.js */function(global, require, module, exports) {var identity = require(409         ), // 409 = ./identity
    overRest = require(604          ), // 604 = ./_overRest
    setToString = require(606             ); // 606 = ./_setToString

function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;
}, 603, null, "lodash/_baseRest.js");
__d(/* lodash/_overRest.js */function(global, require, module, exports) {var apply = require(605       ); // 605 = ./_apply

var nativeMax = Math.max;

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;
}, 604, null, "lodash/_overRest.js");
__d(/* lodash/_apply.js */function(global, require, module, exports) {
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;
}, 605, null, "lodash/_apply.js");
__d(/* lodash/_setToString.js */function(global, require, module, exports) {var baseSetToString = require(607                 ), // 607 = ./_baseSetToString
    shortOut = require(610          ); // 610 = ./_shortOut

var setToString = shortOut(baseSetToString);

module.exports = setToString;
}, 606, null, "lodash/_setToString.js");
__d(/* lodash/_baseSetToString.js */function(global, require, module, exports) {var constant = require(608         ), // 608 = ./constant
    defineProperty = require(609                ), // 609 = ./_defineProperty
    identity = require(409         ); // 409 = ./identity

var baseSetToString = !defineProperty ? identity : function (func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;
}, 607, null, "lodash/_baseSetToString.js");
__d(/* lodash/constant.js */function(global, require, module, exports) {
function constant(value) {
  return function () {
    return value;
  };
}

module.exports = constant;
}, 608, null, "lodash/constant.js");
__d(/* lodash/_defineProperty.js */function(global, require, module, exports) {var getNative = require(451           ); // 451 = ./_getNative

var defineProperty = function () {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

module.exports = defineProperty;
}, 609, null, "lodash/_defineProperty.js");
__d(/* lodash/_shortOut.js */function(global, require, module, exports) {
var HOT_COUNT = 800,
    HOT_SPAN = 16;

var nativeNow = Date.now;

function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;
}, 610, null, "lodash/_shortOut.js");
__d(/* lodash/isArrayLikeObject.js */function(global, require, module, exports) {var isArrayLike = require(421            ), // 421 = ./isArrayLike
    isObjectLike = require(364             ); // 364 = ./isObjectLike

function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;
}, 611, null, "lodash/isArrayLikeObject.js");
__d(/* lodash/union.js */function(global, require, module, exports) {var baseFlatten = require(600             ), // 600 = ./_baseFlatten
    baseRest = require(603          ), // 603 = ./_baseRest
    baseUniq = require(613          ), // 613 = ./_baseUniq
    isArrayLikeObject = require(611                  ); // 611 = ./isArrayLikeObject

var union = baseRest(function (arrays) {
  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
});

module.exports = union;
}, 612, null, "lodash/union.js");
__d(/* lodash/_baseUniq.js */function(global, require, module, exports) {var SetCache = require(571          ), // 571 = ./_SetCache
    arrayIncludes = require(597               ), // 597 = ./_arrayIncludes
    arrayIncludesWith = require(598                   ), // 598 = ./_arrayIncludesWith
    cacheHas = require(599          ), // 599 = ./_cacheHas
    createSet = require(614           ), // 614 = ./_createSet
    setToArray = require(616            ); // 616 = ./_setToArray

var LARGE_ARRAY_SIZE = 200;

function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  } else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache();
  } else {
    seen = iteratee ? [] : result;
  }
  outer: while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = comparator || value !== 0 ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    } else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;
}, 613, null, "lodash/_baseUniq.js");
__d(/* lodash/_createSet.js */function(global, require, module, exports) {var Set = require(459     ), // 459 = ./_Set
    noop = require(615     ), // 615 = ./noop
    setToArray = require(616            ); // 616 = ./_setToArray

var INFINITY = 1 / 0;

var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
  return new Set(values);
};

module.exports = createSet;
}, 614, null, "lodash/_createSet.js");
__d(/* lodash/noop.js */function(global, require, module, exports) {
function noop() {}

module.exports = noop;
}, 615, null, "lodash/noop.js");
__d(/* lodash/_setToArray.js */function(global, require, module, exports) {
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;
}, 616, null, "lodash/_setToArray.js");
__d(/* remote-redux-devtools/lib/constants.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
var defaultSocketOptions = exports.defaultSocketOptions = {
  secure: true,
  hostname: 'remotedev.io',
  port: 443,
  autoReconnect: true,
  autoReconnectOptions: {
    randomness: 30000
  }
};
}, 617, null, "remote-redux-devtools/lib/constants.js");
__d(/* rn-host-detect/index.js */function(global, require, module, exports) {'use strict';

function getByRemoteConfig(hostname) {
  var remoteModuleConfig = typeof window !== 'undefined' && window.__fbBatchedBridgeConfig && window.__fbBatchedBridgeConfig.remoteModuleConfig;
  if (!Array.isArray(remoteModuleConfig) || hostname !== 'localhost' && hostname !== '127.0.0.1') return hostname;

  var constants = (remoteModuleConfig.find(getConstants) || [])[1];
  if (constants) {
    var serverHost = constants.ServerHost || hostname;
    return serverHost.split(':')[0];
  }
  return hostname;
}

function getConstants(config) {
  return config && (config[0] === 'AndroidConstants' || config[0] === 'PlatformConstants');
}

module.exports = function (hostname) {
  if (typeof __fbBatchedBridge !== 'object' || hostname !== 'localhost' && hostname !== '127.0.0.1') {
    return hostname;
  }
  hostname = getByRemoteConfig(hostname);
  var originalWarn = console.warn;
  console.warn = function () {
    if (arguments[0] && arguments[0].indexOf('Requiring module \'NativeModules\' by name') > -1) return;
    return originalWarn.apply(console, arguments);
  };

  var NativeModules;
  var PlatformConstants;
  var AndroidConstants;
  if (typeof window === 'undefined' || !window.__DEV__ || typeof window.require !== 'function') {
    return hostname;
  }
  NativeModules = window.require('NativeModules');
  console.warn = originalWarn;
  if (!NativeModules || !NativeModules.PlatformConstants && !NativeModules.AndroidConstants) {
    return hostname;
  }
  PlatformConstants = NativeModules.PlatformConstants;
  AndroidConstants = NativeModules.AndroidConstants;

  var serverHost = (PlatformConstants ? PlatformConstants.ServerHost : AndroidConstants.ServerHost) || hostname;
  return serverHost.split(':')[0];
};
}, 618, null, "rn-host-detect/index.js");
__d(/* remotedev-utils/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

exports.generateId = generateId;
exports.getMethods = getMethods;
exports.getActionsArray = getActionsArray;
exports.evalAction = evalAction;
exports.evalMethod = evalMethod;
exports.stringify = stringify;
exports.getSeralizeParameter = getSeralizeParameter;

var _getParams = require(620         ); // 620 = get-params

var _getParams2 = _interopRequireDefault(_getParams);

var _jsan = require(541   ); // 541 = jsan

var _jsan2 = _interopRequireDefault(_jsan);

var _shortid = require(621      ); // 621 = shortid

var _shortid2 = _interopRequireDefault(_shortid);

var _serialize = require(631                                      ); // 631 = remotedev-serialize/immutable/serialize

var _serialize2 = _interopRequireDefault(_serialize);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function generateId(id) {
  return id || _shortid2.default.generate();
}

function flatTree(obj) {
  var namespace = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];

  var functions = [];
  Object.keys(obj).forEach(function (key) {
    var prop = obj[key];
    if (typeof prop === 'function') {
      functions.push({
        name: namespace + (key || prop.name || 'anonymous'),
        func: prop,
        args: (0, _getParams2.default)(prop)
      });
    } else if ((typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) === 'object') {
      functions = functions.concat(flatTree(prop, namespace + key + '.'));
    }
  });
  return functions;
}

function getMethods(obj) {
  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') return undefined;
  var functions = void 0;
  var m = void 0;
  if (obj.__proto__) m = obj.__proto__.__proto__;
  if (!m) m = obj;

  Object.getOwnPropertyNames(m).forEach(function (key) {
    var propDescriptor = Object.getOwnPropertyDescriptor(m, key);
    if (!propDescriptor || 'get' in propDescriptor || 'set' in propDescriptor) return;
    var prop = m[key];
    if (typeof prop === 'function' && key !== 'constructor') {
      if (!functions) functions = [];
      functions.push({
        name: key || prop.name || 'anonymous',
        args: (0, _getParams2.default)(prop)
      });
    }
  });
  return functions;
}

function getActionsArray(actionCreators) {
  if (Array.isArray(actionCreators)) return actionCreators;
  return flatTree(actionCreators);
}

var interpretArg = function interpretArg(arg) {
  return new Function('return ' + arg)();
};

function evalArgs(inArgs, restArgs) {
  var args = inArgs.map(interpretArg);
  if (!restArgs) return args;
  var rest = interpretArg(restArgs);
  if (Array.isArray(rest)) return args.concat.apply(args, rest);
  throw new Error('rest must be an array');
}

function evalAction(action, actionCreators) {
  if (typeof action === 'string') {
    return new Function('return ' + action)();
  }

  var actionCreator = actionCreators[action.selected].func;
  var args = evalArgs(action.args, action.rest);
  return actionCreator.apply(undefined, args);
}

function evalMethod(action, obj) {
  if (typeof action === 'string') {
    return new Function('return ' + action).call(obj);
  }

  var args = evalArgs(action.args, action.rest);
  return new Function('args', 'return this.' + action.name + '(args)').apply(obj, args);
}


function tryCatchStringify(obj) {
  try {
    return JSON.stringify(obj);
  } catch (err) {
    if (process.env.NODE_ENV !== 'production') console.log('Failed to stringify', err);

    return _jsan2.default.stringify(obj, null, null, { circular: '[CIRCULAR]' });
  }
}

function stringify(obj, serialize) {
  if (typeof serialize === 'undefined') {
    return tryCatchStringify(obj);
  }
  if (serialize === true) {
    return _jsan2.default.stringify(obj, function (key, value) {
      if (value && typeof value.toJS === 'function') return value.toJS();
      return value;
    }, null, true);
  }
  return _jsan2.default.stringify(obj, serialize.replacer, null, serialize.options);
}

function getSeralizeParameter(config, param) {
  var serialize = config.serialize;
  if (serialize) {
    if (serialize === true) return { options: true };
    if (serialize.immutable) {
      return {
        replacer: (0, _serialize2.default)(serialize.immutable, serialize.refs).replacer,
        options: serialize.options || true
      };
    }
    if (!serialize.replacer) return { options: serialize.options };
    return { replacer: serialize.replacer, options: serialize.options || true };
  }

  var value = config[param];
  if (typeof value === 'undefined') return undefined;
  console.warn('`' + param + '` parameter for Redux DevTools Extension is deprecated. Use `serialize` parameter instead: https://github.com/zalmoxisus/redux-devtools-extension/releases/tag/v2.12.1');

  if (typeof serializeState === 'boolean') return { options: value };
  if (typeof serializeState === 'function') return { replacer: value };
  return value;
}
}, 619, null, "remotedev-utils/lib/index.js");
__d(/* get-params/index.js */function(global, require, module, exports) {
var GetParams = function GetParams(func) {
	'use strict';

	if (typeof func !== 'function') {
		return [];
	}

	var patternComments = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
	var patternArguments = /([^\s,]+)/g;

	var funcString = func.toString().replace(patternComments, '');

	var result = funcString.slice(funcString.indexOf('(') + 1, funcString.indexOf(')')).match(patternArguments);

	if (result === null) {
		return [];
	}

	return result;
};

if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
	module.exports = GetParams;
}

if (typeof window !== 'undefined') {
	window.GetParams = GetParams;
}
}, 620, null, "get-params/index.js");
__d(/* shortid/index.js */function(global, require, module, exports) {'use strict';

module.exports = require(622          ); // 622 = ./lib/index
}, 621, null, "shortid/index.js");
__d(/* shortid/lib/index.js */function(global, require, module, exports) {'use strict';

var alphabet = require(623         ); // 623 = ./alphabet
var encode = require(625       ); // 625 = ./encode
var decode = require(627       ); // 627 = ./decode
var build = require(628      ); // 628 = ./build
var isValid = require(629         ); // 629 = ./is-valid

var clusterWorkerId = require(630                       ) || 0; // 630 = ./util/cluster-worker-id

function seed(seedValue) {
  alphabet.seed(seedValue);
  return module.exports;
}

function worker(workerId) {
  clusterWorkerId = workerId;
  return module.exports;
}

function characters(newCharacters) {
  if (newCharacters !== undefined) {
    alphabet.characters(newCharacters);
  }

  return alphabet.shuffled();
}

function generate() {
  return build(clusterWorkerId);
}

module.exports = generate;
module.exports.generate = generate;
module.exports.seed = seed;
module.exports.worker = worker;
module.exports.characters = characters;
module.exports.decode = decode;
module.exports.isValid = isValid;
}, 622, null, "shortid/lib/index.js");
__d(/* shortid/lib/alphabet.js */function(global, require, module, exports) {'use strict';

var randomFromSeed = require(624                        ); // 624 = ./random/random-from-seed

var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
var alphabet;
var previousSeed;

var shuffled;

function reset() {
    shuffled = false;
}

function setCharacters(_alphabet_) {
    if (!_alphabet_) {
        if (alphabet !== ORIGINAL) {
            alphabet = ORIGINAL;
            reset();
        }
        return;
    }

    if (_alphabet_ === alphabet) {
        return;
    }

    if (_alphabet_.length !== ORIGINAL.length) {
        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
    }

    var unique = _alphabet_.split('').filter(function (item, ind, arr) {
        return ind !== arr.lastIndexOf(item);
    });

    if (unique.length) {
        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
    }

    alphabet = _alphabet_;
    reset();
}

function characters(_alphabet_) {
    setCharacters(_alphabet_);
    return alphabet;
}

function setSeed(seed) {
    randomFromSeed.seed(seed);
    if (previousSeed !== seed) {
        reset();
        previousSeed = seed;
    }
}

function shuffle() {
    if (!alphabet) {
        setCharacters(ORIGINAL);
    }

    var sourceArray = alphabet.split('');
    var targetArray = [];
    var r = randomFromSeed.nextValue();
    var characterIndex;

    while (sourceArray.length > 0) {
        r = randomFromSeed.nextValue();
        characterIndex = Math.floor(r * sourceArray.length);
        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
    }
    return targetArray.join('');
}

function getShuffled() {
    if (shuffled) {
        return shuffled;
    }
    shuffled = shuffle();
    return shuffled;
}

function lookup(index) {
    var alphabetShuffled = getShuffled();
    return alphabetShuffled[index];
}

module.exports = {
    characters: characters,
    seed: setSeed,
    lookup: lookup,
    shuffled: getShuffled
};
}, 623, null, "shortid/lib/alphabet.js");
__d(/* shortid/lib/random/random-from-seed.js */function(global, require, module, exports) {'use strict';

var seed = 1;

function getNextValue() {
    seed = (seed * 9301 + 49297) % 233280;
    return seed / 233280.0;
}

function setSeed(_seed_) {
    seed = _seed_;
}

module.exports = {
    nextValue: getNextValue,
    seed: setSeed
};
}, 624, null, "shortid/lib/random/random-from-seed.js");
__d(/* shortid/lib/encode.js */function(global, require, module, exports) {'use strict';

var randomByte = require(626                   ); // 626 = ./random/random-byte

function encode(lookup, number) {
    var loopCounter = 0;
    var done;

    var str = '';

    while (!done) {
        str = str + lookup(number >> 4 * loopCounter & 0x0f | randomByte());
        done = number < Math.pow(16, loopCounter + 1);
        loopCounter++;
    }
    return str;
}

module.exports = encode;
}, 625, null, "shortid/lib/encode.js");
__d(/* shortid/lib/random/random-byte-browser.js */function(global, require, module, exports) {'use strict';

var crypto = typeof window === 'object' && (window.crypto || window.msCrypto);

function randomByte() {
    if (!crypto || !crypto.getRandomValues) {
        return Math.floor(Math.random() * 256) & 0x30;
    }
    var dest = new Uint8Array(1);
    crypto.getRandomValues(dest);
    return dest[0] & 0x30;
}

module.exports = randomByte;
}, 626, null, "shortid/lib/random/random-byte-browser.js");
__d(/* shortid/lib/decode.js */function(global, require, module, exports) {'use strict';

var alphabet = require(623         ); // 623 = ./alphabet

function decode(id) {
    var characters = alphabet.shuffled();
    return {
        version: characters.indexOf(id.substr(0, 1)) & 0x0f,
        worker: characters.indexOf(id.substr(1, 1)) & 0x0f
    };
}

module.exports = decode;
}, 627, null, "shortid/lib/decode.js");
__d(/* shortid/lib/build.js */function(global, require, module, exports) {'use strict';

var encode = require(625       ); // 625 = ./encode
var alphabet = require(623         ); // 623 = ./alphabet

var REDUCE_TIME = 1459707606518;

var version = 6;

var counter;

var previousSeconds;

function build(clusterWorkerId) {

    var str = '';

    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

    if (seconds === previousSeconds) {
        counter++;
    } else {
        counter = 0;
        previousSeconds = seconds;
    }

    str = str + encode(alphabet.lookup, version);
    str = str + encode(alphabet.lookup, clusterWorkerId);
    if (counter > 0) {
        str = str + encode(alphabet.lookup, counter);
    }
    str = str + encode(alphabet.lookup, seconds);

    return str;
}

module.exports = build;
}, 628, null, "shortid/lib/build.js");
__d(/* shortid/lib/is-valid.js */function(global, require, module, exports) {'use strict';

var alphabet = require(623         ); // 623 = ./alphabet

function isShortId(id) {
    if (!id || typeof id !== 'string' || id.length < 6) {
        return false;
    }

    var characters = alphabet.characters();
    var len = id.length;
    for (var i = 0; i < len; i++) {
        if (characters.indexOf(id[i]) === -1) {
            return false;
        }
    }
    return true;
}

module.exports = isShortId;
}, 629, null, "shortid/lib/is-valid.js");
__d(/* shortid/lib/util/cluster-worker-id-browser.js */function(global, require, module, exports) {'use strict';

module.exports = 0;
}, 630, null, "shortid/lib/util/cluster-worker-id-browser.js");
__d(/* remotedev-serialize/immutable/serialize.js */function(global, require, module, exports) {var helpers = require(632         ); // 632 = ../helpers
var mark = helpers.mark;
var extract = helpers.extract;
var refer = helpers.refer;

module.exports = function serialize(Immutable, refs) {
  return {
    replacer: function replacer(key, value) {
      if (value instanceof Immutable.Record) return refer(value, 'ImmutableRecord', 'toObject', refs);
      if (value instanceof Immutable.Range) return extract(value, 'ImmutableRange');
      if (value instanceof Immutable.Repeat) return extract(value, 'ImmutableRepeat');
      if (Immutable.OrderedMap.isOrderedMap(value)) return mark(value, 'ImmutableOrderedMap', 'toObject');
      if (Immutable.Map.isMap(value)) return mark(value, 'ImmutableMap', 'toObject');
      if (Immutable.List.isList(value)) return mark(value, 'ImmutableList', 'toArray');
      if (Immutable.OrderedSet.isOrderedSet(value)) return mark(value, 'ImmutableOrderedSet', 'toArray');
      if (Immutable.Set.isSet(value)) return mark(value, 'ImmutableSet', 'toArray');
      if (Immutable.Seq.isSeq(value)) return mark(value, 'ImmutableSeq', 'toArray');
      if (Immutable.Stack.isStack(value)) return mark(value, 'ImmutableStack', 'toArray');
      return value;
    },

    reviver: function reviver(key, value) {
      if (typeof value === 'object' && value !== null && '__serializedType__' in value) {
        var data = value.data;
        switch (value.__serializedType__) {
          case 'ImmutableMap':
            return Immutable.Map(data);
          case 'ImmutableOrderedMap':
            return Immutable.OrderedMap(data);
          case 'ImmutableList':
            return Immutable.List(data);
          case 'ImmutableRange':
            return Immutable.Range(data._start, data._end, data._step);
          case 'ImmutableRepeat':
            return Immutable.Repeat(data._value, data.size);
          case 'ImmutableSet':
            return Immutable.Set(data);
          case 'ImmutableOrderedSet':
            return Immutable.OrderedSet(data);
          case 'ImmutableSeq':
            return Immutable.Seq(data);
          case 'ImmutableStack':
            return Immutable.Stack(data);
          case 'ImmutableRecord':
            return (refs && refs[value.__serializedRef__] || Immutable.Map)(data);
          default:
            return data;
        }
      }
      return value;
    }
  };
};
}, 631, null, "remotedev-serialize/immutable/serialize.js");
__d(/* remotedev-serialize/helpers/index.js */function(global, require, module, exports) {function mark(data, type, transformMethod) {
  return {
    data: transformMethod ? data[transformMethod]() : data,
    __serializedType__: type
  };
}

function extract(data, type) {
  return {
    data: babelHelpers.extends({}, data),
    __serializedType__: type
  };
}

function refer(data, type, isArray, refs) {
  var r = mark(data, type, isArray);
  if (!refs) return r;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    if (typeof ref === 'function' && data instanceof ref) {
      r.__serializedRef__ = i;
      return r;
    }
  }
  return r;
}

module.exports = {
  mark: mark,
  extract: extract,
  refer: refer
};
}, 632, null, "remotedev-serialize/helpers/index.js");
__d(/* remotedev-utils/lib/catchErrors.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

exports.default = catchErrors;
var ERROR = '@@remotedev/ERROR';

function catchErrors(sendError) {
  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && _typeof(window.onerror) === 'object') {
    window.onerror = function (message, url, lineNo, columnNo, error) {
      var errorAction = { type: ERROR, message: message, url: url, lineNo: lineNo, columnNo: columnNo };
      if (error && error.stack) errorAction.stack = error.stack;
      sendError(errorAction);
      return false;
    };
  } else if (typeof global !== 'undefined' && global.ErrorUtils) {
    global.ErrorUtils.setGlobalHandler(function (error, isFatal) {
      sendError({ type: ERROR, error: error, isFatal: isFatal });
    });
  }

  if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && typeof console.error === 'function' && !console.beforeRemotedev) {
    console.beforeRemotedev = console.error.bind(console);
    console.error = function () {
      var errorAction = { type: ERROR };
      var error = arguments[0];
      errorAction.message = error.message ? error.message : error;
      if (error.sourceURL) {
        errorAction = _extends({}, errorAction, { sourceURL: error.sourceURL, line: error.line, column: error.column
        });
      }
      if (error.stack) errorAction.stack = error.stack;
      sendError(errorAction);
      console.beforeRemotedev.apply(null, arguments);
    };
  }
}
}, 633, null, "remotedev-utils/lib/catchErrors.js");
__d(/* remotedev-utils/lib/filters.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.FilterState = undefined;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.arrToRegex = arrToRegex;
exports.getLocalFilter = getLocalFilter;
exports.isFiltered = isFiltered;
exports.filterStagedActions = filterStagedActions;
exports.filterState = filterState;

var _mapValues = require(635               ); // 635 = lodash/mapValues

var _mapValues2 = _interopRequireDefault(_mapValues);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var FilterState = exports.FilterState = {
  DO_NOT_FILTER: 'DO_NOT_FILTER',
  BLACKLIST_SPECIFIC: 'BLACKLIST_SPECIFIC',
  WHITELIST_SPECIFIC: 'WHITELIST_SPECIFIC'
};

function arrToRegex(v) {
  return typeof v === 'string' ? v : v.join('|');
}

function filterActions(actionsById, actionsFilter) {
  if (!actionsFilter) return actionsById;
  return (0, _mapValues2.default)(actionsById, function (action, id) {
    return _extends({}, action, { action: actionsFilter(action.action, id) });
  });
}

function filterStates(computedStates, statesFilter) {
  if (!statesFilter) return computedStates;
  return computedStates.map(function (state, idx) {
    return _extends({}, state, { state: statesFilter(state.state, idx) });
  });
}

function getLocalFilter(config) {
  if (config.actionsBlacklist || config.actionsWhitelist) {
    return {
      whitelist: config.actionsWhitelist && config.actionsWhitelist.join('|'),
      blacklist: config.actionsBlacklist && config.actionsBlacklist.join('|')
    };
  }
  return undefined;
}

function getDevToolsOptions() {
  return typeof window !== 'undefined' && window.devToolsOptions || {};
}

function isFiltered(action, localFilter) {
  var _ref = action.action || action;

  var type = _ref.type;

  var opts = getDevToolsOptions();
  if (!localFilter && opts.filter && opts.filter === FilterState.DO_NOT_FILTER || type && typeof type.match !== 'function') return false;

  var _ref2 = localFilter || opts;

  var whitelist = _ref2.whitelist;
  var blacklist = _ref2.blacklist;

  return whitelist && !type.match(whitelist) || blacklist && type.match(blacklist);
}

function filterStagedActions(state, filters) {
  if (!filters) return state;

  var filteredStagedActionIds = [];
  var filteredComputedStates = [];

  state.stagedActionIds.forEach(function (id, idx) {
    if (!isFiltered(state.actionsById[id], filters)) {
      filteredStagedActionIds.push(id);
      filteredComputedStates.push(state.computedStates[idx]);
    }
  });

  return _extends({}, state, {
    stagedActionIds: filteredStagedActionIds,
    computedStates: filteredComputedStates
  });
}

function filterState(state, type, localFilter, stateSanitizer, actionSanitizer, nextActionId, predicate) {
  if (type === 'ACTION') return !stateSanitizer ? state : stateSanitizer(state, nextActionId - 1);else if (type !== 'STATE') return state;

  var _getDevToolsOptions = getDevToolsOptions();

  var filter = _getDevToolsOptions.filter;

  if (predicate || localFilter || filter && filter !== FilterState.DO_NOT_FILTER) {
    var _ret = function () {
      var filteredStagedActionIds = [];
      var filteredComputedStates = [];
      var sanitizedActionsById = actionSanitizer && {};
      var actionsById = state.actionsById;
      var computedStates = state.computedStates;

      state.stagedActionIds.forEach(function (id, idx) {
        var liftedAction = actionsById[id];
        var currAction = liftedAction.action;
        var liftedState = computedStates[idx];
        var currState = liftedState.state;
        if (idx) {
          if (predicate && !predicate(currState, currAction)) return;
          if (isFiltered(currAction, localFilter)) return;
        }

        filteredStagedActionIds.push(id);
        filteredComputedStates.push(stateSanitizer ? _extends({}, liftedState, { state: stateSanitizer(currState, idx) }) : liftedState);
        if (actionSanitizer) {
          sanitizedActionsById[id] = _extends({}, liftedAction, { action: actionSanitizer(currAction, id)
          });
        }
      });

      return {
        v: _extends({}, state, {
          actionsById: sanitizedActionsById || actionsById,
          stagedActionIds: filteredStagedActionIds,
          computedStates: filteredComputedStates
        })
      };
    }();

    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
  }

  if (!stateSanitizer && !actionSanitizer) return state;
  return _extends({}, state, {
    actionsById: filterActions(state.actionsById, actionSanitizer),
    computedStates: filterStates(state.computedStates, stateSanitizer)
  });
}
}, 634, null, "remotedev-utils/lib/filters.js");
__d(/* lodash/mapValues.js */function(global, require, module, exports) {var baseAssignValue = require(636                 ), // 636 = ./_baseAssignValue
    baseForOwn = require(637            ), // 637 = ./_baseForOwn
    baseIteratee = require(640              ); // 640 = ./_baseIteratee

function mapValues(object, iteratee) {
  var result = {};
  iteratee = baseIteratee(iteratee, 3);

  baseForOwn(object, function (value, key, object) {
    baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

module.exports = mapValues;
}, 635, null, "lodash/mapValues.js");
__d(/* lodash/_baseAssignValue.js */function(global, require, module, exports) {var defineProperty = require(609                ); // 609 = ./_defineProperty

function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;
}, 636, null, "lodash/_baseAssignValue.js");
__d(/* lodash/_baseForOwn.js */function(global, require, module, exports) {var baseFor = require(638         ), // 638 = ./_baseFor
    keys = require(432     ); // 432 = ./keys

function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;
}, 637, null, "lodash/_baseForOwn.js");
__d(/* lodash/_baseFor.js */function(global, require, module, exports) {var createBaseFor = require(639               ); // 639 = ./_createBaseFor

var baseFor = createBaseFor();

module.exports = baseFor;
}, 638, null, "lodash/_baseFor.js");
__d(/* lodash/_createBaseFor.js */function(global, require, module, exports) {
function createBaseFor(fromRight) {
  return function (object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;
}, 639, null, "lodash/_createBaseFor.js");
__d(/* lodash/_baseIteratee.js */function(global, require, module, exports) {var baseMatches = require(641             ), // 641 = ./_baseMatches
    baseMatchesProperty = require(665                     ), // 665 = ./_baseMatchesProperty
    identity = require(409         ), // 409 = ./identity
    isArray = require(424        ), // 424 = ./isArray
    property = require(677         ); // 677 = ./property

function baseIteratee(value) {
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;
}, 640, null, "lodash/_baseIteratee.js");
__d(/* lodash/_baseMatches.js */function(global, require, module, exports) {var baseIsMatch = require(642             ), // 642 = ./_baseIsMatch
    getMatchData = require(662              ), // 662 = ./_getMatchData
    matchesStrictComparable = require(664                         ); // 664 = ./_matchesStrictComparable

function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function (object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;
}, 641, null, "lodash/_baseMatches.js");
__d(/* lodash/_baseIsMatch.js */function(global, require, module, exports) {var Stack = require(643       ), // 643 = ./_Stack
    baseIsEqual = require(649             ); // 649 = ./_baseIsEqual

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;
}, 642, null, "lodash/_baseIsMatch.js");
__d(/* lodash/_Stack.js */function(global, require, module, exports) {var ListCache = require(581           ), // 581 = ./_ListCache
    stackClear = require(644            ), // 644 = ./_stackClear
    stackDelete = require(645             ), // 645 = ./_stackDelete
    stackGet = require(646          ), // 646 = ./_stackGet
    stackHas = require(647          ), // 647 = ./_stackHas
    stackSet = require(648          ); // 648 = ./_stackSet

function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;
}, 643, null, "lodash/_Stack.js");
__d(/* lodash/_stackClear.js */function(global, require, module, exports) {var ListCache = require(581           ); // 581 = ./_ListCache

function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;
}, 644, null, "lodash/_stackClear.js");
__d(/* lodash/_stackDelete.js */function(global, require, module, exports) {
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;
}, 645, null, "lodash/_stackDelete.js");
__d(/* lodash/_stackGet.js */function(global, require, module, exports) {
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;
}, 646, null, "lodash/_stackGet.js");
__d(/* lodash/_stackHas.js */function(global, require, module, exports) {
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;
}, 647, null, "lodash/_stackHas.js");
__d(/* lodash/_stackSet.js */function(global, require, module, exports) {var ListCache = require(581           ), // 581 = ./_ListCache
    Map = require(457     ), // 457 = ./_Map
    MapCache = require(572          ); // 572 = ./_MapCache

var LARGE_ARRAY_SIZE = 200;

function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;
}, 648, null, "lodash/_stackSet.js");
__d(/* lodash/_baseIsEqual.js */function(global, require, module, exports) {var baseIsEqualDeep = require(650                 ), // 650 = ./_baseIsEqualDeep
    isObjectLike = require(364             ); // 364 = ./isObjectLike

function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;
}, 649, null, "lodash/_baseIsEqual.js");
__d(/* lodash/_baseIsEqualDeep.js */function(global, require, module, exports) {var Stack = require(643       ), // 643 = ./_Stack
    equalArrays = require(651             ), // 651 = ./_equalArrays
    equalByTag = require(653            ), // 653 = ./_equalByTag
    equalObjects = require(656              ), // 656 = ./_equalObjects
    getTag = require(449        ), // 449 = ./_getTag
    isArray = require(424        ), // 424 = ./isArray
    isBuffer = require(437         ), // 437 = ./isBuffer
    isTypedArray = require(440             ); // 440 = ./isTypedArray

var COMPARE_PARTIAL_FLAG = 1;

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;
}, 650, null, "lodash/_baseIsEqualDeep.js");
__d(/* lodash/_equalArrays.js */function(global, require, module, exports) {var SetCache = require(571          ), // 571 = ./_SetCache
    arraySome = require(652           ), // 652 = ./_arraySome
    cacheHas = require(599          ); // 599 = ./_cacheHas

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }

  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

  stack.set(array, other);
  stack.set(other, array);

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }

    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;
}, 651, null, "lodash/_equalArrays.js");
__d(/* lodash/_arraySome.js */function(global, require, module, exports) {
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;
}, 652, null, "lodash/_arraySome.js");
__d(/* lodash/_equalByTag.js */function(global, require, module, exports) {var Symbol = require(357        ), // 357 = ./_Symbol
    Uint8Array = require(654            ), // 654 = ./_Uint8Array
    eq = require(585   ), // 585 = ./eq
    equalArrays = require(651             ), // 651 = ./_equalArrays
    mapToArray = require(655            ), // 655 = ./_mapToArray
    setToArray = require(616            ); // 616 = ./_setToArray

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }

      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;
}, 653, null, "lodash/_equalByTag.js");
__d(/* lodash/_Uint8Array.js */function(global, require, module, exports) {var root = require(358      ); // 358 = ./_root

var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;
}, 654, null, "lodash/_Uint8Array.js");
__d(/* lodash/_mapToArray.js */function(global, require, module, exports) {
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;
}, 655, null, "lodash/_mapToArray.js");
__d(/* lodash/_equalObjects.js */function(global, require, module, exports) {var getAllKeys = require(657            ); // 657 = ./_getAllKeys

var COMPARE_PARTIAL_FLAG = 1;

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }

  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }

    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;
}, 656, null, "lodash/_equalObjects.js");
__d(/* lodash/_getAllKeys.js */function(global, require, module, exports) {var baseGetAllKeys = require(658                ), // 658 = ./_baseGetAllKeys
    getSymbols = require(659            ), // 659 = ./_getSymbols
    keys = require(432     ); // 432 = ./keys

function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;
}, 657, null, "lodash/_getAllKeys.js");
__d(/* lodash/_baseGetAllKeys.js */function(global, require, module, exports) {var arrayPush = require(601           ), // 601 = ./_arrayPush
    isArray = require(424        ); // 424 = ./isArray

function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;
}, 658, null, "lodash/_baseGetAllKeys.js");
__d(/* lodash/_getSymbols.js */function(global, require, module, exports) {var arrayFilter = require(660             ), // 660 = ./_arrayFilter
    stubArray = require(661          ); // 661 = ./stubArray

var objectProto = Object.prototype;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var nativeGetSymbols = Object.getOwnPropertySymbols;

var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;
}, 659, null, "lodash/_getSymbols.js");
__d(/* lodash/_arrayFilter.js */function(global, require, module, exports) {
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;
}, 660, null, "lodash/_arrayFilter.js");
__d(/* lodash/stubArray.js */function(global, require, module, exports) {
function stubArray() {
  return [];
}

module.exports = stubArray;
}, 661, null, "lodash/stubArray.js");
__d(/* lodash/_getMatchData.js */function(global, require, module, exports) {var isStrictComparable = require(663                    ), // 663 = ./_isStrictComparable
    keys = require(432     ); // 432 = ./keys

function getMatchData(object) {
    var result = keys(object),
        length = result.length;

    while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
}

module.exports = getMatchData;
}, 662, null, "lodash/_getMatchData.js");
__d(/* lodash/_isStrictComparable.js */function(global, require, module, exports) {var isObject = require(411         ); // 411 = ./isObject

function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;
}, 663, null, "lodash/_isStrictComparable.js");
__d(/* lodash/_matchesStrictComparable.js */function(global, require, module, exports) {
function matchesStrictComparable(key, srcValue) {
  return function (object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
  };
}

module.exports = matchesStrictComparable;
}, 664, null, "lodash/_matchesStrictComparable.js");
__d(/* lodash/_baseMatchesProperty.js */function(global, require, module, exports) {var baseIsEqual = require(649             ), // 649 = ./_baseIsEqual
    get = require(666    ), // 666 = ./get
    hasIn = require(674      ), // 674 = ./hasIn
    isKey = require(669       ), // 669 = ./_isKey
    isStrictComparable = require(663                    ), // 663 = ./_isStrictComparable
    matchesStrictComparable = require(664                         ), // 664 = ./_matchesStrictComparable
    toKey = require(673       ); // 673 = ./_toKey

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function (object) {
    var objValue = get(object, path);
    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;
}, 665, null, "lodash/_baseMatchesProperty.js");
__d(/* lodash/get.js */function(global, require, module, exports) {var baseGet = require(667         ); // 667 = ./_baseGet

function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;
}, 666, null, "lodash/get.js");
__d(/* lodash/_baseGet.js */function(global, require, module, exports) {var castPath = require(668          ), // 668 = ./_castPath
    toKey = require(673       ); // 673 = ./_toKey

function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return index && index == length ? object : undefined;
}

module.exports = baseGet;
}, 667, null, "lodash/_baseGet.js");
__d(/* lodash/_castPath.js */function(global, require, module, exports) {var isArray = require(424        ), // 424 = ./isArray
    isKey = require(669       ), // 669 = ./_isKey
    stringToPath = require(670              ), // 670 = ./_stringToPath
    toString = require(461         ); // 461 = ./toString

function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;
}, 668, null, "lodash/_castPath.js");
__d(/* lodash/_isKey.js */function(global, require, module, exports) {var isArray = require(424        ), // 424 = ./isArray
    isSymbol = require(428         ); // 428 = ./isSymbol

var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

module.exports = isKey;
}, 669, null, "lodash/_isKey.js");
__d(/* lodash/_stringToPath.js */function(global, require, module, exports) {var memoizeCapped = require(671               ); // 671 = ./_memoizeCapped

var reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

var reEscapeChar = /\\(\\)?/g;

var stringToPath = memoizeCapped(function (string) {
  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function (match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});

module.exports = stringToPath;
}, 670, null, "lodash/_stringToPath.js");
__d(/* lodash/_memoizeCapped.js */function(global, require, module, exports) {var memoize = require(672        ); // 672 = ./memoize

var MAX_MEMOIZE_SIZE = 500;

function memoizeCapped(func) {
  var result = memoize(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;
}, 671, null, "lodash/_memoizeCapped.js");
__d(/* lodash/memoize.js */function(global, require, module, exports) {var MapCache = require(572          ); // 572 = ./_MapCache

var FUNC_ERROR_TEXT = 'Expected a function';

function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function memoized() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}

memoize.Cache = MapCache;

module.exports = memoize;
}, 672, null, "lodash/memoize.js");
__d(/* lodash/_toKey.js */function(global, require, module, exports) {var isSymbol = require(428         ); // 428 = ./isSymbol

var INFINITY = 1 / 0;

function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = toKey;
}, 673, null, "lodash/_toKey.js");
__d(/* lodash/hasIn.js */function(global, require, module, exports) {var baseHasIn = require(675           ), // 675 = ./_baseHasIn
    hasPath = require(676         ); // 676 = ./_hasPath

function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;
}, 674, null, "lodash/hasIn.js");
__d(/* lodash/_baseHasIn.js */function(global, require, module, exports) {
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;
}, 675, null, "lodash/_baseHasIn.js");
__d(/* lodash/_hasPath.js */function(global, require, module, exports) {var castPath = require(668          ), // 668 = ./_castPath
    isArguments = require(435            ), // 435 = ./isArguments
    isArray = require(424        ), // 424 = ./isArray
    isIndex = require(439         ), // 439 = ./_isIndex
    isLength = require(422         ), // 422 = ./isLength
    toKey = require(673       ); // 673 = ./_toKey

function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;
}, 676, null, "lodash/_hasPath.js");
__d(/* lodash/property.js */function(global, require, module, exports) {var baseProperty = require(678              ), // 678 = ./_baseProperty
    basePropertyDeep = require(679                  ), // 679 = ./_basePropertyDeep
    isKey = require(669       ), // 669 = ./_isKey
    toKey = require(673       ); // 673 = ./_toKey

function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;
}, 677, null, "lodash/property.js");
__d(/* lodash/_baseProperty.js */function(global, require, module, exports) {
function baseProperty(key) {
  return function (object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;
}, 678, null, "lodash/_baseProperty.js");
__d(/* lodash/_basePropertyDeep.js */function(global, require, module, exports) {var baseGet = require(667         ); // 667 = ./_baseGet

function basePropertyDeep(path) {
  return function (object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;
}, 679, null, "lodash/_basePropertyDeep.js");
__d(/* TalkPresidential/build/reducers/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _navigation = require(681                                 ); // 681 = ./../screens/navigation/navigation

var _loginReducer = require(833             ); // 833 = ./loginReducer

var _loginReducer2 = babelHelpers.interopRequireDefault(_loginReducer);

var _dataReducer = require(834            ); // 834 = ./dataReducer

var _dataReducer2 = babelHelpers.interopRequireDefault(_dataReducer);

var _authReducer = require(836            ); // 836 = ./authReducer

var _authReducer2 = babelHelpers.interopRequireDefault(_authReducer);

var _friendsReducer = require(837               ); // 837 = ./friendsReducer

var _friendsReducer2 = babelHelpers.interopRequireDefault(_friendsReducer);

var _currentGameReducer = require(838                   ); // 838 = ./currentGameReducer

var _currentGameReducer2 = babelHelpers.interopRequireDefault(_currentGameReducer);

var _composeTurnReducer = require(839                   ); // 839 = ./composeTurnReducer

var _composeTurnReducer2 = babelHelpers.interopRequireDefault(_composeTurnReducer);

var _gamesListReducer = require(840                 ); // 840 = ./gamesListReducer

var _gamesListReducer2 = babelHelpers.interopRequireDefault(_gamesListReducer);

exports.default = {
    nav: _navigation.navReducer,
    login: _loginReducer2.default,
    data: _dataReducer2.default,
    auth: _authReducer2.default,
    friends: _friendsReducer2.default,
    currentGame: _currentGameReducer2.default,
    composeTurn: _composeTurnReducer2.default,
    gamesList: _gamesListReducer2.default
};
}, 680, null, "TalkPresidential/build/reducers/index.js");
__d(/* TalkPresidential/build/screens/navigation/navigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.navReducer = exports.MainNavigator = undefined;

var _MainTabContainer = require(682                       ); // 682 = ../tabs/MainTabContainer

var _MainTabContainer2 = babelHelpers.interopRequireDefault(_MainTabContainer);

var _reactNavigation = require(684               ); // 684 = react-navigation

var _navigationConfiguration = require(825                               ); // 825 = ../login/navigationConfiguration

var routeConfiguration = {
    Main: {
        screen: _MainTabContainer2.default
    },
    Login: {
        screen: _navigationConfiguration.loginNavigation
    }
};
var stackNavigationConfig = {
    headerMode: 'none',
    mode: 'modal',
    navigationOptions: {
        gesturesEnabled: false
    }
};
var MainNavigator = (0, _reactNavigation.StackNavigator)(routeConfiguration, stackNavigationConfig);
var initialNavState = MainNavigator.router.getStateForAction(_reactNavigation.NavigationActions.init(), undefined);
var navReducer = function navReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialNavState;
    var action = arguments[1];

    var nextState = MainNavigator.router.getStateForAction(action, state);
    return nextState || state;
};
exports.MainNavigator = MainNavigator;
exports.navReducer = navReducer;
}, 681, null, "TalkPresidential/build/screens/navigation/navigation.js");
__d(/* TalkPresidential/build/screens/tabs/MainTabContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require(342          ); // 342 = react-redux

var _navigation = require(683           ); // 683 = ./navigation

var _navigation2 = babelHelpers.interopRequireDefault(_navigation);

var _authSelectors = require(475                            ); // 475 = ../../selectors/authSelectors

var _loginActions = require(472                         ); // 472 = ../../actions/loginActions

var _dataActions = require(406                        ); // 406 = ../../actions/dataActions

var MainTabContainer = function (_React$Component) {
    babelHelpers.inherits(MainTabContainer, _React$Component);

    function MainTabContainer(props) {
        babelHelpers.classCallCheck(this, MainTabContainer);

        var _this = babelHelpers.possibleConstructorReturn(this, (MainTabContainer.__proto__ || Object.getPrototypeOf(MainTabContainer)).call(this, props));

        _this._goToLoginIfNeeded(props);
        if (props.isAuthenticated) {
            _this.props.loadStartData();
        }
        return _this;
    }

    babelHelpers.createClass(MainTabContainer, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            this._goToLoginIfNeeded(props);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_navigation2.default, null);
        }
    }, {
        key: '_goToLoginIfNeeded',
        value: function _goToLoginIfNeeded(props) {
            if (!props.isAuthenticated && !props.userInLogin) {
                props.navigation.navigate('Login');
                props.updateInLogin();
                props.setNavKey();
            }
        }
    }]);
    return MainTabContainer;
}(_react2.default.Component);

function mapDispatchToProps(dispatch, props) {
    return {
        setNavKey: function setNavKey() {
            dispatch((0, _loginActions.setHomeScreenKey)(props.navigation.state.key));
        },
        updateInLogin: function updateInLogin() {
            dispatch((0, _loginActions.userEnteringLogin)());
        },
        loadStartData: function loadStartData() {
            dispatch((0, _dataActions.loadStartData)());
        }
    };
}
function mapStateToProps(state) {
    var isAuthenticated = (0, _authSelectors.getBearerToken)(state) !== undefined;
    return {
        isAuthenticated: isAuthenticated
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MainTabContainer);
}, 682, null, "TalkPresidential/build/screens/tabs/MainTabContainer.js");
__d(/* TalkPresidential/build/screens/tabs/navigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactNavigation = require(684               ); // 684 = react-navigation

var _Home = require(748                    ); // 748 = ./home/navigaton/Home

var _Home2 = babelHelpers.interopRequireDefault(_Home);

var _Friends = require(807                           ); // 807 = ./friends/navigation/Friends

var _Friends2 = babelHelpers.interopRequireDefault(_Friends);

var _colors = require(753                     ); // 753 = ../../constants/colors

var tabBarRoutes = {
    Friends: {
        screen: _Friends2.default
    },
    Home: {
        screen: _Home2.default
    }
};
var tabStyle = {
    backgroundColor: _colors.main
};
var tabBarOptions = {
    style: tabStyle,
    inactiveTintColor: 'white',
    activeTintColor: _colors.secondary
};
var tabBarConfig = {
    initialRouteName: 'Home',
    tabBarOptions: tabBarOptions
};
exports.default = (0, _reactNavigation.TabNavigator)(tabBarRoutes, tabBarConfig);
}, 683, null, "TalkPresidential/build/screens/tabs/navigation.js");
__d(/* react-navigation/src/react-navigation.js */function(global, require, module, exports) {

module.exports = {
  get createNavigationContainer() {
    return require(685                          ).default; // 685 = ./createNavigationContainer
  },
  get StateUtils() {
    return require(690           ).default; // 690 = ./StateUtils
  },
  get addNavigationHelpers() {
    return require(688                     ).default; // 688 = ./addNavigationHelpers
  },
  get NavigationActions() {
    return require(687                  ).default; // 687 = ./NavigationActions
  },

  get createNavigator() {
    return require(691                           ).default; // 691 = ./navigators/createNavigator
  },
  get StackNavigator() {
    return require(692                          ).default; // 692 = ./navigators/StackNavigator
  },
  get TabNavigator() {
    return require(723                        ).default; // 723 = ./navigators/TabNavigator
  },
  get DrawerNavigator() {
    return require(739                           ).default; // 739 = ./navigators/DrawerNavigator
  },

  get StackRouter() {
    return require(714                    ).default; // 714 = ./routers/StackRouter
  },
  get TabRouter() {
    return require(724                  ).default; // 724 = ./routers/TabRouter
  },

  get Transitioner() {
    return require(711                   ).default; // 711 = ./views/Transitioner
  },
  get CardStackTransitioner() {
    return require(693                                      ).default; // 693 = ./views/CardStack/CardStackTransitioner
  },
  get CardStack() {
    return require(694                          ).default; // 694 = ./views/CardStack/CardStack
  },
  get Card() {
    return require(696                     ).default; // 696 = ./views/CardStack/Card
  },
  get SafeAreaView() {
    return require(706                   ).default; // 706 = ./views/SafeAreaView
  },

  get Header() {
    return require(699                    ).default; // 699 = ./views/Header/Header
  },
  get HeaderTitle() {
    return require(700                         ).default; // 700 = ./views/Header/HeaderTitle
  },
  get HeaderBackButton() {
    return require(701                              ).default; // 701 = ./views/Header/HeaderBackButton
  },

  get DrawerView() {
    return require(741                        ).default; // 741 = ./views/Drawer/DrawerView
  },
  get DrawerItems() {
    return require(746                                  ).default; // 746 = ./views/Drawer/DrawerNavigatorItems
  },

  get TabView() {
    return require(725                      ).default; // 725 = ./views/TabView/TabView
  },
  get TabBarTop() {
    return require(736                        ).default; // 736 = ./views/TabView/TabBarTop
  },
  get TabBarBottom() {
    return require(738                           ).default; // 738 = ./views/TabView/TabBarBottom
  },

  get withNavigation() {
    return require(747                     ).default; // 747 = ./views/withNavigation
  }
};
}, 684, null, "react-navigation/src/react-navigation.js");
__d(/* react-navigation/src/createNavigationContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/createNavigationContainer.js';
exports.default = createNavigationContainer;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _PlatformHelpers = require(686                ); // 686 = ./PlatformHelpers

var _NavigationActions = require(687                  ); // 687 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(688                     ); // 688 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _invariant = require(689                ); // 689 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function createNavigationContainer(Component) {
  var NavigationContainer = function (_React$Component) {
    babelHelpers.inherits(NavigationContainer, _React$Component);

    function NavigationContainer(props) {
      babelHelpers.classCallCheck(this, NavigationContainer);

      var _this = babelHelpers.possibleConstructorReturn(this, (NavigationContainer.__proto__ || Object.getPrototypeOf(NavigationContainer)).call(this, props));

      _this.subs = null;

      _this._handleOpenURL = function (_ref) {
        var url = _ref.url;

        var parsedUrl = _this._urlToPathAndParams(url);
        if (parsedUrl) {
          var path = parsedUrl.path,
              params = parsedUrl.params;

          var action = Component.router.getActionForPathAndParams(path, params);
          if (action) {
            _this.dispatch(action);
          }
        }
      };

      _this.dispatch = function (inputAction) {
        var action = _NavigationActions2.default.mapDeprecatedActionAndWarn(inputAction);
        if (!_this._isStateful()) {
          return false;
        }
        var oldNav = _this.state.nav;
        (0, _invariant2.default)(oldNav, 'should be set in constructor if stateful');
        var nav = Component.router.getStateForAction(action, oldNav);
        if (nav && nav !== oldNav) {
          _this.setState({ nav: nav }, function () {
            return _this._onNavigationStateChange(oldNav, nav, action);
          });
          return true;
        }
        return false;
      };

      _this._validateProps(props);

      _this.state = {
        nav: _this._isStateful() ? Component.router.getStateForAction(_NavigationActions2.default.init()) : null
      };
      return _this;
    }

    babelHelpers.createClass(NavigationContainer, [{
      key: '_isStateful',
      value: function _isStateful() {
        return !this.props.navigation;
      }
    }, {
      key: '_validateProps',
      value: function _validateProps(props) {
        if (this._isStateful()) {
          return;
        }

        var navigation = props.navigation,
            screenProps = props.screenProps,
            containerProps = babelHelpers.objectWithoutProperties(props, ['navigation', 'screenProps']);


        var keys = Object.keys(containerProps);

        if (keys.length !== 0) {
          throw new Error('This navigator has both navigation and container props, so it is ' + ('unclear if it should own its own state. Remove props: "' + keys.join(', ') + '" ') + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
        }
      }
    }, {
      key: '_urlToPathAndParams',
      value: function _urlToPathAndParams(url) {
        var params = {};
        var delimiter = this.props.uriPrefix || '://';
        var path = url.split(delimiter)[1];
        if (typeof path === 'undefined') {
          path = url;
        }
        return {
          path: path,
          params: params
        };
      }
    }, {
      key: '_onNavigationStateChange',
      value: function _onNavigationStateChange(prevNav, nav, action) {
        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {
          if (console.group) {
            console.group('Navigation Dispatch: ');
            console.log('Action: ', action);
            console.log('New State: ', nav);
            console.log('Last State: ', prevNav);
            console.groupEnd();
          } else {
            console.log('Navigation Dispatch: ', {
              action: action,
              newState: nav,
              lastState: prevNav
            });
          }

          return;
        }

        if (typeof this.props.onNavigationStateChange === 'function') {
          this.props.onNavigationStateChange(prevNav, nav, action);
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._validateProps(nextProps);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        if (!this._isStateful()) {
          return;
        }

        this.subs = _PlatformHelpers.BackHandler.addEventListener('hardwareBackPress', function () {
          return _this2.dispatch(_NavigationActions2.default.back());
        });

        _PlatformHelpers.Linking.addEventListener('url', this._handleOpenURL);

        _PlatformHelpers.Linking.getInitialURL().then(function (url) {
          return url && _this2._handleOpenURL({ url: url });
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _PlatformHelpers.Linking.removeEventListener('url', this._handleOpenURL);
        this.subs && this.subs.remove();
      }
    }, {
      key: 'render',
      value: function render() {
        var navigation = this.props.navigation;
        if (this._isStateful()) {
          var _nav = this.state.nav;
          (0, _invariant2.default)(_nav, 'should be set in constructor if stateful');
          if (!this._navigation || this._navigation.state !== _nav) {
            this._navigation = (0, _addNavigationHelpers2.default)({
              dispatch: this.dispatch,
              state: _nav
            });
          }
          navigation = this._navigation;
        }
        (0, _invariant2.default)(navigation, 'failed to get navigation');
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, { navigation: navigation, __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        }));
      }
    }]);
    return NavigationContainer;
  }(_react2.default.Component);

  NavigationContainer.router = Component.router;


  return NavigationContainer;
}
}, 685, null, "react-navigation/src/createNavigationContainer.js");
__d(/* react-navigation/src/PlatformHelpers.native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linking = exports.BackHandler = undefined;

var _reactNative = require(12            ); // 12 = react-native

var BackHandler = _reactNative.BackHandler || _reactNative.BackAndroid;

exports.BackHandler = BackHandler;
exports.Linking = _reactNative.Linking;
}, 686, null, "react-navigation/src/PlatformHelpers.native.js");
__d(/* react-navigation/src/NavigationActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var BACK = 'Navigation/BACK';
var INIT = 'Navigation/INIT';
var NAVIGATE = 'Navigation/NAVIGATE';
var RESET = 'Navigation/RESET';
var SET_PARAMS = 'Navigation/SET_PARAMS';
var URI = 'Navigation/URI';

var back = function back() {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    type: BACK,
    key: payload.key
  };
};
var init = function init() {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var action = {
    type: INIT
  };
  if (payload.params) {
    action.params = payload.params;
  }
  return action;
};
var navigate = function navigate(payload) {
  var action = {
    type: NAVIGATE,
    routeName: payload.routeName
  };
  if (payload.params) {
    action.params = payload.params;
  }
  if (payload.action) {
    action.action = payload.action;
  }
  return action;
};
var reset = function reset(payload) {
  return {
    type: RESET,
    index: payload.index,
    key: payload.key,
    actions: payload.actions
  };
};
var setParams = function setParams(payload) {
  return {
    type: SET_PARAMS,
    key: payload.key,
    params: payload.params
  };
};
var uri = function uri(payload) {
  return {
    type: URI,
    uri: payload.uri
  };
};

var mapDeprecatedNavigateAction = function mapDeprecatedNavigateAction(action) {
  if (action.type === 'Navigate') {
    var payload = {
      routeName: action.routeName,
      params: action.params
    };
    if (action.action) {
      payload.action = mapDeprecatedNavigateAction(action.action);
    }
    return navigate(payload);
  }
  return action;
};

var mapDeprecatedAction = function mapDeprecatedAction(action) {
  if (action.type === 'Back') {
    return back(action);
  } else if (action.type === 'Init') {
    return init(action);
  } else if (action.type === 'Navigate') {
    return mapDeprecatedNavigateAction(action);
  } else if (action.type === 'Reset') {
    return reset({
      index: action.index,
      key: action.key,
      actions: action.actions.map(mapDeprecatedNavigateAction)
    });
  } else if (action.type === 'SetParams') {
    return setParams(action);
  }
  return action;
};

var mapDeprecatedActionAndWarn = function mapDeprecatedActionAndWarn(action) {
  var newAction = mapDeprecatedAction(action);
  if (newAction !== action) {
    var oldType = action.type;
    var newType = newAction.type;
    console.warn(['The action type \'' + oldType + '\' has been renamed to \'' + newType + '\'.', '\'' + oldType + '\' will continue to work while in beta but will be removed', 'in the first major release. Moving forward, you should use the', 'action constants and action creators exported by this library in', "the 'actions' object.", 'See https://github.com/react-community/react-navigation/pull/120 for', 'more details.'].join(' '));
  }
  return newAction;
};

exports.default = {
  BACK: BACK,
  INIT: INIT,
  NAVIGATE: NAVIGATE,
  RESET: RESET,
  SET_PARAMS: SET_PARAMS,
  URI: URI,

  back: back,
  init: init,
  navigate: navigate,
  reset: reset,
  setParams: setParams,
  uri: uri,

  mapDeprecatedActionAndWarn: mapDeprecatedActionAndWarn
};
}, 687, null, "react-navigation/src/NavigationActions.js");
__d(/* react-navigation/src/addNavigationHelpers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (navigation) {
  return babelHelpers.extends({}, navigation, {
    goBack: function goBack(key) {
      var actualizedKey = key;
      if (key === undefined && navigation.state.key) {
        (0, _invariant2.default)(typeof navigation.state.key === 'string', 'key should be a string');
        actualizedKey = navigation.state.key;
      }
      return navigation.dispatch(_NavigationActions2.default.back({ key: actualizedKey }));
    },
    navigate: function navigate(routeName, params, action) {
      return navigation.dispatch(_NavigationActions2.default.navigate({ routeName: routeName, params: params, action: action }));
    },

    setParams: function setParams(params) {
      (0, _invariant2.default)(navigation.state.key && typeof navigation.state.key === 'string', 'setParams cannot be called by root navigator');
      var key = navigation.state.key;
      return navigation.dispatch(_NavigationActions2.default.setParams({ params: params, key: key }));
    }
  });
};

var _NavigationActions = require(687                  ); // 687 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _invariant = require(689                ); // 689 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);
}, 688, null, "react-navigation/src/addNavigationHelpers.js");
__d(/* react-navigation/src/utils/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (__DEV__) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 689, null, "react-navigation/src/utils/invariant.js");
__d(/* react-navigation/src/StateUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(689                ); // 689 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var StateUtils = {
  get: function get(state, key) {
    return state.routes.find(function (route) {
      return route.key === key;
    }) || null;
  },
  indexOf: function indexOf(state, key) {
    return state.routes.map(function (route) {
      return route.key;
    }).indexOf(key);
  },
  has: function has(state, key) {
    return !!state.routes.some(function (route) {
      return route.key === key;
    });
  },
  push: function push(state, route) {
    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);

    var routes = state.routes.slice();
    routes.push(route);

    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  pop: function pop(state) {
    if (state.index <= 0) {
      return state;
    }
    var routes = state.routes.slice(0, -1);
    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  jumpToIndex: function jumpToIndex(state, index) {
    if (index === state.index) {
      return state;
    }

    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);

    return babelHelpers.extends({}, state, {
      index: index
    });
  },
  jumpTo: function jumpTo(state, key) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.jumpToIndex(state, index);
  },
  back: function back(state) {
    var index = state.index - 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  forward: function forward(state) {
    var index = state.index + 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  replaceAt: function replaceAt(state, key, route) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.replaceAtIndex(state, index, route);
  },
  replaceAtIndex: function replaceAtIndex(state, index, route) {
    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

    if (state.routes[index] === route) {
      return state;
    }

    var routes = state.routes.slice();
    routes[index] = route;

    return babelHelpers.extends({}, state, {
      index: index,
      routes: routes
    });
  },
  reset: function reset(state, routes, index) {
    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');

    var nextIndex = index === undefined ? routes.length - 1 : index;

    if (state.routes.length === routes.length && state.index === nextIndex) {
      var compare = function compare(route, ii) {
        return routes[ii] === route;
      };
      if (state.routes.every(compare)) {
        return state;
      }
    }

    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);

    return babelHelpers.extends({}, state, {
      index: nextIndex,
      routes: routes
    });
  }
};

exports.default = StateUtils;
}, 690, null, "react-navigation/src/StateUtils.js");
__d(/* react-navigation/src/navigators/createNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/navigators/createNavigator.js';
exports.default = createNavigator;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);
function createNavigator(router, routeConfigs, navigatorConfig, navigatorType) {
  return function (NavigationView) {
    var Navigator = function (_React$Component) {
      babelHelpers.inherits(Navigator, _React$Component);

      function Navigator() {
        babelHelpers.classCallCheck(this, Navigator);
        return babelHelpers.possibleConstructorReturn(this, (Navigator.__proto__ || Object.getPrototypeOf(Navigator)).apply(this, arguments));
      }

      babelHelpers.createClass(Navigator, [{
        key: 'render',
        value: function render() {
          return React.createElement(NavigationView, babelHelpers.extends({}, this.props, { router: router, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          }));
        }
      }]);
      return Navigator;
    }(React.Component);

    Navigator.router = router;
    Navigator.routeConfigs = routeConfigs;
    Navigator.navigatorConfig = navigatorConfig;
    Navigator.navigatorType = navigatorType;


    return Navigator;
  };
}
}, 691, null, "react-navigation/src/navigators/createNavigator.js");
__d(/* react-navigation/src/navigators/StackNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/navigators/StackNavigator.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _createNavigationContainer = require(685                           ); // 685 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _createNavigator = require(691                ); // 691 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _CardStackTransitioner = require(693                                       ); // 693 = ../views/CardStack/CardStackTransitioner

var _CardStackTransitioner2 = babelHelpers.interopRequireDefault(_CardStackTransitioner);

var _StackRouter = require(714                     ); // 714 = ../routers/StackRouter

var _StackRouter2 = babelHelpers.interopRequireDefault(_StackRouter);

var _NavigatorTypes = require(722               ); // 722 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

exports.default = function (routeConfigMap) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var initialRouteName = stackConfig.initialRouteName,
      initialRouteParams = stackConfig.initialRouteParams,
      paths = stackConfig.paths,
      headerMode = stackConfig.headerMode,
      mode = stackConfig.mode,
      cardStyle = stackConfig.cardStyle,
      transitionConfig = stackConfig.transitionConfig,
      onTransitionStart = stackConfig.onTransitionStart,
      onTransitionEnd = stackConfig.onTransitionEnd,
      navigationOptions = stackConfig.navigationOptions;


  var stackRouterConfig = {
    initialRouteName: initialRouteName,
    initialRouteParams: initialRouteParams,
    paths: paths,
    navigationOptions: navigationOptions
  };

  var router = (0, _StackRouter2.default)(routeConfigMap, stackRouterConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigMap, stackConfig, _NavigatorTypes2.default.STACK)(function (props) {
    return _react2.default.createElement(_CardStackTransitioner2.default, babelHelpers.extends({}, props, {
      headerMode: headerMode,
      mode: mode,
      cardStyle: cardStyle,
      transitionConfig: transitionConfig,
      onTransitionStart: onTransitionStart,
      onTransitionEnd: onTransitionEnd,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};
}, 692, null, "react-navigation/src/navigators/StackNavigator.js");
__d(/* react-navigation/src/views/CardStack/CardStackTransitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/CardStack/CardStackTransitioner.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _CardStack = require(694          ); // 694 = ./CardStack

var _CardStack2 = babelHelpers.interopRequireDefault(_CardStack);

var _CardStackStyleInterpolator = require(710                           ); // 710 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var _Transitioner = require(711              ); // 711 = ../Transitioner

var _Transitioner2 = babelHelpers.interopRequireDefault(_Transitioner);

var _TransitionConfigs = require(709                  ); // 709 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var NativeAnimatedModule = _reactNative.NativeModules && _reactNative.NativeModules.NativeAnimatedModule;

var CardStackTransitioner = function (_React$Component) {
  babelHelpers.inherits(CardStackTransitioner, _React$Component);

  function CardStackTransitioner() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStackTransitioner);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStackTransitioner.__proto__ || Object.getPrototypeOf(CardStackTransitioner)).call.apply(_ref, [this].concat(args))), _this), _this._configureTransition = function (transitionProps, prevTransitionProps) {
      var isModal = _this.props.mode === 'modal';

      var transitionSpec = babelHelpers.extends({}, _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, transitionProps, prevTransitionProps, isModal).transitionSpec);
      if (!!NativeAnimatedModule && _CardStackStyleInterpolator2.default.canUseNativeDriver()) {
        transitionSpec.useNativeDriver = true;
      }
      return transitionSpec;
    }, _this._render = function (props) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          headerMode = _this$props.headerMode,
          mode = _this$props.mode,
          router = _this$props.router,
          cardStyle = _this$props.cardStyle,
          transitionConfig = _this$props.transitionConfig;

      return React.createElement(_CardStack2.default, babelHelpers.extends({
        screenProps: screenProps,
        headerMode: headerMode,
        mode: mode,
        router: router,
        cardStyle: cardStyle,
        transitionConfig: transitionConfig
      }, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 103
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStackTransitioner, [{
    key: 'render',
    value: function render() {
      return React.createElement(_Transitioner2.default, {
        configureTransition: this._configureTransition,
        navigation: this.props.navigation,
        render: this._render,
        onTransitionStart: this.props.onTransitionStart,
        onTransitionEnd: this.props.onTransitionEnd,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55
        }
      });
    }
  }]);
  return CardStackTransitioner;
}(React.Component);

CardStackTransitioner.defaultProps = {
  mode: 'card'
};
exports.default = CardStackTransitioner;
}, 693, null, "react-navigation/src/views/CardStack/CardStackTransitioner.js");
__d(/* react-navigation/src/views/CardStack/CardStack.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/CardStack/CardStack.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _clamp = require(695    ); // 695 = clamp

var _clamp2 = babelHelpers.interopRequireDefault(_clamp);

var _reactNative = require(12            ); // 12 = react-native

var _Card = require(696     ); // 696 = ./Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var _Header = require(699               ); // 699 = ../Header/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _NavigationActions = require(687                      ); // 687 = ../../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(688                         ); // 688 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _SceneView = require(708           ); // 708 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _TransitionConfigs = require(709                  ); // 709 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var emptyFunction = function emptyFunction() {};

var ANIMATION_DURATION = 500;

var POSITION_THRESHOLD = 1 / 2;

var RESPOND_THRESHOLD = 20;

var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 25;
var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;

var animatedSubscribeValue = function animatedSubscribeValue(animatedValue) {
  if (!animatedValue.__isNative) {
    return;
  }
  if (Object.keys(animatedValue._listeners).length === 0) {
    animatedValue.addListener(emptyFunction);
  }
};

var CardStack = function (_React$Component) {
  babelHelpers.inherits(CardStack, _React$Component);

  function CardStack() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStack);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStack.__proto__ || Object.getPrototypeOf(CardStack)).call.apply(_ref, [this].concat(args))), _this), _this._gestureStartValue = 0, _this._isResponding = false, _this._immediateIndex = null, _this._screenDetails = {}, _this._getScreenDetails = function (scene) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          navigation = _this$props.navigation,
          router = _this$props.router;

      var screenDetails = _this._screenDetails[scene.key];
      if (!screenDetails || screenDetails.state !== scene.route) {
        var screenNavigation = (0, _addNavigationHelpers2.default)({
          dispatch: navigation.dispatch,
          state: scene.route
        });
        screenDetails = {
          state: scene.route,
          navigation: screenNavigation,
          options: router.getScreenOptions(screenNavigation, screenProps)
        };
        _this._screenDetails[scene.key] = screenDetails;
      }
      return screenDetails;
    }, _this._getTransitionConfig = function () {
      var isModal = _this.props.mode === 'modal';

      return _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, {}, {}, isModal);
    }, _this._renderCard = function (scene) {
      var _this$_getTransitionC = _this._getTransitionConfig(),
          screenInterpolator = _this$_getTransitionC.screenInterpolator;

      var style = screenInterpolator && screenInterpolator(babelHelpers.extends({}, _this.props, { scene: scene }));

      var SceneComponent = _this.props.router.getComponentForRouteName(scene.route.routeName);

      return React.createElement(
        _Card2.default,
        babelHelpers.extends({}, _this.props, {
          key: 'card_' + scene.key,
          style: [style, _this.props.cardStyle],
          scene: scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 440
          }
        }),
        _this._renderInnerScene(SceneComponent, scene)
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStack, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this2 = this;

      if (props.screenProps !== this.props.screenProps) {
        this._screenDetails = {};
      }
      props.scenes.forEach(function (newScene) {
        if (_this2._screenDetails[newScene.key] && _this2._screenDetails[newScene.key].state !== newScene.route) {
          _this2._screenDetails[newScene.key] = null;
        }
      });
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(scene, headerMode) {
      var header = this._getScreenDetails(scene).options.header;

      if (typeof header !== 'undefined' && typeof header !== 'function') {
        return header;
      }

      var renderHeader = header || function (props) {
        return React.createElement(_Header2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 170
          }
        }));
      };

      var _props = this.props,
          mode = _props.mode,
          passProps = babelHelpers.objectWithoutProperties(_props, ['mode']);


      return renderHeader(babelHelpers.extends({}, passProps, {
        scene: scene,
        mode: headerMode,
        getScreenDetails: this._getScreenDetails
      }));
    }
  }, {
    key: '_animatedSubscribe',
    value: function _animatedSubscribe(props) {
      animatedSubscribeValue(props.layout.width);
      animatedSubscribeValue(props.layout.height);
      animatedSubscribeValue(props.position);
    }
  }, {
    key: '_reset',
    value: function _reset(resetToIndex, duration) {
      _reactNative.Animated.timing(this.props.position, {
        toValue: resetToIndex,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: this.props.position.__isNative
      }).start();
    }
  }, {
    key: '_goBack',
    value: function _goBack(backFromIndex, duration) {
      var _this3 = this;

      var _props2 = this.props,
          navigation = _props2.navigation,
          position = _props2.position,
          scenes = _props2.scenes;

      var toValue = Math.max(backFromIndex - 1, 0);

      this._immediateIndex = toValue;

      _reactNative.Animated.timing(position, {
        toValue: toValue,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: position.__isNative
      }).start(function () {
        _this3._immediateIndex = null;
        var backFromScene = scenes.find(function (s) {
          return s.index === toValue + 1;
        });
        if (!_this3._isResponding && backFromScene) {
          navigation.dispatch(_NavigationActions2.default.back({ key: backFromScene.route.key }));
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var floatingHeader = null;
      var headerMode = this._getHeaderMode();
      if (headerMode === 'float') {
        floatingHeader = this._renderHeader(this.props.scene, headerMode);
      }
      var _props3 = this.props,
          navigation = _props3.navigation,
          position = _props3.position,
          layout = _props3.layout,
          scene = _props3.scene,
          scenes = _props3.scenes,
          mode = _props3.mode;
      var index = navigation.state.index;

      var isVertical = mode === 'modal';

      var responder = _reactNative.PanResponder.create({
        onPanResponderTerminate: function onPanResponderTerminate() {
          _this4._isResponding = false;
          _this4._reset(index, 0);
        },
        onPanResponderGrant: function onPanResponderGrant() {
          position.stopAnimation(function (value) {
            _this4._isResponding = true;
            _this4._gestureStartValue = value;
          });
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {
          if (index !== scene.index) {
            return false;
          }
          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;
          var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];
          var currentDragPosition = event.nativeEvent[isVertical ? 'pageY' : 'pageX'];
          var axisLength = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var axisHasBeenMeasured = !!axisLength;

          var screenEdgeDistance = currentDragPosition - currentDragDistance;

          var _getScreenDetails$opt = _this4._getScreenDetails(scene).options.gestureResponseDistance,
              userGestureResponseDistance = _getScreenDetails$opt === undefined ? {} : _getScreenDetails$opt;

          var gestureResponseDistance = isVertical ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;

          if (screenEdgeDistance > gestureResponseDistance) {
            return false;
          }

          var hasDraggedEnough = Math.abs(currentDragDistance) > RESPOND_THRESHOLD;

          var isOnFirstCard = immediateIndex === 0;
          var shouldSetResponder = hasDraggedEnough && axisHasBeenMeasured && !isOnFirstCard;
          return shouldSetResponder;
        },
        onPanResponderMove: function onPanResponderMove(event, gesture) {
          var startValue = _this4._gestureStartValue;
          var axis = isVertical ? 'dy' : 'dx';
          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var currentValue = _reactNative.I18nManager.isRTL && axis === 'dx' ? startValue + gesture[axis] / axisDistance : startValue - gesture[axis] / axisDistance;
          var value = (0, _clamp2.default)(index - 1, currentValue, index);
          position.setValue(value);
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderRelease: function onPanResponderRelease(event, gesture) {
          if (!_this4._isResponding) {
            return;
          }
          _this4._isResponding = false;

          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;

          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var movedDistance = gesture[isVertical ? 'dy' : 'dx'];
          var gestureVelocity = gesture[isVertical ? 'vy' : 'vx'];
          var defaultVelocity = axisDistance / ANIMATION_DURATION;
          var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);
          var resetDuration = movedDistance / velocity;
          var goBackDuration = (axisDistance - movedDistance) / velocity;

          position.stopAnimation(function (value) {
            if (gestureVelocity < -0.5) {
              _this4._reset(immediateIndex, resetDuration);
              return;
            }
            if (gestureVelocity > 0.5) {
              _this4._goBack(immediateIndex, goBackDuration);
              return;
            }

            if (value <= index - POSITION_THRESHOLD) {
              _this4._goBack(immediateIndex, goBackDuration);
            } else {
              _this4._reset(immediateIndex, resetDuration);
            }
          });
        }
      });

      var _getScreenDetails = this._getScreenDetails(scene),
          options = _getScreenDetails.options;

      var gesturesEnabled = typeof options.gesturesEnabled === 'boolean' ? options.gesturesEnabled : _reactNative.Platform.OS === 'ios';

      var handlers = gesturesEnabled ? responder.panHandlers : {};
      var containerStyle = [styles.container, this._getTransitionConfig().containerStyle];

      return React.createElement(
        _reactNative.View,
        babelHelpers.extends({}, handlers, { style: containerStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 369
          }
        }),
        React.createElement(
          _reactNative.View,
          { style: styles.scenes, __source: {
              fileName: _jsxFileName,
              lineNumber: 370
            }
          },
          scenes.map(function (s) {
            return _this4._renderCard(s);
          })
        ),
        floatingHeader
      );
    }
  }, {
    key: '_getHeaderMode',
    value: function _getHeaderMode() {
      if (this.props.headerMode) {
        return this.props.headerMode;
      }
      if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {
        return 'screen';
      }
      return 'float';
    }
  }, {
    key: '_renderInnerScene',
    value: function _renderInnerScene(SceneComponent, scene) {
      var _getScreenDetails2 = this._getScreenDetails(scene),
          navigation = _getScreenDetails2.navigation;

      var screenProps = this.props.screenProps;

      var headerMode = this._getHeaderMode();
      if (headerMode === 'screen') {
        return React.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 397
            }
          },
          React.createElement(
            _reactNative.View,
            { style: { flex: 1 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 398
              }
            },
            React.createElement(_SceneView2.default, {
              screenProps: screenProps,
              navigation: navigation,
              component: SceneComponent,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 399
              }
            })
          ),
          this._renderHeader(scene, headerMode)
        );
      }
      return React.createElement(_SceneView2.default, {
        screenProps: this.props.screenProps,
        navigation: navigation,
        component: SceneComponent,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 410
        }
      });
    }
  }]);
  return CardStack;
}(React.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,

    flexDirection: 'column-reverse'
  },
  scenes: {
    flex: 1
  }
});

exports.default = CardStack;
}, 694, null, "react-navigation/src/views/CardStack/CardStack.js");
__d(/* clamp/index.js */function(global, require, module, exports) {module.exports = clamp;

function clamp(value, min, max) {
  return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
}
}, 695, null, "clamp/index.js");
__d(/* react-navigation/src/views/CardStack/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/CardStack/Card.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _PointerEventsContainer = require(697                       ); // 697 = ./PointerEventsContainer

var _PointerEventsContainer2 = babelHelpers.interopRequireDefault(_PointerEventsContainer);

var Card = function (_React$Component) {
  babelHelpers.inherits(Card, _React$Component);

  function Card() {
    babelHelpers.classCallCheck(this, Card);
    return babelHelpers.possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
  }

  babelHelpers.createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          pointerEvents = _props.pointerEvents,
          style = _props.style;

      return React.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          ref: this.props.onComponentRef,
          style: [styles.main, style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        children
      );
    }
  }]);
  return Card;
}(React.Component);

var styles = _reactNative.StyleSheet.create({
  main: {
    backgroundColor: '#E9E9EF',
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    shadowColor: 'black',
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 0.2,
    shadowRadius: 5,
    top: 0
  }
});

Card = (0, _PointerEventsContainer2.default)(Card);

exports.default = Card;
}, 696, null, "react-navigation/src/views/CardStack/Card.js");
__d(/* react-navigation/src/views/CardStack/PointerEventsContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/CardStack/PointerEventsContainer.js';
exports.default = create;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _invariant = require(689                    ); // 689 = ../../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _AnimatedValueSubscription = require(698                           ); // 698 = ../AnimatedValueSubscription

var _AnimatedValueSubscription2 = babelHelpers.interopRequireDefault(_AnimatedValueSubscription);

var MIN_POSITION_OFFSET = 0.01;

function create(Component) {
  var Container = function (_React$Component) {
    babelHelpers.inherits(Container, _React$Component);

    function Container(props, context) {
      babelHelpers.classCallCheck(this, Container);

      var _this = babelHelpers.possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props, context));

      _this._pointerEvents = _this._computePointerEvents();
      return _this;
    }

    babelHelpers.createClass(Container, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._onPositionChange = this._onPositionChange.bind(this);
        this._onComponentRef = this._onComponentRef.bind(this);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._bindPosition(this.props);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._positionListener && this._positionListener.remove();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._bindPosition(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        this._pointerEvents = this._computePointerEvents();
        return React.createElement(Component, babelHelpers.extends({}, this.props, {
          pointerEvents: this._pointerEvents,
          onComponentRef: this._onComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        }));
      }
    }, {
      key: '_onComponentRef',
      value: function _onComponentRef(component) {
        this._component = component;
        if (component) {
          (0, _invariant2.default)(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');
        }
      }
    }, {
      key: '_bindPosition',
      value: function _bindPosition(props) {
        this._positionListener && this._positionListener.remove();
        this._positionListener = new _AnimatedValueSubscription2.default(props.position, this._onPositionChange);
      }
    }, {
      key: '_onPositionChange',
      value: function _onPositionChange() {
        if (this._component) {
          var pointerEvents = this._computePointerEvents();
          if (this._pointerEvents !== pointerEvents) {
            this._pointerEvents = pointerEvents;
            this._component.setNativeProps({ pointerEvents: pointerEvents });
          }
        }
      }
    }, {
      key: '_computePointerEvents',
      value: function _computePointerEvents() {
        var _props = this.props,
            navigation = _props.navigation,
            position = _props.position,
            scene = _props.scene;


        if (scene.isStale || navigation.state.index !== scene.index) {
          return scene.index > navigation.state.index ? 'box-only' : 'none';
        }

        var offset = position.__getAnimatedValue() - navigation.state.index;
        if (Math.abs(offset) > MIN_POSITION_OFFSET) {
          return 'box-only';
        }

        return 'auto';
      }
    }]);
    return Container;
  }(React.Component);

  return Container;
}
}, 697, null, "react-navigation/src/views/CardStack/PointerEventsContainer.js");
__d(/* react-navigation/src/views/AnimatedValueSubscription.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var AnimatedValueSubscription = function () {
  function AnimatedValueSubscription(value, callback) {
    babelHelpers.classCallCheck(this, AnimatedValueSubscription);

    this._value = value;
    this._token = value.addListener(callback);
  }

  babelHelpers.createClass(AnimatedValueSubscription, [{
    key: 'remove',
    value: function remove() {
      this._value.removeListener(this._token);
    }
  }]);
  return AnimatedValueSubscription;
}();

exports.default = AnimatedValueSubscription;
}, 698, null, "react-navigation/src/views/AnimatedValueSubscription.js");
__d(/* react-navigation/src/views/Header/Header.js */function(global, require, module, exports) {

'no babel-plugin-flow-react-proptypes';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Header/Header.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _HeaderTitle = require(700            ); // 700 = ./HeaderTitle

var _HeaderTitle2 = babelHelpers.interopRequireDefault(_HeaderTitle);

var _HeaderBackButton = require(701                 ); // 701 = ./HeaderBackButton

var _HeaderBackButton2 = babelHelpers.interopRequireDefault(_HeaderBackButton);

var _HeaderStyleInterpolator = require(704                        ); // 704 = ./HeaderStyleInterpolator

var _HeaderStyleInterpolator2 = babelHelpers.interopRequireDefault(_HeaderStyleInterpolator);

var _SafeAreaView = require(706              ); // 706 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _withOrientation = require(707                 ); // 707 = ../withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var APPBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 44 : 56;
var STATUSBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 20 : 0;
var TITLE_OFFSET = _reactNative.Platform.OS === 'ios' ? 70 : 56;

var Header = function (_React$PureComponent) {
  babelHelpers.inherits(Header, _React$PureComponent);

  function Header() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, Header);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Header.__proto__ || Object.getPrototypeOf(Header)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      widths: {}
    }, _this._navigateBack = function () {
      _this.props.navigation.goBack(null);
    }, _this._renderTitleComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerTitle = details.options.headerTitle;
      if (headerTitle && typeof headerTitle !== 'string') {
        return headerTitle;
      }
      var titleString = _this._getHeaderTitleString(props.scene);

      var titleStyle = details.options.headerTitleStyle;
      var color = details.options.headerTintColor;
      var allowFontScaling = details.options.headerTitleAllowFontScaling;

      var onLayoutIOS = _reactNative.Platform.OS === 'ios' ? function (e) {
        _this.setState({
          widths: babelHelpers.extends({}, _this.state.widths, babelHelpers.defineProperty({}, props.scene.key, e.nativeEvent.layout.width))
        });
      } : undefined;

      return React.createElement(
        _HeaderTitle2.default,
        {
          onLayout: onLayoutIOS,
          allowFontScaling: allowFontScaling == null ? true : allowFontScaling,
          style: [color ? { color: color } : null, titleStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 127
          }
        },
        titleString
      );
    }, _this._renderLeftComponent = function (props) {
      var options = _this.props.getScreenDetails(props.scene).options;
      if (typeof options.headerLeft !== 'undefined') {
        return options.headerLeft;
      }
      if (props.scene.index === 0) {
        return null;
      }
      var backButtonTitle = _this._getBackButtonTitleString(props.scene);
      var truncatedBackButtonTitle = _this._getTruncatedBackButtonTitle(props.scene);
      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;
      return React.createElement(_HeaderBackButton2.default, {
        onPress: _this._navigateBack,
        pressColorAndroid: options.headerPressColorAndroid,
        tintColor: options.headerTintColor,
        title: backButtonTitle,
        truncatedTitle: truncatedBackButtonTitle,
        titleStyle: options.headerBackTitleStyle,
        width: width,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 153
        }
      });
    }, _this._renderRightComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerRight = details.options.headerRight;

      return headerRight || null;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(Header, [{
    key: '_getHeaderTitleString',
    value: function _getHeaderTitleString(scene) {
      var sceneOptions = this.props.getScreenDetails(scene).options;
      if (typeof sceneOptions.headerTitle === 'string') {
        return sceneOptions.headerTitle;
      }
      return sceneOptions.title;
    }
  }, {
    key: '_getLastScene',
    value: function _getLastScene(scene) {
      return this.props.scenes.find(function (s) {
        return s.index === scene.index - 1;
      });
    }
  }, {
    key: '_getBackButtonTitleString',
    value: function _getBackButtonTitleString(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      var headerBackTitle = this.props.getScreenDetails(lastScene).options.headerBackTitle;

      if (headerBackTitle || headerBackTitle === null) {
        return headerBackTitle;
      }
      return this._getHeaderTitleString(lastScene);
    }
  }, {
    key: '_getTruncatedBackButtonTitle',
    value: function _getTruncatedBackButtonTitle(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      return this.props.getScreenDetails(lastScene).options.headerTruncatedBackTitle;
    }
  }, {
    key: '_renderLeft',
    value: function _renderLeft(props) {
      return this._renderSubView(props, 'left', this._renderLeftComponent, _HeaderStyleInterpolator2.default.forLeft);
    }
  }, {
    key: '_renderTitle',
    value: function _renderTitle(props, options) {
      var style = {};

      if (_reactNative.Platform.OS === 'android') {
        if (!options.hasLeftComponent) {
          style.left = 0;
        }
        if (!options.hasRightComponent) {
          style.right = 0;
        }
      } else if (_reactNative.Platform.OS === 'ios' && !options.hasLeftComponent && !options.hasRightComponent) {
        style.left = 0;
        style.right = 0;
      }

      return this._renderSubView(babelHelpers.extends({}, props, { style: style }), 'title', this._renderTitleComponent, _HeaderStyleInterpolator2.default.forCenter);
    }
  }, {
    key: '_renderRight',
    value: function _renderRight(props) {
      return this._renderSubView(props, 'right', this._renderRightComponent, _HeaderStyleInterpolator2.default.forRight);
    }
  }, {
    key: '_renderSubView',
    value: function _renderSubView(props, name, renderer, styleInterpolator) {
      var scene = props.scene;
      var index = scene.index,
          isStale = scene.isStale,
          key = scene.key;


      var offset = this.props.navigation.state.index - index;

      if (Math.abs(offset) > 2) {
        return null;
      }

      var subView = renderer(props);

      if (subView == null) {
        return null;
      }

      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';

      return React.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          key: name + '_' + key,
          style: [styles.item, styles[name], props.style, styleInterpolator(babelHelpers.extends({}, this.props, props))],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 242
          }
        },
        subView
      );
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(props) {
      var left = this._renderLeft(props);
      var right = this._renderRight(props);
      var title = this._renderTitle(props, {
        hasLeftComponent: !!left,
        hasRightComponent: !!right
      });

      return React.createElement(
        _reactNative.View,
        {
          style: [_reactNative.StyleSheet.absoluteFill, styles.header],
          key: 'scene_' + props.scene.key,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 270
          }
        },
        title,
        left,
        right
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var appBar = void 0;

      if (this.props.mode === 'float') {
        var scenesProps = this.props.scenes.map(function (scene) {
          return {
            position: _this2.props.position,
            progress: _this2.props.progress,
            scene: scene
          };
        });
        appBar = scenesProps.map(this._renderHeader, this);
      } else {
        appBar = this._renderHeader({
          position: new _reactNative.Animated.Value(this.props.scene.index),
          progress: new _reactNative.Animated.Value(0),
          scene: this.props.scene
        });
      }

      var _props = this.props,
          scenes = _props.scenes,
          scene = _props.scene,
          position = _props.position,
          screenProps = _props.screenProps,
          progress = _props.progress,
          isLandscape = _props.isLandscape,
          rest = babelHelpers.objectWithoutProperties(_props, ['scenes', 'scene', 'position', 'screenProps', 'progress', 'isLandscape']);

      var _props$getScreenDetai = this.props.getScreenDetails(scene),
          options = _props$getScreenDetai.options;

      var headerStyle = options.headerStyle;

      var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;
      var containerStyles = [styles.container, {
        height: appBarHeight
      }, headerStyle];

      return React.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, rest, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 324
          }
        }),
        React.createElement(
          _SafeAreaView2.default,
          {
            style: containerStyles,
            forceInset: { top: 'always', bottom: 'never' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 325
            }
          },
          React.createElement(
            _reactNative.View,
            { style: styles.appBar, __source: {
                fileName: _jsxFileName,
                lineNumber: 329
              }
            },
            appBar
          )
        )
      );
    }
  }], [{
    key: 'HEIGHT',
    get: function get() {
      console.warn('Header.HEIGHT is deprecated and will be removed before react-navigation comes out of beta.');
      return APPBAR_HEIGHT + STATUSBAR_HEIGHT;
    }
  }]);
  return Header;
}(React.PureComponent);

var platformContainerStyles = void 0;
if (_reactNative.Platform.OS === 'ios') {
  platformContainerStyles = {
    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
    borderBottomColor: 'rgba(0, 0, 0, .3)'
  };
} else {
  platformContainerStyles = {
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    elevation: 4
  };
}

var styles = _reactNative.StyleSheet.create({
  container: babelHelpers.extends({
    backgroundColor: _reactNative.Platform.OS === 'ios' ? '#F7F7F7' : '#FFF'
  }, platformContainerStyles),
  appBar: {
    flex: 1
  },
  header: {
    flexDirection: 'row'
  },
  item: {
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },
  title: {
    bottom: 0,
    left: TITLE_OFFSET,
    right: TITLE_OFFSET,
    top: 0,
    position: 'absolute',
    alignItems: _reactNative.Platform.OS === 'ios' ? 'center' : 'flex-start'
  },
  left: {
    left: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  },
  right: {
    right: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  }
});

exports.default = (0, _withOrientation2.default)(Header);
}, 699, null, "react-navigation/src/views/Header/Header.js");
__d(/* react-navigation/src/views/Header/HeaderTitle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Header/HeaderTitle.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var AnimatedText = _reactNative.Animated.Text;

var HeaderTitle = function HeaderTitle(_ref) {
  var style = _ref.style,
      rest = babelHelpers.objectWithoutProperties(_ref, ['style']);
  return React.createElement(AnimatedText, babelHelpers.extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.title, style],
    accessibilityTraits: 'header',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21
    }
  }));
};

var styles = _reactNative.StyleSheet.create({
  title: {
    fontSize: _reactNative.Platform.OS === 'ios' ? 17 : 20,
    fontWeight: _reactNative.Platform.OS === 'ios' ? '600' : '500',
    color: 'rgba(0, 0, 0, .9)',
    textAlign: _reactNative.Platform.OS === 'ios' ? 'center' : 'left',
    marginHorizontal: 16
  }
});

exports.default = HeaderTitle;
}, 700, null, "react-navigation/src/views/Header/HeaderTitle.js");
__d(/* react-navigation/src/views/Header/HeaderBackButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Header/HeaderBackButton.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _TouchableItem = require(702               ); // 702 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var HeaderBackButton = function (_React$PureComponent) {
  babelHelpers.inherits(HeaderBackButton, _React$PureComponent);

  function HeaderBackButton() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, HeaderBackButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = HeaderBackButton.__proto__ || Object.getPrototypeOf(HeaderBackButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._onTextLayout = function (e) {
      if (_this.state.initialTextWidth) {
        return;
      }
      _this.setState({
        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(HeaderBackButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onPress = _props.onPress,
          pressColorAndroid = _props.pressColorAndroid,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle,
          tintColor = _props.tintColor,
          truncatedTitle = _props.truncatedTitle;


      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;

      var backButtonTitle = renderTruncated ? truncatedTitle : title;

      var asset = require(703                      ); // 703 = ../assets/back-icon.png

      return React.createElement(
        _TouchableItem2.default,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: backButtonTitle,
          accessibilityTraits: 'button',
          testID: 'header-back',
          delayPressIn: 0,
          onPress: onPress,
          pressColor: pressColorAndroid,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73
          }
        },
        React.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          },
          React.createElement(_reactNative.Image, {
            style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && { tintColor: tintColor }],
            source: asset,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          }),
          _reactNative.Platform.OS === 'ios' && title && React.createElement(
            _reactNative.Text,
            {
              onLayout: this._onTextLayout,
              style: [styles.title, !!tintColor && { color: tintColor }, titleStyle],
              numberOfLines: 1,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            backButtonTitle
          )
        )
      );
    }
  }]);
  return HeaderBackButton;
}(React.PureComponent);

HeaderBackButton.defaultProps = {
  pressColorAndroid: 'rgba(0, 0, 0, .32)',
  tintColor: _reactNative.Platform.select({
    ios: '#037aff'
  }),
  truncatedTitle: 'Back'
};


var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    flexDirection: 'row',
    backgroundColor: 'transparent'
  },
  title: {
    fontSize: 17,
    paddingRight: 10
  },
  icon: _reactNative.Platform.OS === 'ios' ? {
    height: 21,
    width: 13,
    marginLeft: 10,
    marginRight: 22,
    marginVertical: 12,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  } : {
    height: 24,
    width: 24,
    margin: 16,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  },
  iconWithTitle: _reactNative.Platform.OS === 'ios' ? {
    marginRight: 5
  } : {}
});

exports.default = HeaderBackButton;
}, 701, null, "react-navigation/src/views/Header/HeaderBackButton.js");
__d(/* react-navigation/src/views/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/TouchableItem.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var ANDROID_VERSION_LOLLIPOP = 21;

var TouchableItem = function (_React$Component) {
  babelHelpers.inherits(TouchableItem, _React$Component);

  function TouchableItem() {
    babelHelpers.classCallCheck(this, TouchableItem);
    return babelHelpers.possibleConstructorReturn(this, (TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
        var _props = this.props,
            _style = _props.style,
            rest = babelHelpers.objectWithoutProperties(_props, ['style']);

        return React.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor || '', this.props.borderless || false),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          }),
          React.createElement(
            _reactNative.View,
            { style: _style, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            React.Children.only(this.props.children)
          )
        );
      }

      return React.createElement(
        _reactNative.TouchableOpacity,
        babelHelpers.extends({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        }),
        this.props.children
      );
    }
  }]);
  return TouchableItem;
}(React.Component);

TouchableItem.defaultProps = {
  borderless: false,
  pressColor: 'rgba(0, 0, 0, .32)'
};
exports.default = TouchableItem;
}, 702, null, "react-navigation/src/views/TouchableItem.js");
__d(/* react-navigation/src/views/assets/back-icon.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-navigation/src/views/assets","width":13,"height":21,"scales":[1,1.5,2,3,4],"hash":"23ea5876dd37198284f126df9ba165c8","name":"back-icon","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 703, null, "react-navigation/src/views/assets/back-icon.png");
__d(/* react-navigation/src/views/Header/HeaderStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _getSceneIndicesForInterpolationInputRange = require(705                                                    ); // 705 = ../../utils/getSceneIndicesForInterpolationInputRange

var _getSceneIndicesForInterpolationInputRange2 = babelHelpers.interopRequireDefault(_getSceneIndicesForInterpolationInputRange);

function forLeft(props) {
  var position = props.position,
      scene = props.scene,
      scenes = props.scenes;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [first, first + Math.abs(index - first) / 2, index, last - Math.abs(last - index) / 2, last],
      outputRange: [0, 0, 1, 0, 0]
    })
  };
}

function forCenter(props) {
  var position = props.position,
      scene = props.scene;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var inputRange = [first, index, last];

  return {
    opacity: position.interpolate({
      inputRange: inputRange,
      outputRange: [0, 1, 0]
    }),
    transform: [{
      translateX: position.interpolate({
        inputRange: inputRange,
        outputRange: _reactNative.I18nManager.isRTL ? [-200, 0, 200] : [200, 0, -200]
      })
    }]
  };
}

function forRight(props) {
  var position = props.position,
      scene = props.scene;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };
  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [first, index, last],
      outputRange: [0, 1, 0]
    })
  };
}

exports.default = {
  forLeft: forLeft,
  forCenter: forCenter,
  forRight: forRight
};
}, 704, null, "react-navigation/src/views/Header/HeaderStyleInterpolator.js");
__d(/* react-navigation/src/utils/getSceneIndicesForInterpolationInputRange.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


function getSceneIndicesForInterpolationInputRange(props) {
  var scene = props.scene,
      scenes = props.scenes;

  var index = scene.index;
  var lastSceneIndexInScenes = scenes.length - 1;
  var isBack = !scenes[lastSceneIndexInScenes].isActive;

  if (isBack) {
    var currentSceneIndexInScenes = scenes.findIndex(function (item) {
      return item === scene;
    });
    var targetSceneIndexInScenes = scenes.findIndex(function (item) {
      return item.isActive;
    });
    var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
    var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

    if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
      return {
        first: Math.min(targetSceneIndex, index - 1),
        last: index + 1
      };
    } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
      return {
        first: index - 1,
        last: Math.max(lastSceneIndex, index + 1)
      };
    } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
      return null;
    } else {
      return { first: index - 1, last: index + 1 };
    }
  } else {
    return { first: index - 1, last: index + 1 };
  }
}

exports.default = getSceneIndicesForInterpolationInputRange;
}, 705, null, "react-navigation/src/utils/getSceneIndicesForInterpolationInputRange.js");
__d(/* react-navigation/src/views/SafeAreaView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/SafeAreaView.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _withOrientation = require(707                ); // 707 = ./withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var isIPhoneX_deprecated = _reactNative.DeviceInfo.isIPhoneX_deprecated;

var X_WIDTH = 375;
var X_HEIGHT = 812;
var PAD_WIDTH = 768;
var PAD_HEIGHT = 1024;

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    D_HEIGHT = _Dimensions$get.height,
    D_WIDTH = _Dimensions$get.width;

var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
    PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

var _ref = PlatformConstants.reactNativeVersion || {},
    _ref$minor = _ref.minor,
    minor = _ref$minor === undefined ? 0 : _ref$minor;

var isIPhoneX = function () {
  if (minor >= 50) {
    return isIPhoneX_deprecated;
  }

  return _reactNative.Platform.OS === 'ios' && (D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH || D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT);
}();

var isIPad = function () {
  if (_reactNative.Platform.OS !== 'ios' || isIPhoneX) return false;

  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
    return false;
  }

  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
    return false;
  }

  return true;
}();

var statusBarHeight = function statusBarHeight(isLandscape) {
  if (isIPhoneX) {
    return isLandscape ? 0 : 44;
  }

  if (isIPad) {
    return 20;
  }

  return isLandscape ? 0 : 20;
};

var doubleFromPercentString = function doubleFromPercentString(percent) {
  if (!percent.includes('%')) {
    return 0;
  }

  var dbl = parseFloat(percent) / 100;

  if (isNaN(dbl)) return 0;

  return dbl;
};

var SafeView = function (_Component) {
  babelHelpers.inherits(SafeView, _Component);

  function SafeView() {
    var _ref2;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SafeView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref2 = SafeView.__proto__ || Object.getPrototypeOf(SafeView)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      touchesTop: true,
      touchesBottom: true,
      touchesLeft: true,
      touchesRight: true,
      orientation: null,
      viewWidth: 0,
      viewHeight: 0
    }, _this._onLayout = function () {
      if (!_this.view) return;

      var isLandscape = _this.props.isLandscape;
      var orientation = _this.state.orientation;

      var newOrientation = isLandscape ? 'landscape' : 'portrait';
      if (orientation && orientation === newOrientation) {
        return;
      }

      var WIDTH = isLandscape ? X_HEIGHT : X_WIDTH;
      var HEIGHT = isLandscape ? X_WIDTH : X_HEIGHT;

      _this.view.measureInWindow(function (winX, winY, winWidth, winHeight) {
        var realY = winY;
        var realX = winX;

        if (realY >= HEIGHT) {
          realY = realY % HEIGHT;
        } else if (realY < 0) {
          realY = realY % HEIGHT + HEIGHT;
        }

        if (realX >= WIDTH) {
          realX = realX % WIDTH;
        } else if (realX < 0) {
          realX = realX % WIDTH + WIDTH;
        }

        var touchesTop = realY === 0;
        var touchesBottom = realY + winHeight >= HEIGHT;
        var touchesLeft = realX === 0;
        var touchesRight = realX + winWidth >= WIDTH;

        _this.setState({
          touchesTop: touchesTop,
          touchesBottom: touchesBottom,
          touchesLeft: touchesLeft,
          touchesRight: touchesRight,
          orientation: newOrientation,
          viewWidth: winWidth,
          viewHeight: winHeight
        });
      });
    }, _this._getSafeAreaStyle = function () {
      var _this$state = _this.state,
          touchesTop = _this$state.touchesTop,
          touchesBottom = _this$state.touchesBottom,
          touchesLeft = _this$state.touchesLeft,
          touchesRight = _this$state.touchesRight;
      var _this$props = _this.props,
          forceInset = _this$props.forceInset,
          isLandscape = _this$props.isLandscape;

      var _this$_getViewStyles = _this._getViewStyles(),
          paddingTop = _this$_getViewStyles.paddingTop,
          paddingBottom = _this$_getViewStyles.paddingBottom,
          paddingLeft = _this$_getViewStyles.paddingLeft,
          paddingRight = _this$_getViewStyles.paddingRight,
          viewStyle = _this$_getViewStyles.viewStyle;

      var style = babelHelpers.extends({}, viewStyle, {
        paddingTop: touchesTop ? _this._getInset('top') : 0,
        paddingBottom: touchesBottom ? _this._getInset('bottom') : 0,
        paddingLeft: touchesLeft ? _this._getInset('left') : 0,
        paddingRight: touchesRight ? _this._getInset('right') : 0
      });

      if (forceInset) {
        Object.keys(forceInset).forEach(function (key) {
          var inset = forceInset[key];

          if (inset === 'always') {
            inset = _this._getInset(key);
          }

          if (inset === 'never') {
            inset = 0;
          }

          switch (key) {
            case 'horizontal':
              {
                style.paddingLeft = inset;
                style.paddingRight = inset;
                break;
              }
            case 'vertical':
              {
                style.paddingTop = inset;
                style.paddingBottom = inset;
                break;
              }
            case 'left':
            case 'right':
            case 'top':
            case 'bottom':
              {
                var padding = 'padding' + key[0].toUpperCase() + key.slice(1);
                style[padding] = inset;
                break;
              }
          }
        });
      }

      if (style.height && typeof style.height === 'number') {
        style.height += style.paddingTop + style.paddingBottom;
      }

      if (style.width && typeof style.width === 'number') {
        style.width += style.paddingLeft + style.paddingRight;
      }

      style.paddingTop += paddingTop;
      style.paddingBottom += paddingBottom;
      style.paddingLeft += paddingLeft;
      style.paddingRight += paddingRight;

      return style;
    }, _this._getViewStyles = function () {
      var viewWidth = _this.state.viewWidth;

      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(_this.props.style || {}),
          _StyleSheet$flatten$p = _StyleSheet$flatten.padding,
          padding = _StyleSheet$flatten$p === undefined ? 0 : _StyleSheet$flatten$p,
          _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,
          paddingVertical = _StyleSheet$flatten$p2 === undefined ? padding : _StyleSheet$flatten$p2,
          _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,
          paddingHorizontal = _StyleSheet$flatten$p3 === undefined ? padding : _StyleSheet$flatten$p3,
          _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,
          paddingTop = _StyleSheet$flatten$p4 === undefined ? paddingVertical : _StyleSheet$flatten$p4,
          _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,
          paddingBottom = _StyleSheet$flatten$p5 === undefined ? paddingVertical : _StyleSheet$flatten$p5,
          _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,
          paddingLeft = _StyleSheet$flatten$p6 === undefined ? paddingHorizontal : _StyleSheet$flatten$p6,
          _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,
          paddingRight = _StyleSheet$flatten$p7 === undefined ? paddingHorizontal : _StyleSheet$flatten$p7,
          viewStyle = babelHelpers.objectWithoutProperties(_StyleSheet$flatten, ['padding', 'paddingVertical', 'paddingHorizontal', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight']);

      if (typeof paddingTop !== 'number') {
        paddingTop = doubleFromPercentString(paddingTop) * viewWidth;
      }

      if (typeof paddingBottom !== 'number') {
        paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;
      }

      if (typeof paddingLeft !== 'number') {
        paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;
      }

      if (typeof paddingRight !== 'number') {
        paddingRight = doubleFromPercentString(paddingRight) * viewWidth;
      }

      return {
        paddingTop: paddingTop,
        paddingBottom: paddingBottom,
        paddingLeft: paddingLeft,
        paddingRight: paddingRight,
        viewStyle: viewStyle
      };
    }, _this._getInset = function (key) {
      var isLandscape = _this.props.isLandscape;

      switch (key) {
        case 'horizontal':
        case 'right':
        case 'left':
          {
            return isLandscape ? isIPhoneX ? 44 : 0 : 0;
          }
        case 'vertical':
        case 'top':
          {
            return statusBarHeight(isLandscape);
          }
        case 'bottom':
          {
            return isIPhoneX ? isLandscape ? 24 : 34 : 0;
          }
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SafeView, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      _reactNative.InteractionManager.runAfterInteractions(function () {
        _this2._onLayout();
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      this._onLayout();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          _props$forceInset = _props.forceInset,
          forceInset = _props$forceInset === undefined ? false : _props$forceInset,
          isLandscape = _props.isLandscape,
          children = _props.children,
          style = _props.style;


      if (_reactNative.Platform.OS !== 'ios') {
        return _react2.default.createElement(
          _reactNative.View,
          { style: style, __source: {
              fileName: _jsxFileName,
              lineNumber: 103
            }
          },
          this.props.children
        );
      }

      var safeAreaStyle = this._getSafeAreaStyle();

      return _react2.default.createElement(
        _reactNative.View,
        {
          ref: function ref(c) {
            return _this3.view = c;
          },
          onLayout: this._onLayout,
          style: safeAreaStyle,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 109
          }
        },
        this.props.children
      );
    }
  }]);
  return SafeView;
}(_react.Component);

exports.default = (0, _withOrientation2.default)(SafeView);
}, 706, null, "react-navigation/src/views/SafeAreaView.js");
__d(/* react-navigation/src/views/withOrientation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOrientationLandscape = undefined;
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/withOrientation.js';

exports.default = function (WrappedComponent) {
  var withOrientation = function (_React$Component) {
    babelHelpers.inherits(withOrientation, _React$Component);

    function withOrientation() {
      babelHelpers.classCallCheck(this, withOrientation);

      var _this = babelHelpers.possibleConstructorReturn(this, (withOrientation.__proto__ || Object.getPrototypeOf(withOrientation)).call(this));

      _initialiseProps.call(_this);

      var isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));
      _this.state = { isLandscape: isLandscape };
      return _this;
    }

    babelHelpers.createClass(withOrientation, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(WrappedComponent, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50
          }
        }));
      }
    }]);
    return withOrientation;
  }(React.Component);

  var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.handleOrientationChange = function (_ref2) {
      var window = _ref2.window;

      var isLandscape = isOrientationLandscape(window);
      _this2.setState({ isLandscape: isLandscape });
    };
  };

  return (0, _hoistNonReactStatics2.default)(withOrientation, WrappedComponent);
};

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _hoistNonReactStatics = require(347                      ); // 347 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

var isOrientationLandscape = exports.isOrientationLandscape = function isOrientationLandscape(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width > height;
};
}, 707, null, "react-navigation/src/views/withOrientation.js");
__d(/* react-navigation/src/views/SceneView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/SceneView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var SceneView = function (_React$PureComponent) {
  babelHelpers.inherits(SceneView, _React$PureComponent);

  function SceneView() {
    babelHelpers.classCallCheck(this, SceneView);
    return babelHelpers.possibleConstructorReturn(this, (SceneView.__proto__ || Object.getPrototypeOf(SceneView)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneView, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        navigation: this.props.navigation
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          screenProps = _props.screenProps,
          navigation = _props.navigation,
          Component = _props.component;


      return React.createElement(Component, { screenProps: screenProps, navigation: navigation, __source: {
          fileName: _jsxFileName,
          lineNumber: 32
        }
      });
    }
  }]);
  return SceneView;
}(React.PureComponent);

SceneView.childContextTypes = {
  navigation: _propTypes2.default.object.isRequired
};
exports.default = SceneView;
}, 708, null, "react-navigation/src/views/SceneView.js");
__d(/* react-navigation/src/views/CardStack/TransitionConfigs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _CardStackStyleInterpolator = require(710                           ); // 710 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var IOSTransitionSpec = {
  duration: 500,
  easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99),
  timing: _reactNative.Animated.timing
};

var SlideFromRightIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forHorizontal,
  containerStyle: {
    backgroundColor: '#000'
  }
};

var ModalSlideFromBottomIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forVertical,
  containerStyle: {
    backgroundColor: '#000'
  }
};

var FadeInFromBottomAndroid = {
  transitionSpec: {
    duration: 350,
    easing: _reactNative.Easing.out(_reactNative.Easing.poly(5)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

var FadeOutToBottomAndroid = {
  transitionSpec: {
    duration: 230,
    easing: _reactNative.Easing.in(_reactNative.Easing.poly(4)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

function defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {
  if (_reactNative.Platform.OS === 'android') {
    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {
      return FadeOutToBottomAndroid;
    }
    return FadeInFromBottomAndroid;
  }

  if (isModal) {
    return ModalSlideFromBottomIOS;
  }
  return SlideFromRightIOS;
}

function getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {
  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);
  if (transitionConfigurer) {
    return babelHelpers.extends({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));
  }
  return defaultConfig;
}

exports.default = {
  defaultTransitionConfig: defaultTransitionConfig,
  getTransitionConfig: getTransitionConfig
};
}, 709, null, "react-navigation/src/views/CardStack/TransitionConfigs.js");
__d(/* react-navigation/src/views/CardStack/CardStackStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _getSceneIndicesForInterpolationInputRange = require(705                                                    ); // 705 = ../../utils/getSceneIndicesForInterpolationInputRange

var _getSceneIndicesForInterpolationInputRange2 = babelHelpers.interopRequireDefault(_getSceneIndicesForInterpolationInputRange);

function forInitial(props) {
  var navigation = props.navigation,
      scene = props.scene;


  var focused = navigation.state.index === scene.index;
  var opacity = focused ? 1 : 0;

  var translate = focused ? 0 : 1000000;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, first + 0.01, index, last - 0.01, last],
    outputRange: [0, 1, 1, 0.85, 0]
  });

  var width = layout.initWidth;
  var translateX = position.interpolate({
    inputRange: [first, index, last],
    outputRange: _reactNative.I18nManager.isRTL ? [-width, 0, width * 0.3] : [width, 0, width * -0.3]
  });
  var translateY = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forVertical(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, first + 0.01, index, last - 0.01, last],
    outputRange: [0, 1, 1, 0.85, 0]
  });

  var height = layout.initHeight;
  var translateY = position.interpolate({
    inputRange: [first, index, last],
    outputRange: [height, 0, 0]
  });
  var translateX = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFadeFromBottomAndroid(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var inputRange = [first, index, last - 0.01, last];

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [0, 1, 1, 0]
  });

  var translateY = position.interpolate({
    inputRange: inputRange,
    outputRange: [50, 0, 0, 0]
  });
  var translateX = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFade(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, index, last],
    outputRange: [0, 1, 1]
  });

  return {
    opacity: opacity
  };
}

function canUseNativeDriver() {
  return true;
}

exports.default = {
  forHorizontal: forHorizontal,
  forVertical: forVertical,
  forFadeFromBottomAndroid: forFadeFromBottomAndroid,
  forFade: forFade,
  canUseNativeDriver: canUseNativeDriver
};
}, 710, null, "react-navigation/src/views/CardStack/CardStackStyleInterpolator.js");
__d(/* react-navigation/src/views/Transitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Transitioner.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _ScenesReducer = require(712              ); // 712 = ./ScenesReducer

var _ScenesReducer2 = babelHelpers.interopRequireDefault(_ScenesReducer);

var DefaultTransitionSpec = {
  duration: 250,
  easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
  timing: _reactNative.Animated.timing
};

var Transitioner = function (_React$Component) {
  babelHelpers.inherits(Transitioner, _React$Component);

  function Transitioner(props, context) {
    babelHelpers.classCallCheck(this, Transitioner);

    var _this = babelHelpers.possibleConstructorReturn(this, (Transitioner.__proto__ || Object.getPrototypeOf(Transitioner)).call(this, props, context));

    var layout = {
      height: new _reactNative.Animated.Value(0),
      initHeight: 0,
      initWidth: 0,
      isMeasured: false,
      width: new _reactNative.Animated.Value(0)
    };

    _this.state = {
      layout: layout,
      position: new _reactNative.Animated.Value(_this.props.navigation.state.index),
      progress: new _reactNative.Animated.Value(1),
      scenes: (0, _ScenesReducer2.default)([], _this.props.navigation.state)
    };

    _this._prevTransitionProps = null;
    _this._transitionProps = buildTransitionProps(props, _this.state);
    _this._isMounted = false;
    _this._isTransitionRunning = false;
    _this._queuedTransition = null;
    return _this;
  }

  babelHelpers.createClass(Transitioner, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._onLayout = this._onLayout.bind(this);
      this._onTransitionEnd = this._onTransitionEnd.bind(this);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextScenes = (0, _ScenesReducer2.default)(this.state.scenes, nextProps.navigation.state, this.props.navigation.state);

      if (nextScenes === this.state.scenes) {
        return;
      }

      var indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;
      if (this._isTransitionRunning) {
        this._queuedTransition = { nextProps: nextProps, nextScenes: nextScenes, indexHasChanged: indexHasChanged };
        return;
      }

      this._startTransition(nextProps, nextScenes, indexHasChanged);
    }
  }, {
    key: '_startTransition',
    value: function _startTransition(nextProps, nextScenes, indexHasChanged) {
      var _this2 = this;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: nextScenes
      });

      var position = nextState.position,
          progress = nextState.progress;


      progress.setValue(0);

      this._prevTransitionProps = this._transitionProps;
      this._transitionProps = buildTransitionProps(nextProps, nextState);

      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;

      var transitionSpec = babelHelpers.extends({}, DefaultTransitionSpec, transitionUserSpec);

      var timing = transitionSpec.timing;

      delete transitionSpec.timing;

      var toValue = nextProps.navigation.state.index;
      var positionHasChanged = position.__getValue() !== toValue;

      var animations = indexHasChanged && positionHasChanged ? [timing(progress, babelHelpers.extends({}, transitionSpec, {
        toValue: 1
      })), timing(position, babelHelpers.extends({}, transitionSpec, {
        toValue: nextProps.navigation.state.index
      }))] : [];

      this._isTransitionRunning = true;
      this.setState(nextState, function () {
        nextProps.onTransitionStart && nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);
        _reactNative.Animated.parallel(animations).start(_this2._onTransitionEnd);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        _reactNative.View,
        { onLayout: this._onLayout, style: [styles.main], __source: {
            fileName: _jsxFileName,
            lineNumber: 187
          }
        },
        this.props.render(this._transitionProps, this._prevTransitionProps)
      );
    }
  }, {
    key: '_onLayout',
    value: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          height = _event$nativeEvent$la.height,
          width = _event$nativeEvent$la.width;

      if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {
        return;
      }
      var layout = babelHelpers.extends({}, this.state.layout, {
        initHeight: height,
        initWidth: width,
        isMeasured: true
      });

      layout.height.setValue(height);
      layout.width.setValue(width);

      var nextState = babelHelpers.extends({}, this.state, {
        layout: layout
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);
      this.setState(nextState);
    }
  }, {
    key: '_onTransitionEnd',
    value: function _onTransitionEnd() {
      var _this3 = this;

      if (!this._isMounted) {
        return;
      }
      var prevTransitionProps = this._prevTransitionProps;
      this._prevTransitionProps = null;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: this.state.scenes.filter(isSceneNotStale)
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);

      this.setState(nextState, function () {
        _this3.props.onTransitionEnd && _this3.props.onTransitionEnd(_this3._transitionProps, prevTransitionProps);
        if (_this3._queuedTransition) {
          _this3._startTransition(_this3._queuedTransition.nextProps, _this3._queuedTransition.nextScenes, _this3._queuedTransition.indexHasChanged);
          _this3._queuedTransition = null;
        } else {
          _this3._isTransitionRunning = false;
        }
      });
    }
  }]);
  return Transitioner;
}(React.Component);

function buildTransitionProps(props, state) {
  var navigation = props.navigation;
  var layout = state.layout,
      position = state.position,
      progress = state.progress,
      scenes = state.scenes;


  var scene = scenes.find(isSceneActive);

  (0, _invariant2.default)(scene, 'Could not find active scene');

  return {
    layout: layout,
    navigation: navigation,
    position: position,
    progress: progress,
    scenes: scenes,
    scene: scene,
    index: scene.index
  };
}

function isSceneNotStale(scene) {
  return !scene.isStale;
}

function isSceneActive(scene) {
  return scene.isActive;
}

var styles = _reactNative.StyleSheet.create({
  main: {
    flex: 1
  }
});

exports.default = Transitioner;
}, 711, null, "react-navigation/src/views/Transitioner.js");
__d(/* react-navigation/src/views/ScenesReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScenesReducer;

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _shallowEqual = require(713                    ); // 713 = ../utils/shallowEqual

var _shallowEqual2 = babelHelpers.interopRequireDefault(_shallowEqual);

var SCENE_KEY_PREFIX = 'scene_';

function compareKey(one, two) {
  var delta = one.length - two.length;
  if (delta > 0) {
    return 1;
  }
  if (delta < 0) {
    return -1;
  }
  return one > two ? 1 : -1;
}

function compareScenes(one, two) {
  if (one.index > two.index) {
    return 1;
  }
  if (one.index < two.index) {
    return -1;
  }

  return compareKey(one.key, two.key);
}

function areScenesShallowEqual(one, two) {
  return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
}

function areRoutesShallowEqual(one, two) {
  if (!one || !two) {
    return one === two;
  }

  if (one.key !== two.key) {
    return false;
  }

  return (0, _shallowEqual2.default)(one, two);
}

function ScenesReducer(scenes, nextState, prevState) {
  if (prevState === nextState) {
    return scenes;
  }

  var prevScenes = new Map();
  var freshScenes = new Map();
  var staleScenes = new Map();

  scenes.forEach(function (scene) {
    var key = scene.key;

    if (scene.isStale) {
      staleScenes.set(key, scene);
    }
    prevScenes.set(key, scene);
  });

  var nextKeys = new Set();
  nextState.routes.forEach(function (route, index) {
    var key = SCENE_KEY_PREFIX + route.key;
    var scene = {
      index: index,
      isActive: false,
      isStale: false,
      key: key,
      route: route
    };
    (0, _invariant2.default)(!nextKeys.has(key), 'navigation.state.routes[' + index + '].key "' + key + '" conflicts with ' + 'another route!');
    nextKeys.add(key);

    if (staleScenes.has(key)) {
      staleScenes.delete(key);
    }
    freshScenes.set(key, scene);
  });

  if (prevState) {
    prevState.routes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      if (freshScenes.has(key)) {
        return;
      }
      staleScenes.set(key, {
        index: index,
        isActive: false,
        isStale: true,
        key: key,
        route: route
      });
    });
  }

  var nextScenes = [];

  var mergeScene = function mergeScene(nextScene) {
    var key = nextScene.key;

    var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;
    if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
      nextScenes.push(prevScene);
    } else {
      nextScenes.push(nextScene);
    }
  };

  staleScenes.forEach(mergeScene);
  freshScenes.forEach(mergeScene);

  nextScenes.sort(compareScenes);

  var activeScenesCount = 0;
  nextScenes.forEach(function (scene, ii) {
    var isActive = !scene.isStale && scene.index === nextState.index;
    if (isActive !== scene.isActive) {
      nextScenes[ii] = babelHelpers.extends({}, scene, {
        isActive: isActive
      });
    }
    if (isActive) {
      activeScenesCount++;
    }
  });

  (0, _invariant2.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);

  if (nextScenes.length !== scenes.length) {
    return nextScenes;
  }

  if (nextScenes.some(function (scene, index) {
    return !areScenesShallowEqual(scenes[index], scene);
  })) {
    return nextScenes;
  }

  return scenes;
}
}, 712, null, "react-navigation/src/views/ScenesReducer.js");
__d(/* react-navigation/src/utils/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }
  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 713, null, "react-navigation/src/utils/shallowEqual.js");
__d(/* react-navigation/src/routers/StackRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pathToRegexp = require(715             ); // 715 = path-to-regexp

var _pathToRegexp2 = babelHelpers.interopRequireDefault(_pathToRegexp);

var _NavigationActions = require(687                   ); // 687 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _createConfigGetter = require(717                   ); // 717 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _getScreenForRouteName = require(718                      ); // 718 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _StateUtils = require(690            ); // 690 = ../StateUtils

var _StateUtils2 = babelHelpers.interopRequireDefault(_StateUtils);

var _validateRouteConfigMap = require(720                       ); // 720 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(721                          ); // 721 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

var uniqueBaseId = 'id-' + Date.now();
var uuidCount = 0;
function _getUuid() {
  return uniqueBaseId + '-' + uuidCount++;
}

exports.default = function (routeConfigs) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var childRouters = {};
  var routeNames = Object.keys(routeConfigs);

  routeNames.forEach(function (routeName) {
    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    if (screen && screen.router) {
      childRouters[routeName] = screen.router;
    } else {
      childRouters[routeName] = null;
    }
  });

  var initialRouteParams = stackConfig.initialRouteParams;


  var initialRouteName = stackConfig.initialRouteName || routeNames[0];

  var initialChildRouter = childRouters[initialRouteName];
  var paths = stackConfig.paths || {};

  routeNames.forEach(function (routeName) {
    var pathPattern = paths[routeName] || routeConfigs[routeName].path;
    var matchExact = !!pathPattern && !childRouters[routeName];
    if (typeof pathPattern !== 'string') {
      pathPattern = routeName;
    }
    var keys = [];
    var re = (0, _pathToRegexp2.default)(pathPattern, keys);
    if (!matchExact) {
      var wildcardRe = (0, _pathToRegexp2.default)(pathPattern + '/*', keys);
      re = new RegExp('(?:' + re.source + ')|(?:' + wildcardRe.source + ')');
    }

    paths[routeName] = { re: re, keys: keys, toPath: _pathToRegexp2.default.compile(pathPattern) };
  });

  return {
    getComponentForState: function getComponentForState(state) {
      var activeChildRoute = state.routes[state.index];
      var routeName = activeChildRoute.routeName;

      if (childRouters[routeName]) {
        return childRouters[routeName].getComponentForState(activeChildRoute);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getStateForAction: function getStateForAction(action, state) {
      if (!state) {
        var route = {};
        if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
          return {
            index: 0,
            routes: [babelHelpers.extends({}, action, {
              type: undefined,
              key: 'Init-' + _getUuid()
            })]
          };
        }
        if (initialChildRouter) {
          route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({
            routeName: initialRouteName,
            params: initialRouteParams
          }));
        }
        var params = (route.params || action.params || initialRouteParams) && babelHelpers.extends({}, route.params || {}, action.params || {}, initialRouteParams || {});
        route = babelHelpers.extends({}, route, {
          routeName: initialRouteName,
          key: 'Init-' + _getUuid()
        }, params ? { params: params } : {});

        state = {
          index: 0,
          routes: [route]
        };
      }

      if (action.type !== _NavigationActions2.default.RESET || action.key !== null) {
        var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;
        var childIndex = keyIndex >= 0 ? keyIndex : state.index;
        var childRoute = state.routes[childIndex];
        var childRouter = childRouters[childRoute.routeName];
        if (childRouter) {
          var _route = childRouter.getStateForAction(action, childRoute);
          if (_route === null) {
            return state;
          }
          if (_route && _route !== childRoute) {
            return _StateUtils2.default.replaceAt(state, childRoute.key, _route);
          }
        }
      }

      if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
        var _childRouter = childRouters[action.routeName];
        var _route2 = void 0;
        if (_childRouter) {
          var childAction = action.action || _NavigationActions2.default.init({ params: action.params });
          _route2 = babelHelpers.extends({
            params: action.params
          }, _childRouter.getStateForAction(childAction), {
            key: _getUuid(),
            routeName: action.routeName
          });
        } else {
          _route2 = {
            params: action.params,
            key: _getUuid(),
            routeName: action.routeName
          };
        }
        return _StateUtils2.default.push(state, _route2);
      }

      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var childRouterNames = Object.keys(childRouters);
        for (var i = 0; i < childRouterNames.length; i++) {
          var childRouterName = childRouterNames[i];
          var _childRouter2 = childRouters[childRouterName];
          if (_childRouter2) {
            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());

            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);
            var routeToPush = null;
            if (navigatedChildRoute === null) {
              routeToPush = initChildRoute;
            } else if (navigatedChildRoute !== initChildRoute) {
              routeToPush = navigatedChildRoute;
            }
            if (routeToPush) {
              return _StateUtils2.default.push(state, babelHelpers.extends({}, routeToPush, {
                key: _getUuid(),
                routeName: childRouterName
              }));
            }
          }
        }
      }

      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var key = action.key;
        var lastRoute = state.routes.find(function (route) {
          return route.key === key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var routes = [].concat(babelHelpers.toConsumableArray(state.routes));
          routes[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: routes
          });
        }
      }

      if (action.type === _NavigationActions2.default.RESET) {
        var resetAction = action;

        return babelHelpers.extends({}, state, {
          routes: resetAction.actions.map(function (childAction) {
            var router = childRouters[childAction.routeName];
            if (router) {
              return babelHelpers.extends({}, childAction, router.getStateForAction(childAction), {
                routeName: childAction.routeName,
                key: _getUuid()
              });
            }
            var route = babelHelpers.extends({}, childAction, {
              key: _getUuid()
            });
            delete route.type;
            return route;
          }),
          index: action.index
        });
      }

      if (action.type === _NavigationActions2.default.BACK) {
        var _key = action.key;
        var backRouteIndex = null;
        if (_key) {
          var backRoute = state.routes.find(function (route) {
            return route.key === _key;
          });

          backRouteIndex = state.routes.indexOf(backRoute);
        }
        if (backRouteIndex == null) {
          return _StateUtils2.default.pop(state);
        }
        if (backRouteIndex > 0) {
          return babelHelpers.extends({}, state, {
            routes: state.routes.slice(0, backRouteIndex),
            index: backRouteIndex - 1
          });
        }
      }
      return state;
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = route.routeName;
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);

      var subPath = paths[routeName].toPath(route.params);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var stateRoute = route;

        var child = screen.router.getPathAndParamsForState(stateRoute);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(pathToResolve, inputParams) {
      if (!pathToResolve) {
        return _NavigationActions2.default.navigate({
          routeName: initialRouteName
        });
      }

      var _pathToResolve$split = pathToResolve.split('?'),
          _pathToResolve$split2 = babelHelpers.slicedToArray(_pathToResolve$split, 2),
          pathNameToResolve = _pathToResolve$split2[0],
          queryString = _pathToResolve$split2[1];

      var matchedRouteName = void 0;
      var pathMatch = void 0;
      var pathMatchKeys = void 0;

      for (var _iterator = Object.entries(paths), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var routeName = _ref2[0];
        var path = _ref2[1];
        var re = path.re,
            keys = path.keys;

        pathMatch = re.exec(pathNameToResolve);
        if (pathMatch && pathMatch.length) {
          pathMatchKeys = keys;
          matchedRouteName = routeName;
          break;
        }
      }

      if (!matchedRouteName) {
        return null;
      }

      var nestedAction = void 0;
      var nestedQueryString = queryString ? '?' + queryString : '';
      if (childRouters[matchedRouteName]) {
        nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/') + nestedQueryString);
      }

      var queryParams = inputParams || (queryString || '').split('&').reduce(function (result, item) {
        if (item !== '') {
          var nextResult = result || {};

          var _item$split = item.split('='),
              _item$split2 = babelHelpers.slicedToArray(_item$split, 2),
              key = _item$split2[0],
              value = _item$split2[1];

          nextResult[key] = value;
          return nextResult;
        }
        return result;
      }, null);

      var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {
        var key = pathMatchKeys[i];
        if (key.asterisk || !key) {
          return result;
        }
        var nextResult = result || {};
        var paramName = key.name;
        nextResult[paramName] = matchResult;
        return nextResult;
      }, queryParams);

      return _NavigationActions2.default.navigate(babelHelpers.extends({
        routeName: matchedRouteName
      }, params ? { params: params } : {}, nestedAction ? { action: nestedAction } : {}));
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 714, null, "react-navigation/src/routers/StackRouter.js");
__d(/* path-to-regexp/index.js */function(global, require, module, exports) {var isarray = require(716      ); // 716 = isarray

module.exports = pathToRegexp;
module.exports.parse = parse;
module.exports.compile = compile;
module.exports.tokensToFunction = tokensToFunction;
module.exports.tokensToRegExp = tokensToRegExp;

var PATH_REGEXP = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    if (escaped) {
      path += escaped[1];
      continue;
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  }

  if (index < str.length) {
    path += str.substr(index);
  }

  if (path) {
    tokens.push(path);
  }

  return tokens;
}

function compile(str, options) {
  return tokensToFunction(parse(str, options));
}

function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function tokensToFunction(tokens) {
  var matches = new Array(tokens.length);

  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue;
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }

          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }

        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue;
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }

      path += token.prefix + segment;
    }

    return path;
  };
}

function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}

function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}

function flags(options) {
  return options.sensitive ? '' : 'i';
}

function regexpToRegexp(path, keys) {
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys);
}

function arrayToRegexp(path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys);
}

function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}

function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys);
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options);
  }

  return stringToRegexp(path, keys, options);
}
}, 715, null, "path-to-regexp/index.js");
__d(/* isarray/index.js */function(global, require, module, exports) {module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};
}, 716, null, "isarray/index.js");
__d(/* react-navigation/src/routers/createConfigGetter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(718                      ); // 718 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _addNavigationHelpers = require(688                      ); // 688 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _validateScreenOptions = require(719                      ); // 719 = ./validateScreenOptions

var _validateScreenOptions2 = babelHelpers.interopRequireDefault(_validateScreenOptions);

function applyConfig(configurer, navigationOptions, configProps) {
  if (typeof configurer === 'function') {
    return babelHelpers.extends({}, navigationOptions, configurer(babelHelpers.extends({}, configProps, {
      navigationOptions: navigationOptions
    })));
  }
  if (typeof configurer === 'object') {
    return babelHelpers.extends({}, navigationOptions, configurer);
  }
  return navigationOptions;
}

exports.default = function (routeConfigs, navigatorScreenConfig) {
  return function (navigation, screenProps) {
    var state = navigation.state,
        dispatch = navigation.dispatch;

    var route = state;

    (0, _invariant2.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');

    var Component = (0, _getScreenForRouteName2.default)(routeConfigs, route.routeName);

    var outputConfig = {};

    var router = Component.router;
    if (router) {
      var _ref = route,
          routes = _ref.routes,
          index = _ref.index;

      if (!route || !routes || index == null) {
        throw new Error('Expect nav state to have routes and index, ' + JSON.stringify(route));
      }
      var childRoute = routes[index];
      var childNavigation = (0, _addNavigationHelpers2.default)({
        state: childRoute,
        dispatch: dispatch
      });
      outputConfig = router.getScreenOptions(childNavigation, screenProps);
    }

    var routeConfig = routeConfigs[route.routeName];

    var routeScreenConfig = routeConfig.navigationOptions;
    var componentScreenConfig = Component.navigationOptions;

    var configOptions = { navigation: navigation, screenProps: screenProps || {} };

    outputConfig = applyConfig(navigatorScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);

    (0, _validateScreenOptions2.default)(outputConfig, route);

    return outputConfig;
  };
};
}, 717, null, "react-navigation/src/routers/createConfigGetter.js");
__d(/* react-navigation/src/routers/getScreenForRouteName.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScreenForRouteName;

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function getScreenForRouteName(routeConfigs, routeName) {
  var routeConfig = routeConfigs[routeName];

  if (!routeConfig) {
    throw new Error('There is no route defined for key ' + routeName + '.\n' + ('Must be one of: ' + Object.keys(routeConfigs).map(function (a) {
      return '\'' + a + '\'';
    }).join(',')));
  }

  if (routeConfig.screen) {
    return routeConfig.screen;
  }

  if (typeof routeConfig.getScreen === 'function') {
    var screen = routeConfig.getScreen();
    (0, _invariant2.default)(typeof screen === 'function', 'The getScreen defined for route \'' + routeName + ' didn\'t return a valid ' + 'screen or navigator.\n\n' + 'Please pass it like this:\n' + (routeName + ': {\n  getScreen: () => require(\'./MyScreen\').default\n}'));
    return screen;
  }

  throw new Error('Route ' + routeName + ' must define a screen or a getScreen.');
}
}, 718, null, "react-navigation/src/routers/getScreenForRouteName.js");
__d(/* react-navigation/src/routers/validateScreenOptions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var deprecatedKeys = ['tabBar'];

exports.default = function (screenOptions, route) {
  var keys = Object.keys(screenOptions);

  var deprecatedKey = keys.find(function (key) {
    return deprecatedKeys.includes(key);
  });

  if (typeof screenOptions.title === 'function') {
    throw new Error(['`title` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {
    throw new Error(['`' + deprecatedKey + '` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    ' + deprecatedKey + ': ({ state }) => ({', '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', '    ' + deprecatedKey + 'Key: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {
    throw new Error(['Invalid key `' + deprecatedKey + '` defined in navigation options for `' + route.routeName + '` screen.', '\n', 'Try replacing the following navigation options:', '{', '    ' + deprecatedKey + ': {'].concat(babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '        ' + key + ': ...,';
    })), ['    },', '}', '\n', 'with:', '{'], babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '    ' + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + ': ...,';
    })), ['}']).join('\n'));
  }
};
}, 719, null, "react-navigation/src/routers/validateScreenOptions.js");
__d(/* react-navigation/src/routers/validateRouteConfigMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function validateRouteConfigMap(routeConfigs) {
  var routeNames = Object.keys(routeConfigs);
  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');

  routeNames.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];

    if (!routeConfig.screen && !routeConfig.getScreen) {
      throw new Error('Route \'' + routeName + '\' should declare a screen. ' + 'For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}');
    } else if (routeConfig.screen && routeConfig.getScreen) {
      throw new Error('Route \'' + routeName + '\' should declare a screen or ' + 'a getScreen, not both.');
    }

    if (routeConfig.screen && typeof routeConfig.screen !== 'function') {
      throw new Error('The component for route \'' + routeName + '\' must be a ' + 'React component. For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}\n\n' + 'You can also use a navigator:\n\n' + "import MyNavigator from './MyNavigator';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyNavigator,\n' + '}');
    }
  });
}

exports.default = validateRouteConfigMap;
}, 720, null, "react-navigation/src/routers/validateRouteConfigMap.js");
__d(/* react-navigation/src/routers/getScreenConfigDeprecated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

exports.default = function () {
  return (0, _invariant2.default)(false, '`getScreenConfig` has been replaced with `getScreenOptions`');
};
}, 721, null, "react-navigation/src/routers/getScreenConfigDeprecated.js");
__d(/* react-navigation/src/navigators/NavigatorTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var STACK = 'react-navigation/STACK';
var TABS = 'react-navigation/TABS';
var DRAWER = 'react-navigation/DRAWER';

exports.default = {
  STACK: STACK,
  TABS: TABS,
  DRAWER: DRAWER
};
}, 722, null, "react-navigation/src/navigators/NavigatorTypes.js");
__d(/* react-navigation/src/navigators/TabNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/navigators/TabNavigator.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _createNavigator = require(691                ); // 691 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(685                           ); // 685 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(724                   ); // 724 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _TabView = require(725                       ); // 725 = ../views/TabView/TabView

var _TabView2 = babelHelpers.interopRequireDefault(_TabView);

var _TabBarTop = require(736                         ); // 736 = ../views/TabView/TabBarTop

var _TabBarTop2 = babelHelpers.interopRequireDefault(_TabBarTop);

var _TabBarBottom = require(738                            ); // 738 = ../views/TabView/TabBarBottom

var _TabBarBottom2 = babelHelpers.interopRequireDefault(_TabBarBottom);

var _NavigatorTypes = require(722               ); // 722 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var TabNavigator = function TabNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, TabNavigator.Presets.Default, config);
  var tabBarComponent = mergedConfig.tabBarComponent,
      tabBarPosition = mergedConfig.tabBarPosition,
      tabBarOptions = mergedConfig.tabBarOptions,
      swipeEnabled = mergedConfig.swipeEnabled,
      animationEnabled = mergedConfig.animationEnabled,
      lazy = mergedConfig.lazy,
      initialLayout = mergedConfig.initialLayout,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['tabBarComponent', 'tabBarPosition', 'tabBarOptions', 'swipeEnabled', 'animationEnabled', 'lazy', 'initialLayout']);


  var router = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigs, config, _NavigatorTypes2.default.TABS)(function (props) {
    return _react2.default.createElement(_TabView2.default, babelHelpers.extends({}, props, {
      tabBarComponent: tabBarComponent,
      tabBarPosition: tabBarPosition,
      tabBarOptions: tabBarOptions,
      swipeEnabled: swipeEnabled,
      animationEnabled: animationEnabled,
      lazy: lazy,
      initialLayout: initialLayout,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 54
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};

var Presets = {
  iOSBottomTabs: {
    tabBarComponent: _TabBarBottom2.default,
    tabBarPosition: 'bottom',
    swipeEnabled: false,
    animationEnabled: false,
    lazy: false,
    initialLayout: undefined
  },
  AndroidTopTabs: {
    tabBarComponent: _TabBarTop2.default,
    tabBarPosition: 'top',
    swipeEnabled: true,
    animationEnabled: true,
    lazy: false,
    initialLayout: undefined
  }
};

TabNavigator.Presets = {
  iOSBottomTabs: Presets.iOSBottomTabs,
  AndroidTopTabs: Presets.AndroidTopTabs,
  Default: _reactNative.Platform.OS === 'ios' ? Presets.iOSBottomTabs : Presets.AndroidTopTabs
};

exports.default = TabNavigator;
}, 723, null, "react-navigation/src/navigators/TabNavigator.js");
__d(/* react-navigation/src/routers/TabRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(689                 ); // 689 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(718                      ); // 718 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _createConfigGetter = require(717                   ); // 717 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _NavigationActions = require(687                   ); // 687 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _validateRouteConfigMap = require(720                       ); // 720 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(721                          ); // 721 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

exports.default = function (routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var order = config.order || Object.keys(routeConfigs);
  var paths = config.paths || {};
  var initialRouteName = config.initialRouteName || order[0];
  var initialRouteIndex = order.indexOf(initialRouteName);
  var backBehavior = config.backBehavior || 'initialRoute';
  var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';
  var tabRouters = {};
  order.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];
    paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;
    tabRouters[routeName] = null;
    if (routeConfig.screen && routeConfig.screen.router) {
      tabRouters[routeName] = routeConfig.screen.router;
    }
  });
  if (initialRouteIndex === -1) {
    throw new Error('Invalid initialRouteName \'' + initialRouteName + '\' for TabRouter. ' + ('Should be one of ' + order.map(function (n) {
      return '"' + n + '"';
    }).join(', ')));
  }
  return {
    getStateForAction: function getStateForAction(action, inputState) {
      var state = inputState;
      if (!state) {
        var _routes = order.map(function (routeName) {
          var tabRouter = tabRouters[routeName];
          if (tabRouter) {
            var childAction = action.action || _NavigationActions2.default.init(babelHelpers.extends({}, action.params ? { params: action.params } : {}));
            return babelHelpers.extends({}, tabRouter.getStateForAction(childAction), {
              key: routeName,
              routeName: routeName
            });
          }
          return {
            key: routeName,
            routeName: routeName
          };
        });
        state = {
          routes: _routes,
          index: initialRouteIndex
        };
      }

      if (action.type === _NavigationActions2.default.INIT) {
        var params = action.params;

        if (params) {
          state.routes = state.routes.map(function (route) {
            return babelHelpers.extends({}, route, {
              params: babelHelpers.extends({}, route.params, params)
            });
          });
        }
      }

      var activeTabLastState = state.routes[state.index];
      var activeTabRouter = tabRouters[order[state.index]];
      if (activeTabRouter) {
        var activeTabState = activeTabRouter.getStateForAction(action.action || action, activeTabLastState);
        if (!activeTabState && inputState) {
          return null;
        }
        if (activeTabState && activeTabState !== activeTabLastState) {
          var _routes2 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes2[state.index] = activeTabState;
          return babelHelpers.extends({}, state, {
            routes: _routes2
          });
        }
      }

      var activeTabIndex = state.index;
      var isBackEligible = action.key == null || action.key === activeTabLastState.key;
      if (action.type === _NavigationActions2.default.BACK && isBackEligible && shouldBackNavigateToInitialRoute) {
        activeTabIndex = initialRouteIndex;
      }
      var didNavigate = false;
      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var navigateAction = action;
        didNavigate = !!order.find(function (tabId, i) {
          if (tabId === navigateAction.routeName) {
            activeTabIndex = i;
            return true;
          }
          return false;
        });
        if (didNavigate) {
          var childState = state.routes[activeTabIndex];
          var newChildState = void 0;

          var tabRouter = tabRouters[action.routeName];

          if (action.action) {
            newChildState = tabRouter ? tabRouter.getStateForAction(action.action, childState) : null;
          } else if (!tabRouter && action.params) {
            newChildState = babelHelpers.extends({}, childState, {
              params: babelHelpers.extends({}, childState.params || {}, action.params)
            });
          }

          if (newChildState && newChildState !== childState) {
            var _routes3 = [].concat(babelHelpers.toConsumableArray(state.routes));
            _routes3[activeTabIndex] = newChildState;
            return babelHelpers.extends({}, state, {
              routes: _routes3,
              index: activeTabIndex
            });
          }
        }
      }
      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var key = action.key;
        var lastRoute = state.routes.find(function (route) {
          return route.key === key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var _routes4 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes4[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: _routes4
          });
        }
      }
      if (activeTabIndex !== state.index) {
        return babelHelpers.extends({}, state, {
          index: activeTabIndex
        });
      } else if (didNavigate && !inputState) {
        return state;
      } else if (didNavigate) {
        return null;
      }

      var index = state.index;

      var routes = state.routes;
      order.find(function (tabId, i) {
        var tabRouter = tabRouters[tabId];
        if (i === index) {
          return false;
        }
        var tabState = routes[i];
        if (tabRouter) {
          tabState = tabRouter.getStateForAction(action, tabState);
        }
        if (!tabState) {
          index = i;
          return true;
        }
        if (tabState !== routes[i]) {
          routes = [].concat(babelHelpers.toConsumableArray(routes));
          routes[i] = tabState;
          index = i;
          return true;
        }
        return false;
      });

      index = action.type === _NavigationActions2.default.SET_PARAMS ? state.index : index;

      if (index !== state.index || routes !== state.routes) {
        return babelHelpers.extends({}, state, {
          index: index,
          routes: routes
        });
      }
      return state;
    },
    getComponentForState: function getComponentForState(state) {
      var routeName = order[state.index];
      (0, _invariant2.default)(routeName, 'There is no route defined for index ' + state.index + '. Check that\n        that you passed in a navigation state with a valid tab/screen index.');
      var childRouter = tabRouters[routeName];
      if (childRouter) {
        return childRouter.getComponentForState(state.routes[state.index]);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = order[state.index];
      var subPath = paths[routeName];
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var stateRoute = route;

        var child = screen.router.getPathAndParamsForState(stateRoute);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(path, params) {
      return order.map(function (tabId) {
        var parts = path.split('/');
        var pathToTest = paths[tabId];
        if (parts[0] === pathToTest) {
          var tabRouter = tabRouters[tabId];
          var action = _NavigationActions2.default.navigate({
            routeName: tabId
          });
          if (tabRouter && tabRouter.getActionForPathAndParams) {
            action.action = tabRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);
          } else if (params) {
            action.params = params;
          }
          return action;
        }
        return null;
      }).find(function (action) {
        return !!action;
      }) || order.map(function (tabId) {
        var tabRouter = tabRouters[tabId];
        return tabRouter && tabRouter.getActionForPathAndParams(path, params);
      }).find(function (action) {
        return !!action;
      }) || null;
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, config.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 724, null, "react-navigation/src/routers/TabRouter.js");
__d(/* react-navigation/src/views/TabView/TabView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/TabView/TabView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeTabView = require(726                    ); // 726 = react-native-tab-view

var _SceneView = require(708           ); // 708 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(735                              ); // 735 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var _SafeAreaView = require(706              ); // 706 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var TabView = function (_React$PureComponent) {
  babelHelpers.inherits(TabView, _React$PureComponent);

  function TabView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabView.__proto__ || Object.getPrototypeOf(TabView)).call.apply(_ref, [this].concat(args))), _this), _this._handlePageChanged = function (index) {
      var navigation = _this.props.navigation;

      navigation.navigate(navigation.state.routes[index].routeName);
    }, _this._renderScene = function (_ref2) {
      var route = _ref2.route;
      var screenProps = _this.props.screenProps;

      var childNavigation = _this.props.childNavigationProps[route.key];
      var TabComponent = _this.props.router.getComponentForRouteName(route.routeName);
      return React.createElement(
        _reactNative.View,
        { style: styles.page, __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        },
        React.createElement(_SceneView2.default, {
          screenProps: screenProps,
          component: TabComponent,
          navigation: childNavigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 79
          }
        })
      );
    }, _this._getLabel = function (_ref3) {
      var route = _ref3.route,
          tintColor = _ref3.tintColor,
          focused = _ref3.focused;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      if (options.tabBarLabel) {
        return typeof options.tabBarLabel === 'function' ? options.tabBarLabel({ tintColor: tintColor, focused: focused }) : options.tabBarLabel;
      }

      if (typeof options.title === 'string') {
        return options.title;
      }

      return route.routeName;
    }, _this._getOnPress = function (_ref4) {
      var route = _ref4.route;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      return options.tabBarOnPress;
    }, _this._getTestIDProps = function (_ref5) {
      var route = _ref5.route;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      return options.tabBarTestIDProps;
    }, _this._renderIcon = function (_ref6) {
      var focused = _ref6.focused,
          route = _ref6.route,
          tintColor = _ref6.tintColor;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});
      if (options.tabBarIcon) {
        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor: tintColor, focused: focused }) : options.tabBarIcon;
      }
      return null;
    }, _this._renderTabBar = function (props) {
      var _this$props = _this.props,
          tabBarOptions = _this$props.tabBarOptions,
          TabBarComponent = _this$props.tabBarComponent,
          animationEnabled = _this$props.animationEnabled;

      if (typeof TabBarComponent === 'undefined') {
        return null;
      }
      return React.createElement(TabBarComponent, babelHelpers.extends({}, props, tabBarOptions, {
        screenProps: _this.props.screenProps,
        navigation: _this.props.navigation,
        getLabel: _this._getLabel,
        getTestIDProps: _this._getTestIDProps,
        getOnPress: _this._getOnPress,
        renderIcon: _this._renderIcon,
        animationEnabled: animationEnabled,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 148
        }
      }));
    }, _this._renderPager = function (props) {
      return React.createElement(_reactNativeTabView.TabViewPagerPan, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 162
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          tabBarComponent = _props.tabBarComponent,
          tabBarPosition = _props.tabBarPosition,
          animationEnabled = _props.animationEnabled,
          swipeEnabled = _props.swipeEnabled,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          screenProps = _props.screenProps;


      var renderHeader = void 0;
      var renderFooter = void 0;
      var renderPager = void 0;

      var state = this.props.navigation.state;

      var options = router.getScreenOptions(this.props.childNavigationProps[state.routes[state.index].key], screenProps || {});

      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;

      if (tabBarComponent !== undefined && tabBarVisible) {
        if (tabBarPosition === 'bottom') {
          renderFooter = this._renderTabBar;
        } else {
          renderHeader = this._renderTabBar;
        }
      }

      if (animationEnabled === false && swipeEnabled === false) {
        renderPager = this._renderPager;
      }

      var props = {
        lazy: lazy,
        initialLayout: initialLayout,
        animationEnabled: animationEnabled,
        swipeEnabled: swipeEnabled,
        renderPager: renderPager,
        renderHeader: renderHeader,
        renderFooter: renderFooter,
        renderScene: this._renderScene,
        onIndexChange: this._handlePageChanged,
        navigationState: this.props.navigation.state,
        screenProps: this.props.screenProps,
        style: styles.container
      };

      return React.createElement(_reactNativeTabView.TabViewAnimated, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 216
        }
      }));
    }
  }]);
  return TabView;
}(React.PureComponent);

TabView.defaultProps = {
  initialLayout: _reactNative.Platform.select({
    android: { width: 1, height: 0 }
  })
};
exports.default = (0, _withCachedChildNavigation2.default)(TabView);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 725, null, "react-navigation/src/views/TabView/TabView.js");
__d(/* react-native-tab-view/src/index.js */function(global, require, module, exports) {

module.exports = {
  get TabViewAnimated() {
    return require(727                ).default; // 727 = ./TabViewAnimated
  },
  get TabViewPagerPan() {
    return require(731                ).default; // 731 = ./TabViewPagerPan
  },
  get TabViewPagerScroll() {
    return require(730                   ).default; // 730 = ./TabViewPagerScroll
  },
  get TabViewPagerAndroid() {
    return require(729                    ).default; // 729 = ./TabViewPagerAndroid
  },
  get TabBar() {
    return require(732       ).default; // 732 = ./TabBar
  },
  get SceneMap() {
    return require(734         ).default; // 734 = ./SceneMap
  }
};
}, 726, null, "react-native-tab-view/src/index.js");
__d(/* react-native-tab-view/src/TabViewAnimated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TabViewAnimated.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(728                 ); // 728 = ./TabViewPropTypes

var TabViewPager = void 0;

switch (_reactNative.Platform.OS) {
  case 'android':
    TabViewPager = require(729                    ).default; // 729 = ./TabViewPagerAndroid
    break;
  case 'ios':
    TabViewPager = require(730                   ).default; // 730 = ./TabViewPagerScroll
    break;
  default:
    TabViewPager = require(731                ).default; // 731 = ./TabViewPagerPan
    break;
}

var TabViewAnimated = function (_React$Component) {
  babelHelpers.inherits(TabViewAnimated, _React$Component);

  function TabViewAnimated(props) {
    babelHelpers.classCallCheck(this, TabViewAnimated);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewAnimated.__proto__ || Object.getPrototypeOf(TabViewAnimated)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      loaded: [_this.props.navigationState.index],
      layout: babelHelpers.extends({}, _this.props.initialLayout, {
        measured: false
      }),
      position: new _reactNative.Animated.Value(_this.props.navigationState.index)
    };
    return _this;
  }

  babelHelpers.createClass(TabViewAnimated, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._mounted = true;
      this._positionListener = this.state.position.addListener(this._trackPosition);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._mounted = false;
      this.state.position.removeListener(this._positionListener);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          navigationState = _props.navigationState,
          onIndexChange = _props.onIndexChange,
          onPositionChange = _props.onPositionChange,
          canJumpToTab = _props.canJumpToTab,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          renderScene = _props.renderScene,
          renderPager = _props.renderPager,
          renderHeader = _props.renderHeader,
          renderFooter = _props.renderFooter,
          rest = babelHelpers.objectWithoutProperties(_props, ['navigationState', 'onIndexChange', 'onPositionChange', 'canJumpToTab', 'lazy', 'initialLayout', 'renderScene', 'renderPager', 'renderHeader', 'renderFooter']);

      var props = this._buildSceneRendererProps();

      return React.createElement(
        _reactNative.View,
        {
          onLayout: this._handleLayout,
          loaded: this.state.loaded,
          style: [styles.container, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        },
        renderHeader && renderHeader(props),
        renderPager(babelHelpers.extends({}, props, rest, {
          children: navigationState.routes.map(function (route, index) {
            return _this2._renderScene(babelHelpers.extends({}, props, {
              route: route,
              index: index,
              focused: index === navigationState.index
            }));
          })
        })),
        renderFooter && renderFooter(props)
      );
    }
  }]);
  return TabViewAnimated;
}(React.Component);

TabViewAnimated.propTypes = {
  navigationState: _TabViewPropTypes.NavigationStatePropType.isRequired,
  onIndexChange: _propTypes2.default.func.isRequired,
  onPositionChange: _propTypes2.default.func,
  initialLayout: _propTypes2.default.shape({
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }),
  canJumpToTab: _propTypes2.default.func,
  renderPager: _propTypes2.default.func.isRequired,
  renderScene: _propTypes2.default.func.isRequired,
  renderHeader: _propTypes2.default.func,
  renderFooter: _propTypes2.default.func,
  lazy: _propTypes2.default.bool
};
TabViewAnimated.defaultProps = {
  renderPager: function renderPager(props) {
    return React.createElement(TabViewPager, babelHelpers.extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77
      }
    }));
  },
  initialLayout: {
    height: 0,
    width: 0
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this._mounted = false;
  this._subscriptions = {};

  this._renderScene = function (props) {
    var _props2 = _this3.props,
        renderScene = _props2.renderScene,
        lazy = _props2.lazy;
    var navigationState = props.navigationState;
    var loaded = _this3.state.loaded;

    if (lazy) {
      if (loaded.includes(navigationState.routes.indexOf(props.route))) {
        return renderScene(props);
      }
      return null;
    }
    return renderScene(props);
  };

  this._handlePositionChange = function (value) {
    var _props3 = _this3.props,
        onPositionChange = _props3.onPositionChange,
        navigationState = _props3.navigationState,
        lazy = _props3.lazy;

    if (onPositionChange) {
      onPositionChange({ value: value });
    }
    var loaded = _this3.state.loaded;

    if (lazy) {
      var next = Math.ceil(value);
      if (next === navigationState.index) {
        next = Math.floor(value);
      }
      if (loaded.includes(next)) {
        return;
      }
      _this3.setState({
        loaded: [].concat(babelHelpers.toConsumableArray(loaded), [next])
      });
    }
  };

  this._trackPosition = function (e) {
    _this3._handlePositionChange(e.value);
    _this3._triggerEvent('position', e.value);
    _this3._lastPosition = e.value;
  };

  this._getLastPosition = function () {
    if (typeof _this3._lastPosition === 'number') {
      return _this3._lastPosition;
    } else {
      return _this3.props.navigationState.index;
    }
  };

  this._handleLayout = function (e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        height = _e$nativeEvent$layout.height,
        width = _e$nativeEvent$layout.width;


    if (_this3.state.layout.width === width && _this3.state.layout.height === height) {
      return;
    }

    _this3.setState({
      layout: {
        measured: true,
        height: height,
        width: width
      }
    });
  };

  this._buildSceneRendererProps = function () {
    return {
      layout: _this3.state.layout,
      navigationState: _this3.props.navigationState,
      position: _this3.state.position,
      jumpToIndex: _this3._jumpToIndex,
      getLastPosition: _this3._getLastPosition,
      subscribe: _this3._addSubscription
    };
  };

  this._jumpToIndex = function (index) {
    if (!_this3._mounted) {
      return;
    }

    var _props4 = _this3.props,
        canJumpToTab = _props4.canJumpToTab,
        navigationState = _props4.navigationState;


    if (canJumpToTab && !canJumpToTab(navigationState.routes[index])) {
      _this3._triggerEvent('reset', navigationState.index);
      return;
    }

    if (index !== navigationState.index) {
      _this3.props.onIndexChange(index);
    }
  };

  this._addSubscription = function (event, callback) {
    if (!_this3._subscriptions[event]) {
      _this3._subscriptions[event] = [];
    }
    _this3._subscriptions[event].push(callback);
    return {
      remove: function remove() {
        var index = _this3._subscriptions[event].indexOf(callback);
        if (index > -1) {
          _this3._subscriptions[event].splice(index, 1);
        }
      }
    };
  };

  this._triggerEvent = function (event, value) {
    if (_this3._subscriptions[event]) {
      _this3._subscriptions[event].forEach(function (fn) {
        return fn(value);
      });
    }
  };
};

exports.default = TabViewAnimated;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 727, null, "react-native-tab-view/src/TabViewAnimated.js");
__d(/* react-native-tab-view/src/TabViewPropTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SceneRendererPropType = exports.NavigationStatePropType = exports.NavigationRoutePropType = undefined;

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var NavigationRoutePropType = exports.NavigationRoutePropType = _propTypes2.default.shape({
  title: _propTypes2.default.string,
  key: _propTypes2.default.string.isRequired
});

var NavigationStatePropType = exports.NavigationStatePropType = _propTypes2.default.shape({
  routes: _propTypes2.default.arrayOf(NavigationRoutePropType).isRequired,
  index: _propTypes2.default.number.isRequired
});

var SceneRendererPropType = exports.SceneRendererPropType = {
  layout: _propTypes2.default.shape({
    measured: _propTypes2.default.bool.isRequired,
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }).isRequired,
  navigationState: NavigationStatePropType.isRequired,
  position: _propTypes2.default.instanceOf(_reactNative.Animated.Value).isRequired,
  jumpToIndex: _propTypes2.default.func.isRequired,
  getLastPosition: _propTypes2.default.func.isRequired,
  subscribe: _propTypes2.default.func.isRequired
};
}, 728, null, "react-native-tab-view/src/TabViewPropTypes.js");
__d(/* react-native-tab-view/src/TabViewPagerAndroid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(728                 ); // 728 = ./TabViewPropTypes

var TabViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerAndroid, _React$Component);

  function TabViewPagerAndroid(props) {
    babelHelpers.classCallCheck(this, TabViewPagerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerAndroid.__proto__ || Object.getPrototypeOf(TabViewPagerAndroid)).call(this, props));

    _this._isRequestingAnimationFrame = false;
    _this._isIdle = true;
    _this._currentIndex = 0;

    _this._getPageIndex = function (index) {
      return _reactNative.I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;
    };

    _this._setPage = function (index) {
      var _viewPager = _this._viewPager;

      if (_viewPager) {
        _this._animationFrameCallback = null;

        var page = _this._getPageIndex(index);
        if (_this.props.animationEnabled !== false) {
          _viewPager.setPage(page);
        } else {
          _viewPager.setPageWithoutAnimation(page);
        }
      }
    };

    _this._handlePageChange = function (index) {
      if (_this._isIdle && _this._currentIndex !== index) {
        _this._setPage(index);
        _this._currentIndex = index;
      }
    };

    _this._handlePageScroll = function (e) {
      _this.props.position.setValue(_this._getPageIndex(e.nativeEvent.position) + e.nativeEvent.offset * (_reactNative.I18nManager.isRTL ? -1 : 1));
    };

    _this._handlePageScrollStateChanged = function (e) {
      _this._isIdle = e === 'idle';
      _this.props.jumpToIndex(_this._currentIndex);
    };

    _this._handlePageSelected = function (e) {
      var index = _this._getPageIndex(e.nativeEvent.position);
      _this._currentIndex = index;
    };

    _this._setRef = function (el) {
      return _this._viewPager = el;
    };

    _this._currentIndex = _this.props.navigationState.index;
    return _this;
  }

  babelHelpers.createClass(TabViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._handlePageChange);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.layout !== nextProps.layout || React.Children.count(this.props.children) !== React.Children.count(nextProps.children)) {
        this._animationFrameCallback = function () {
          if (_this2._viewPager) {
            var navigationState = nextProps.navigationState;

            var page = _reactNative.I18nManager.isRTL ? navigationState.routes.length - (navigationState.index + 1) : navigationState.index;

            _this2._viewPager.setPageWithoutAnimation(page);
          }
        };

        if (!this._isRequestingAnimationFrame) {
          this._isRequestingAnimationFrame = true;

          global.requestAnimationFrame(function () {
            _this2._isRequestingAnimationFrame = false;

            if (_this2._animationFrameCallback) {
              _this2._animationFrameCallback();
            }
          });
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._handlePageChange(this.props.navigationState.index);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          navigationState = _props.navigationState,
          swipeEnabled = _props.swipeEnabled;

      var content = React.Children.map(children, function (child, i) {
        return React.createElement(
          _reactNative.View,
          {
            key: navigationState.routes[i].key,
            testID: navigationState.routes[i].testID,
            style: styles.page,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 137
            }
          },
          child
        );
      });

      if (_reactNative.I18nManager.isRTL) {
        content.reverse();
      }

      var initialPage = this._getPageIndex(navigationState.index);

      return React.createElement(
        _reactNative.ViewPagerAndroid,
        {
          key: navigationState.routes.length,
          keyboardDismissMode: 'on-drag',
          initialPage: initialPage,
          scrollEnabled: swipeEnabled !== false,
          onPageScroll: this._handlePageScroll,
          onPageScrollStateChanged: this._handlePageScrollStateChanged,
          onPageSelected: this._handlePageSelected,
          style: styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 153
          }
        },
        content
      );
    }
  }]);
  return TabViewPagerAndroid;
}(React.Component);

TabViewPagerAndroid.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerAndroid;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    overflow: 'hidden'
  }
});
}, 729, null, "react-native-tab-view/src/TabViewPagerAndroid.js");
__d(/* react-native-tab-view/src/TabViewPagerScroll.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TabViewPagerScroll.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(728                 ); // 728 = ./TabViewPropTypes

var TabViewPagerScroll = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerScroll, _React$Component);

  function TabViewPagerScroll(props) {
    babelHelpers.classCallCheck(this, TabViewPagerScroll);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerScroll.__proto__ || Object.getPrototypeOf(TabViewPagerScroll)).call(this, props));

    _this._nextOffset = 0;
    _this._isIdle = true;

    _this._scrollTo = function (x) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.animationEnabled !== false;

      _this._nextOffset = x;

      if (_this._isIdle && _this._scrollView) {
        _this._scrollView.scrollTo({
          x: x,
          animated: animated
        });
      }
    };

    _this._handleMomentumScrollEnd = function (e) {
      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / _this.props.layout.width);
      _this._isIdle = true;
      _this.props.jumpToIndex(nextIndex);
    };

    _this._handleScroll = function (e) {
      _this._isIdle = Math.abs(e.nativeEvent.contentOffset.x - _this._nextOffset) < 0.1;
      _this.props.position.setValue(e.nativeEvent.contentOffset.x / _this.props.layout.width);
    };

    _this._setRef = function (el) {
      return _this._scrollView = el;
    };

    _this.state = {
      initialOffset: {
        x: _this.props.navigationState.index * _this.props.layout.width,
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabViewPagerScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);
      this._resetListener = this.props.subscribe('reset', this._scrollTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      var amount = this.props.navigationState.index * this.props.layout.width;
      if (prevProps.navigationState !== this.props.navigationState || prevProps.layout !== this.props.layout) {
        if (_reactNative.Platform.OS === 'android' || prevProps.navigationState !== this.props.navigationState) {
          global.requestAnimationFrame(function () {
            return _this2._scrollTo(amount);
          });
        } else {
          this._scrollTo(amount, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          layout = _props.layout,
          navigationState = _props.navigationState;

      return React.createElement(
        _reactNative.ScrollView,
        {
          horizontal: true,
          pagingEnabled: true,
          directionalLockEnabled: true,
          keyboardDismissMode: 'on-drag',
          keyboardShouldPersistTaps: 'always',
          scrollEnabled: this.props.swipeEnabled,
          automaticallyAdjustContentInsets: false,
          bounces: false,
          alwaysBounceHorizontal: false,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEventThrottle: 16,
          onScroll: this._handleScroll,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          style: styles.container,
          contentContainerStyle: layout.width ? null : styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 117
          }
        },
        React.Children.map(children, function (child, i) {
          return React.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: layout.width ? { width: layout.width, overflow: 'hidden' } : i === navigationState.index ? styles.page : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 138
              }
            },
            i === navigationState.index || layout.width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerScroll;
}(React.Component);

TabViewPagerScroll.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerScroll;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 730, null, "react-native-tab-view/src/TabViewPagerScroll.js");
__d(/* react-native-tab-view/src/TabViewPagerPan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TabViewPagerPan.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(728                 ); // 728 = ./TabViewPropTypes

var DEAD_ZONE = 12;

var DefaultTransitionSpec = {
  timing: _reactNative.Animated.spring,
  tension: 300,
  friction: 35
};

var TabViewPagerPan = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerPan, _React$Component);

  function TabViewPagerPan() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabViewPagerPan);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabViewPagerPan.__proto__ || Object.getPrototypeOf(TabViewPagerPan)).call.apply(_ref, [this].concat(args))), _this), _this._pendingIndex = null, _this._lastValue = null, _this._isMoving = null, _this._startDirection = 0, _this._isIndexInRange = function (index) {
      var routes = _this.props.navigationState.routes;

      return index >= 0 && index <= routes.length - 1;
    }, _this._isMovingHorizontally = function (evt, gestureState) {
      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 3) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 3);
    }, _this._isReverseDirection = function (gestureState) {
      if (_this._startDirection > 0) {
        return gestureState.vx < 0;
      } else {
        return gestureState.vx > 0;
      }
    }, _this._getNextIndex = function (evt, gestureState) {
      var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : _this.props.navigationState.index;

      var swipeVelocityThreshold = _this.props.swipeVelocityThreshold;

      if (_reactNative.Platform.OS === 'android') {
        swipeVelocityThreshold /= 1000000;
      }

      if (Math.abs(gestureState.dx) > _this.props.swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold) {
        var nextIndex = currentIndex - gestureState.dx / Math.abs(gestureState.dx) * (_reactNative.I18nManager.isRTL ? -1 : 1);
        if (_this._isIndexInRange(nextIndex)) {
          return nextIndex;
        }
      }
      return currentIndex;
    }, _this._canMoveScreen = function (evt, gestureState) {
      if (_this.props.swipeEnabled === false) {
        return false;
      }
      var _this$props$navigatio = _this.props.navigationState,
          routes = _this$props$navigatio.routes,
          index = _this$props$navigatio.index;

      var canMove = _this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && index >= 0 || gestureState.dx <= -DEAD_ZONE && index <= routes.length - 1);
      if (canMove) {
        _this._startDirection = gestureState.dx;
      }
      return canMove;
    }, _this._startGesture = function (evt, gestureState) {
      if (typeof _this.props.onSwipeStart === 'function') {
        _this.props.onSwipeStart(evt, gestureState);
      }
      _this._lastValue = _this.props.getLastPosition();
      _this.props.position.stopAnimation();
    }, _this._respondToGesture = function (evt, gestureState) {
      var width = _this.props.layout.width;

      var currentPosition = typeof _this._lastValue === 'number' ? _this._lastValue : _this.props.navigationState.index;
      var nextPosition = currentPosition - gestureState.dx / width * (_reactNative.I18nManager.isRTL ? -1 : 1);
      if (_this._isMoving === null) {
        _this._isMoving = _this._isMovingHorizontally(evt, gestureState);
      }
      if (_this._isMoving && _this._isIndexInRange(nextPosition)) {
        _this.props.position.setValue(nextPosition);
      }
    }, _this._finishGesture = function (evt, gestureState) {
      if (typeof _this.props.onSwipeEnd === 'function') {
        _this.props.onSwipeEnd(evt, gestureState);
      }
      var currentIndex = _this.props.navigationState.index;
      var currentValue = _this.props.getLastPosition();
      if (currentValue !== currentIndex) {
        if (_this._isMoving && !_this._isReverseDirection(gestureState)) {
          var nextIndex = _this._getNextIndex(evt, gestureState);
          _this._transitionTo(nextIndex);
        } else {
          _this._transitionTo(currentIndex);
        }
      }
      _this._lastValue = null;
      _this._isMoving = null;
    }, _this._transitionTo = function (toValue) {
      var lastPosition = _this.props.getLastPosition();
      var currentTransitionProps = {
        progress: lastPosition
      };
      var nextTransitionProps = {
        progress: toValue
      };

      _this._pendingIndex = toValue;

      if (_this.props.animationEnabled !== false) {
        var transitionSpec = _this.props.configureTransition(currentTransitionProps, nextTransitionProps);
        var timing = transitionSpec.timing,
            transitionConfig = babelHelpers.objectWithoutProperties(transitionSpec, ['timing']);


        timing(_this.props.position, babelHelpers.extends({}, transitionConfig, {
          toValue: toValue
        })).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            _this.props.jumpToIndex(toValue);
            _this._pendingIndex = null;
          }
        });
      } else {
        _this.props.position.setValue(toValue);
        _this.props.jumpToIndex(toValue);
        _this._pendingIndex = null;
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabViewPagerPan, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._panResponder = _reactNative.PanResponder.create({
        onMoveShouldSetPanResponder: this._canMoveScreen,
        onMoveShouldSetPanResponderCapture: this._canMoveScreen,
        onPanResponderGrant: this._startGesture,
        onPanResponderMove: this._respondToGesture,
        onPanResponderTerminate: this._finishGesture,
        onPanResponderRelease: this._finishGesture,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._transitionTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.navigationState.index !== this.props.navigationState.index) {
        this._transitionTo(this.props.navigationState.index);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener && this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          layout = _props.layout,
          position = _props.position,
          navigationState = _props.navigationState,
          children = _props.children;
      var width = layout.width;
      var routes = navigationState.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (i) {
        return width * i * (_reactNative.I18nManager.isRTL ? 1 : -1);
      });

      var translateX = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      return React.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({
          style: [styles.sheet, width ? { width: routes.length * width, transform: [{ translateX: translateX }] } : null]
        }, this._panResponder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 284
          }
        }),
        React.Children.map(children, function (child, i) {
          return React.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: width ? { width: width } : i === navigationState.index ? _reactNative.StyleSheet.absoluteFill : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 294
              }
            },
            i === navigationState.index || width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerPan;
}(React.Component);

TabViewPagerPan.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  configureTransition: _propTypes2.default.func.isRequired,
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  swipeDistanceThreshold: _propTypes2.default.number.isRequired,
  swipeVelocityThreshold: _propTypes2.default.number.isRequired,
  onSwipeStart: _propTypes2.default.func,
  onSwipeEnd: _propTypes2.default.func,
  children: _propTypes2.default.node
});
TabViewPagerPan.defaultProps = {
  configureTransition: function configureTransition() {
    return DefaultTransitionSpec;
  },
  initialLayout: {
    height: 0,
    width: 0
  },
  swipeDistanceThreshold: 120,
  swipeVelocityThreshold: 0.25
};
exports.default = TabViewPagerPan;


var styles = _reactNative.StyleSheet.create({
  sheet: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'stretch'
  }
});
}, 731, null, "react-native-tab-view/src/TabViewPagerPan.js");
__d(/* react-native-tab-view/src/TabBar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TabBar.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TouchableItem = require(733              ); // 733 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var _TabViewPropTypes = require(728                 ); // 728 = ./TabViewPropTypes

var TabBar = function (_React$PureComponent) {
  babelHelpers.inherits(TabBar, _React$PureComponent);

  function TabBar(props) {
    babelHelpers.classCallCheck(this, TabBar);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));

    _initialiseProps.call(_this);

    var initialVisibility = 0;

    if (_this.props.scrollEnabled === true) {
      var tabWidth = _this._getTabWidthFromStyle(_this.props.tabStyle);
      if (_this.props.layout.width || tabWidth) {
        initialVisibility = 1;
      }
    } else {
      initialVisibility = 1;
    }

    _this.state = {
      offset: new _reactNative.Animated.Value(0),
      visibility: new _reactNative.Animated.Value(initialVisibility),
      initialOffset: {
        x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._adjustScroll(this.props.navigationState.index);
      this._positionListener = this.props.subscribe('position', this._adjustScroll);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigationState !== nextProps.navigationState) {
        this._resetScrollOffset(nextProps);
      }

      var nextTabWidth = this._getTabWidthFromStyle(nextProps.tabStyle);

      if (this.props.tabStyle !== nextProps.tabStyle && nextTabWidth || this.props.layout.width !== nextProps.layout.width && nextProps.layout.width) {
        this.state.visibility.setValue(1);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      if (this.props.scrollEnabled && (prevProps.layout !== this.props.layout || prevProps.tabStyle !== this.props.tabStyle)) {
        global.requestAnimationFrame(function () {
          return _this2._adjustScroll(_this2.props.navigationState.index);
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._positionListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          position = _props.position,
          navigationState = _props.navigationState,
          scrollEnabled = _props.scrollEnabled;
      var routes = navigationState.routes,
          index = navigationState.index;

      var maxDistance = this._getMaxScrollableDistance(this.props);
      var finalTabWidth = this._getFinalTabWidth(this.props);
      var tabBarWidth = finalTabWidth * routes.length;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var translateOutputRange = inputRange.map(function (i) {
        return _this3._getScrollAmount(_this3.props, i) * -1;
      });

      var translateX = _reactNative.Animated.add(position.interpolate({
        inputRange: inputRange,
        outputRange: translateOutputRange
      }), this.state.offset).interpolate({
        inputRange: [-maxDistance, 0],
        outputRange: [-maxDistance, 0],
        extrapolate: 'clamp'
      });

      return React.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 354
          }
        },
        React.createElement(
          _reactNative.Animated.View,
          {
            pointerEvents: 'none',
            style: [styles.indicatorContainer, scrollEnabled ? { width: tabBarWidth, transform: [{ translateX: translateX }] } : null],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 355
            }
          },
          this._renderIndicator(babelHelpers.extends({}, this.props, {
            width: new _reactNative.Animated.Value(finalTabWidth)
          }))
        ),
        React.createElement(
          _reactNative.View,
          { style: styles.scroll, __source: {
              fileName: _jsxFileName,
              lineNumber: 369
            }
          },
          React.createElement(
            _reactNative.ScrollView,
            {
              horizontal: true,
              keyboardShouldPersistTaps: 'always',
              scrollEnabled: scrollEnabled,
              bounces: false,
              alwaysBounceHorizontal: false,
              scrollsToTop: false,
              showsHorizontalScrollIndicator: false,
              automaticallyAdjustContentInsets: false,
              overScrollMode: 'never',
              contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],
              scrollEventThrottle: 16,
              onScroll: this._handleScroll,
              onScrollBeginDrag: this._handleBeginDrag,
              onScrollEndDrag: this._handleEndDrag,
              onMomentumScrollBegin: this._handleMomentumScrollBegin,
              onMomentumScrollEnd: this._handleMomentumScrollEnd,
              contentOffset: this.state.initialOffset,
              ref: this._setRef,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 370
              }
            },
            routes.map(function (route, i) {
              var focused = index === i;
              var outputRange = inputRange.map(function (inputIndex) {
                return inputIndex === i ? 1 : 0.7;
              });
              var opacity = _reactNative.Animated.multiply(_this3.state.visibility, position.interpolate({
                inputRange: inputRange,
                outputRange: outputRange
              }));
              var scene = {
                route: route,
                focused: focused,
                index: i
              };
              var label = _this3._renderLabel(scene);
              var icon = _this3.props.renderIcon ? _this3.props.renderIcon(scene) : null;
              var badge = _this3.props.renderBadge ? _this3.props.renderBadge(scene) : null;

              var tabStyle = {};

              tabStyle.opacity = opacity;

              if (icon) {
                if (label) {
                  tabStyle.paddingTop = 8;
                } else {
                  tabStyle.padding = 12;
                }
              }

              var passedTabStyle = _reactNative.StyleSheet.flatten(_this3.props.tabStyle);
              var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;
              var tabContainerStyle = {};

              if (isWidthSet) {
                tabStyle.width = finalTabWidth;
              }

              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {
                tabContainerStyle.flex = passedTabStyle.flex;
              } else if (!isWidthSet) {
                tabContainerStyle.flex = 1;
              }

              var accessibilityLabel = route.accessibilityLabel || route.title;

              return React.createElement(
                _TouchableItem2.default,
                {
                  borderless: true,
                  key: route.key,
                  testID: route.testID,
                  accessible: route.accessible,
                  accessibilityLabel: accessibilityLabel,
                  accessibilityTraits: 'button',
                  pressColor: _this3.props.pressColor,
                  pressOpacity: _this3.props.pressOpacity,
                  delayPressIn: 0,
                  onPress: function onPress() {
                    var _props2 = _this3.props,
                        onTabPress = _props2.onTabPress,
                        jumpToIndex = _props2.jumpToIndex;

                    jumpToIndex(i);
                    if (onTabPress) {
                      onTabPress(scene);
                    }
                  },
                  style: tabContainerStyle,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 451
                  }
                },
                React.createElement(
                  _reactNative.View,
                  { pointerEvents: 'none', style: styles.container, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 471
                    }
                  },
                  React.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 472
                      }
                    },
                    icon,
                    label
                  ),
                  badge ? React.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.badge, { opacity: _this3.state.visibility }],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 484
                      }
                    },
                    badge
                  ) : null
                )
              );
            })
          )
        )
      );
    }
  }]);
  return TabBar;
}(React.PureComponent);

TabBar.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  scrollEnabled: _propTypes2.default.bool,
  pressColor: _TouchableItem2.default.propTypes.pressColor,
  pressOpacity: _TouchableItem2.default.propTypes.pressOpacity,
  getLabelText: _propTypes2.default.func,
  renderIcon: _propTypes2.default.func,
  renderLabel: _propTypes2.default.func,
  renderIndicator: _propTypes2.default.func,
  onTabPress: _propTypes2.default.func,
  labelStyle: _reactNative.Text.propTypes.style,
  style: _propTypes2.default.any
});
TabBar.defaultProps = {
  getLabelText: function getLabelText(_ref) {
    var route = _ref.route;
    return route.title ? route.title.toUpperCase() : null;
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this._isManualScroll = false;
  this._isMomentumScroll = false;

  this._renderLabel = function (scene) {
    if (typeof _this4.props.renderLabel !== 'undefined') {
      return _this4.props.renderLabel(scene);
    }
    var label = _this4.props.getLabelText(scene);
    if (typeof label !== 'string') {
      return null;
    }
    return React.createElement(
      _reactNative.Text,
      { style: [styles.tabLabel, _this4.props.labelStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 160
        }
      },
      label
    );
  };

  this._renderIndicator = function (props) {
    if (typeof _this4.props.renderIndicator !== 'undefined') {
      return _this4.props.renderIndicator(props);
    }
    var width = props.width,
        position = props.position;

    var translateX = _reactNative.Animated.multiply(_reactNative.Animated.multiply(position, width), _reactNative.I18nManager.isRTL ? -1 : 1);
    return React.createElement(_reactNative.Animated.View, {
      style: [styles.indicator, { width: width, transform: [{ translateX: translateX }] }, _this4.props.indicatorStyle],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 174
      }
    });
  };

  this._getTabWidthFromStyle = function (style) {
    if (_this4._tabWidthCache && _this4._tabWidthCache.style === style) {
      return _this4._tabWidthCache.width;
    }
    var passedTabStyle = _reactNative.StyleSheet.flatten(_this4.props.tabStyle);
    var cache = {
      style: style,
      width: passedTabStyle ? passedTabStyle.width : null
    };
    _this4._tabWidthCache = cache;
    return cache;
  };

  this._getFinalTabWidth = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    var tabWidth = _this4._getTabWidthFromStyle(props.tabStyle);
    if (typeof tabWidth === 'number') {
      return tabWidth;
    }
    if (typeof tabWidth === 'string' && tabWidth.endsWith('%')) {
      return layout.width * (parseFloat(tabWidth) / 100);
    }
    if (props.scrollEnabled) {
      return layout.width / 5 * 2;
    }
    return layout.width / navigationState.routes.length;
  };

  this._getMaxScrollableDistance = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    if (layout.width === 0) {
      return 0;
    }
    var finalTabWidth = _this4._getFinalTabWidth(props);
    var tabBarWidth = finalTabWidth * navigationState.routes.length;
    var maxDistance = tabBarWidth - layout.width;
    return Math.max(maxDistance, 0);
  };

  this._normalizeScrollValue = function (props, value) {
    var maxDistance = _this4._getMaxScrollableDistance(props);
    return Math.max(Math.min(value, maxDistance), 0);
  };

  this._getScrollAmount = function (props, i) {
    var layout = props.layout;

    var finalTabWidth = _this4._getFinalTabWidth(props);
    var centerDistance = finalTabWidth * i + finalTabWidth / 2;
    var scrollAmount = centerDistance - layout.width / 2;
    return _this4._normalizeScrollValue(props, scrollAmount);
  };

  this._resetScrollOffset = function (props) {
    if (!props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(props, props.navigationState.index);
    _this4._scrollView && _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: true
    });
    _reactNative.Animated.timing(_this4.state.offset, {
      toValue: 0,
      duration: 150
    }).start();
  };

  this._adjustScroll = function (index) {
    if (!_this4.props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, index);
    _this4._scrollView && _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: false
    });
  };

  this._adjustOffset = function (value) {
    if (!_this4._isManualScroll || !_this4.props.scrollEnabled) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, _this4.props.navigationState.index);
    var scrollOffset = value - scrollAmount;

    if (_this4._isMomentumScroll) {
      _reactNative.Animated.spring(_this4.state.offset, {
        toValue: -scrollOffset,
        tension: 300,
        friction: 35
      }).start();
    } else {
      _this4.state.offset.setValue(-scrollOffset);
    }
  };

  this._handleScroll = function (e) {
    _this4._adjustOffset(e.nativeEvent.contentOffset.x);
  };

  this._handleBeginDrag = function () {
    _this4._isManualScroll = true;
    _this4._isMomentumScroll = false;
  };

  this._handleEndDrag = function () {
    global.requestAnimationFrame(function () {
      if (_this4._isMomentumScroll) {
        return;
      }
      _this4._isManualScroll = false;
    });
  };

  this._handleMomentumScrollBegin = function () {
    _this4._isMomentumScroll = true;
  };

  this._handleMomentumScrollEnd = function () {
    _this4._isMomentumScroll = false;
    _this4._isManualScroll = false;
  };

  this._setRef = function (el) {
    return _this4._scrollView = el;
  };
};

exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scroll: {
    overflow: _reactNative.Platform.OS === 'web' ? 'auto' : 'scroll'
  },
  tabBar: {
    backgroundColor: '#2196f3',
    elevation: 4,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },

    zIndex: _reactNative.Platform.OS === 'android' ? 0 : 1
  },
  tabContent: {
    flexDirection: 'row',
    flexWrap: 'nowrap'
  },
  tabLabel: {
    backgroundColor: 'transparent',
    color: 'white',
    margin: 8
  },
  tabItem: {
    flexGrow: 1,
    padding: 8,
    alignItems: 'center',
    justifyContent: 'center'
  },
  badge: {
    position: 'absolute',
    top: 0,
    right: 0
  },
  indicatorContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  indicator: {
    backgroundColor: '#ffeb3b',
    position: 'absolute',
    left: 0,
    bottom: 0,
    right: 0,
    height: 2
  }
});
}, 732, null, "react-native-tab-view/src/TabBar.js");
__d(/* react-native-tab-view/src/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/TouchableItem.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var LOLLIPOP = 21;

var TouchableItem = function (_React$Component) {
  babelHelpers.inherits(TouchableItem, _React$Component);

  function TouchableItem() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TouchableItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).call.apply(_ref, [this].concat(args))), _this), _this._handlePress = function () {
      global.requestAnimationFrame(_this.props.onPress);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          pressOpacity = _props.pressOpacity,
          pressColor = _props.pressColor,
          borderless = _props.borderless,
          rest = babelHelpers.objectWithoutProperties(_props, ['style', 'pressOpacity', 'pressColor', 'borderless']);


      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {
        return React.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 49
            }
          }),
          React.createElement(
            _reactNative.View,
            { style: style, __source: {
                fileName: _jsxFileName,
                lineNumber: 54
              }
            },
            React.Children.only(this.props.children)
          )
        );
      } else {
        return React.createElement(
          _reactNative.TouchableOpacity,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            style: style,
            activeOpacity: pressOpacity,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          }),
          this.props.children
        );
      }
    }
  }]);
  return TouchableItem;
}(React.Component);

TouchableItem.propTypes = {
  onPress: _propTypes2.default.func.isRequired,
  delayPressIn: _propTypes2.default.number,
  borderless: _propTypes2.default.bool,
  pressColor: _propTypes2.default.string,
  pressOpacity: _propTypes2.default.number,
  children: _propTypes2.default.node.isRequired
};
TouchableItem.defaultProps = {
  pressColor: 'rgba(255, 255, 255, .4)'
};
exports.default = TouchableItem;
}, 733, null, "react-native-tab-view/src/TouchableItem.js");
__d(/* react-native-tab-view/src/SceneMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-native-tab-view/src/SceneMap.js';
exports.default = SceneMap;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

function SceneMap(scenes) {
  var SceneComponent = function (_PureComponent) {
    babelHelpers.inherits(SceneComponent, _PureComponent);

    function SceneComponent() {
      babelHelpers.classCallCheck(this, SceneComponent);
      return babelHelpers.possibleConstructorReturn(this, (SceneComponent.__proto__ || Object.getPrototypeOf(SceneComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(SceneComponent, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(scenes[this.props.route.key], this.props);
      }
    }]);
    return SceneComponent;
  }(_react.PureComponent);

  return function (_ref) {
    var route = _ref.route;
    return _react2.default.createElement(SceneComponent, { key: route.key, route: route, __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    });
  };
}
}, 734, null, "react-native-tab-view/src/SceneMap.js");
__d(/* react-navigation/src/withCachedChildNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/withCachedChildNavigation.js';
exports.default = withCachedChildNavigation;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _addNavigationHelpers = require(688                     ); // 688 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function withCachedChildNavigation(Comp) {
  var _class, _temp2;

  var displayName = Comp.displayName || Comp.name;
  return _temp2 = _class = function (_React$PureComponent) {
    babelHelpers.inherits(_class, _React$PureComponent);

    function _class() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this._updateNavigationProps = function (navigation) {
        if (!_this._childNavigationProps) {
          _this._childNavigationProps = {};
        }
        navigation.state.routes.forEach(function (route) {
          var childNavigation = _this._childNavigationProps[route.key];
          if (childNavigation && childNavigation.state === route) {
            return;
          }
          _this._childNavigationProps[route.key] = (0, _addNavigationHelpers2.default)({
            dispatch: navigation.dispatch,
            state: route
          });
        });
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(_class, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._updateNavigationProps(this.props.navigation);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._updateNavigationProps(nextProps.navigation);
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(Comp, babelHelpers.extends({}, this.props, {
          childNavigationProps: this._childNavigationProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 66
          }
        }));
      }
    }]);
    return _class;
  }(React.PureComponent), _class.displayName = 'withCachedChildNavigation(' + displayName + ')', _temp2;
}
}, 735, null, "react-navigation/src/withCachedChildNavigation.js");
__d(/* react-navigation/src/views/TabView/TabBarTop.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/TabView/TabBarTop.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeTabView = require(726                    ); // 726 = react-native-tab-view

var _TabBarIcon = require(737           ); // 737 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarTop = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarTop, _React$PureComponent);

  function TabBarTop() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarTop);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarTop.__proto__ || Object.getPrototypeOf(TabBarTop)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          showLabel = _this$props.showLabel,
          upperCaseLabel = _this$props.upperCaseLabel,
          labelStyle = _this$props.labelStyle,
          allowFontScaling = _this$props.allowFontScaling;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return React.createElement(
          _reactNative.Animated.Text,
          {
            style: [styles.label, { color: color }, labelStyle],
            allowFontScaling: allowFontScaling,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          },
          upperCaseLabel ? label.toUpperCase() : label
        );
      }
      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          iconStyle = _this$props2.iconStyle;

      if (showIcon === false) {
        return null;
      }
      return React.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: [styles.icon, iconStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106
        }
      });
    }, _this._handleOnPress = function (scene) {
      var _this$props3 = _this.props,
          getOnPress = _this$props3.getOnPress,
          jumpToIndex = _this$props3.jumpToIndex;


      var onPress = getOnPress(scene);

      if (onPress) {
        onPress(scene, jumpToIndex);
      } else {
        jumpToIndex(scene.index);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarTop, [{
    key: 'render',
    value: function render() {
      var props = this.props;

      return React.createElement(_reactNativeTabView.TabBar, babelHelpers.extends({}, props, {
        onTabPress: this._handleOnPress,
        jumpToIndex: function jumpToIndex() {},
        renderIcon: this._renderIcon,
        renderLabel: this._renderLabel,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 135
        }
      }));
    }
  }]);
  return TabBarTop;
}(React.PureComponent);

TabBarTop.defaultProps = {
  activeTintColor: '#fff',
  inactiveTintColor: '#fff',
  showIcon: false,
  showLabel: true,
  upperCaseLabel: true,
  allowFontScaling: true
};
exports.default = TabBarTop;


var styles = _reactNative.StyleSheet.create({
  icon: {
    height: 24,
    width: 24
  },
  label: {
    textAlign: 'center',
    fontSize: 13,
    margin: 8,
    backgroundColor: 'transparent'
  }
});
}, 736, null, "react-navigation/src/views/TabView/TabBarTop.js");
__d(/* react-navigation/src/views/TabView/TabBarIcon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/TabView/TabBarIcon.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var TabBarIcon = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarIcon, _React$PureComponent);

  function TabBarIcon() {
    babelHelpers.classCallCheck(this, TabBarIcon);
    return babelHelpers.possibleConstructorReturn(this, (TabBarIcon.__proto__ || Object.getPrototypeOf(TabBarIcon)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBarIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          position = _props.position,
          scene = _props.scene,
          navigation = _props.navigation,
          activeTintColor = _props.activeTintColor,
          inactiveTintColor = _props.inactiveTintColor,
          style = _props.style;
      var route = scene.route,
          index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var activeOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 1 : 0;
        })
      });
      var inactiveOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 0 : 1;
        })
      });

      return React.createElement(
        _reactNative.View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 49
          }
        },
        React.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: activeOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: true,
            tintColor: activeTintColor
          })
        ),
        React.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: inactiveOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 58
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: false,
            tintColor: inactiveTintColor
          })
        )
      );
    }
  }]);
  return TabBarIcon;
}(React.PureComponent);

exports.default = TabBarIcon;


var styles = _reactNative.StyleSheet.create({
  icon: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    alignItems: 'center',
    justifyContent: 'center'
  }
});
}, 737, null, "react-navigation/src/views/TabView/TabBarIcon.js");
__d(/* react-navigation/src/views/TabView/TabBarBottom.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/TabView/TabBarBottom.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _TabBarIcon = require(737           ); // 737 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var _SafeAreaView = require(706              ); // 706 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _withOrientation = require(707                 ); // 707 = ../withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var majorVersion = parseInt(_reactNative.Platform.Version, 10);
var isIos = _reactNative.Platform.OS === 'ios';
var useHorizontalTabs = majorVersion >= 11 && isIos;

var TabBarBottom = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarBottom, _React$PureComponent);

  function TabBarBottom() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarBottom);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarBottom.__proto__ || Object.getPrototypeOf(TabBarBottom)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          labelStyle = _this$props.labelStyle,
          showLabel = _this$props.showLabel,
          showIcon = _this$props.showIcon,
          isLandscape = _this$props.isLandscape,
          allowFontScaling = _this$props.allowFontScaling;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      var marginLeft = 0;
      if (isLandscape && showIcon && useHorizontalTabs) {
        marginLeft = LABEL_LEFT_MARGIN;
      }
      var marginTop = 0;
      if (!isLandscape && showIcon && useHorizontalTabs) {
        marginTop = LABEL_TOP_MARGIN;
      }

      if (typeof label === 'string') {
        return React.createElement(
          _reactNative.Animated.Text,
          {
            style: [styles.label, { color: color, marginLeft: marginLeft, marginTop: marginTop }, labelStyle],
            allowFontScaling: allowFontScaling,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 108
            }
          },
          label
        );
      }

      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          showLabel = _this$props2.showLabel;

      if (showIcon === false) {
        return null;
      }
      return React.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: showLabel && useHorizontalTabs ? {} : styles.icon,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 138
        }
      });
    }, _this._renderTestIDProps = function (scene) {
      var testIDProps = _this.props.getTestIDProps && _this.props.getTestIDProps(scene);
      return testIDProps;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarBottom, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          position = _props.position,
          navigation = _props.navigation,
          jumpToIndex = _props.jumpToIndex,
          getOnPress = _props.getOnPress,
          getTestIDProps = _props.getTestIDProps,
          activeBackgroundColor = _props.activeBackgroundColor,
          inactiveBackgroundColor = _props.inactiveBackgroundColor,
          style = _props.style,
          tabStyle = _props.tabStyle,
          isLandscape = _props.isLandscape;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));

      var tabBarStyle = [styles.tabBar, isLandscape && useHorizontalTabs ? styles.tabBarLandscape : styles.tabBarPortrait, style];

      return React.createElement(
        _reactNative.Animated.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 182
          }
        },
        React.createElement(
          _SafeAreaView2.default,
          {
            style: tabBarStyle,
            forceInset: { bottom: 'always', top: 'never' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 183
            }
          },
          routes.map(function (route, index) {
            var focused = index === navigation.state.index;
            var scene = { route: route, index: index, focused: focused };
            var _onPress = getOnPress(scene);
            var outputRange = inputRange.map(function (inputIndex) {
              return inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor;
            });
            var backgroundColor = position.interpolate({
              inputRange: inputRange,
              outputRange: outputRange
            });

            var justifyContent = _this2.props.showIcon ? 'flex-end' : 'center';
            var extraProps = _this2._renderTestIDProps(scene) || {};
            var testID = extraProps.testID,
                accessibilityLabel = extraProps.accessibilityLabel;


            return React.createElement(
              _reactNative.TouchableWithoutFeedback,
              {
                key: route.key,
                testID: testID,
                accessibilityLabel: accessibilityLabel,
                onPress: function onPress() {
                  return _onPress ? _onPress(scene, jumpToIndex) : jumpToIndex(index);
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 207
                }
              },
              React.createElement(
                _reactNative.Animated.View,
                {
                  style: [styles.tab, isLandscape && useHorizontalTabs && styles.tabLandscape, !isLandscape && useHorizontalTabs && styles.tabPortrait, { backgroundColor: backgroundColor }, tabStyle],
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 214
                  }
                },
                _this2._renderIcon(scene),
                _this2._renderLabel(scene)
              )
            );
          })
        )
      );
    }
  }]);
  return TabBarBottom;
}(React.PureComponent);

TabBarBottom.defaultProps = {
  activeTintColor: '#3478f6',
  activeBackgroundColor: 'transparent',
  inactiveTintColor: '#929292',
  inactiveBackgroundColor: 'transparent',
  showLabel: true,
  showIcon: true,
  allowFontScaling: true
};


var LABEL_LEFT_MARGIN = 20;
var LABEL_TOP_MARGIN = 15;
var styles = _reactNative.StyleSheet.create({
  tabBar: {
    backgroundColor: '#F7F7F7',
    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
    borderTopColor: 'rgba(0, 0, 0, .3)',
    flexDirection: 'row'
  },
  tabBarLandscape: {
    height: 29
  },
  tabBarPortrait: {
    height: 49
  },
  tab: {
    flex: 1,
    alignItems: isIos ? 'center' : 'stretch',
    justifyContent: 'flex-end'
  },
  tabPortrait: {
    justifyContent: 'flex-end',
    flexDirection: 'column'
  },
  tabLandscape: {
    justifyContent: 'center',
    flexDirection: 'row'
  },
  icon: {
    flexGrow: 1
  },
  label: {
    textAlign: 'center',
    fontSize: 10,
    marginBottom: 1.5,
    backgroundColor: 'transparent'
  }
});

exports.default = (0, _withOrientation2.default)(TabBarBottom);
}, 738, null, "react-navigation/src/views/TabView/TabBarBottom.js");
__d(/* react-navigation/src/navigators/DrawerNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/navigators/DrawerNavigator.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _createNavigator = require(691                ); // 691 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(685                           ); // 685 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(724                   ); // 724 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _DrawerScreen = require(740                           ); // 740 = ../views/Drawer/DrawerScreen

var _DrawerScreen2 = babelHelpers.interopRequireDefault(_DrawerScreen);

var _DrawerView = require(741                         ); // 741 = ../views/Drawer/DrawerView

var _DrawerView2 = babelHelpers.interopRequireDefault(_DrawerView);

var _DrawerNavigatorItems = require(746                                   ); // 746 = ../views/Drawer/DrawerNavigatorItems

var _DrawerNavigatorItems2 = babelHelpers.interopRequireDefault(_DrawerNavigatorItems);

var _NavigatorTypes = require(722               ); // 722 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var DefaultDrawerConfig = {
  drawerWidth: Math.min(height, width) - (_reactNative.Platform.OS === 'android' ? 56 : 64),
  contentComponent: _DrawerNavigatorItems2.default,
  drawerPosition: 'left',
  drawerBackgroundColor: 'white',
  useNativeAnimations: true
};

var DrawerNavigator = function DrawerNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, DefaultDrawerConfig, config);
  var containerConfig = mergedConfig.containerConfig,
      drawerWidth = mergedConfig.drawerWidth,
      drawerLockMode = mergedConfig.drawerLockMode,
      contentComponent = mergedConfig.contentComponent,
      contentOptions = mergedConfig.contentOptions,
      drawerPosition = mergedConfig.drawerPosition,
      useNativeAnimations = mergedConfig.useNativeAnimations,
      drawerBackgroundColor = mergedConfig.drawerBackgroundColor,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['containerConfig', 'drawerWidth', 'drawerLockMode', 'contentComponent', 'contentOptions', 'drawerPosition', 'useNativeAnimations', 'drawerBackgroundColor']);


  var contentRouter = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var drawerRouter = (0, _TabRouter2.default)({
    DrawerClose: {
      screen: (0, _createNavigator2.default)(contentRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
        return _react2.default.createElement(_DrawerScreen2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        }));
      })
    },
    DrawerOpen: {
      screen: function screen() {
        return null;
      }
    },
    DrawerToggle: {
      screen: function screen() {
        return null;
      }
    }
  }, {
    initialRouteName: 'DrawerClose'
  });

  var navigator = (0, _createNavigator2.default)(drawerRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
    return _react2.default.createElement(_DrawerView2.default, babelHelpers.extends({}, props, {
      drawerBackgroundColor: drawerBackgroundColor,
      drawerLockMode: drawerLockMode,
      useNativeAnimations: useNativeAnimations,
      drawerWidth: drawerWidth,
      contentComponent: contentComponent,
      contentOptions: contentOptions,
      drawerPosition: drawerPosition,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 89
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};

exports.default = DrawerNavigator;
}, 739, null, "react-navigation/src/navigators/DrawerNavigator.js");
__d(/* react-navigation/src/views/Drawer/DrawerScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Drawer/DrawerScreen.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _SceneView = require(708           ); // 708 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(735                              ); // 735 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerScreen = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerScreen, _React$PureComponent);

  function DrawerScreen() {
    babelHelpers.classCallCheck(this, DrawerScreen);
    return babelHelpers.possibleConstructorReturn(this, (DrawerScreen.__proto__ || Object.getPrototypeOf(DrawerScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(DrawerScreen, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          navigation = _props.navigation,
          childNavigationProps = _props.childNavigationProps,
          screenProps = _props.screenProps;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      var childNavigation = childNavigationProps[routes[index].key];
      var Content = router.getComponentForRouteName(routes[index].routeName);
      return React.createElement(_SceneView2.default, {
        screenProps: screenProps,
        component: Content,
        navigation: childNavigation,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      });
    }
  }]);
  return DrawerScreen;
}(React.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerScreen);
}, 740, null, "react-navigation/src/views/Drawer/DrawerScreen.js");
__d(/* react-navigation/src/views/Drawer/DrawerView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Drawer/DrawerView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNativeDrawerLayoutPolyfill = require(742                                  ); // 742 = react-native-drawer-layout-polyfill

var _reactNativeDrawerLayoutPolyfill2 = babelHelpers.interopRequireDefault(_reactNativeDrawerLayoutPolyfill);

var _addNavigationHelpers = require(688                         ); // 688 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _DrawerSidebar = require(745              ); // 745 = ./DrawerSidebar

var _DrawerSidebar2 = babelHelpers.interopRequireDefault(_DrawerSidebar);

var DrawerView = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerView, _React$PureComponent);

  function DrawerView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerView.__proto__ || Object.getPrototypeOf(DrawerView)).call.apply(_ref, [this].concat(args))), _this), _this._handleDrawerOpen = function () {
      var navigation = _this.props.navigation;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      if (routes[index].routeName !== 'DrawerOpen') {
        _this.props.navigation.navigate('DrawerOpen');
      }
    }, _this._handleDrawerClose = function () {
      var navigation = _this.props.navigation;
      var _navigation$state2 = navigation.state,
          routes = _navigation$state2.routes,
          index = _navigation$state2.index;

      if (routes[index].routeName !== 'DrawerClose') {
        _this.props.navigation.navigate('DrawerClose');
      }
    }, _this._updateScreenNavigation = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      if (_this._screenNavigationProp && _this._screenNavigationProp.state === navigationState) {
        return;
      }
      _this._screenNavigationProp = (0, _addNavigationHelpers2.default)({
        dispatch: navigation.dispatch,
        state: navigationState
      });
    }, _this._getNavigationState = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      return navigationState;
    }, _this._renderNavigationView = function () {
      return React.createElement(_DrawerSidebar2.default, {
        screenProps: _this.props.screenProps,
        navigation: _this._screenNavigationProp,
        router: _this.props.router,
        contentComponent: _this.props.contentComponent,
        contentOptions: _this.props.contentOptions,
        style: _this.props.style,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 131
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._updateScreenNavigation(this.props.navigation);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigation.state.index !== nextProps.navigation.state.index) {
        var _nextProps$navigation = nextProps.navigation.state,
            routes = _nextProps$navigation.routes,
            _index = _nextProps$navigation.index;

        if (routes[_index].routeName === 'DrawerOpen') {
          this._drawer.openDrawer();
        } else if (routes[_index].routeName === 'DrawerToggle') {
          if (this._drawer.state.drawerShown) {
            this.props.navigation.navigate('DrawerClose');
          } else {
            this.props.navigation.navigate('DrawerOpen');
          }
        } else {
          this._drawer.closeDrawer();
        }
      }
      this._updateScreenNavigation(nextProps.navigation);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var DrawerScreen = this.props.router.getComponentForRouteName('DrawerClose');

      var screenNavigation = (0, _addNavigationHelpers2.default)({
        state: this._screenNavigationProp.state,
        dispatch: this._screenNavigationProp.dispatch
      });

      var config = this.props.router.getScreenOptions(screenNavigation, this.props.screenProps);

      return React.createElement(
        _reactNativeDrawerLayoutPolyfill2.default,
        {
          ref: function ref(c) {
            _this2._drawer = c;
          },
          drawerLockMode: this.props.screenProps && this.props.screenProps.drawerLockMode || config && config.drawerLockMode,
          drawerBackgroundColor: this.props.drawerBackgroundColor,
          drawerWidth: this.props.drawerWidth,
          onDrawerOpen: this._handleDrawerOpen,
          onDrawerClose: this._handleDrawerClose,
          useNativeAnimations: this.props.useNativeAnimations,
          renderNavigationView: this._renderNavigationView,
          drawerPosition: this.props.drawerPosition === 'right' ? _reactNativeDrawerLayoutPolyfill2.default.positions.Right : _reactNativeDrawerLayoutPolyfill2.default.positions.Left,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 159
          }
        },
        React.createElement(DrawerScreen, {
          screenProps: this.props.screenProps,
          navigation: this._screenNavigationProp,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 179
          }
        })
      );
    }
  }]);
  return DrawerView;
}(React.PureComponent);

exports.default = DrawerView;
}, 741, null, "react-navigation/src/views/Drawer/DrawerView.js");
__d(/* react-native-drawer-layout-polyfill/dist/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _reactNativeDrawerLayout = require(743                         );var _reactNativeDrawerLayout2 = _interopRequireDefault(_reactNativeDrawerLayout);function _interopRequireDefault(obj) { // 743 = react-native-drawer-layout
  return obj && obj.__esModule ? obj : { default: obj };
}exports.default = _reactNativeDrawerLayout2.default;
}, 742, null, "react-native-drawer-layout-polyfill/dist/index.js");
__d(/* react-native-drawer-layout/dist/DrawerLayout.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = undefined;var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();var _class, _temp;
var _react = require(35     );var _react2 = _interopRequireDefault(_react); // 35 = react
var _reactNativeDismissKeyboard = require(744                            );var _reactNativeDismissKeyboard2 = _interopRequireDefault(_reactNativeDismissKeyboard); // 744 = react-native-dismiss-keyboard
var _reactNative = require(12            );function _interopRequireDefault(obj) { // 12 = react-native
  return obj && obj.__esModule ? obj : { default: obj };
}function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var MIN_SWIPE_DISTANCE = 3;
var DEVICE_WIDTH = parseFloat(_reactNative.Dimensions.get('window').width);
var THRESHOLD = DEVICE_WIDTH / 2;
var VX_MAX = 0.1;

var IDLE = 'Idle';
var DRAGGING = 'Dragging';
var SETTLING = 'Settling';var DrawerLayout = (_temp = _class = function (_Component) {
  _inherits(DrawerLayout, _Component);

  function DrawerLayout(props, context) {
    _classCallCheck(this, DrawerLayout);var _this = _possibleConstructorReturn(this, (DrawerLayout.__proto__ || Object.getPrototypeOf(DrawerLayout)).call(this, props, context));_this._onOverlayClick = function (e) {
      e.stopPropagation();
      if (!_this._isLockedClosed() && !_this._isLockedOpen()) {
        _this.closeDrawer();
      }
    };_this._emitStateChanged = function (newState) {
      if (_this.props.onDrawerStateChanged) {
        _this.props.onDrawerStateChanged(newState);
      }
    };_this.openDrawer = function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _this._emitStateChanged(SETTLING);
      _reactNative.Animated.spring(_this.state.openValue, _extends({
        toValue: 1,
        bounciness: 0,
        restSpeedThreshold: 0.1,
        useNativeDriver: _this.props.useNativeAnimations }, options)).start(function () {
        if (_this.props.onDrawerOpen) {
          _this.props.onDrawerOpen();
        }
        _this._emitStateChanged(IDLE);
      });
    };_this.closeDrawer = function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _this._emitStateChanged(SETTLING);
      _reactNative.Animated.spring(_this.state.openValue, _extends({
        toValue: 0,
        bounciness: 0,
        restSpeedThreshold: 1,
        useNativeDriver: _this.props.useNativeAnimations }, options)).start(function () {
        if (_this.props.onDrawerClose) {
          _this.props.onDrawerClose();
        }
        _this._emitStateChanged(IDLE);
      });
    };_this._handleDrawerOpen = function () {
      if (_this.props.onDrawerOpen) {
        _this.props.onDrawerOpen();
      }
    };_this._handleDrawerClose = function () {
      if (_this.props.onDrawerClose) {
        _this.props.onDrawerClose();
      }
    };_this._shouldSetPanResponder = function (e, _ref) {
      var moveX = _ref.moveX,
          dx = _ref.dx,
          dy = _ref.dy;
      if (!dx || !dy || Math.abs(dx) < MIN_SWIPE_DISTANCE) {
        return false;
      }

      if (_this._isLockedClosed() || _this._isLockedOpen()) {
        return false;
      }

      if (_this.getDrawerPosition() === 'left') {
        var overlayArea = DEVICE_WIDTH - (DEVICE_WIDTH - _this.props.drawerWidth);

        if (_this._lastOpenValue === 1) {
          if (dx < 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX > overlayArea) {
            _this._isClosing = true;
            _this._closingAnchorValue = _this._getOpenValueForX(moveX);
            return true;
          }
        } else {
          if (moveX <= 35 && dx > 0) {
            _this._isClosing = false;
            return true;
          }

          return false;
        }
      } else {
        var _overlayArea = DEVICE_WIDTH - _this.props.drawerWidth;

        if (_this._lastOpenValue === 1) {
          if (dx > 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX < _overlayArea) {
            _this._isClosing = true;
            _this._closingAnchorValue = _this._getOpenValueForX(moveX);
            return true;
          }
        } else {
          if (moveX >= DEVICE_WIDTH - 35 && dx < 0) {
            _this._isClosing = false;
            return true;
          }

          return false;
        }
      }
    };_this._panResponderGrant = function () {
      _this._emitStateChanged(DRAGGING);
    };_this._panResponderMove = function (e, _ref2) {
      var moveX = _ref2.moveX;
      var openValue = _this._getOpenValueForX(moveX);

      if (_this._isClosing) {
        openValue = 1 - (_this._closingAnchorValue - openValue);
      }

      if (openValue > 1) {
        openValue = 1;
      } else if (openValue < 0) {
        openValue = 0;
      }

      _this.state.openValue.setValue(openValue);
    };_this._panResponderRelease = function (e, _ref3) {
      var moveX = _ref3.moveX,
          vx = _ref3.vx;
      var previouslyOpen = _this._isClosing;
      var isWithinVelocityThreshold = vx < VX_MAX && vx > -VX_MAX;

      if (_this.getDrawerPosition() === 'left') {
        if (vx > 0 && moveX > THRESHOLD || vx >= VX_MAX || isWithinVelocityThreshold && previouslyOpen && moveX > THRESHOLD) {
          _this.openDrawer({ velocity: vx });
        } else if (vx < 0 && moveX < THRESHOLD || vx < -VX_MAX || isWithinVelocityThreshold && !previouslyOpen) {
          _this.closeDrawer({ velocity: vx });
        } else if (previouslyOpen) {
          _this.openDrawer();
        } else {
          _this.closeDrawer();
        }
      } else {
        if (vx < 0 && moveX < THRESHOLD || vx <= -VX_MAX || isWithinVelocityThreshold && previouslyOpen && moveX < THRESHOLD) {
          _this.openDrawer({ velocity: -1 * vx });
        } else if (vx > 0 && moveX > THRESHOLD || vx > VX_MAX || isWithinVelocityThreshold && !previouslyOpen) {
          _this.closeDrawer({ velocity: -1 * vx });
        } else if (previouslyOpen) {
          _this.openDrawer();
        } else {
          _this.closeDrawer();
        }
      }
    };_this._isLockedClosed = function () {
      return _this.props.drawerLockMode === 'locked-closed' && !_this.state.drawerShown;
    };_this._isLockedOpen = function () {
      return _this.props.drawerLockMode === 'locked-open' && _this.state.drawerShown;
    };_this.state = { accessibilityViewIsModal: false, drawerShown: false, openValue: new _reactNative.Animated.Value(0) };return _this;
  }_createClass(DrawerLayout, [{ key: 'getDrawerPosition', value: function getDrawerPosition() {
      var drawerPosition = this.props.drawerPosition;var rtl = _reactNative.I18nManager.isRTL;return rtl ? drawerPosition === 'left' ? 'right' : 'left' : drawerPosition;
    } }, { key: 'componentWillMount', value: function componentWillMount() {
      var _this2 = this;var openValue = this.state.openValue;openValue.addListener(function (_ref4) {
        var value = _ref4.value;var drawerShown = value > 0;var accessibilityViewIsModal = drawerShown;if (drawerShown !== _this2.state.drawerShown) {
          _this2.setState({ drawerShown: drawerShown, accessibilityViewIsModal: accessibilityViewIsModal });
        }if (_this2.props.keyboardDismissMode === 'on-drag') {
          (0, _reactNativeDismissKeyboard2.default)();
        }_this2._lastOpenValue = value;if (_this2.props.onDrawerSlide) {
          _this2.props.onDrawerSlide({ nativeEvent: { offset: value } });
        }
      });this._panResponder = _reactNative.PanResponder.create({ onMoveShouldSetPanResponder: this._shouldSetPanResponder, onPanResponderGrant: this._panResponderGrant, onPanResponderMove: this._panResponderMove, onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        }, onPanResponderRelease: this._panResponderRelease, onPanResponderTerminate: function onPanResponderTerminate() {} });
    } }, { key: 'render', value: function render() {
      var _state = this.state,
          accessibilityViewIsModal = _state.accessibilityViewIsModal,
          drawerShown = _state.drawerShown,
          openValue = _state.openValue;var _props = this.props,
          drawerBackgroundColor = _props.drawerBackgroundColor,
          drawerWidth = _props.drawerWidth,
          drawerPosition = _props.drawerPosition;var dynamicDrawerStyles = { backgroundColor: drawerBackgroundColor, width: drawerWidth, left: drawerPosition === 'left' ? 0 : null, right: drawerPosition === 'right' ? 0 : null };var outputRange = void 0;if (this.getDrawerPosition() === 'left') {
        outputRange = [-drawerWidth, 0];
      } else {
        outputRange = [drawerWidth, 0];
      }var drawerTranslateX = openValue.interpolate({ inputRange: [0, 1], outputRange: outputRange, extrapolate: 'clamp' });var animatedDrawerStyles = { transform: [{ translateX: drawerTranslateX }] };var overlayOpacity = openValue.interpolate({ inputRange: [0, 1], outputRange: [0, 0.7], extrapolate: 'clamp' });var animatedOverlayStyles = { opacity: overlayOpacity };var pointerEvents = drawerShown ? 'auto' : 'none';return _react2.default.createElement(_reactNative.View, _extends({ style: { flex: 1, backgroundColor: 'transparent' } }, this._panResponder.panHandlers), _react2.default.createElement(_reactNative.Animated.View, { style: styles.main }, this.props.children), _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { pointerEvents: pointerEvents, onPress: this._onOverlayClick }, _react2.default.createElement(_reactNative.Animated.View, { pointerEvents: pointerEvents, style: [styles.overlay, animatedOverlayStyles] })), _react2.default.createElement(_reactNative.Animated.View, { accessibilityViewIsModal: accessibilityViewIsModal, style: [styles.drawer, dynamicDrawerStyles, animatedDrawerStyles] }, this.props.renderNavigationView()));
    } }, { key: '_getOpenValueForX', value: function _getOpenValueForX(x) {
      var drawerWidth = this.props.drawerWidth;

      if (this.getDrawerPosition() === 'left') {
        return x / drawerWidth;
      }

      return (DEVICE_WIDTH - x) / drawerWidth;
    } }]);return DrawerLayout;
}(_react.Component), _class.defaultProps = { drawerWidth: 0, drawerPosition: 'left', useNativeAnimations: false }, _class.positions = { Left: 'left', Right: 'right' }, _temp);exports.default = DrawerLayout;

var styles = _reactNative.StyleSheet.create({
  drawer: {
    position: 'absolute',
    top: 0,
    bottom: 0,
    zIndex: 1001 },

  main: {
    flex: 1,
    zIndex: 0 },

  overlay: {
    backgroundColor: '#000',
    position: 'absolute',
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    zIndex: 1000 } });
}, 743, null, "react-native-drawer-layout/dist/DrawerLayout.js");
__d(/* react-native-dismiss-keyboard/dist/index.js */function(global, require, module, exports) {Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.default = dismissKeyboard;

var _reactNative = require(12            ); // 12 = react-native

var TextInputState = _reactNative.TextInput.State;

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = exports.default;
}, 744, null, "react-native-dismiss-keyboard/dist/index.js");
__d(/* react-navigation/src/views/Drawer/DrawerSidebar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Drawer/DrawerSidebar.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _withCachedChildNavigation = require(735                              ); // 735 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var _NavigationActions = require(687                      ); // 687 = ../../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _invariant = require(689                    ); // 689 = ../../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var DrawerSidebar = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerSidebar, _React$PureComponent);

  function DrawerSidebar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerSidebar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerSidebar.__proto__ || Object.getPrototypeOf(DrawerSidebar)).call.apply(_ref, [this].concat(args))), _this), _this._getScreenOptions = function (routeKey) {
      var DrawerScreen = _this.props.router.getComponentForRouteName('DrawerClose');
      (0, _invariant2.default)(DrawerScreen.router, 'NavigationComponent with routeName DrawerClose should be a Navigator');
      var childNavigation = _this.props.childNavigationProps[routeKey];

      return DrawerScreen.router.getScreenOptions(childNavigation.state.index !== undefined ? babelHelpers.extends({}, childNavigation, {
        state: babelHelpers.extends({}, childNavigation.state, { index: 0 })
      }) : childNavigation, _this.props.screenProps);
    }, _this._getLabel = function (_ref2) {
      var focused = _ref2.focused,
          tintColor = _ref2.tintColor,
          route = _ref2.route;

      var _this$_getScreenOptio = _this._getScreenOptions(route.key),
          drawerLabel = _this$_getScreenOptio.drawerLabel,
          title = _this$_getScreenOptio.title;

      if (drawerLabel) {
        return typeof drawerLabel === 'function' ? drawerLabel({ tintColor: tintColor, focused: focused }) : drawerLabel;
      }

      if (typeof title === 'string') {
        return title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref3) {
      var focused = _ref3.focused,
          tintColor = _ref3.tintColor,
          route = _ref3.route;

      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),
          drawerIcon = _this$_getScreenOptio2.drawerIcon;

      if (drawerIcon) {
        return typeof drawerIcon === 'function' ? drawerIcon({ tintColor: tintColor, focused: focused }) : drawerIcon;
      }
      return null;
    }, _this._onItemPress = function (_ref4) {
      var route = _ref4.route,
          focused = _ref4.focused;

      _this.props.navigation.navigate('DrawerClose');
      if (!focused) {
        var subAction = void 0;

        if (route.index !== undefined && route.index !== 0) {
          route = route;
          subAction = _NavigationActions2.default.navigate({
            routeName: route.routes[0].routeName
          });
        }
        _this.props.navigation.navigate(route.routeName, undefined, subAction);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerSidebar, [{
    key: 'render',
    value: function render() {
      var ContentComponent = this.props.contentComponent;
      if (!ContentComponent) {
        return null;
      }
      var state = this.props.navigation.state;

      (0, _invariant2.default)(typeof state.index === 'number', 'should be set');
      return React.createElement(
        _reactNative.View,
        { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 113
          }
        },
        React.createElement(ContentComponent, babelHelpers.extends({}, this.props.contentOptions, {
          navigation: this.props.navigation,
          items: state.routes,
          activeItemKey: state.routes[state.index] && state.routes[state.index].key,
          screenProps: this.props.screenProps,
          getLabel: this._getLabel,
          renderIcon: this._renderIcon,
          onItemPress: this._onItemPress,
          router: this.props.router,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 114
          }
        }))
      );
    }
  }]);
  return DrawerSidebar;
}(React.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerSidebar);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  }
});
}, 745, null, "react-navigation/src/views/Drawer/DrawerSidebar.js");
__d(/* react-navigation/src/views/Drawer/DrawerNavigatorItems.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/Drawer/DrawerNavigatorItems.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _SafeAreaView = require(706              ); // 706 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _TouchableItem = require(702               ); // 702 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {
  var _ref$navigation = _ref.navigation,
      state = _ref$navigation.state,
      navigate = _ref$navigation.navigate,
      items = _ref.items,
      activeItemKey = _ref.activeItemKey,
      activeTintColor = _ref.activeTintColor,
      activeBackgroundColor = _ref.activeBackgroundColor,
      inactiveTintColor = _ref.inactiveTintColor,
      inactiveBackgroundColor = _ref.inactiveBackgroundColor,
      getLabel = _ref.getLabel,
      renderIcon = _ref.renderIcon,
      onItemPress = _ref.onItemPress,
      _ref$itemsContainerFo = _ref.itemsContainerForceInset,
      itemsContainerForceInset = _ref$itemsContainerFo === undefined ? { horizontal: 'never', top: 'always' } : _ref$itemsContainerFo,
      itemsContainerStyle = _ref.itemsContainerStyle,
      itemStyle = _ref.itemStyle,
      labelStyle = _ref.labelStyle,
      iconContainerStyle = _ref.iconContainerStyle;
  return React.createElement(
    _SafeAreaView2.default,
    { forceInset: itemsContainerForceInset, __source: {
        fileName: _jsxFileName,
        lineNumber: 56
      }
    },
    React.createElement(
      _reactNative.View,
      { style: [styles.container, itemsContainerStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 57
        }
      },
      items.map(function (route, index) {
        var focused = activeItemKey === route.key;
        var color = focused ? activeTintColor : inactiveTintColor;
        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
        var scene = { route: route, index: index, focused: focused, tintColor: color };
        var icon = renderIcon(scene);
        var label = getLabel(scene);
        return React.createElement(
          _TouchableItem2.default,
          {
            key: route.key,
            onPress: function onPress() {
              onItemPress({ route: route, focused: focused });
            },
            delayPressIn: 0,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 68
            }
          },
          React.createElement(
            _SafeAreaView2.default,
            {
              style: { backgroundColor: backgroundColor },
              forceInset: { horizontal: 'always' },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 75
              }
            },
            React.createElement(
              _reactNative.View,
              { style: [styles.item, itemStyle], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 79
                }
              },
              icon ? React.createElement(
                _reactNative.View,
                {
                  style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle],
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 81
                  }
                },
                icon
              ) : null,
              typeof label === 'string' ? React.createElement(
                _reactNative.Text,
                { style: [styles.label, { color: color }, labelStyle], __source: {
                    fileName: _jsxFileName,
                    lineNumber: 92
                  }
                },
                label
              ) : label
            )
          )
        );
      })
    )
  );
};

DrawerNavigatorItems.defaultProps = {
  activeTintColor: '#2196f3',
  activeBackgroundColor: 'rgba(0, 0, 0, .04)',
  inactiveTintColor: 'rgba(0, 0, 0, .87)',
  inactiveBackgroundColor: 'transparent'
};

var styles = _reactNative.StyleSheet.create({
  container: {
    paddingVertical: 4
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  icon: {
    marginHorizontal: 16,
    width: 24,
    alignItems: 'center'
  },
  inactiveIcon: {
    opacity: 0.62
  },
  label: {
    margin: 16,
    fontWeight: 'bold'
  }
});

exports.default = DrawerNavigatorItems;
}, 746, null, "react-navigation/src/views/Drawer/DrawerNavigatorItems.js");
__d(/* react-navigation/src/views/withNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/aaron/TalkPresidential/engineering/mobile/talk-presidential-react/node_modules/react-navigation/src/views/withNavigation.js';
exports.default = withNavigation;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(144         ); // 144 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require(347                      ); // 347 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

function withNavigation(Component) {
  var componentWithNavigation = function componentWithNavigation(props, _ref) {
    var navigation = _ref.navigation;
    return React.createElement(Component, babelHelpers.extends({}, props, { navigation: navigation, __source: {
        fileName: _jsxFileName,
        lineNumber: 21
      }
    }));
  };

  var displayName = Component.displayName || Component.name;
  componentWithNavigation.displayName = 'withNavigation(' + displayName + ')';

  componentWithNavigation.contextTypes = {
    navigation: _propTypes2.default.object.isRequired
  };

  return (0, _hoistNonReactStatics2.default)(componentWithNavigation, Component);
}
}, 747, null, "react-navigation/src/views/withNavigation.js");
__d(/* TalkPresidential/build/screens/tabs/home/navigaton/Home.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _HomeNavigator = require(749              ); // 749 = ./HomeNavigator

var _HomeNavigator2 = babelHelpers.interopRequireDefault(_HomeNavigator);

var _Images = require(757                        ); // 757 = ../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var Home = function (_React$Component) {
    babelHelpers.inherits(Home, _React$Component);

    function Home() {
        babelHelpers.classCallCheck(this, Home);
        return babelHelpers.possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
    }

    babelHelpers.createClass(Home, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_HomeNavigator2.default, null);
        }
    }]);
    return Home;
}(_react2.default.Component);

exports.default = Home;

Home.navigationOptions = {
    tabBarIcon: function tabBarIcon(_ref) {
        var tintColor = _ref.tintColor;

        return _react2.default.createElement(_reactNative.Image, { source: _Images2.default.houseTab, style: { tintColor: tintColor } });
    }
};
}, 748, null, "TalkPresidential/build/screens/tabs/home/navigaton/Home.js");
__d(/* TalkPresidential/build/screens/tabs/home/navigaton/HomeNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _GamesList = require(750                     ); // 750 = ../gamesList/GamesList

var _GamesList2 = babelHelpers.interopRequireDefault(_GamesList);

var _reactNavigation = require(684               ); // 684 = react-navigation

var _standardNavigationOptions = require(776                                            ); // 776 = ../../../navigation/standardNavigationOptions

var _CurrentGameDetail = require(777                                                       ); // 777 = ../../../currentGame/CurrentGameDetail/CurrentGameDetail

var _CurrentGameDetail2 = babelHelpers.interopRequireDefault(_CurrentGameDetail);

var routeConfig = {
    GamesList: {
        screen: _GamesList2.default
    },
    CurrentGameDetail: {
        screen: _CurrentGameDetail2.default
    }
};
var navigatorConfig = {
    initialRouteName: 'GamesList',
    navigationOptions: _standardNavigationOptions.standardNavigationOptions
};
exports.default = (0, _reactNavigation.StackNavigator)(routeConfig, navigatorConfig);
}, 749, null, "TalkPresidential/build/screens/tabs/home/navigaton/HomeNavigator.js");
__d(/* TalkPresidential/build/screens/tabs/home/gamesList/GamesList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _GameSummary = require(751                                   ); // 751 = ./Components/GameSummary/GameSummary

var _GameSummary2 = babelHelpers.interopRequireDefault(_GameSummary);

var _gamesListSelectors = require(532                                       ); // 532 = ../../../../selectors/gamesListSelectors

var _gamesListActions = require(505                                   ); // 505 = ../../../../actions/gamesListActions

var _GamesListStyles = require(775                ); // 775 = ./GamesListStyles

var _currentGameActions = require(507                                     ); // 507 = ../../../../actions/currentGameActions

var GamesList = function (_Component) {
    babelHelpers.inherits(GamesList, _Component);

    function GamesList(props) {
        babelHelpers.classCallCheck(this, GamesList);

        var _this = babelHelpers.possibleConstructorReturn(this, (GamesList.__proto__ || Object.getPrototypeOf(GamesList)).call(this, props));

        _this.state = {
            isRefreshing: false
        };
        return _this;
    }

    babelHelpers.createClass(GamesList, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            if (this.state.isRefreshing && !props.isFetchingGames) {
                this.setState({
                    isRefreshing: false
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _GamesListStyles.gamesListStyles.main, onLayout: this._onViewLayout.bind(this) }, _react2.default.createElement(_reactNative.SectionList, { scrollEventThrottle: 200, style: _GamesListStyles.gamesListStyles.sectionList, onContentSizeChange: this._onContentSizeChange.bind(this), onScroll: this._onScroll.bind(this), ItemSeparatorComponent: this._renderCellSeperator.bind(this), showsVerticalScrollIndicator: false, renderSectionHeader: function renderSectionHeader(_section) {
                    return _react2.default.createElement(_reactNative.View, { style: _GamesListStyles.gamesListStyles.cellSeperator });
                }, refreshControl: _react2.default.createElement(_reactNative.RefreshControl, { refreshing: this.state.isRefreshing, onRefresh: this._onRefresh.bind(this) }), sections: this._buildSections() }));
        }
    }, {
        key: '_renderCellSeperator',
        value: function _renderCellSeperator() {
            return _react2.default.createElement(_reactNative.View, { style: _GamesListStyles.gamesListStyles.cellSeperator });
        }
    }, {
        key: '_renderGameSummary',
        value: function _renderGameSummary(item) {
            return _react2.default.createElement(_GameSummary2.default, { _id: item.id, key: item.key, onSummaryTapped: item.onSummaryTapped });
        }
    }, {
        key: '_buildSections',
        value: function _buildSections() {
            var sections = [this._buildOpenGamesSection(this.props.openGames)];
            if (this.props.completedGames.length > 0) {
                sections.push(this._buildOpenGamesSection(this.props.completedGames));
            }
            return sections;
        }
    }, {
        key: '_buildOpenGamesSection',
        value: function _buildOpenGamesSection(games) {
            var _this2 = this;

            var data = this._convertGameListToData(games);
            return {
                data: data,
                renderItem: function renderItem(_ref) {
                    var item = _ref.item;

                    return _this2._renderGameSummary(item);
                }
            };
        }
    }, {
        key: '_convertGameListToData',
        value: function _convertGameListToData(games) {
            var _this3 = this;

            if (!games) {
                return [];
            }
            return games.map(function (game) {
                return {
                    id: game._id,
                    key: game._id,
                    onSummaryTapped: _this3._onSummaryTapped.bind(_this3)
                };
            });
        }
    }, {
        key: '_onContentSizeChange',
        value: function _onContentSizeChange(_width, height) {
            this.setState({
                contentHeight: height
            });
        }
    }, {
        key: '_onScroll',
        value: function _onScroll(_ref2) {
            var contentOffset = _ref2.nativeEvent.contentOffset;

            if (!this.state.contentHeight || !this.state.viewHeight) {
                return;
            }
            var offset = contentOffset.y;
            if (offset >= this.state.contentHeight - this.state.viewHeight && !this.props.isFetchingGames && !this.state.isRefreshing) {
                this.props.fetchMoreGames();
            }
        }
    }, {
        key: '_onViewLayout',
        value: function _onViewLayout(_ref3) {
            var layout = _ref3.nativeEvent.layout;

            this.setState({
                viewHeight: layout.height
            });
        }
    }, {
        key: '_onSummaryTapped',
        value: function _onSummaryTapped(_id) {
            this.props.openGame(_id);
        }
    }, {
        key: '_onRefresh',
        value: function _onRefresh() {
            this.setState({
                isRefreshing: true
            });
            this.props.fetchNewGames();
        }
    }]);
    return GamesList;
}(_react.Component);

function mapDispatchToProps(dispatch, props) {
    return {
        fetchMoreGames: function fetchMoreGames() {
            dispatch((0, _gamesListActions.fetchGames)());
        },
        fetchNewGames: function fetchNewGames() {
            dispatch((0, _gamesListActions.fetchGames)(true));
        },
        openGame: function openGame(gameID) {
            dispatch((0, _currentGameActions.setCurrentGameID)(gameID));
            props.navigation.navigate('CurrentGameDetail');
        }
    };
}
function mapStateToProps(state) {
    return {
        openGames: (0, _gamesListSelectors.getOpenGames)(state),
        completedGames: (0, _gamesListSelectors.getCompletedGames)(state),
        isFetchingGames: (0, _gamesListSelectors.getIsFetchingGames)(state)
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(GamesList);
}, 750, null, "TalkPresidential/build/screens/tabs/home/gamesList/GamesList.js");
__d(/* TalkPresidential/build/screens/tabs/home/gamesList/Components/GameSummary/GameSummary.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _gamesListSelectors = require(532                                             ); // 532 = ../../../../../../selectors/gamesListSelectors

var _GameSummaryStyles = require(752                  ); // 752 = ./GameSummaryStyles

var _sharedStyles = require(754                                    ); // 754 = ../../../../../../styles/sharedStyles

var _Trophys = require(755                                           ); // 755 = ../../../../../../components/Trophys/Trophys

var _Trophys2 = babelHelpers.interopRequireDefault(_Trophys);

var GameSummary = function (_React$Component) {
    babelHelpers.inherits(GameSummary, _React$Component);

    function GameSummary() {
        babelHelpers.classCallCheck(this, GameSummary);
        return babelHelpers.possibleConstructorReturn(this, (GameSummary.__proto__ || Object.getPrototypeOf(GameSummary)).apply(this, arguments));
    }

    babelHelpers.createClass(GameSummary, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: [_GameSummaryStyles.gameSummaryStyles.main, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { onPress: this._onPress.bind(this) }, _react2.default.createElement(_reactNative.View, null, this._renderMainGameSummary(), this._renderCompletedGameInfo(), this._renderDeclineGame())));
        }
    }, {
        key: '_renderMainGameSummary',
        value: function _renderMainGameSummary() {
            return _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.mainGameSummary }, this._renderUserSide(), this._renderOpponent());
        }
    }, {
        key: '_renderUserSide',
        value: function _renderUserSide() {
            var userNameText = [_GameSummaryStyles.gameSummaryStyles.nameText];
            var contenContainerStyle = [_GameSummaryStyles.gameSummaryStyles.userContentContainer];
            if (this.props.gameComplete && this.props.gameComplete.userWonGame) {
                userNameText.push(_GameSummaryStyles.gameSummaryStyles.lightText);
                contenContainerStyle.push(_GameSummaryStyles.gameSummaryStyles.userWonBackground);
            }
            if (this.props.userCanPlay) {
                userNameText.push(_GameSummaryStyles.gameSummaryStyles.lightText);
                contenContainerStyle.push(_GameSummaryStyles.gameSummaryStyles.readyToPlayBackground);
            }
            return _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.userContaniner }, _react2.default.createElement(_reactNative.View, { style: contenContainerStyle }, _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.imageContainerUser }, this._renderUserImage(this.props.userProfilePicture)), _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.userTextAndTrophyContainer }, _react2.default.createElement(_reactNative.Text, { style: userNameText }, this.props.userName), _react2.default.createElement(_Trophys2.default, { numberOfTrophies: this.props.userRoundsWon, reversed: false }), this.props.userCanPlay && _react2.default.createElement(_reactNative.Text, { style: _GameSummaryStyles.gameSummaryStyles.readyToPlayText }, "Ready to play!"), this.props.gameComplete && this.props.gameComplete.userWonGame && _react2.default.createElement(_reactNative.Text, { style: _GameSummaryStyles.gameSummaryStyles.readyToPlayText }, "You won!"))));
        }
    }, {
        key: '_renderOpponent',
        value: function _renderOpponent() {
            var userNameText = [_GameSummaryStyles.gameSummaryStyles.nameText];
            var contentContainerStyle = [_GameSummaryStyles.gameSummaryStyles.userContentContainer, _GameSummaryStyles.gameSummaryStyles.opponentContentContainer];
            if (this.props.gameComplete && !this.props.gameComplete.userWonGame) {
                userNameText.push(_GameSummaryStyles.gameSummaryStyles.lightText);
                contentContainerStyle.push(_GameSummaryStyles.gameSummaryStyles.userWonBackground);
            }
            if (this.props.waitingForOpponent) {
                userNameText.push(_GameSummaryStyles.gameSummaryStyles.lightText);
                contentContainerStyle.push(_GameSummaryStyles.gameSummaryStyles.readyToPlayBackground);
            }
            return _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.opponentContainer }, _react2.default.createElement(_reactNative.View, { style: contentContainerStyle }, _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.opponentTextAndTrophyContainer }, _react2.default.createElement(_reactNative.Text, { style: userNameText }, this.props.opponentName), _react2.default.createElement(_Trophys2.default, { numberOfTrophies: this.props.opponentRoundsWon, reversed: true }), this.props.waitingForOpponent && _react2.default.createElement(_reactNative.Text, { style: _GameSummaryStyles.gameSummaryStyles.readyToPlayText }, 'Their Move'), this.props.gameComplete && !this.props.gameComplete.userWonGame && _react2.default.createElement(_reactNative.Text, { style: _GameSummaryStyles.gameSummaryStyles.readyToPlayText }, this.props.opponentFirstName + ' Won')), _react2.default.createElement(_reactNative.View, { style: _GameSummaryStyles.gameSummaryStyles.imageContainerOpponent }, this._renderUserImage(this.props.opponentProfilePicture))));
        }
    }, {
        key: '_renderCompletedGameInfo',
        value: function _renderCompletedGameInfo() {
            return undefined;
        }
    }, {
        key: '_renderDeclineGame',
        value: function _renderDeclineGame() {}
    }, {
        key: '_renderUserImage',
        value: function _renderUserImage(uri) {
            return _react2.default.createElement(_reactNative.Image, { style: _sharedStyles.standardStyles.standardSizedProfilePic, source: { uri: uri } });
        }
    }, {
        key: '_onPress',
        value: function _onPress() {
            this.props.onSummaryTapped(this.props._id);
        }
    }]);
    return GameSummary;
}(_react2.default.Component);

function mapStateToProps(state, ownProps) {
    return babelHelpers.extends({}, (0, _gamesListSelectors.getGameSummaryProps)(state, ownProps));
}
exports.default = (0, _reactRedux.connect)(mapStateToProps)(GameSummary);
}, 751, null, "TalkPresidential/build/screens/tabs/home/gamesList/Components/GameSummary/GameSummary.js");
__d(/* TalkPresidential/build/screens/tabs/home/gamesList/Components/GameSummary/GameSummaryStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gameSummaryStyles = undefined;

var _colors = require(753                                   ); // 753 = ./../../../../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var contentBackgroundBorderRadius = 5;
var gameSummaryStyles = exports.gameSummaryStyles = _reactNative.StyleSheet.create({
    main: {
        paddingVertical: 8,
        paddingHorizontal: 8
    },
    mainGameSummary: {
        flexDirection: 'row',
        alignItems: 'stretch',
        justifyContent: 'space-between'
    },
    userContaniner: {
        flex: 1,
        paddingRight: 5
    },
    opponentContainer: {
        flex: 1,
        paddingLeft: 5
    },
    userContentContainer: {
        flexDirection: 'row',
        paddingHorizontal: 5,
        paddingVertical: 5
    },
    opponentContentContainer: {
        justifyContent: 'flex-end',
        flex: 1
    },
    lightText: {
        color: 'white'
    },
    readyToPlayBackground: {
        backgroundColor: _colors.main,
        borderRadius: contentBackgroundBorderRadius
    },
    userWonBackground: {
        backgroundColor: _colors.secondary,
        borderRadius: contentBackgroundBorderRadius
    },
    nameText: {
        color: _colors.black,
        fontSize: 20,
        fontWeight: 'bold',
        marginBottom: 5
    },
    readyToPlayText: {
        fontSize: 14,
        color: 'white',
        marginTop: 5
    }, imageContainerUser: {
        paddingRight: 5
    },
    imageContainerOpponent: {
        marginLeft: 5
    },
    opponentTextAndTrophyContainer: {
        alignItems: 'flex-end',
        justifyContent: 'space-between',
        flex: 1
    },
    userTextAndTrophyContainer: {
        flex: 1,
        justifyContent: 'space-between'
    }
});
}, 752, null, "TalkPresidential/build/screens/tabs/home/gamesList/Components/GameSummary/GameSummaryStyles.js");
__d(/* TalkPresidential/build/constants/colors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var main = exports.main = '#303266';
var main20 = exports.main20 = 'rgba(48,50,102,0.7)';
var lightGreyTextColor = exports.lightGreyTextColor = '#AFAFAF';
var black = exports.black = '#2C2929';
var secondary = exports.secondary = '#AE1124';
var donYellow = exports.donYellow = '#FFF063';
var lightGreyColor = exports.lightGreyColor = '#ECECEC';
var borderGrey = exports.borderGrey = '#979797';
var seperatorGrey = exports.seperatorGrey = '#CCCCCC';
var darkBackground = exports.darkBackground = 'rgba(0,0,0,0.5)';
var standardGreen = exports.standardGreen = '#50A412';
}, 753, null, "TalkPresidential/build/constants/colors.js");
__d(/* TalkPresidential/build/styles/sharedStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.standardStyles = undefined;

var _colors = require(753                    ); // 753 = ./../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var profilePicHeight = 34;
var standardStyles = exports.standardStyles = _reactNative.StyleSheet.create({
    standardCell: {
        backgroundColor: 'white',
        borderWidth: _reactNative.StyleSheet.hairlineWidth,
        borderColor: _colors.borderGrey
    },
    thinItemSeperator: {
        borderRadius: 2,
        width: 2,
        backgroundColor: _colors.seperatorGrey
    },
    horizintalSeperatorThin: {
        height: _reactNative.StyleSheet.hairlineWidth,
        backgroundColor: _colors.borderGrey
    },
    standardSizedProfilePic: {
        borderRadius: profilePicHeight / 2,
        height: profilePicHeight,
        width: profilePicHeight
    }
});
}, 754, null, "TalkPresidential/build/styles/sharedStyles.js");
__d(/* TalkPresidential/build/components/Trophys/Trophys.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _TrophysStyles = require(756              ); // 756 = ./TrophysStyles

var _Images = require(757                  ); // 757 = ../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var Trophys = function (_React$Component) {
    babelHelpers.inherits(Trophys, _React$Component);

    function Trophys() {
        babelHelpers.classCallCheck(this, Trophys);
        return babelHelpers.possibleConstructorReturn(this, (Trophys.__proto__ || Object.getPrototypeOf(Trophys)).apply(this, arguments));
    }

    babelHelpers.createClass(Trophys, [{
        key: 'render',
        value: function render() {
            var dummyArray = Array(this.props.numberOfTrophies).fill(1);
            var trophyStyle = this.props.reversed ? _TrophysStyles.trophyStyles.reversed : _TrophysStyles.trophyStyles.regular;
            return _react2.default.createElement(_reactNative.View, { style: [_TrophysStyles.trophyStyles.trophysContainer, this.props.style] }, dummyArray.map(function (_value, idx) {
                return _react2.default.createElement(_reactNative.Image, { style: trophyStyle, source: _Images2.default.trophy, key: idx });
            }));
        }
    }]);
    return Trophys;
}(_react2.default.Component);

exports.default = Trophys;
}, 755, null, "TalkPresidential/build/components/Trophys/Trophys.js");
__d(/* TalkPresidential/build/components/Trophys/TrophysStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.trophyStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var trophyStyles = exports.trophyStyles = _reactNative.StyleSheet.create({
    regular: {
        marginRight: 8
    },
    reversed: {
        marginLeft: 8
    },
    trophysContainer: {
        flexDirection: 'row'
    },
    emptyView: {
        height: 21
    }
});
}, 756, null, "TalkPresidential/build/components/Trophys/TrophysStyles.js");
__d(/* TalkPresidential/build/shared/Images.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var Images = {
    mainLogo51: require(758                        ), // 758 = ../../imgs/MainLogo51.png
    mainLogo271: require(759                         ), // 759 = ../../imgs/MainLogo271.png
    trumpBlueIcon78: require(760                             ), // 760 = ../../imgs/TrumpBlueIcon78.png
    friendsTab: require(761                             ), // 761 = ../../imgs/tabs/friendsTab.png
    houseTab: require(762                           ), // 762 = ../../imgs/tabs/houseTab.png
    trumpBlueIcon17: require(763                                     ), // 763 = ../../imgs/newGame/TrumpBlueIcon17.png
    facebookIcon26: require(764                                ), // 764 = ../../imgs/newGame/Facebook26.png
    questionMark: require(765                                  ), // 765 = ../../imgs/newGame/questionMark.png
    trumpBlueIcon64: require(766                                 ), // 766 = ../../imgs/friends/TrumpBlue64.png
    leftArrow: require(767                                   ), // 767 = ../../imgs/RoundDetail/LeftArrow.png
    rightArrow: require(768                                    ), // 768 = ../../imgs/RoundDetail/RightArrow.png
    trophy: require(769                    ), // 769 = ../../imgs/trophy.png
    hiddenTextCover: require(770                                         ), // 770 = ../../imgs/RoundDetail/hiddenTextCover.png
    X: require(771                           ), // 771 = ../../imgs/composeTurn/X.png
    PotusBot: require(772                                      ), // 772 = ../../imgs/composeTurn/POTUS_BOT_81.png
    trumpProgressBar: require(773                                         ), // 773 = ../../imgs/composeTurn/trumpProgessBar.png
    userTriangle: require(774                                  ) // 774 = ../../imgs/composeTurn/Triangle.png
};
exports.default = Images;
}, 757, null, "TalkPresidential/build/shared/Images.js");
__d(/* TalkPresidential/imgs/MainLogo51.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs","width":51,"height":33,"scales":[1,2,3],"hash":"ff8299a360995a87aa87fdba1ee48e6c","name":"MainLogo51","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 758, null, "TalkPresidential/imgs/MainLogo51.png");
__d(/* TalkPresidential/imgs/MainLogo271.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs","width":271,"height":168,"scales":[1,2,3],"hash":"d75fec0f1d8e2cb3fe1fded25318ade9","name":"MainLogo271","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 759, null, "TalkPresidential/imgs/MainLogo271.png");
__d(/* TalkPresidential/imgs/TrumpBlueIcon78.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs","width":72,"height":121,"scales":[1,2,3],"hash":"75db5718657f799200882c5c9826c5b4","name":"TrumpBlueIcon78","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 760, null, "TalkPresidential/imgs/TrumpBlueIcon78.png");
__d(/* TalkPresidential/imgs/tabs/friendsTab.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/tabs","width":27,"height":31,"scales":[1,2,3],"hash":"261c494af297f5c103f668f1404f4cec","name":"friendsTab","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 761, null, "TalkPresidential/imgs/tabs/friendsTab.png");
__d(/* TalkPresidential/imgs/tabs/houseTab.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/tabs","width":28,"height":30,"scales":[1,2,3],"hash":"d1118b1f9031241a70d95595f455e153","name":"houseTab","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 762, null, "TalkPresidential/imgs/tabs/houseTab.png");
__d(/* TalkPresidential/imgs/newGame/TrumpBlueIcon17.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/newGame","width":17,"height":26,"scales":[1,2,3],"hash":"3bf77d5514cda718db8591743a48cfc2","name":"TrumpBlueIcon17","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 763, null, "TalkPresidential/imgs/newGame/TrumpBlueIcon17.png");
__d(/* TalkPresidential/imgs/newGame/Facebook26.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/newGame","width":26,"height":26,"scales":[1,2,3],"hash":"ec0532bc2a274a4fcf6b900b00ee4000","name":"Facebook26","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 764, null, "TalkPresidential/imgs/newGame/Facebook26.png");
__d(/* TalkPresidential/imgs/newGame/questionMark.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/newGame","width":16,"height":24,"scales":[1,2,3],"hash":"603720c6e7579024f502c049ddbc4bd4","name":"questionMark","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 765, null, "TalkPresidential/imgs/newGame/questionMark.png");
__d(/* TalkPresidential/imgs/friends/TrumpBlue64.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/friends","width":60,"height":100,"scales":[1,2,3],"hash":"fde18e1146c223df41408c6d95cd41c9","name":"TrumpBlue64","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 766, null, "TalkPresidential/imgs/friends/TrumpBlue64.png");
__d(/* TalkPresidential/imgs/RoundDetail/LeftArrow.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/RoundDetail","width":12,"height":20,"scales":[1,2,3],"hash":"67f75a1e31d9915a2ab1b9a86047b426","name":"LeftArrow","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 767, null, "TalkPresidential/imgs/RoundDetail/LeftArrow.png");
__d(/* TalkPresidential/imgs/RoundDetail/RightArrow.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/RoundDetail","width":12,"height":20,"scales":[1,2,3],"hash":"3e02e7b5879b4116dba3e96245b649e0","name":"RightArrow","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 768, null, "TalkPresidential/imgs/RoundDetail/RightArrow.png");
__d(/* TalkPresidential/imgs/trophy.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs","width":20,"height":21,"scales":[1,2,3],"hash":"4934b55944c3ca80bc0f5567c9ee2f4b","name":"trophy","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 769, null, "TalkPresidential/imgs/trophy.png");
__d(/* TalkPresidential/imgs/RoundDetail/hiddenTextCover.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/RoundDetail","width":278,"height":73,"scales":[1,2,3],"hash":"4a5c7dcf206828b0cbd9bd7ad20890fa","name":"hiddenTextCover","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 770, null, "TalkPresidential/imgs/RoundDetail/hiddenTextCover.png");
__d(/* TalkPresidential/imgs/composeTurn/X.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/composeTurn","width":24,"height":23,"scales":[1,2,3],"hash":"d97621070bbb56d56ccb617bc5a569f3","name":"X","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 771, null, "TalkPresidential/imgs/composeTurn/X.png");
__d(/* TalkPresidential/imgs/composeTurn/POTUS_BOT_81.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/composeTurn","width":82,"height":81,"scales":[1,2,3],"hash":"d4976ca9c92caa37324379bec866d034","name":"POTUS_BOT_81","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 772, null, "TalkPresidential/imgs/composeTurn/POTUS_BOT_81.png");
__d(/* TalkPresidential/imgs/composeTurn/trumpProgessBar.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/composeTurn","width":295,"height":8,"scales":[1,2,3],"hash":"912b6156b43ef485df0bbeec1fc12aea","name":"trumpProgessBar","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 773, null, "TalkPresidential/imgs/composeTurn/trumpProgessBar.png");
__d(/* TalkPresidential/imgs/composeTurn/Triangle.png */function(global, require, module, exports) {module.exports=require(177                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/imgs/composeTurn","width":17,"height":10,"scales":[1,2,3],"hash":"d190f1a07c1714e85133d75556eeb629","name":"Triangle","type":"png"}); // 177 = react-native/Libraries/Image/AssetRegistry
}, 774, null, "TalkPresidential/imgs/composeTurn/Triangle.png");
__d(/* TalkPresidential/build/screens/tabs/home/gamesList/GamesListStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gamesListStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var gamesListStyles = exports.gamesListStyles = _reactNative.StyleSheet.create({
    main: {
        paddingHorizontal: 12,
        flex: 1
    },
    cellSeperator: {
        height: 12
    },
    sectionList: {
        flex: 1
    }
});
}, 775, null, "TalkPresidential/build/screens/tabs/home/gamesList/GamesListStyles.js");
__d(/* TalkPresidential/build/screens/navigation/standardNavigationOptions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.standardNavigationOptions = undefined;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _colors = require(753                     ); // 753 = ../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var _Images = require(757                  ); // 757 = ../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var standardNavigationOptions = exports.standardNavigationOptions = {
    headerStyle: {
        backgroundColor: _colors.main
    },
    headerTintColor: 'white',
    headerTitle: _react2.default.createElement(_reactNative.Image, { source: _Images2.default.mainLogo51 })
};
}, 776, null, "TalkPresidential/build/screens/navigation/standardNavigationOptions.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _CurrentGameDetailStyles = require(778                        ); // 778 = ./CurrentGameDetailStyles

var _RoundDetail = require(779                        ); // 779 = ./RoundDetail/RoundDetail

var _RoundDetail2 = babelHelpers.interopRequireDefault(_RoundDetail);

var _currentGameSelectors = require(512                                      ); // 512 = ../../../selectors/currentGameSelectors

var _Alerts = require(805                           ); // 805 = ../../../utils/shared/Alerts

var _CurrentGameSelectors = require(806                     ); // 806 = ./CurrentGameSelectors

var componentSelectors = babelHelpers.interopRequireWildcard(_CurrentGameSelectors);

var CurrentGameDetail = function (_React$Component) {
    babelHelpers.inherits(CurrentGameDetail, _React$Component);

    function CurrentGameDetail(props) {
        babelHelpers.classCallCheck(this, CurrentGameDetail);

        var _this = babelHelpers.possibleConstructorReturn(this, (CurrentGameDetail.__proto__ || Object.getPrototypeOf(CurrentGameDetail)).call(this, props));

        _this.state = {};
        return _this;
    }

    babelHelpers.createClass(CurrentGameDetail, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            if (props.waitingForOpponent && !this.props.waitingForOpponent) {
                this.props.goBack();
                this._showWaitingForOpponentAlert();
            } else if (props.userNameError && !this.props.userNameError) {
                this.props.goBack();
                this._showError('User with that Username could not be found.');
            } else if (props.startGameError && !this.props.startGameError) {
                this.props.goBack();
                this._showError('Something went wrong starting a new game. Make sure you are connected to the internet.');
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            setTimeout(function () {
                _this2.list.scrollToIndex({
                    animated: false,
                    index: _this2.props.roundData.length - 1,
                    viewOffset: 0,
                    viewPosition: 0
                });
            }, 350);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return React.createElement(_reactNative.FlatList, { ref: function ref(_ref) {
                    return _this3.list = _ref;
                }, keyboardShouldPersistTaps: 'always', pagingEnabled: true, onLayout: this._listLayout.bind(this), style: _CurrentGameDetailStyles.currentGameDetailStyles.main, horizontal: true, data: this.props.roundData, renderItem: this._renderRoundDetail.bind(this) });
        }
    }, {
        key: '_showError',
        value: function _showError(text) {
            (0, _Alerts.errorAlert)(text);
        }
    }, {
        key: '_showWaitingForOpponentAlert',
        value: function _showWaitingForOpponentAlert() {
            (0, _Alerts.alert)('Looking for opponent...', 'Once an opponent is found, a new game will be added to your games list.');
        }
    }, {
        key: '_listLayout',
        value: function _listLayout(_ref2) {
            var layout = _ref2.nativeEvent.layout;

            this.setState({
                width: layout.width
            });
        }
    }, {
        key: '_renderRoundDetail',
        value: function _renderRoundDetail(_ref3) {
            var item = _ref3.item;

            return React.createElement(_RoundDetail2.default, { onLeftButtonPressed: this._onLeftButtonPressed.bind(this), onRightButtonPressed: this._onRightButtonPressed.bind(this), roundNumber: item.round, width: this.state.width, navigation: this.props.navigation });
        }
    }, {
        key: '_onLeftButtonPressed',
        value: function _onLeftButtonPressed(idx) {
            this.list.scrollToIndex({
                animated: true,
                index: idx - 1,
                viewOffset: 0,
                viewPosition: 0
            });
        }
    }, {
        key: '_onRightButtonPressed',
        value: function _onRightButtonPressed(idx) {
            this.list.scrollToIndex({
                animated: true,
                index: idx + 1,
                viewOffset: 0,
                viewPosition: 0
            });
        }
    }]);
    return CurrentGameDetail;
}(React.Component);

function mergeProps(stateProps, dispatchProps, ownProps) {
    return babelHelpers.extends({ goBack: function goBack() {
            ownProps.navigation.goBack();
        } }, ownProps, stateProps, dispatchProps);
}
function mapStateToProps(state) {
    return {
        waitingForOpponent: (0, _currentGameSelectors.getWaitingForRandomOpponent)(state),
        userNameError: (0, _currentGameSelectors.getCurrentGameStartErrorBadUserName)(state),
        startGameError: (0, _currentGameSelectors.getStartGameError)(state),
        roundData: componentSelectors.getCurrentGameDetailData(state)
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, undefined, mergeProps)(CurrentGameDetail);
}, 777, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameDetail.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameDetailStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.currentGameDetailStyles = undefined;

var _colors = require(753                          ); // 753 = ./../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var currentGameDetailStyles = exports.currentGameDetailStyles = _reactNative.StyleSheet.create({
    main: {
        flex: 1,
        backgroundColor: _colors.lightGreyColor
    }
});
}, 778, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameDetailStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _RoundHeader = require(780                                   ); // 780 = ./components/RoundHeader/RoundHeader

var _RoundHeader2 = babelHelpers.interopRequireDefault(_RoundHeader);

var _RequiredWords = require(782                                       ); // 782 = ./components/RequiredWords/RequiredWords

var _RequiredWords2 = babelHelpers.interopRequireDefault(_RequiredWords);

var _RoundDetailStyles = require(784                  ); // 784 = ./RoundDetailStyles

var _RoundDetailSelectors = require(785                     ); // 785 = ./RoundDetailSelectors

var _GameOverview = require(786                                     ); // 786 = ./components/GameOverView/GameOverview

var _GameOverview2 = babelHelpers.interopRequireDefault(_GameOverview);

var _TurnsDetail = require(789                                   ); // 789 = ./components/TurnsDetail/TurnsDetail

var _TurnsDetail2 = babelHelpers.interopRequireDefault(_TurnsDetail);

var _ComposeTurn = require(794                         ); // 794 = ../ComposeTurn/ComposeTurn

var _ComposeTurn2 = babelHelpers.interopRequireDefault(_ComposeTurn);

var RoundDetail = function (_React$Component) {
    babelHelpers.inherits(RoundDetail, _React$Component);

    function RoundDetail(props) {
        babelHelpers.classCallCheck(this, RoundDetail);

        var _this = babelHelpers.possibleConstructorReturn(this, (RoundDetail.__proto__ || Object.getPrototypeOf(RoundDetail)).call(this, props));

        _this.state = {
            showComposeTurn: false
        };
        return _this;
    }

    babelHelpers.createClass(RoundDetail, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.ScrollView, { keyboardShouldPersistTaps: 'always', style: [_RoundDetailStyles.roundDetailStyles.main, { width: this.props.width }] }, this._renderHeader(), this._renderSeperator(), this._renderGameOverview(), this._renderSeperator(), this._renderRequiredWords(), this._renderSeperator(), this._renderTurnsDetail(), this._renderComposeTurnModal());
        }
    }, {
        key: '_renderHeader',
        value: function _renderHeader() {
            return _react2.default.createElement(_RoundHeader2.default, { showLeft: this.props.header.showLeftArrow, showRight: this.props.header.showRightArrow, roundNumber: this.props.header.roundNumber, onLeftPress: this._leftButtonPressed.bind(this), onRightPress: this._rightButtonPressed.bind(this) });
        }
    }, {
        key: '_renderSeperator',
        value: function _renderSeperator() {
            return _react2.default.createElement(_reactNative.View, { style: _RoundDetailStyles.roundDetailStyles.seperator });
        }
    }, {
        key: '_renderGameOverview',
        value: function _renderGameOverview() {
            return _react2.default.createElement(_GameOverview2.default, { userName: this.props.gameOverview.userFirstName, userPorfilePicture: this.props.gameOverview.userProfilePicture, userRoundsWon: this.props.gameOverview.userRoundsWon, opponentName: this.props.gameOverview.opponentFirstName, opponentProfilePicture: this.props.gameOverview.opponentProfilePicture, opponentRoundsWon: this.props.gameOverview.opponentRoundsWon });
        }
    }, {
        key: '_renderRequiredWords',
        value: function _renderRequiredWords() {
            return _react2.default.createElement(_RequiredWords2.default, { firstWord: this.props.requiredWords.firstWord, secondWord: this.props.requiredWords.secondWord });
        }
    }, {
        key: '_renderTurnsDetail',
        value: function _renderTurnsDetail() {
            return _react2.default.createElement(_TurnsDetail2.default, babelHelpers.extends({}, this.props.turnsDetail, { onPlayNowSelected: this._showComposeTurn.bind(this) }));
        }
    }, {
        key: '_renderComposeTurnModal',
        value: function _renderComposeTurnModal() {
            return _react2.default.createElement(_reactNative.Modal, { visible: this.state.showComposeTurn, animationType: 'slide' }, _react2.default.createElement(_ComposeTurn2.default, { onShowDetailDismiss: this._hideComposeTurn.bind(this), roundNumber: this.props.roundNumber, cancelPressed: this._hideComposeTurn.bind(this) }));
        }
    }, {
        key: '_showComposeTurn',
        value: function _showComposeTurn() {
            this.setState({
                showComposeTurn: true
            });
        }
    }, {
        key: '_hideComposeTurn',
        value: function _hideComposeTurn() {
            this.setState({
                showComposeTurn: false
            });
        }
    }, {
        key: '_leftButtonPressed',
        value: function _leftButtonPressed() {
            this.props.onLeftButtonPressed(this.props.roundNumber - 1);
        }
    }, {
        key: '_rightButtonPressed',
        value: function _rightButtonPressed() {
            this.props.onRightButtonPressed(this.props.roundNumber - 1);
        }
    }]);
    return RoundDetail;
}(_react2.default.Component);

function mapStateToProps(state, ownProps) {
    return babelHelpers.extends({}, (0, _RoundDetailSelectors.getRoundDetailProps)(state, ownProps));
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, undefined)(RoundDetail);
}, 779, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetail.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RoundHeader/RoundHeader.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _Images = require(757                              ); // 757 = ../../../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _RoundHeaderStyles = require(781                  ); // 781 = ./RoundHeaderStyles

var RoundHeader = function (_React$Component) {
    babelHelpers.inherits(RoundHeader, _React$Component);

    function RoundHeader() {
        babelHelpers.classCallCheck(this, RoundHeader);
        return babelHelpers.possibleConstructorReturn(this, (RoundHeader.__proto__ || Object.getPrototypeOf(RoundHeader)).apply(this, arguments));
    }

    babelHelpers.createClass(RoundHeader, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _RoundHeaderStyles.headerStyles.main }, _react2.default.createElement(_reactNative.TouchableOpacity, { onPress: this.props.onLeftPress, disabled: !this.props.showLeft, style: [_RoundHeaderStyles.headerStyles.leftArrowButton, _RoundHeaderStyles.headerStyles.bothArrowButtons] }, this.props.showLeft && _react2.default.createElement(_reactNative.Image, { source: _Images2.default.leftArrow })), _react2.default.createElement(_reactNative.Text, { style: _RoundHeaderStyles.headerStyles.text }, 'Round ' + (this.props.roundNumber || 1)), _react2.default.createElement(_reactNative.TouchableOpacity, { onPress: this.props.onRightPress, disabled: !this.props.showRight, style: [_RoundHeaderStyles.headerStyles.rightArrowButton, _RoundHeaderStyles.headerStyles.bothArrowButtons] }, this.props.showRight && _react2.default.createElement(_reactNative.Image, { source: _Images2.default.rightArrow })));
        }
    }]);
    return RoundHeader;
}(_react2.default.Component);

exports.default = RoundHeader;
}, 780, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RoundHeader/RoundHeader.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RoundHeader/RoundHeaderStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.headerStyles = undefined;

var _colors = require(753                                   ); // 753 = ./../../../../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var headerStyles = exports.headerStyles = _reactNative.StyleSheet.create({
    main: {
        flexDirection: 'row',
        flex: 1,
        backgroundColor: _colors.lightGreyColor,
        alignItems: 'center',
        justifyContent: 'space-between'
    },
    leftArrowButton: {
        justifyContent: 'flex-start'
    },
    rightArrowButton: {
        justifyContent: 'flex-end'
    },

    bothArrowButtons: {
        alignItems: 'center',
        backgroundColor: _colors.lightGreyColor,
        width: 40,
        flexDirection: 'row'
    },
    text: {
        fontSize: 20,
        fontWeight: 'bold',
        color: _colors.black
    }
});
}, 781, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RoundHeader/RoundHeaderStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RequiredWords/RequiredWords.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _RequiredWordsStyle = require(783                   ); // 783 = ./RequiredWordsStyle

var _sharedStyles = require(754                                    ); // 754 = ../../../../../../styles/sharedStyles

var RequiredWords = function (_React$Component) {
    babelHelpers.inherits(RequiredWords, _React$Component);

    function RequiredWords() {
        babelHelpers.classCallCheck(this, RequiredWords);
        return babelHelpers.possibleConstructorReturn(this, (RequiredWords.__proto__ || Object.getPrototypeOf(RequiredWords)).apply(this, arguments));
    }

    babelHelpers.createClass(RequiredWords, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: [_RequiredWordsStyle.requiredWordsStyles.main, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.Text, { style: _RequiredWordsStyle.requiredWordsStyles.requiredText }, 'Required Words/Phrases'), _react2.default.createElement(_reactNative.View, { style: _RequiredWordsStyle.requiredWordsStyles.wordsContainer }, _react2.default.createElement(_reactNative.Text, { style: _RequiredWordsStyle.requiredWordsStyles.wordTop }, this.props.firstWord || ''), _react2.default.createElement(_reactNative.Text, { style: _RequiredWordsStyle.requiredWordsStyles.word }, this.props.secondWord || '')));
        }
    }]);
    return RequiredWords;
}(_react2.default.Component);

exports.default = RequiredWords;
}, 782, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RequiredWords/RequiredWords.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RequiredWords/RequiredWordsStyle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.requiredWordsStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                                 ); // 753 = ../../../../../../constants/colors

var word = {
    fontSize: 17,
    color: _colors.black
};
var requiredWordsStyles = exports.requiredWordsStyles = _reactNative.StyleSheet.create({
    main: {
        paddingVertical: 12,
        paddingHorizontal: 11,
        justifyContent: 'space-between'
    },
    requiredText: {
        fontSize: 17,
        fontWeight: 'bold',
        color: _colors.black,
        marginBottom: 4
    },
    wordsContainer: {
        justifyContent: 'space-between'
    },
    word: word,
    wordTop: babelHelpers.extends({}, word, { marginBottom: 2 })
});
}, 783, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/RequiredWords/RequiredWordsStyle.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.roundDetailStyles = undefined;

var _colors = require(753                             ); // 753 = ./../../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var roundDetailStyles = exports.roundDetailStyles = _reactNative.StyleSheet.create({
    main: {
        flex: 1,
        width: 300,
        paddingHorizontal: 12,
        paddingVertical: 12,
        backgroundColor: _colors.lightGreyColor
    },
    seperator: {
        height: 12
    }
});
}, 784, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getRoundDetailProps = exports.getTurnDetailProps = exports.getRoundRequiredWordsProps = undefined;

var _gameSelectors = require(511                                    ); // 511 = ./../../../../selectors/gameSelectors

var _roundSelectors = require(510                                     ); // 510 = ./../../../../selectors/roundSelectors

var _dataSelectors = require(477                                    ); // 477 = ./../../../../selectors/dataSelectors

var _reselect = require(476       ); // 476 = reselect

var _dataSelectors2 = require(477                                  ); // 477 = ../../../../selectors/dataSelectors

var _roundSelectors2 = require(510                                   ); // 510 = ../../../../selectors/roundSelectors

var getRoundHeaderProps = (0, _reselect.createSelector)(_gameSelectors.getSelectedGame, _roundSelectors2.getRoundNumber, function (game, roundNumber) {
    var showLeftArrow = void 0;
    var showRightArrow = void 0;
    var roundNumberToDisplay = void 0;
    if (!game) {
        showLeftArrow = false;
        showRightArrow = false;
        roundNumber = 1;
    } else {
        showLeftArrow = roundNumber !== 1;
        showRightArrow = roundNumber < game.rounds.length;
        roundNumberToDisplay = roundNumber;
    }
    return {
        showLeftArrow: showLeftArrow,
        showRightArrow: showRightArrow,
        roundNumber: roundNumberToDisplay
    };
});
var getRoundRequiredWordsProps = exports.getRoundRequiredWordsProps = (0, _reselect.createSelector)(_roundSelectors2.getRoundRequiredWords, function (words) {
    if (words && words.length === 2) {
        return {
            firstWord: words[0],
            secondWord: words[1]
        };
    }
    return {};
});
var getRoundGameOverViewProps = (0, _reselect.createSelector)(_dataSelectors2.getUser, _gameSelectors.getSelectedGame, _roundSelectors2.getRoundNumber, _roundSelectors.getUserWinsUpToRound, _roundSelectors.getOpponentWinsUpToRound, function (user, currentGame, _roundNumber, userWins, opponentWins) {
    if (!currentGame) {
        return {};
    }
    return {
        userProfilePicture: user.profilePicture,
        userFirstName: user.firstName,
        userRoundsWon: userWins,
        opponentProfilePicture: currentGame.opponent.profilePicture,
        opponentFirstName: currentGame.opponent.firstName,
        opponentRoundsWon: opponentWins
    };
});
var getTurnDetailProps = exports.getTurnDetailProps = (0, _reselect.createStructuredSelector)({
    userProfilePicture: _dataSelectors.getUserProfilePicture,
    userFullName: _dataSelectors.getUserFullName,
    userScore: _roundSelectors2.getUserScoreForRound,
    userText: _roundSelectors.getUserSplitupText,
    userWonRound: _roundSelectors.getUserWonRound,
    userCanPlay: _roundSelectors.getUserCanPlayRound,
    opponentProfilePicture: _gameSelectors.getGameOpponentProfilePicture,
    opponentFullName: _gameSelectors.getGameOpponentFirstName,
    opponentText: _roundSelectors2.getOpponentSplitupText,
    opponentScore: _roundSelectors.getOpponentScoreForRound,
    opponentWonRound: _roundSelectors.getOpponentWonRound,
    hideOpponentText: _roundSelectors.getHideOpponentText,
    waitingForOpponent: _roundSelectors.getWaitingForOpponent,
    roundRequiredWords: _roundSelectors2.getRoundRequiredWords
});
var getRoundDetailProps = exports.getRoundDetailProps = (0, _reselect.createStructuredSelector)({
    header: getRoundHeaderProps,
    requiredWords: getRoundRequiredWordsProps,
    gameOverview: getRoundGameOverViewProps,
    turnsDetail: getTurnDetailProps
});
}, 785, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailSelectors.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/GameOverView/GameOverview.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _GameOverviewStyles = require(787                   ); // 787 = ./GameOverviewStyles

var _sharedStyles = require(754                                    ); // 754 = ../../../../../../styles/sharedStyles

var _Trophys = require(755                                           ); // 755 = ../../../../../../components/Trophys/Trophys

var _Trophys2 = babelHelpers.interopRequireDefault(_Trophys);

var GameOverview = function (_React$Component) {
    babelHelpers.inherits(GameOverview, _React$Component);

    function GameOverview() {
        babelHelpers.classCallCheck(this, GameOverview);
        return babelHelpers.possibleConstructorReturn(this, (GameOverview.__proto__ || Object.getPrototypeOf(GameOverview)).apply(this, arguments));
    }

    babelHelpers.createClass(GameOverview, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: [_GameOverviewStyles.gameOverviewStyles.main, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.container }, this._renderUserSide(), this._renderOpponentSide()));
        }
    }, {
        key: '_renderUserSide',
        value: function _renderUserSide() {
            return _react2.default.createElement(_reactNative.View, { style: { flex: 1 } }, _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.userContainer }, _react2.default.createElement(_reactNative.View, null, _react2.default.createElement(_reactNative.Image, { style: _sharedStyles.standardStyles.standardSizedProfilePic, source: { uri: this.props.userPorfilePicture } })), _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.contentSeperator }), _react2.default.createElement(_reactNative.View, null, _react2.default.createElement(_reactNative.Text, { style: _GameOverviewStyles.gameOverviewStyles.nameText }, this.props.userName || ''), this._renderTrophies(this.props.userRoundsWon, false))));
        }
    }, {
        key: '_renderOpponentSide',
        value: function _renderOpponentSide() {
            return _react2.default.createElement(_reactNative.View, { style: { flex: 1 } }, _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.opponentContainer }, _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.rightContainer }, _react2.default.createElement(_reactNative.Text, { style: _GameOverviewStyles.gameOverviewStyles.nameText }, this.props.opponentName || ''), this._renderTrophies(this.props.opponentRoundsWon, true)), _react2.default.createElement(_reactNative.View, { style: _GameOverviewStyles.gameOverviewStyles.contentSeperator }), _react2.default.createElement(_reactNative.View, null, _react2.default.createElement(_reactNative.Image, { source: { uri: this.props.opponentProfilePicture }, style: _sharedStyles.standardStyles.standardSizedProfilePic }))));
        }
    }, {
        key: '_renderTrophies',
        value: function _renderTrophies(numberOfTrophies) {
            var reversed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            return _react2.default.createElement(_Trophys2.default, { numberOfTrophies: numberOfTrophies, reversed: reversed });
        }
    }]);
    return GameOverview;
}(_react2.default.Component);

exports.default = GameOverview;
}, 786, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/GameOverView/GameOverview.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/GameOverView/GameOverviewStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gameOverviewStyles = undefined;

var _RoundDetailConstants = require(788                           ); // 788 = ./../../RoundDetailConstants

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                                 ); // 753 = ../../../../../../constants/colors

var gameOverviewStyles = exports.gameOverviewStyles = _reactNative.StyleSheet.create({
    main: {
        paddingVertical: 7,
        paddingHorizontal: _RoundDetailConstants.horizontalCellPadding
    },
    container: {
        justifyContent: 'space-between',
        alignItems: 'stretch',
        flexDirection: 'row'
    },
    userContainer: {
        flexDirection: 'row',
        paddingRight: 5
    },
    opponentContainer: {
        flexDirection: 'row',
        justifyContent: 'flex-end',
        flex: 1,
        paddingLeft: 5
    },
    contentSeperator: {
        width: 5
    },
    rightContainer: {
        alignItems: 'flex-end',
        flex: 1
    },
    trophysContainer: {
        flexDirection: 'row'
    },
    trophy: {
        marginRight: 8
    },
    trophyReversed: {
        marginLeft: 8
    },
    nameText: {
        fontSize: 20,
        color: _colors.black,
        fontWeight: 'bold',
        marginBottom: 8
    }
});
}, 787, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/GameOverView/GameOverviewStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailConstants.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var horizontalCellPadding = exports.horizontalCellPadding = 11;
}, 788, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/RoundDetailConstants.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/TurnsDetail/TurnsDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _sharedStyles = require(754                                    ); // 754 = ../../../../../../styles/sharedStyles

var _TurnsDetailStyles = require(790                  ); // 790 = ./TurnsDetailStyles

var _Images = require(757                              ); // 757 = ../../../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _LargeRedButton = require(791                                                         ); // 791 = ../../../../../../components/LargeRedButton/LargeRedButton

var _LargeRedButton2 = babelHelpers.interopRequireDefault(_LargeRedButton);

var _BoldedText = require(793                                                 ); // 793 = ../../../../../../components/BoldedText/BoldedText

var _BoldedText2 = babelHelpers.interopRequireDefault(_BoldedText);

var TurnsDetail = function (_React$Component) {
    babelHelpers.inherits(TurnsDetail, _React$Component);

    function TurnsDetail() {
        babelHelpers.classCallCheck(this, TurnsDetail);
        return babelHelpers.possibleConstructorReturn(this, (TurnsDetail.__proto__ || Object.getPrototypeOf(TurnsDetail)).apply(this, arguments));
    }

    babelHelpers.createClass(TurnsDetail, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _sharedStyles.standardStyles.standardCell }, this._renderOpponent(), _react2.default.createElement(_reactNative.View, { style: _sharedStyles.standardStyles.horizintalSeperatorThin }), this._renderUser());
        }
    }, {
        key: '_renderOpponent',
        value: function _renderOpponent() {
            var opponentScoreText = this.props.hideOpponentText ? undefined : this.props.opponentScore;
            return _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.sharedContainers }, this._renderUserProfileAndTrophy(this.props.opponentProfilePicture, this.props.opponentWonRound), _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.contentContainers }, this._renderTopBar(this.props.opponentFullName, opponentScoreText), this._renderOpponentContent(), this._renderWaitingForOpponent()));
        }
    }, {
        key: '_renderOpponentContent',
        value: function _renderOpponentContent() {
            if (this.props.hideOpponentText) {
                return _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.opponentContentNoText }, _react2.default.createElement(_reactNative.Image, { style: _TurnsDetailStyles.turnsDetailStyle.hideTextImage, resizeMode: 'cover', source: _Images2.default.hiddenTextCover }));
            } else if (this.props.opponentText) {
                return this._renderTextContent(this.props.opponentText);
            }
            return undefined;
        }
    }, {
        key: '_renderWaitingForOpponent',
        value: function _renderWaitingForOpponent() {
            if (this.props.waitingForOpponent) {
                return _react2.default.createElement(_reactNative.Text, { style: _TurnsDetailStyles.turnsDetailStyle.waitingForOpponentText }, this.props.waitingForOpponent);
            }
            return undefined;
        }
    }, {
        key: '_renderUser',
        value: function _renderUser() {
            return _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.sharedContainers }, this._renderUserProfileAndTrophy(this.props.userProfilePicture, this.props.userWonRound), _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.contentContainers }, this._renderTopBar(this.props.userFullName, this.props.userScore), this._renderUserContent()));
        }
    }, {
        key: '_renderUserContent',
        value: function _renderUserContent() {
            if (this.props.userCanPlay) {
                return _react2.default.createElement(_LargeRedButton2.default, { style: _TurnsDetailStyles.turnsDetailStyle.playNowButton, title: 'Play Now', onPress: this.props.onPlayNowSelected, enabled: true });
            } else {
                return this._renderTextContent(this.props.userText);
            }
        }
    }, {
        key: '_renderUserProfileAndTrophy',
        value: function _renderUserProfileAndTrophy(profileURL, showTrophy) {
            return _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.profilePicAndTrophyContainer }, _react2.default.createElement(_reactNative.Image, { style: _sharedStyles.standardStyles.standardSizedProfilePic, source: { uri: profileURL } }), showTrophy && _react2.default.createElement(_reactNative.Image, { style: _TurnsDetailStyles.turnsDetailStyle.trophy, source: _Images2.default.trophy }));
        }
    }, {
        key: '_renderTopBar',
        value: function _renderTopBar(name, score) {
            return _react2.default.createElement(_reactNative.View, { style: _TurnsDetailStyles.turnsDetailStyle.topBarContainer }, _react2.default.createElement(_reactNative.Text, { style: _TurnsDetailStyles.turnsDetailStyle.topBarText }, name), _react2.default.createElement(_reactNative.Text, { style: _TurnsDetailStyles.turnsDetailStyle.topBarText }, score && score.toLocaleString()));
        }
    }, {
        key: '_renderTextContent',
        value: function _renderTextContent(texts) {
            if (texts) {
                return _react2.default.createElement(_BoldedText2.default, { standardTextStyle: _TurnsDetailStyles.turnsDetailStyle.textContentStandard, boldedTextStyle: _TurnsDetailStyles.turnsDetailStyle.textContentBolded, texts: texts, boldedPhrases: this.props.roundRequiredWords });
            }
            return undefined;
        }
    }]);
    return TurnsDetail;
}(_react2.default.Component);

exports.default = TurnsDetail;
}, 789, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/TurnsDetail/TurnsDetail.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/TurnsDetail/TurnsDetailStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.turnsDetailStyle = undefined;

var _RoundDetailConstants = require(788                           ); // 788 = ./../../RoundDetailConstants

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                                 ); // 753 = ../../../../../../constants/colors

var textContentFontSize = 16;
var turnsDetailStyle = exports.turnsDetailStyle = _reactNative.StyleSheet.create({
    sharedContainers: {
        marginVertical: 12,
        marginHorizontal: _RoundDetailConstants.horizontalCellPadding,
        flexDirection: 'row'
    },
    contentContainers: {
        alignItems: 'stretch',
        marginLeft: 9,
        flex: 1
    },
    opponentContentNoText: {
        alignItems: 'stretch',
        marginTop: 7
    },
    topBarContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between'
    },
    topBarText: {
        fontSize: 16,
        fontWeight: 'bold',
        color: _colors.black
    },
    hideTextImage: {
        flex: 1,
        width: undefined
    },
    playNowButton: {
        marginTop: 5
    },
    textContentStandard: {
        fontSize: textContentFontSize,
        color: _colors.black
    },
    textContentBolded: {
        fontSize: textContentFontSize,
        fontWeight: 'bold',
        color: _colors.black
    },
    waitingForOpponentText: {
        fontSize: 16,
        marginTop: 7
    },
    profilePicAndTrophyContainer: {
        alignItems: 'center'
    },
    trophy: {
        marginTop: 12
    }
});
}, 790, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/RoundDetail/components/TurnsDetail/TurnsDetailStyles.js");
__d(/* TalkPresidential/build/components/LargeRedButton/LargeRedButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _LargeRedButtonStyles = require(792                     ); // 792 = ./LargeRedButtonStyles

var LargeRedButton = function (_React$Component) {
    babelHelpers.inherits(LargeRedButton, _React$Component);

    function LargeRedButton() {
        babelHelpers.classCallCheck(this, LargeRedButton);
        return babelHelpers.possibleConstructorReturn(this, (LargeRedButton.__proto__ || Object.getPrototypeOf(LargeRedButton)).apply(this, arguments));
    }

    babelHelpers.createClass(LargeRedButton, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.TouchableOpacity, { disabled: !this.props.enabled, onPress: this.props.onPress, style: [_LargeRedButtonStyles.styles.main, this.props.style] }, _react2.default.createElement(_reactNative.Text, { style: _LargeRedButtonStyles.styles.text }, this.props.title));
        }
    }]);
    return LargeRedButton;
}(_react2.default.Component);

exports.default = LargeRedButton;
}, 791, null, "TalkPresidential/build/components/LargeRedButton/LargeRedButton.js");
__d(/* TalkPresidential/build/components/LargeRedButton/LargeRedButtonStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.styles = undefined;

var _colors = require(753                     ); // 753 = ../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var styles = exports.styles = _reactNative.StyleSheet.create({
    main: {
        height: 38,
        backgroundColor: _colors.secondary,
        borderRadius: 8,
        alignItems: 'center',
        justifyContent: 'center'
    },
    text: {
        fontSize: 18,
        fontWeight: 'bold',
        color: 'white'
    }
});
}, 792, null, "TalkPresidential/build/components/LargeRedButton/LargeRedButtonStyles.js");
__d(/* TalkPresidential/build/components/BoldedText/BoldedText.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var BoldedText = function (_React$Component) {
    babelHelpers.inherits(BoldedText, _React$Component);

    function BoldedText() {
        babelHelpers.classCallCheck(this, BoldedText);
        return babelHelpers.possibleConstructorReturn(this, (BoldedText.__proto__ || Object.getPrototypeOf(BoldedText)).apply(this, arguments));
    }

    babelHelpers.createClass(BoldedText, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(_reactNative.TextInput, { editable: false, multiline: true, style: this.props.style }, this.props.texts.map(function (text, idx) {
                var textLowercase = text.toLowerCase();
                var boldedPhrasesLowercase = _this2.props.boldedPhrases.map(function (word) {
                    return word.toLowerCase();
                });
                var style = boldedPhrasesLowercase.find(function (word) {
                    return word === textLowercase;
                }) === undefined ? _this2.props.standardTextStyle : _this2.props.boldedTextStyle;
                return _react2.default.createElement(_reactNative.Text, { style: style, numberOfLines: 0, key: idx }, text);
            }));
        }
    }]);
    return BoldedText;
}(_react2.default.Component);

exports.default = BoldedText;
}, 793, null, "TalkPresidential/build/components/BoldedText/BoldedText.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ComposeTurn/ComposeTurn.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _Images = require(757                        ); // 757 = ../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _reactRedux = require(342          ); // 342 = react-redux

var _ImageButton = require(795                                             ); // 795 = ../../../../components/ImageButton/ImageButton

var _ImageButton2 = babelHelpers.interopRequireDefault(_ImageButton);

var _composeTurnSelectors = require(509                                         ); // 509 = ../../../../selectors/composeTurnSelectors

var _ComposeTurnStyles = require(796                  ); // 796 = ./ComposeTurnStyles

var _composeTurnActions = require(513                                     ); // 513 = ../../../../actions/composeTurnActions

var _ScoreDetail = require(798                         ); // 798 = ../ScoreDetail/ScoreDetail

var _ScoreDetail2 = babelHelpers.interopRequireDefault(_ScoreDetail);

var ComposeTurn = function (_React$Component) {
    babelHelpers.inherits(ComposeTurn, _React$Component);

    function ComposeTurn(props) {
        babelHelpers.classCallCheck(this, ComposeTurn);

        var _this = babelHelpers.possibleConstructorReturn(this, (ComposeTurn.__proto__ || Object.getPrototypeOf(ComposeTurn)).call(this, props));

        _this.state = {
            canDismissScoreDetail: false,
            showScoreDetail: false
        };
        return _this;
    }

    babelHelpers.createClass(ComposeTurn, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _ComposeTurnStyles.composeTurnStyles.main }, _react2.default.createElement(_reactNative.StatusBar, { barStyle: 'default' }), _react2.default.createElement(_reactNative.KeyboardAvoidingView, { behavior: 'padding', style: _ComposeTurnStyles.composeTurnStyles.contentView }, _react2.default.createElement(_reactNative.View, null, this._renderTopBar(), this._renderText()), this._renderBottomBar()), this._renderScoreDetailModal());
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.props.resetComposeTurnState();
        }
    }, {
        key: '_renderTopBar',
        value: function _renderTopBar() {
            if (!this.props.requiredWords || this.props.requiredWords.length !== 2) {
                return undefined;
            }
            if (!this.props.requiredWordsIncluded || this.props.requiredWordsIncluded.length !== 2) {
                return undefined;
            }
            var words = this.props.requiredWords;
            var included = this.props.requiredWordsIncluded;
            return _react2.default.createElement(_reactNative.View, { style: _ComposeTurnStyles.composeTurnStyles.topBarContainer }, _react2.default.createElement(_reactNative.View, null, _react2.default.createElement(_ImageButton2.default, { image: _Images2.default.X, onPress: this._cancelPressed.bind(this) })), _react2.default.createElement(_reactNative.View, { style: _ComposeTurnStyles.composeTurnStyles.requiredWordsContainer }, this._renderRequiredPhrase(words[0], included[0], true), this._renderRequiredPhrase(words[1], included[1], false)));
        }
    }, {
        key: '_renderRequiredPhrase',
        value: function _renderRequiredPhrase(phrase, included, top) {
            var style = [_ComposeTurnStyles.composeTurnStyles.standardRequiredText];
            if (top) {
                style.push(_ComposeTurnStyles.composeTurnStyles.requiredWordTop);
            } else {
                style.push(_ComposeTurnStyles.composeTurnStyles.requiredWordBottom);
            }
            if (included) {
                style.push(_ComposeTurnStyles.composeTurnStyles.includedText);
            } else {
                style.push(_ComposeTurnStyles.composeTurnStyles.notIncludedText);
            }
            return _react2.default.createElement(_reactNative.Text, { style: style }, phrase);
        }
    }, {
        key: '_renderText',
        value: function _renderText() {
            var _this2 = this;

            return _react2.default.createElement(_reactNative.TextInput, { style: _ComposeTurnStyles.composeTurnStyles.standardText, multiline: true, blurOnSubmit: false, autoFocus: true, onChangeText: this.props.updateComposeText }, this.props.splitupText.map(function (text, idx) {
                var textLowercase = text.toLowerCase();
                var requiredWordsLowercase = _this2.props.requiredWords.map(function (word) {
                    return word.toLowerCase();
                });
                var style = requiredWordsLowercase.find(function (word) {
                    return word === textLowercase;
                }) === undefined ? _ComposeTurnStyles.composeTurnStyles.standardText : _ComposeTurnStyles.composeTurnStyles.boldedText;
                return _react2.default.createElement(_reactNative.Text, { style: style, key: idx }, text);
            }));
        }
    }, {
        key: '_renderBottomBar',
        value: function _renderBottomBar() {
            return _react2.default.createElement(_reactNative.View, { style: _ComposeTurnStyles.composeTurnStyles.bottomBar }, _react2.default.createElement(_reactNative.Text, { style: _ComposeTurnStyles.composeTurnStyles.characterCount }, this.props.charactersRemaining), this._renderSubmitButton());
        }
    }, {
        key: '_renderSubmitButton',
        value: function _renderSubmitButton() {
            var disable = !this.props.submitEnabled;
            var style = disable ? _ComposeTurnStyles.composeTurnStyles.submitButtonDisabled : _ComposeTurnStyles.composeTurnStyles.submitButton;
            return _react2.default.createElement(_reactNative.TouchableOpacity, { disabled: disable, style: style, onPress: this._submitPressed.bind(this) }, _react2.default.createElement(_reactNative.Text, { style: _ComposeTurnStyles.composeTurnStyles.whiteText }, 'Submit'));
        }
    }, {
        key: '_renderScoreDetailModal',
        value: function _renderScoreDetailModal() {
            return _react2.default.createElement(_reactNative.Modal, { animationType: 'slide', transparent: true, visible: this.state.showScoreDetail }, _react2.default.createElement(_ScoreDetail2.default, { onOutsideContentPress: this._scoreDetailPress.bind(this), roundNumber: this.props.roundNumber, onAnimationsFinished: this._allowForDismissal.bind(this) }));
        }
    }, {
        key: '_allowForDismissal',
        value: function _allowForDismissal() {
            this.setState({
                canDismissScoreDetail: true
            });
        }
    }, {
        key: '_scoreDetailPress',
        value: function _scoreDetailPress() {
            var _this3 = this;

            if (this.state.canDismissScoreDetail) {
                this.setState({
                    showScoreDetail: false
                });
                setTimeout(function () {
                    return _this3.props.onShowDetailDismiss();
                }, 1000);
            }
        }
    }, {
        key: '_submitPressed',
        value: function _submitPressed() {
            this.props.submitText();
            this.setState({
                showScoreDetail: true
            });
        }
    }, {
        key: '_cancelPressed',
        value: function _cancelPressed() {
            this.props.cancelPressed();
        }
    }]);
    return ComposeTurn;
}(_react2.default.Component);

function mapDispatchToProps(dispatch) {
    return {
        updateComposeText: function updateComposeText(text) {
            dispatch((0, _composeTurnActions.setText)(text));
        },
        submitText: function submitText() {
            dispatch((0, _composeTurnActions.submitText)());
        },
        resetComposeTurnState: function resetComposeTurnState() {
            dispatch((0, _composeTurnActions.resetComposeTurnState)());
        }
    };
}
function mapStateToProps(state, props) {
    return babelHelpers.extends({}, (0, _composeTurnSelectors.getComposeTurnProps)(state, props));
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ComposeTurn);
}, 794, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ComposeTurn/ComposeTurn.js");
__d(/* TalkPresidential/build/components/ImageButton/ImageButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var ImageButton = function (_React$Component) {
    babelHelpers.inherits(ImageButton, _React$Component);

    function ImageButton() {
        babelHelpers.classCallCheck(this, ImageButton);
        return babelHelpers.possibleConstructorReturn(this, (ImageButton.__proto__ || Object.getPrototypeOf(ImageButton)).apply(this, arguments));
    }

    babelHelpers.createClass(ImageButton, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.TouchableOpacity, { style: this.props.style, onPress: this.props.onPress.bind(this) }, _react2.default.createElement(_reactNative.Image, { source: this.props.image }));
        }
    }]);
    return ImageButton;
}(_react2.default.Component);

exports.default = ImageButton;
}, 795, null, "TalkPresidential/build/components/ImageButton/ImageButton.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ComposeTurn/ComposeTurnStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.composeTurnStyles = undefined;

var _colors = require(753                             ); // 753 = ./../../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var _deviceUtils = require(797                            ); // 797 = ../../../../utils/deviceUtils

var sharedSubmitButtonStyle = {
    paddingHorizontal: 7,
    paddingVertical: 5,
    borderRadius: 10,
    marginLeft: 7.5
};
var requiredWordsShared = {};
var requiredWordsTop = {
    marginBottom: 5
};
var standardText = {
    fontSize: 18
};
var paddingTop = 31;
if ((0, _deviceUtils.isIPhoneX)()) {
    paddingTop += 10;
}
var composeTurnStyles = exports.composeTurnStyles = _reactNative.StyleSheet.create({
    main: {
        backgroundColor: 'white',
        flex: 1
    },
    contentView: {
        paddingTop: paddingTop,
        padding: 11,
        flex: 1,
        justifyContent: 'space-between'
    },
    bottomBar: {
        flexDirection: 'row',
        justifyContent: 'flex-end',
        alignItems: 'center',
        marginBottom: 11
    },
    submitButton: babelHelpers.extends({}, sharedSubmitButtonStyle, { backgroundColor: _colors.main }),
    submitButtonDisabled: babelHelpers.extends({}, sharedSubmitButtonStyle, { backgroundColor: _colors.main20 }),
    standardRequiredText: {
        fontSize: 16,
        fontWeight: '800'
    },
    notIncludedText: {
        color: _colors.secondary
    },
    includedText: {
        color: _colors.standardGreen
    },
    characterCount: {
        fontWeight: '700',
        fontSize: 18
    },
    topBarContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'stretch'
    },
    requiredWordsContainer: {
        alignItems: 'flex-end'
    },
    requiredWordBottom: babelHelpers.extends({}, requiredWordsShared),
    requiredWordTop: babelHelpers.extends({}, requiredWordsShared, requiredWordsTop),
    standardText: standardText,
    boldedText: babelHelpers.extends({}, standardText, { fontWeight: 'bold' }),
    whiteText: {
        fontSize: 14,
        fontWeight: 'bold',
        color: 'white'
    }
});
}, 796, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ComposeTurn/ComposeTurnStyles.js");
__d(/* TalkPresidential/build/utils/deviceUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isIPhoneX = isIPhoneX;

var _reactNative = require(12            ); // 12 = react-native

function isIPhoneX() {
    if (_reactNative.Platform.OS !== 'ios') {
        return false;
    }
    return _reactNative.Dimensions.get('window').height === 812;
}
}, 797, null, "TalkPresidential/build/utils/deviceUtils.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/ScoreDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(342          ); // 342 = react-redux

var _ScoreDetailStyles = require(799                  ); // 799 = ./ScoreDetailStyles

var _PotusBot = require(800                             ); // 800 = ./components/PotusBot/PotusBot

var _PotusBot2 = babelHelpers.interopRequireDefault(_PotusBot);

var _ScoreProgress = require(802                                       ); // 802 = ./components/ScoreProgress/ScoreProgress

var _ScoreProgress2 = babelHelpers.interopRequireDefault(_ScoreProgress);

var _scoreDetailSelectors = require(804                                                            ); // 804 = ../../../../selectors/componentSelectors/scoreDetailSelectors

var textFadeDuration = 1000;

var ScoreDetail = function (_React$Component) {
    babelHelpers.inherits(ScoreDetail, _React$Component);

    function ScoreDetail(props) {
        babelHelpers.classCallCheck(this, ScoreDetail);

        var _this = babelHelpers.possibleConstructorReturn(this, (ScoreDetail.__proto__ || Object.getPrototypeOf(ScoreDetail)).call(this, props));

        _this.state = {
            hideMessageText: false,
            moveUserIcon: false,
            showAllText: false
        };
        return _this;
    }

    babelHelpers.createClass(ScoreDetail, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _ScoreDetailStyles.scoreDetailStyles.main }, _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { style: _ScoreDetailStyles.scoreDetailStyles.button, onPress: this.props.onOutsideContentPress }, _react2.default.createElement(_reactNative.View, { style: _ScoreDetailStyles.scoreDetailStyles.contentContainer }, this._renderContent())));
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (!this.props.userScorePercent && nextProps.userScorePercent) {
                this.setState({
                    hideMessageText: true
                });
            }
        }
    }, {
        key: '_renderContent',
        value: function _renderContent() {
            return _react2.default.createElement(_reactNative.View, { style: _ScoreDetailStyles.scoreDetailStyles.contentView }, _react2.default.createElement(_PotusBot2.default, { style: _ScoreDetailStyles.scoreDetailStyles.potusBot, hideMessageText: this.state.hideMessageText, onHideMessageComplete: this._hideMessageAnimationComplete.bind(this), onShowAllTextComplete: this._showAllTextAnimationComplete.bind(this), showAllText: this.state.showAllText, userWon: this.props.userWon, transistionAnimationLength: 1000, textFadeDuration: textFadeDuration, userScore: this.props.userScoreFormatted }), _react2.default.createElement(_ScoreProgress2.default, { animateUserScore: this.state.moveUserIcon, onUserScoreAnimationComplete: this._onAnimateUserIconComplete.bind(this), userProfilePicture: this.props.userProfilePicture, userPercent: this.props.userScorePercent, opponentProfilePicture: this.props.opponentProfilePicture, opponentPercent: this.props.opponentScorePercent }));
        }
    }, {
        key: '_onAnimateUserIconComplete',
        value: function _onAnimateUserIconComplete() {
            this.setState({
                showAllText: true
            });
        }
    }, {
        key: '_hideMessageAnimationComplete',
        value: function _hideMessageAnimationComplete() {
            this.setState({
                moveUserIcon: true
            });
        }
    }, {
        key: '_showAllTextAnimationComplete',
        value: function _showAllTextAnimationComplete() {
            this.props.onAnimationsFinished();
        }
    }]);
    return ScoreDetail;
}(_react2.default.Component);

function mapStateToProps(state, ownProps) {
    return babelHelpers.extends({}, ownProps, (0, _scoreDetailSelectors.getScoreDetailsProps)(state, ownProps));
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, undefined)(ScoreDetail);
}, 798, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/ScoreDetail.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/ScoreDetailStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.scoreDetailStyles = undefined;

var _colors = require(753                             ); // 753 = ./../../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var scoreDetailStyles = exports.scoreDetailStyles = _reactNative.StyleSheet.create({
    main: {
        flex: 1,
        backgroundColor: _colors.darkBackground
    },
    button: {
        flex: 1
    },
    contentContainer: {
        flex: 1,
        paddingHorizontal: 12,
        paddingTop: 107
    },
    contentView: {
        backgroundColor: 'white',
        paddingVertical: 16,
        paddingHorizontal: 12
    },
    potusBot: {
        marginBottom: 16
    }
});
}, 799, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/ScoreDetailStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/PotusBot/PotusBot.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _PotusBotStyles = require(801               ); // 801 = ./PotusBotStyles

var _Images = require(757                              ); // 757 = ../../../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _colors = require(753                                 ); // 753 = ../../../../../../constants/colors

var PotusBot = function (_React$Component) {
    babelHelpers.inherits(PotusBot, _React$Component);

    function PotusBot(props) {
        babelHelpers.classCallCheck(this, PotusBot);

        var _this = babelHelpers.possibleConstructorReturn(this, (PotusBot.__proto__ || Object.getPrototypeOf(PotusBot)).call(this, props));

        _this.state = {
            hideScore: true,
            messageTextOpacity: new _reactNative.Animated.Value(1),
            scoreTextOpacity: new _reactNative.Animated.Value(0)
        };
        return _this;
    }

    babelHelpers.createClass(PotusBot, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: [_PotusBotStyles.potusBotStyles.main, this.props.style] }, _react2.default.createElement(_reactNative.Image, { style: _PotusBotStyles.potusBotStyles.image, source: _Images2.default.PotusBot }), this._renderText());
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (!this.props.showAllText && nextProps.showAllText) {
                this._showScoreAndMessageText();
            } else if (!this.props.hideMessageText && nextProps.hideMessageText) {
                this._hideMessageText();
            }
        }
    }, {
        key: '_renderText',
        value: function _renderText() {
            var roundStatus = this._roundStatusText();
            var roundStatusColor = this._roundStatusColor();
            var messageTextStyle = _reactNative.StyleSheet.flatten([_PotusBotStyles.potusBotStyles.roundStatusStyle, { color: roundStatusColor, opacity: this.state.messageTextOpacity }]);
            var scoreTextStyle = _reactNative.StyleSheet.flatten([_PotusBotStyles.potusBotStyles.scoreText, { opacity: this.state.scoreTextOpacity }]);
            return _react2.default.createElement(_reactNative.View, { style: _PotusBotStyles.potusBotStyles.textContainer }, _react2.default.createElement(_reactNative.Text, { style: _PotusBotStyles.potusBotStyles.potusTitleText }, "POTUS BOT"), _react2.default.createElement(_reactNative.Animated.Text, { style: messageTextStyle }, roundStatus), _react2.default.createElement(_reactNative.Animated.Text, { style: scoreTextStyle }, this.props.userScore || ''));
        }
    }, {
        key: '_roundStatusText',
        value: function _roundStatusText() {
            if (!this.props.userScore || this.state.hideScore) {
                return 'Deciding your score...';
            } else if (this.props.userWon === undefined) {
                return 'Waiting for opponent...';
            } else if (this.props.userWon) {
                return 'You won the round!';
            }
            return 'You lost the round';
        }
    }, {
        key: '_roundStatusColor',
        value: function _roundStatusColor() {
            if (!this.props.userScore || this.state.hideScore) {
                return _colors.main;
            } else if (this.props.userWon === undefined) {
                return _colors.main;
            } else if (this.props.userWon) {
                return _colors.standardGreen;
            }
            return _colors.secondary;
        }
    }, {
        key: '_hideMessageText',
        value: function _hideMessageText() {
            _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.messageTextOpacity, {
                toValue: 0.0,
                duration: 500,
                delay: 2000
            })]).start(this.props.onHideMessageComplete.bind(this));
        }
    }, {
        key: '_showScoreAndMessageText',
        value: function _showScoreAndMessageText() {
            this.setState({
                hideScore: false
            });
            var animationDuration = 1000;
            _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.messageTextOpacity, {
                toValue: 1.0,
                duration: animationDuration,
                delay: 1000
            }), _reactNative.Animated.timing(this.state.scoreTextOpacity, {
                toValue: 1.0,
                duration: animationDuration,
                delay: 1000
            })]).start(this.props.onShowAllTextComplete);
        }
    }]);
    return PotusBot;
}(_react2.default.Component);

exports.default = PotusBot;
}, 800, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/PotusBot/PotusBot.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/PotusBot/PotusBotStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.potusBotStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                                 ); // 753 = ../../../../../../constants/colors

var potusBotStyles = exports.potusBotStyles = _reactNative.StyleSheet.create({
    main: {
        flexDirection: 'row',
        alignItems: 'stretch'
    },
    image: {
        marginRight: 11
    },
    textContainer: {
        justifyContent: 'flex-start'
    },
    potusTitleText: {
        color: _colors.main,
        fontStyle: 'italic',
        fontSize: 18,
        fontWeight: '900'
    },
    roundStatusStyle: {
        fontSize: 18,
        marginBottom: 11
    },
    scoreText: {
        color: _colors.main,
        fontSize: 20,
        fontWeight: 'bold'
    }
});
}, 801, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/PotusBot/PotusBotStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/ScoreProgress/ScoreProgress.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _Images = require(757                              ); // 757 = ../../../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _ScoreProgressStyles = require(803                    ); // 803 = ./ScoreProgressStyles

var _sharedStyles = require(754                                    ); // 754 = ../../../../../../styles/sharedStyles

var ScoreProgress = function (_React$Component) {
    babelHelpers.inherits(ScoreProgress, _React$Component);

    function ScoreProgress(props) {
        babelHelpers.classCallCheck(this, ScoreProgress);

        var _this = babelHelpers.possibleConstructorReturn(this, (ScoreProgress.__proto__ || Object.getPrototypeOf(ScoreProgress)).call(this, props));

        _this.state = {
            progressBarHeight: 0,
            progressBarWidth: 0,
            maxUserIconIndicatorHeight: 0,
            userAnimationLeft: new _reactNative.Animated.Value(0)
        };
        return _this;
    }

    babelHelpers.createClass(ScoreProgress, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (!this.props.animateUserScore && nextProps.animateUserScore) {
                this._animateUserScore();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, null, this._renderUserIcons(), _react2.default.createElement(_reactNative.Image, { onLayout: this._progressBarLayout.bind(this), style: _ScoreProgressStyles.scoreProgressStyles.progressBar, source: _Images2.default.trumpProgressBar, resizeMode: 'cover' }));
        }
    }, {
        key: '_animateUserScore',
        value: function _animateUserScore() {
            _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.userAnimationLeft, {
                toValue: this.props.userPercent * this.state.progressBarWidth,
                duration: 1000,
                delay: 1000
            })]).start(this.props.onUserScoreAnimationComplete);
        }
    }, {
        key: '_progressBarLayout',
        value: function _progressBarLayout(_ref) {
            var layout = _ref.nativeEvent.layout;

            this.setState({
                progressBarHeight: layout.height,
                progressBarWidth: layout.width
            });
        }
    }, {
        key: '_renderUserIcons',
        value: function _renderUserIcons() {
            var fullHeight = this.state.progressBarHeight + _ScoreProgressStyles.triangleTopMargin + this.state.maxUserIconIndicatorHeight + _ScoreProgressStyles.scoreProgressSpacing;
            return _react2.default.createElement(_reactNative.View, { style: [_ScoreProgressStyles.scoreProgressStyles.userIconsContainer, { height: fullHeight }] }, this._renderUserIcon(true, this.props.userProfilePicture, this.props.userPercent, this.state.userAnimationLeft), this._renderUserIcon(false, this.props.opponentProfilePicture, this.props.opponentPercent));
        }
    }, {
        key: '_renderUserIcon',
        value: function _renderUserIcon(isThisUser, img, percent, animationValue) {
            if (!img || !percent) {
                return undefined;
            }
            var opacity = isThisUser ? 1.0 : 0.66;
            var left = 0;
            if (isThisUser) {
                left = animationValue;
            } else {
                left = this.state.progressBarWidth * percent;
            }
            console.log('left: ' + left);
            return _react2.default.createElement(_reactNative.Animated.View, { onLayout: this._onUserIconIndicatorLayout.bind(this), style: [_ScoreProgressStyles.scoreProgressStyles.userScoreIndicator, { opacity: opacity, left: left }] }, _react2.default.createElement(_reactNative.Image, { style: _sharedStyles.standardStyles.standardSizedProfilePic, source: { uri: img } }), _react2.default.createElement(_reactNative.Image, { style: _ScoreProgressStyles.scoreProgressStyles.userScoreIndicatorTriangle, source: _Images2.default.userTriangle }));
        }
    }, {
        key: '_onUserIconIndicatorLayout',
        value: function _onUserIconIndicatorLayout(_ref2) {
            var layout = _ref2.nativeEvent.layout;

            var width = layout.width;
            if (width > this.state.maxUserIconIndicatorHeight) {
                this.setState({
                    maxUserIconIndicatorHeight: width
                });
            }
        }
    }]);
    return ScoreProgress;
}(_react2.default.Component);

exports.default = ScoreProgress;
}, 802, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/ScoreProgress/ScoreProgress.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/ScoreProgress/ScoreProgressStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.scoreProgressStyles = exports.scoreProgressSpacing = exports.triangleTopMargin = undefined;

var _reactNative = require(12            ); // 12 = react-native

var triangleTopMargin = exports.triangleTopMargin = 5.5;
var scoreProgressSpacing = exports.scoreProgressSpacing = 2.75;
var scoreProgressStyles = exports.scoreProgressStyles = _reactNative.StyleSheet.create({
    progressBar: {
        width: undefined,
        marginHorizontal: 17
    },
    userIconsContainer: {
        flexDirection: 'row'
    },
    userScoreIndicator: {
        alignItems: 'center',
        position: 'absolute',
        justifyContent: 'flex-end'
    },
    userScoreIndicatorTriangle: {
        marginTop: triangleTopMargin
    }
});
}, 803, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/ScoreDetail/components/ScoreProgress/ScoreProgressStyles.js");
__d(/* TalkPresidential/build/selectors/componentSelectors/scoreDetailSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getScoreDetailsProps = exports.getUserWon = exports.getOpponentScorePercent = exports.getUserScoreFormatted = exports.getUserScorePercent = undefined;

var _dataSelectors = require(477                 ); // 477 = ./../dataSelectors

var _roundSelectors = require(510                  ); // 510 = ./../roundSelectors

var _appConstants = require(479                             ); // 479 = ./../../constants/appConstants

var _composeTurnSelectors = require(509                        ); // 509 = ./../composeTurnSelectors

var _reselect = require(476       ); // 476 = reselect

var _gameSelectors = require(511               ); // 511 = ../gameSelectors

function getScorePercent(score) {
    if (!score) {
        return undefined;
    }
    if (score >= _appConstants.maxScore) {
        return 1;
    } else {
        return score / _appConstants.maxScore;
    }
}
var getUserScorePercent = exports.getUserScorePercent = (0, _reselect.createSelector)(_composeTurnSelectors.getComposeTurnScore, function (score) {
    return getScorePercent(score);
});
var getUserScoreFormatted = exports.getUserScoreFormatted = (0, _reselect.createSelector)(_composeTurnSelectors.getComposeTurnScore, function (score) {
    return score && score.toLocaleString();
});
var getOpponentScorePercent = exports.getOpponentScorePercent = (0, _reselect.createSelector)(_roundSelectors.getOpponentScoreForRound, function (score) {
    return getScorePercent(score);
});
var getUserWon = exports.getUserWon = (0, _reselect.createSelector)(_roundSelectors.getOpponentScoreForRound, _composeTurnSelectors.getComposeTurnScore, function (opponentScore, composeTurnScore) {
    return opponentScore && composeTurnScore && composeTurnScore > opponentScore;
});
var getScoreDetailsProps = exports.getScoreDetailsProps = (0, _reselect.createStructuredSelector)({
    userScorePercent: getUserScorePercent,
    opponentScorePercent: getOpponentScorePercent,
    opponentProfilePicture: _gameSelectors.getGameOpponentProfilePicture,
    userWon: getUserWon,
    userScoreFormatted: getUserScoreFormatted,
    userProfilePicture: _dataSelectors.getUserProfilePicture
});
}, 804, null, "TalkPresidential/build/selectors/componentSelectors/scoreDetailSelectors.js");
__d(/* TalkPresidential/build/utils/shared/Alerts.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.errorAlert = errorAlert;
exports.alert = alert;
exports.alertWithActionAndCancel = alertWithActionAndCancel;

var _reactNative = require(12            ); // 12 = react-native

function errorAlert(message, onRetry) {
    var buttons = [];
    if (onRetry) {
        var retry = {
            title: 'Retry',
            onPress: onRetry
        };
        buttons.push(retry);
    }
    _reactNative.Alert.alert('Error', message, buttons);
}
function alert(message, title) {
    _reactNative.Alert.alert(message, title);
}
function alertWithActionAndCancel(title, message, actionTitle, action) {
    var buttons = [];
    buttons.push({ text: 'Cancel' });
    buttons.push({
        text: actionTitle,
        onPress: action
    });
    _reactNative.Alert.alert(title, message, buttons);
}
}, 805, null, "TalkPresidential/build/utils/shared/Alerts.js");
__d(/* TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCurrentGameDetailData = undefined;

var _gameSelectors = require(511                                 ); // 511 = ./../../../selectors/gameSelectors

var _reselect = require(476       ); // 476 = reselect

var getCurrentGameDetailData = exports.getCurrentGameDetailData = (0, _reselect.createSelector)(_gameSelectors.getGameNumberOfRounds, function (numberOfRounds) {
    if (!numberOfRounds || numberOfRounds === 0) {
        return [{
            key: 1,
            round: 1
        }];
    }
    var data = [];
    for (var i = 1; i <= numberOfRounds; i++) {
        data.push({
            key: i,
            round: i
        });
    }
    return data;
});
}, 806, null, "TalkPresidential/build/screens/currentGame/CurrentGameDetail/CurrentGameSelectors.js");
__d(/* TalkPresidential/build/screens/tabs/friends/navigation/Friends.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _FriendsNavigator = require(808                 ); // 808 = ./FriendsNavigator

var _FriendsNavigator2 = babelHelpers.interopRequireDefault(_FriendsNavigator);

var _Images = require(757                        ); // 757 = ../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var Friends = function (_React$Component) {
    babelHelpers.inherits(Friends, _React$Component);

    function Friends() {
        babelHelpers.classCallCheck(this, Friends);
        return babelHelpers.possibleConstructorReturn(this, (Friends.__proto__ || Object.getPrototypeOf(Friends)).apply(this, arguments));
    }

    babelHelpers.createClass(Friends, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_FriendsNavigator2.default, null);
        }
    }]);
    return Friends;
}(_react2.default.Component);

exports.default = Friends;

Friends.navigationOptions = {
    tabBarIcon: function tabBarIcon(_ref) {
        var tintColor = _ref.tintColor;

        return _react2.default.createElement(_reactNative.Image, { source: _Images2.default.friendsTab, style: { tintColor: tintColor } });
    }
};
}, 807, null, "TalkPresidential/build/screens/tabs/friends/navigation/Friends.js");
__d(/* TalkPresidential/build/screens/tabs/friends/navigation/FriendsNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _FriendsScreen = require(809                             ); // 809 = ../friendsScreen/FriendsScreen

var _FriendsScreen2 = babelHelpers.interopRequireDefault(_FriendsScreen);

var _reactNavigation = require(684               ); // 684 = react-navigation

var _standardNavigationOptions = require(776                                            ); // 776 = ../../../navigation/standardNavigationOptions

var _navigation = require(824                              ); // 824 = ../../../currentGame/navigation

var routeConfig = babelHelpers.extends({ FriendsScreen: {
        screen: _FriendsScreen2.default
    } }, _navigation.currentGameNav);
var navigatorConfig = {
    initialRouteName: 'FriendsScreen',
    navigationOptions: _standardNavigationOptions.standardNavigationOptions
};
exports.default = (0, _reactNavigation.StackNavigator)(routeConfig, navigatorConfig);
}, 808, null, "TalkPresidential/build/screens/tabs/friends/navigation/FriendsNavigator.js");
__d(/* TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendsScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require(342          ); // 342 = react-redux

var _reactNative = require(12            ); // 12 = react-native

var _FriendsScreenStyles = require(810                    ); // 810 = ./FriendsScreenStyles

var _FriendsScreenStyles2 = babelHelpers.interopRequireDefault(_FriendsScreenStyles);

var _NewGame = require(811                                     ); // 811 = ../../../../components/NewGame/NewGame

var _NewGame2 = babelHelpers.interopRequireDefault(_NewGame);

var _friendsSelectors = require(483                                     ); // 483 = ../../../../selectors/friendsSelectors

var _FriendCell = require(815                      ); // 815 = ./FriendCell/FriendCell

var _FriendCell2 = babelHelpers.interopRequireDefault(_FriendCell);

var _authSelectors = require(475                                  ); // 475 = ../../../../selectors/authSelectors

var _EnterOpponentUsername = require(817                                                          ); // 817 = ../../../shared/EnterOpponentUsername/EnterOpponentUsername

var _EnterOpponentUsername2 = babelHelpers.interopRequireDefault(_EnterOpponentUsername);

var _Alerts = require(805                              ); // 805 = ../../../../utils/shared/Alerts

var _currentGameActions = require(507                                     ); // 507 = ../../../../actions/currentGameActions

var FriendsScreen = function (_React$Component) {
    babelHelpers.inherits(FriendsScreen, _React$Component);

    function FriendsScreen(props) {
        babelHelpers.classCallCheck(this, FriendsScreen);

        var _this = babelHelpers.possibleConstructorReturn(this, (FriendsScreen.__proto__ || Object.getPrototypeOf(FriendsScreen)).call(this, props));

        _this.state = {
            showEnterUsername: false
        };
        return _this;
    }

    babelHelpers.createClass(FriendsScreen, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _FriendsScreenStyles2.default.mainContainer }, _react2.default.createElement(_reactNative.SectionList, { ItemSeparatorComponent: this._renderFriendsSeperator.bind(this), showsVerticalScrollIndicator: false, renderSectionHeader: function renderSectionHeader(_section) {
                    return _react2.default.createElement(_reactNative.View, { style: _FriendsScreenStyles2.default.sectionSeperator });
                }, style: _FriendsScreenStyles2.default.sectionList, sections: [this._firstSectionInfo(), this._friendsSectionData()] }), _react2.default.createElement(_EnterOpponentUsername2.default, { onUserDismiss: this._userWantsToDismissUserNameEntry.bind(this), show: this.state.showEnterUsername, onUsernameSelected: this._choseOpponentUsername.bind(this) }));
        }
    }, {
        key: '_firstSectionInfo',
        value: function _firstSectionInfo() {
            return {
                data: [{
                    showFriends: false,
                    onUsernamePressed: this._usernamePressed.bind(this),
                    onRandomPressed: this._randomOpponentPressed.bind(this),
                    key: 'new_game'
                }],
                renderItem: function renderItem(_ref) {
                    var item = _ref.item;

                    return _react2.default.createElement(_NewGame2.default, { showFriends: item.showFriends, onUsernamePressed: item.onUsernamePressed, onRandomPressed: item.onRandomPressed });
                }
            };
        }
    }, {
        key: '_renderFriendsSeperator',
        value: function _renderFriendsSeperator() {
            return _react2.default.createElement(_reactNative.View, { style: _FriendsScreenStyles2.default.friendSectionItemSeperator });
        }
    }, {
        key: '_friendsSectionData',
        value: function _friendsSectionData() {
            var _this2 = this;

            return {
                data: this.props.friendsSectionData,
                renderItem: function renderItem(_ref2) {
                    var item = _ref2.item;

                    return _react2.default.createElement(_FriendCell2.default, { name: item.name, imageUrl: item.imageUrl, id: item.key, onPress: _this2._friendSelected.bind(_this2) });
                }
            };
        }
    }, {
        key: '_usernamePressed',
        value: function _usernamePressed() {
            this.setState({
                showEnterUsername: true
            });
        }
    }, {
        key: '_userWantsToDismissUserNameEntry',
        value: function _userWantsToDismissUserNameEntry() {
            this.setState({
                showEnterUsername: false
            });
        }
    }, {
        key: '_randomOpponentPressed',
        value: function _randomOpponentPressed() {
            this.props.startRandomGame();
        }
    }, {
        key: '_friendSelected',
        value: function _friendSelected(id) {
            var _this3 = this;

            var chosenFriend = this.props.friendsSectionData.find(function (friend) {
                return friend.key === id;
            });
            var message = 'Start a new game with ' + chosenFriend.name + '?';
            var title = 'New Game';
            var actionTitle = 'Continue';
            (0, _Alerts.alertWithActionAndCancel)(title, message, actionTitle, function () {
                _this3.props.startGameWithFacebookID(id);
            });
        }
    }, {
        key: '_choseOpponentUsername',
        value: function _choseOpponentUsername(username) {
            this.setState({
                showEnterUsername: false
            });
            this.props.startGameWithUserName(username);
        }
    }]);
    return FriendsScreen;
}(_react2.default.Component);

function mapDispatchToProps(dispatch, props) {
    return {
        startGameWithFacebookID: function startGameWithFacebookID(facebookID) {
            dispatch((0, _currentGameActions.startGameWithFriend)(facebookID));
            props.navigation.navigate('CurrentGameDetail');
        },
        startGameWithUserName: function startGameWithUserName(username) {
            dispatch((0, _currentGameActions.startGameWithUsername)(username));
            props.navigation.navigate('CurrentGameDetail');
        },
        startRandomGame: function startRandomGame() {
            dispatch((0, _currentGameActions.startRandomGame)());
            props.navigation.navigate('CurrentGameDetail');
        }
    };
}
function mapStateToProps(state) {
    var friendsSectionData = (0, _friendsSelectors.getFriendsSectionData)(state);
    var isAuthenticated = (0, _authSelectors.getBearerToken)(state) !== undefined;
    return {
        friendsSectionData: friendsSectionData,
        isAuthenticated: isAuthenticated
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FriendsScreen);
}, 809, null, "TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendsScreen.js");
__d(/* TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendsScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                           ); // 753 = ../../../../constants/colors

var friendsScreenStyles = _reactNative.StyleSheet.create({
    mainContainer: {
        backgroundColor: _colors.lightGreyColor,
        flex: 1,
        paddingHorizontal: 12,
        alignItems: 'stretch'
    },
    sectionList: {},
    sectionSeperator: {
        height: 16
    },
    friendSectionItemSeperator: {
        height: 5
    }
});
exports.default = friendsScreenStyles;
}, 810, null, "TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendsScreenStyles.js");
__d(/* TalkPresidential/build/components/NewGame/NewGame.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _NewGameStyles = require(812              ); // 812 = ./NewGameStyles

var _sharedStyles = require(754                        ); // 754 = ../../styles/sharedStyles

var _NewGameButton = require(813                            ); // 813 = ./NewGameButton/NewGameButton

var _NewGameButton2 = babelHelpers.interopRequireDefault(_NewGameButton);

var _Images = require(757                  ); // 757 = ../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var NewGame = function (_React$Component) {
    babelHelpers.inherits(NewGame, _React$Component);

    function NewGame() {
        babelHelpers.classCallCheck(this, NewGame);
        return babelHelpers.possibleConstructorReturn(this, (NewGame.__proto__ || Object.getPrototypeOf(NewGame)).apply(this, arguments));
    }

    babelHelpers.createClass(NewGame, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: [_NewGameStyles.newGameStyles.mainContainer, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.Text, { style: _NewGameStyles.newGameStyles.newGameText }, "New Game"), _react2.default.createElement(_reactNative.View, { style: _NewGameStyles.newGameStyles.buttonsContainer }, this._renderFBButtonIfNeeded(), this._renderFBSeperator(), this._renderUsernameButton(), _react2.default.createElement(_reactNative.View, { style: _sharedStyles.standardStyles.thinItemSeperator }), this._renderRandomButton()));
        }
    }, {
        key: '_renderFBButtonIfNeeded',
        value: function _renderFBButtonIfNeeded() {
            if (this.props.showFriends) {
                return _react2.default.createElement(_NewGameButton2.default, { image: _Images2.default.facebookIcon26, onPress: this.props.onFriendsPressed, title: 'Friend' });
            }
            return undefined;
        }
    }, {
        key: '_renderFBSeperator',
        value: function _renderFBSeperator() {
            if (this.props.showFriends) {
                return _react2.default.createElement(_reactNative.View, { style: _sharedStyles.standardStyles.thinItemSeperator });
            }
            return undefined;
        }
    }, {
        key: '_renderUsernameButton',
        value: function _renderUsernameButton() {
            return _react2.default.createElement(_NewGameButton2.default, { image: _Images2.default.trumpBlueIcon17, onPress: this.props.onUsernamePressed, title: 'Username' });
        }
    }, {
        key: '_renderRandomButton',
        value: function _renderRandomButton() {
            return _react2.default.createElement(_NewGameButton2.default, { image: _Images2.default.questionMark, onPress: this.props.onRandomPressed, title: 'Random' });
        }
    }]);
    return NewGame;
}(_react2.default.Component);

exports.default = NewGame;
}, 811, null, "TalkPresidential/build/components/NewGame/NewGame.js");
__d(/* TalkPresidential/build/components/NewGame/NewGameStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.newGameStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                     ); // 753 = ../../constants/colors

var newGameStyles = exports.newGameStyles = _reactNative.StyleSheet.create({
    mainContainer: {
        height: 100,
        paddingVertical: 9,
        alignItems: 'stretch'
    },
    newGameText: {
        fontSize: 20,
        fontWeight: 'bold',
        color: _colors.black,
        textAlign: 'center',
        marginBottom: 10
    },
    buttonsContainer: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'stretch'
    }
});
}, 812, null, "TalkPresidential/build/components/NewGame/NewGameStyles.js");
__d(/* TalkPresidential/build/components/NewGame/NewGameButton/NewGameButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _NewGameButtonStyles = require(814                    ); // 814 = ./NewGameButtonStyles

var NewGameButton = function (_React$Component) {
    babelHelpers.inherits(NewGameButton, _React$Component);

    function NewGameButton() {
        babelHelpers.classCallCheck(this, NewGameButton);
        return babelHelpers.possibleConstructorReturn(this, (NewGameButton.__proto__ || Object.getPrototypeOf(NewGameButton)).apply(this, arguments));
    }

    babelHelpers.createClass(NewGameButton, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.TouchableOpacity, { onPress: this.props.onPress, style: _NewGameButtonStyles.styles.main }, _react2.default.createElement(_reactNative.Image, { source: this.props.image }), _react2.default.createElement(_reactNative.Text, { style: _NewGameButtonStyles.styles.text }, this.props.title));
        }
    }]);
    return NewGameButton;
}(_react2.default.Component);

exports.default = NewGameButton;
}, 813, null, "TalkPresidential/build/components/NewGame/NewGameButton/NewGameButton.js");
__d(/* TalkPresidential/build/components/NewGame/NewGameButton/NewGameButtonStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.styles = undefined;

var _colors = require(753                          ); // 753 = ./../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var styles = exports.styles = _reactNative.StyleSheet.create({
    main: {
        justifyContent: 'space-between',
        alignItems: 'center',
        flex: 1
    },
    text: {
        fontWeight: '600',
        color: _colors.black,
        fontSize: 14
    }
});
}, 814, null, "TalkPresidential/build/components/NewGame/NewGameButton/NewGameButtonStyles.js");
__d(/* TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendCell/FriendCell.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _FriendCellStyles = require(816                 ); // 816 = ./FriendCellStyles

var _sharedStyles = require(754                                 ); // 754 = ../../../../../styles/sharedStyles

var FriendCell = function (_React$Component) {
    babelHelpers.inherits(FriendCell, _React$Component);

    function FriendCell() {
        babelHelpers.classCallCheck(this, FriendCell);
        return babelHelpers.possibleConstructorReturn(this, (FriendCell.__proto__ || Object.getPrototypeOf(FriendCell)).apply(this, arguments));
    }

    babelHelpers.createClass(FriendCell, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { onPress: this._cellPressed.bind(this) }, _react2.default.createElement(_reactNative.View, { style: [_FriendCellStyles.friendCellStyles.main, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.Image, { style: _FriendCellStyles.friendCellStyles.image, source: { uri: this.props.imageUrl } }), _react2.default.createElement(_reactNative.Text, { style: _FriendCellStyles.friendCellStyles.text }, this.props.name)));
        }
    }, {
        key: '_cellPressed',
        value: function _cellPressed() {
            this.props.onPress(this.props.id);
        }
    }]);
    return FriendCell;
}(_react2.default.Component);

exports.default = FriendCell;
}, 815, null, "TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendCell/FriendCell.js");
__d(/* TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendCell/FriendCellStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.friendCellStyles = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                              ); // 753 = ../../../../../constants/colors

var friendCellStyles = exports.friendCellStyles = _reactNative.StyleSheet.create({
    main: {
        flexDirection: 'row',
        padding: 9,
        height: 56,
        alignItems: 'center'
    },
    text: {
        fontSize: 18,
        color: _colors.black,
        marginLeft: 9
    },
    image: {
        width: 38,
        height: 38,
        borderRadius: 19
    }
});
}, 816, null, "TalkPresidential/build/screens/tabs/friends/friendsScreen/FriendCell/FriendCellStyles.js");
__d(/* TalkPresidential/build/screens/shared/EnterOpponentUsername/EnterOpponentUsername.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _Images = require(757                       ); // 757 = ./../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _EnterOpponentUsernameStyles = require(818                            ); // 818 = ./EnterOpponentUsernameStyles

var _sharedStyles = require(754                           ); // 754 = ../../../styles/sharedStyles

var _EnterUserNameField = require(819                                                        ); // 819 = ../../../components/EnterUserNameField/EnterUserNameField

var _EnterUserNameField2 = babelHelpers.interopRequireDefault(_EnterUserNameField);

var _LargeRedButton = require(791                                                ); // 791 = ../../../components/LargeRedButton/LargeRedButton

var _LargeRedButton2 = babelHelpers.interopRequireDefault(_LargeRedButton);

var EnterOpponentUsername = function (_React$Component) {
    babelHelpers.inherits(EnterOpponentUsername, _React$Component);

    function EnterOpponentUsername(props) {
        babelHelpers.classCallCheck(this, EnterOpponentUsername);

        var _this = babelHelpers.possibleConstructorReturn(this, (EnterOpponentUsername.__proto__ || Object.getPrototypeOf(EnterOpponentUsername)).call(this, props));

        _this.state = {
            show: false
        };
        return _this;
    }

    babelHelpers.createClass(EnterOpponentUsername, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            if (props.show && !this.props.show) {
                this._showContent();
            } else if (!props.show && this.props.show) {
                this._hideContent();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var pointerEvents = this.props.show ? 'auto' : 'none';
            if (this.state.show) {
                return _react2.default.createElement(_reactNative.View, { style: [_EnterOpponentUsernameStyles.enterOpponentUsernameStyles.main], pointerEvents: pointerEvents }, _react2.default.createElement(_reactNative.TouchableWithoutFeedback, { style: _EnterOpponentUsernameStyles.enterOpponentUsernameStyles.animatedBackground, onPress: this.props.onUserDismiss }, _react2.default.createElement(_reactNative.View, { style: _EnterOpponentUsernameStyles.enterOpponentUsernameStyles.transparentBackground }, _react2.default.createElement(_reactNative.KeyboardAvoidingView, { style: _EnterOpponentUsernameStyles.enterOpponentUsernameStyles.keyboardAvoidingView }, this._renderContent()))));
            }
            return _react2.default.createElement(_reactNative.View, null);
        }
    }, {
        key: '_hideContent',
        value: function _hideContent() {
            _reactNative.LayoutAnimation.easeInEaseOut();
            this.setState({
                show: false
            });
        }
    }, {
        key: '_showContent',
        value: function _showContent() {
            _reactNative.LayoutAnimation.easeInEaseOut();
            this.setState({
                show: true
            });
        }
    }, {
        key: '_renderContent',
        value: function _renderContent() {
            if (this.state.show) {
                return _react2.default.createElement(_reactNative.View, { style: [_EnterOpponentUsernameStyles.enterOpponentUsernameStyles.contentContainerView, _sharedStyles.standardStyles.standardCell] }, _react2.default.createElement(_reactNative.Image, { style: _EnterOpponentUsernameStyles.enterOpponentUsernameStyles.trumpIcon, source: _Images2.default.trumpBlueIcon64 }), _react2.default.createElement(_EnterUserNameField2.default, { onUserNameChanged: this._usernameChanged.bind(this), invalidUsernameEntered: this._invalidUserNameEntered.bind(this), placeholder: 'Enter Username' }), _react2.default.createElement(_LargeRedButton2.default, { title: 'Challenge', onPress: this._challengeButtonPressed.bind(this), enabled: this.state.usernameText !== undefined }));
            }
            return undefined;
        }
    }, {
        key: '_challengeButtonPressed',
        value: function _challengeButtonPressed() {
            this.props.onUsernameSelected(this.state.usernameText);
        }
    }, {
        key: '_usernameChanged',
        value: function _usernameChanged(username) {
            this.setState({
                usernameText: username
            });
        }
    }, {
        key: '_invalidUserNameEntered',
        value: function _invalidUserNameEntered() {
            this.setState({
                usernameText: undefined
            });
        }
    }]);
    return EnterOpponentUsername;
}(_react2.default.Component);

exports.default = EnterOpponentUsername;
}, 817, null, "TalkPresidential/build/screens/shared/EnterOpponentUsername/EnterOpponentUsername.js");
__d(/* TalkPresidential/build/screens/shared/EnterOpponentUsername/EnterOpponentUsernameStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.enterOpponentUsernameStyles = undefined;

var _colors = require(753                          ); // 753 = ./../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var enterOpponentUsernameStyles = exports.enterOpponentUsernameStyles = _reactNative.StyleSheet.create({
    main: {
        position: 'absolute',
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
    },
    animatedBackground: {
        marginTop: 0,
        marginBottom: 0,
        marginRight: 0,
        marginLeft: 0
    },
    transparentBackground: {
        backgroundColor: _colors.darkBackground,
        justifyContent: 'center',
        flex: 1
    },
    keyboardAvoidingView: {
        flex: 1,
        paddingVertical: 13,
        paddingHorizontal: 14
    },
    contentContainerView: {
        paddingHorizontal: 35,
        paddingVertical: 23,
        height: 283,
        alignItems: 'stretch',
        justifyContent: 'space-between'
    },
    trumpIcon: {
        alignSelf: 'center'
    }
});
}, 818, null, "TalkPresidential/build/screens/shared/EnterOpponentUsername/EnterOpponentUsernameStyles.js");
__d(/* TalkPresidential/build/components/EnterUserNameField/EnterUserNameField.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _userNameValidation = require(820                                   ); // 820 = ../../utils/login/userNameValidation

var _colors = require(753                     ); // 753 = ../../constants/colors

var _EnterUserNameFieldStyles = require(823                         ); // 823 = ./EnterUserNameFieldStyles

var EnterUserNameField = function (_React$Component) {
    babelHelpers.inherits(EnterUserNameField, _React$Component);

    function EnterUserNameField(props) {
        babelHelpers.classCallCheck(this, EnterUserNameField);

        var _this = babelHelpers.possibleConstructorReturn(this, (EnterUserNameField.__proto__ || Object.getPrototypeOf(EnterUserNameField)).call(this, props));

        _this.state = {};
        return _this;
    }

    babelHelpers.createClass(EnterUserNameField, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, null, _react2.default.createElement(_reactNative.TextInput, { value: this.state.text, underlineColorAndroid: 'transparent', autoCorrect: false, autoFocus: true, onChangeText: this._userNameTextChanged.bind(this), style: _EnterUserNameFieldStyles.styles.textInput, placeholder: this.props.placeholder, placeholderTextColor: _colors.lightGreyTextColor }), _react2.default.createElement(_reactNative.Text, { style: _EnterUserNameFieldStyles.styles.errorText }, this.state.errorMessage));
        }
    }, {
        key: '_userNameTextChanged',
        value: function _userNameTextChanged(text) {
            try {
                var userName = (0, _userNameValidation.validateUserName)(text);
                this.setState({
                    text: userName,
                    errorMessage: ''
                });
                this.props.onUserNameChanged(text);
            } catch (err) {
                this.setState({
                    errorMessage: (0, _userNameValidation.messageForError)(err),
                    text: text
                });
                this.props.invalidUsernameEntered();
            }
        }
    }]);
    return EnterUserNameField;
}(_react2.default.Component);

exports.default = EnterUserNameField;
}, 819, null, "TalkPresidential/build/components/EnterUserNameField/EnterUserNameField.js");
__d(/* TalkPresidential/build/utils/login/userNameValidation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UserNameError = undefined;
exports.validateUserName = validateUserName;
exports.messageForError = messageForError;

var _emojiRegex = require(821          ); // 821 = emoji-regex

var _emojiRegex2 = babelHelpers.interopRequireDefault(_emojiRegex);

var _strings = require(822                      ); // 822 = ../../constants/strings

var _appConstants = require(479                           ); // 479 = ../../constants/appConstants

var UserNameError = exports.UserNameError = undefined;
(function (UserNameError) {
    UserNameError["ContainsSpaces"] = "CONTAINS_SPACES";
    UserNameError["MaxLengthExceeded"] = "MAX_LENGTH_EXCEEDED";
    UserNameError["ContainsEmojis"] = "CONTAINS_EMOJIS";
    UserNameError["ZeroLength"] = "ZERO_LENGTH";
})(UserNameError || (exports.UserNameError = UserNameError = {}));
function hasWhiteSpace(userName) {
    var whitespace = /\s/.test(userName);
    return whitespace;
}
function invalidLength(userName) {
    return userName.length > _appConstants.maxUserNameLength;
}
function hasEmojis(userName) {
    var regex = (0, _emojiRegex2.default)();
    var onUserName = regex.exec(userName);
    if (!onUserName) {
        return false;
    } else {
        return true;
    }
}
function validateUserName(userName) {
    var trimmedUserName = userName.trim();
    if (hasWhiteSpace(trimmedUserName)) {
        throw UserNameError.ContainsSpaces;
    } else if (invalidLength(trimmedUserName)) {
        throw UserNameError.MaxLengthExceeded;
    } else if (hasEmojis(trimmedUserName)) {
        throw UserNameError.ContainsEmojis;
    } else if (trimmedUserName.length === 0) {
        throw UserNameError.ZeroLength;
    }
    return userName;
}
function messageForError(userNameError) {
    switch (userNameError) {
        case UserNameError.ContainsSpaces:
            return _strings.LoginStrings.ERROR_SPACES;
        case UserNameError.MaxLengthExceeded:
            return _strings.LoginStrings.ERROR_LENGTH;
        case UserNameError.ContainsEmojis:
            return _strings.LoginStrings.ERROR_EMOJIS;
        default:
            return undefined;
    }
}
}, 820, null, "TalkPresidential/build/utils/login/userNameValidation.js");
__d(/* emoji-regex/index.js */function(global, require, module, exports) {"use strict";

module.exports = function () {
	return (/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74)\uDB40\uDC7F|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]\uFE0F|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83D\uDC69\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83D\uDC69\u200D[\u2695\u2696\u2708])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC68(?:\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F/g
	);
};
}, 821, null, "emoji-regex/index.js");
__d(/* TalkPresidential/build/constants/strings.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LoginStrings = undefined;

var _appConstants = require(479                        ); // 479 = ../constants/appConstants

var LoginStrings = exports.LoginStrings = {
    CREATE_USER_NAME: 'Create User Name',
    SUBMIT: 'Submit',
    ERROR: 'Error',
    FACEBOOK_LOGIN_ERROR_MESSAGE: 'Unable to login with Facebook at this time.',
    ERROR_EMOJIS: 'Username must not contain emojis.',
    ERROR_LENGTH: 'Username length must not exceed ' + _appConstants.maxUserNameLength + ' characters.',
    ERROR_SPACES: 'Username must not contain spaces.'
};
}, 822, null, "TalkPresidential/build/constants/strings.js");
__d(/* TalkPresidential/build/components/EnterUserNameField/EnterUserNameFieldStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.styles = undefined;

var _colors = require(753                       ); // 753 = ./../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

var styles = exports.styles = _reactNative.StyleSheet.create({
    textInput: {
        fontSize: 20,
        color: _colors.black,
        borderBottomWidth: 2,
        borderBottomLeftRadius: 1,
        borderBottomRightRadius: 1,
        borderBottomColor: _colors.secondary,
        height: 31,
        marginBottom: 5
    },
    errorText: {
        fontSize: 15,
        color: _colors.secondary
    }
});
}, 823, null, "TalkPresidential/build/components/EnterUserNameField/EnterUserNameFieldStyles.js");
__d(/* TalkPresidential/build/screens/currentGame/navigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.currentGameNav = undefined;

var _CurrentGameDetail = require(777                                                 ); // 777 = ../currentGame/CurrentGameDetail/CurrentGameDetail

var _CurrentGameDetail2 = babelHelpers.interopRequireDefault(_CurrentGameDetail);

var currentGameNav = exports.currentGameNav = {
    CurrentGameDetail: {
        screen: _CurrentGameDetail2.default
    }
};
}, 824, null, "TalkPresidential/build/screens/currentGame/navigation.js");
__d(/* TalkPresidential/build/screens/login/navigationConfiguration.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loginNavigation = undefined;

var _LoginStart = require(826                      ); // 826 = ./loginStart/LoginStart

var _LoginStart2 = babelHelpers.interopRequireDefault(_LoginStart);

var _EnterUserNameScreen = require(829                                  ); // 829 = ./enterUserName/EnterUserNameScreen

var _EnterUserNameScreen2 = babelHelpers.interopRequireDefault(_EnterUserNameScreen);

var _reactNavigation = require(684               ); // 684 = react-navigation

var routeConfiguration = {
    Start: {
        screen: _LoginStart2.default
    },
    EnterUserName: {
        screen: _EnterUserNameScreen2.default
    }
};
var stackNavigationConfiguration = {
    headerMode: 'none',
    navigationOptions: {
        gesturesEnabled: false
    }
};
var loginNavigation = exports.loginNavigation = (0, _reactNavigation.StackNavigator)(routeConfiguration, stackNavigationConfiguration);
}, 825, null, "TalkPresidential/build/screens/login/navigationConfiguration.js");
__d(/* TalkPresidential/build/screens/login/loginStart/LoginStart.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeFbsdk = require(486                 ); // 486 = react-native-fbsdk

var _reactRedux = require(342          ); // 342 = react-redux

var _LoginStartStyles = require(827                 ); // 827 = ./LoginStartStyles

var _LoginStartStyles2 = babelHelpers.interopRequireDefault(_LoginStartStyles);

var _Images = require(757                     ); // 757 = ../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _strings = require(822                         ); // 822 = ../../../constants/strings

var _loginActions = require(472                            ); // 472 = ../../../actions/loginActions

var _Alerts = require(805                           ); // 805 = ../../../utils/shared/Alerts

var _reactNavigation = require(684               ); // 684 = react-navigation

var _loginSelectors = require(828                                ); // 828 = ../../../selectors/loginSelectors

var _dataSelectors = require(477                               ); // 477 = ../../../selectors/dataSelectors

var LoginStart = function (_React$Component) {
    babelHelpers.inherits(LoginStart, _React$Component);

    function LoginStart(props) {
        babelHelpers.classCallCheck(this, LoginStart);

        var _this = babelHelpers.possibleConstructorReturn(this, (LoginStart.__proto__ || Object.getPrototypeOf(LoginStart)).call(this, props));

        _this.state = {};
        return _this;
    }

    babelHelpers.createClass(LoginStart, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.goToHome && !this.props.goToHome) {
                this.props.goBackToHome();
            } else if (nextProps.goToEnterUsername && !this.props.goToEnterUsername) {
                this._goToUserName();
            } else if (nextProps.displayFBAuthError && !this.props.displayFBAuthError) {
                this._showFailedFBAuthAlert();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(_reactNative.View, { style: _LoginStartStyles2.default.mainView }, React.createElement(_reactNative.View, { style: _LoginStartStyles2.default.centerContainer }, React.createElement(_reactNative.Image, { source: _Images2.default.mainLogo271 }), React.createElement(_reactNative.Text, { style: _LoginStartStyles2.default.quoteText }, '\u201CThis app is really great folks. It really is fantastic. You aren\u2019t going to believe it.\u201D'), React.createElement(_reactNativeFbsdk.LoginButton, { readPermissions: ['public_profile', 'email', 'user_friends'], onLoginFinished: this._handleFinishedLogin.bind(this) })));
        }
    }, {
        key: '_goToUserName',
        value: function _goToUserName() {
            this.props.navigation.navigate('EnterUserName');
        }
    }, {
        key: '_showFailedFBAuthAlert',
        value: function _showFailedFBAuthAlert() {
            var title = 'Error';
            var failedText = 'Unable to authenticate with facebook at this time.';
            var firstButton = {
                title: 'Retry',
                onPress: function onPress() {
                    return [];
                }
            };

            (0, _Alerts.errorAlert)(failedText);
            _reactNative.Alert.alert(title, failedText, [firstButton]);
        }
    }, {
        key: '_handleFinishedLogin',
        value: function _handleFinishedLogin(error, result) {
            if (error) {
                this._handleFBLoginError(error);
            } else if (!result.isCancelled) {
                this._fetchAndSetAccessToken();
            }
        }
    }, {
        key: '_handleFBLoginError',
        value: function _handleFBLoginError(_error) {
            (0, _Alerts.errorAlert)(_strings.LoginStrings.FACEBOOK_LOGIN_ERROR_MESSAGE);
        }
    }, {
        key: '_fetchAndSetAccessToken',
        value: function _fetchAndSetAccessToken() {
            var _this2 = this;

            _reactNativeFbsdk.AccessToken.getCurrentAccessToken().then(function (_ref) {
                var accessToken = _ref.accessToken;

                _this2._loginSuccessful(accessToken);
            }).catch(function (err) {
                console.warn(err);
                _this2._handleFBLoginError(err);
            });
        }
    }, {
        key: '_loginSuccessful',
        value: function _loginSuccessful(token) {
            this.props.setFbAuthToken(token);
        }
    }]);
    return LoginStart;
}(React.Component);

function mapDispatchToProps(dispatch, props) {
    return {
        setFbAuthToken: function setFbAuthToken(token) {
            dispatch((0, _loginActions.setFbAuthToken)(token));
        },
        goBackToHome: function goBackToHome() {
            dispatch(_reactNavigation.NavigationActions.back({ key: props.homeScreenKey }));
        },
        completeLogin: function completeLogin() {
            dispatch((0, _loginActions.userLeavingLogin)());
        }
    };
}
function mapStateToProps(state) {
    var hasAuthToken = state.auth.bearerToken !== undefined;
    var hasUserName = (0, _dataSelectors.getUsername)(state) !== undefined;
    var fbAuthFailed = state.login.fbLoginFailed;
    var homeScreenKey = (0, _loginSelectors.getHomeScreenKey)(state);
    var goToHome = hasUserName;
    var goToEnterUsername = hasAuthToken && !hasUserName;
    var displayFBAuthError = fbAuthFailed;
    return {
        goToHome: goToHome,
        goToEnterUsername: goToEnterUsername,
        displayFBAuthError: displayFBAuthError,
        homeScreenKey: homeScreenKey
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LoginStart);
}, 826, null, "TalkPresidential/build/screens/login/loginStart/LoginStart.js");
__d(/* TalkPresidential/build/screens/login/loginStart/LoginStartStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _colors = require(753                          ); // 753 = ./../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

exports.default = _reactNative.StyleSheet.create({
    mainView: {
        backgroundColor: _colors.main,
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center'
    },
    centerContainer: {
        backgroundColor: _colors.main,
        justifyContent: 'space-between',
        width: 271,
        height: 387,
        alignItems: 'center'
    },
    quoteText: {
        fontSize: 20,
        color: 'white',
        textAlign: 'center'
    }
});
}, 827, null, "TalkPresidential/build/screens/login/loginStart/LoginStartStyles.js");
__d(/* TalkPresidential/build/selectors/loginSelectors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var getUsernameAlreadyTaken = exports.getUsernameAlreadyTaken = function getUsernameAlreadyTaken(state) {
  return state.login.usernameAlreadyTaken;
};
var getUpdateUsernameFailed = exports.getUpdateUsernameFailed = function getUpdateUsernameFailed(state) {
  return state.login.updateUserNameFailed;
};
var getHomeScreenKey = exports.getHomeScreenKey = function getHomeScreenKey(state) {
  return state.login.homeScreenKey;
};
var getInLogin = exports.getInLogin = function getInLogin(state) {
  return state.login.inLogin;
};
}, 828, null, "TalkPresidential/build/selectors/loginSelectors.js");
__d(/* TalkPresidential/build/screens/login/enterUserName/EnterUserNameScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require(342          ); // 342 = react-redux

var _reactNative = require(12            ); // 12 = react-native

var _reactNavigation = require(684               ); // 684 = react-navigation

var _EnterUserNameScreenStyles = require(830                          ); // 830 = ./EnterUserNameScreenStyles

var _EnterUserNameScreenStyles2 = babelHelpers.interopRequireDefault(_EnterUserNameScreenStyles);

var _EnterUserName = require(831                         ); // 831 = ./components/EnterUserName

var _EnterUserName2 = babelHelpers.interopRequireDefault(_EnterUserName);

var _dataSelectors = require(477                               ); // 477 = ../../../selectors/dataSelectors

var _loginActions = require(472                            ); // 472 = ../../../actions/loginActions

var _loginSelectors = require(828                                ); // 828 = ../../../selectors/loginSelectors

var _Alerts = require(805                           ); // 805 = ../../../utils/shared/Alerts

var EnterUserNameScreen = function (_Component) {
    babelHelpers.inherits(EnterUserNameScreen, _Component);

    function EnterUserNameScreen() {
        babelHelpers.classCallCheck(this, EnterUserNameScreen);
        return babelHelpers.possibleConstructorReturn(this, (EnterUserNameScreen.__proto__ || Object.getPrototypeOf(EnterUserNameScreen)).apply(this, arguments));
    }

    babelHelpers.createClass(EnterUserNameScreen, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _EnterUserNameScreenStyles2.default.container }, _react2.default.createElement(_reactNative.KeyboardAvoidingView, { behavior: 'padding', style: _EnterUserNameScreenStyles2.default.keyboardAvoidingView }, _react2.default.createElement(_EnterUserName2.default, { style: _EnterUserNameScreenStyles2.default.enterUserNameView, onSubmit: this._onUserNameSubmit.bind(this) })));
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            if (props.hasUsername) {
                this._exitLogin();
            } else if (props.usernameAlreadyTaken) {
                this._informUserNameIsTaken();
            } else if (props.updateUsernameFailed) {
                this._informUpdateUsernameFailed();
            }
        }
    }, {
        key: '_exitLogin',
        value: function _exitLogin() {
            this.props.goBackToHome();
        }
    }, {
        key: '_informUserNameIsTaken',
        value: function _informUserNameIsTaken() {
            (0, _Alerts.errorAlert)('Username already taken.');
        }
    }, {
        key: '_informUpdateUsernameFailed',
        value: function _informUpdateUsernameFailed() {
            (0, _Alerts.errorAlert)('Update username failed');
        }
    }, {
        key: '_onUserNameSubmit',
        value: function _onUserNameSubmit(username) {
            this.props.setUsername(username);
        }
    }]);
    return EnterUserNameScreen;
}(_react.Component);

function mapDispatchToProps(dispatch, props) {
    return {
        setUsername: function setUsername(username) {
            dispatch((0, _loginActions.setUserName)(username));
        },
        goBackToHome: function goBackToHome() {
            return dispatch(_reactNavigation.NavigationActions.back({ key: props.homeScreenKey }));
        },
        userLeavingLogin: function userLeavingLogin() {
            dispatch((0, _loginActions.userLeavingLogin)());
        }
    };
}
function mapStateToProps(state) {
    var hasUsername = (0, _dataSelectors.getUsername)(state) !== undefined;
    var updateUsernameFailed = (0, _loginSelectors.getUpdateUsernameFailed)(state);
    var usernameAlreadyTaken = (0, _loginSelectors.getUsernameAlreadyTaken)(state);
    var homeScreenKey = (0, _loginSelectors.getHomeScreenKey)(state);
    return {
        hasUsername: hasUsername,
        updateUsernameFailed: updateUsernameFailed,
        usernameAlreadyTaken: usernameAlreadyTaken,
        homeScreenKey: homeScreenKey
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(EnterUserNameScreen);
}, 829, null, "TalkPresidential/build/screens/login/enterUserName/EnterUserNameScreen.js");
__d(/* TalkPresidential/build/screens/login/enterUserName/EnterUserNameScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _colors = require(753                        ); // 753 = ../../../constants/colors

var _reactNative = require(12            ); // 12 = react-native

exports.default = _reactNative.StyleSheet.create({
    container: {
        backgroundColor: _colors.main,
        flex: 1
    },
    keyboardAvoidingView: {
        flex: 1,
        justifyContent: 'center'
    },
    enterUserNameView: {
        marginHorizontal: 19,
        height: 299
    }
});
}, 830, null, "TalkPresidential/build/screens/login/enterUserName/EnterUserNameScreenStyles.js");
__d(/* TalkPresidential/build/screens/login/enterUserName/components/EnterUserName.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _EnterUserNameStyles = require(832                    ); // 832 = ./EnterUserNameStyles

var _EnterUserNameStyles2 = babelHelpers.interopRequireDefault(_EnterUserNameStyles);

var _Images = require(757                        ); // 757 = ../../../../shared/Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _strings = require(822                            ); // 822 = ../../../../constants/strings

var _LargeRedButton = require(791                                                   ); // 791 = ../../../../components/LargeRedButton/LargeRedButton

var _LargeRedButton2 = babelHelpers.interopRequireDefault(_LargeRedButton);

var _EnterUserNameField = require(819                                                           ); // 819 = ../../../../components/EnterUserNameField/EnterUserNameField

var _EnterUserNameField2 = babelHelpers.interopRequireDefault(_EnterUserNameField);

var EnterUserName = function (_Component) {
    babelHelpers.inherits(EnterUserName, _Component);

    function EnterUserName(props) {
        babelHelpers.classCallCheck(this, EnterUserName);

        var _this = babelHelpers.possibleConstructorReturn(this, (EnterUserName.__proto__ || Object.getPrototypeOf(EnterUserName)).call(this, props));

        _this.state = {
            text: undefined
        };
        return _this;
    }

    babelHelpers.createClass(EnterUserName, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, { style: _reactNative.StyleSheet.flatten([_EnterUserNameStyles2.default.container, this.props.style]) }, _react2.default.createElement(_reactNative.View, { style: _EnterUserNameStyles2.default.contentContainer }, this._renderLogoAndQuote(), _react2.default.createElement(_EnterUserNameField2.default, { onUserNameChanged: this._onUserNameTextChanged.bind(this), invalidUsernameEntered: this._invalidUserNameEntered.bind(this), placeholder: 'Create Username' }), _react2.default.createElement(_LargeRedButton2.default, { title: _strings.LoginStrings.SUBMIT, enabled: this.state.text !== undefined, onPress: this._submitButtonPressed.bind(this) })));
        }
    }, {
        key: '_renderLogoAndQuote',
        value: function _renderLogoAndQuote() {
            return _react2.default.createElement(_reactNative.View, { style: _EnterUserNameStyles2.default.topContainer }, _react2.default.createElement(_reactNative.Image, { source: _Images2.default.trumpBlueIcon78 }), _react2.default.createElement(_reactNative.Text, { style: _EnterUserNameStyles2.default.trumpQuoteText }, '\u201C I\u2019m very highly educated. I know words, I have the best words\u201D - POTUS'));
        }
    }, {
        key: '_invalidUserNameEntered',
        value: function _invalidUserNameEntered() {
            this.setState({
                text: undefined
            });
        }
    }, {
        key: '_onUserNameTextChanged',
        value: function _onUserNameTextChanged(text) {
            this.setState({
                text: text
            });
        }
    }, {
        key: '_submitButtonPressed',
        value: function _submitButtonPressed() {
            this.props.onSubmit(this.state.text);
        }
    }]);
    return EnterUserName;
}(_react.Component);

exports.default = EnterUserName;
}, 831, null, "TalkPresidential/build/screens/login/enterUserName/components/EnterUserName.js");
__d(/* TalkPresidential/build/screens/login/enterUserName/components/EnterUserNameStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _colors = require(753                           ); // 753 = ../../../../constants/colors

exports.default = _reactNative.StyleSheet.create({
    container: {
        backgroundColor: 'white'
    },
    contentContainer: {
        flex: 1,
        marginHorizontal: 30,
        marginVertical: 23,
        justifyContent: 'space-between'
    },
    topContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center'
    },
    trumpQuoteText: {
        color: _colors.lightGreyTextColor,
        fontSize: 18,
        textAlign: 'center',
        height: 105,
        width: 200
    }
});
}, 832, null, "TalkPresidential/build/screens/login/enterUserName/components/EnterUserNameStyles.js");
__d(/* TalkPresidential/build/reducers/loginReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _reduxActions = require(407            ); // 407 = redux-actions

var _loginActions = require(472                      ); // 472 = ../actions/loginActions

var initialState = {
    inLogin: false
};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _loginActions.fbAuthFailed, function (state, _action) {
    return babelHelpers.extends({}, state, { fbLoginFailed: true });
}), babelHelpers.defineProperty(_handleActions, _loginActions.clearFBAuthFailedError, function (state, _action) {
    if (state.fbLoginFailed) {
        return babelHelpers.extends({}, state, { fbLoginFailed: undefined });
    } else {
        return state;
    }
}), babelHelpers.defineProperty(_handleActions, _loginActions.updateUserNameFailed, function (state, _action) {
    return babelHelpers.extends({}, state, { updateUserNameFailed: true });
}), babelHelpers.defineProperty(_handleActions, _loginActions.clearUpdateUserNameError, function (state, _action) {
    return babelHelpers.extends({}, state, { updateUserNameFailed: undefined });
}), babelHelpers.defineProperty(_handleActions, _loginActions.usernameAlreadyTaken, function (state, _action) {
    return babelHelpers.extends({}, state, { usernameAlreadyTaken: true });
}), babelHelpers.defineProperty(_handleActions, _loginActions.clearUserNameAlreadyTaken, function (state, _action) {
    return babelHelpers.extends({}, state, { usernameAlreadyTaken: undefined });
}), babelHelpers.defineProperty(_handleActions, _loginActions.setHomeScreenKey, function (state, action) {
    return babelHelpers.extends({}, state, { homeScreenKey: action.payload });
}), babelHelpers.defineProperty(_handleActions, _loginActions.userEnteringLogin, function (state, _action) {
    return babelHelpers.extends({}, state, { inLogin: true });
}), babelHelpers.defineProperty(_handleActions, _loginActions.userLeavingLogin, function (state, _action) {
    return babelHelpers.extends({}, state, { inLogin: false });
}), _handleActions), initialState);
}, 833, null, "TalkPresidential/build/reducers/loginReducer.js");
__d(/* TalkPresidential/build/reducers/dataReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _reduxActions = require(407            ); // 407 = redux-actions

var _dataActions = require(406                     ); // 406 = ../actions/dataActions

var _lodash = require(835     ); // 835 = lodash

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var initialState = {
    user: undefined,
    games: [],
    friends: []
};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _dataActions.setUser, function (state, action) {
    var user = action.payload;
    return babelHelpers.extends({}, state, { user: user });
}), babelHelpers.defineProperty(_handleActions, _dataActions.addUserFriends, function (state, action) {
    var friends = state.friends.slice();
    var combinedFriends = action.payload.concat(friends);

    var filteredFriends = _lodash2.default.uniqBy(combinedFriends, function (friend) {
        return friend.id;
    });
    return babelHelpers.extends({}, state, { friends: filteredFriends });
}), babelHelpers.defineProperty(_handleActions, _dataActions.assignProfilePicInfo, function (state, action) {
    var friends = state.friends.slice();
    var profilePicMap = action.payload;
    var updatedFriends = friends.map(function (friend) {
        var profilePicture = profilePicMap[friend.id];
        if (profilePicture) {
            return babelHelpers.extends({}, friend, { profilePicture: profilePicture });
        } else {
            return friend;
        }
    });
    return babelHelpers.extends({}, state, { friends: updatedFriends });
}), babelHelpers.defineProperty(_handleActions, _dataActions.addGame, function (state, action) {
    var gameToAdd = action.payload;
    var games = state.games.slice();
    var filteredGames = games.filter(function (game) {
        return game._id !== gameToAdd._id;
    });
    filteredGames.unshift(gameToAdd);
    return babelHelpers.extends({}, state, { games: filteredGames });
}), babelHelpers.defineProperty(_handleActions, _dataActions.clearGames, function (state) {
    return babelHelpers.extends({}, state, { games: [] });
}), babelHelpers.defineProperty(_handleActions, _dataActions.addGames, function (state, action) {
    var games = state.games.concat(action.payload);
    return babelHelpers.extends({}, state, { games: games });
}), _handleActions), initialState);
}, 834, null, "TalkPresidential/build/reducers/dataReducer.js");
__d(/* lodash/lodash.js */function(global, require, module, exports) {/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function () {
  var undefined;

  var VERSION = '4.17.4';

  var LARGE_ARRAY_SIZE = 200;

  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  var MAX_MEMOIZE_SIZE = 500;

  var PLACEHOLDER = '__lodash_placeholder__';

  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];

  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  var reEscapeChar = /\\(\\)?/g;

  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  var reFlags = /\w*$/;

  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  var reIsBinary = /^0b[01]+$/i;

  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  var reIsOctal = /^0o[0-7]+$/i;

  var reIsUint = /^(?:0|[1-9]\d*)$/;

  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  var reNoMatch = /($^)/;

  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  var rsApos = '[\'\u2019]',
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  var reApos = RegExp(rsApos, 'g');

  var reComboMark = RegExp(rsCombo, 'g');

  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');

  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');

  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];

  var templateCounter = -1;

  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

  var deburredLetters = {
    '\xc0': 'A', '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a', '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C', '\xe7': 'c',
    '\xd0': 'D', '\xf0': 'd',
    '\xc8': 'E', '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e', '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I', '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i', '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N', '\xf1': 'n',
    '\xd2': 'O', '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o', '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U', '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u', '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y', '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',

    '\u0100': 'A', '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a', '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C', '\u0108': 'C', '\u010A': 'C', '\u010C': 'C',
    '\u0107': 'c', '\u0109': 'c', '\u010B': 'c', '\u010D': 'c',
    '\u010E': 'D', '\u0110': 'D', '\u010F': 'd', '\u0111': 'd',
    '\u0112': 'E', '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011A': 'E',
    '\u0113': 'e', '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011B': 'e',
    '\u011C': 'G', '\u011E': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011D': 'g', '\u011F': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H', '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I', '\u012A': 'I', '\u012C': 'I', '\u012E': 'I', '\u0130': 'I',
    '\u0129': 'i', '\u012B': 'i', '\u012D': 'i', '\u012F': 'i', '\u0131': 'i',
    '\u0134': 'J', '\u0135': 'j',
    '\u0136': 'K', '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L', '\u013B': 'L', '\u013D': 'L', '\u013F': 'L', '\u0141': 'L',
    '\u013A': 'l', '\u013C': 'l', '\u013E': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N', '\u0145': 'N', '\u0147': 'N', '\u014A': 'N',
    '\u0144': 'n', '\u0146': 'n', '\u0148': 'n', '\u014B': 'n',
    '\u014C': 'O', '\u014E': 'O', '\u0150': 'O',
    '\u014D': 'o', '\u014F': 'o', '\u0151': 'o',
    '\u0154': 'R', '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r', '\u0157': 'r', '\u0159': 'r',
    '\u015A': 'S', '\u015C': 'S', '\u015E': 'S', '\u0160': 'S',
    '\u015B': 's', '\u015D': 's', '\u015F': 's', '\u0161': 's',
    '\u0162': 'T', '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't', '\u0165': 't', '\u0167': 't',
    '\u0168': 'U', '\u016A': 'U', '\u016C': 'U', '\u016E': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u', '\u016B': 'u', '\u016D': 'u', '\u016F': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W', '\u0175': 'w',
    '\u0176': 'Y', '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z', '\u017B': 'Z', '\u017D': 'Z',
    '\u017A': 'z', '\u017C': 'z', '\u017E': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017F': 's'
  };

  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  var root = freeGlobal || freeSelf || Function('return this')();

  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  var moduleExports = freeModule && freeModule.exports === freeExports;

  var freeProcess = moduleExports && freeGlobal.process;

  var nodeUtil = function () {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  function addMapEntry(map, pair) {
    map.set(pair[0], pair[1]);
    return map;
  }

  function addSetEntry(set, value) {
    set.add(value);
    return set;
  }

  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  var asciiSize = baseProperty('length');

  function asciiToArray(string) {
    return string.split('');
  }

  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function (value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  function baseIsNaN(value) {
    return value !== value;
  }

  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? baseSum(array, iteratee) / length : NAN;
  }

  function baseProperty(key) {
    return function (object) {
      return object == null ? undefined : object[key];
    };
  }

  function basePropertyOf(object) {
    return function (key) {
      return object == null ? undefined : object[key];
    };
  }

  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function (value, index, collection) {
      accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : result + current;
      }
    }
    return result;
  }

  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  function baseToPairs(object, props) {
    return arrayMap(props, function (key) {
      return [key, object[key]];
    });
  }

  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  function baseValues(object, props) {
    return arrayMap(props, function (key) {
      return object[key];
    });
  }

  function cacheHas(cache, key) {
    return cache.has(key);
  }

  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  var deburrLetter = basePropertyOf(deburredLetters);

  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = [value, value];
    });
    return result;
  }

  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  function stringSize(string) {
    return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
  }

  function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
  }

  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  var runInContext = function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    var coreJsData = context['__core-js_shared__'];

    var funcToString = funcProto.toString;

    var hasOwnProperty = objectProto.hasOwnProperty;

    var idCounter = 0;

    var maskSrcKey = function () {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? 'Symbol(src)_1.' + uid : '';
    }();

    var nativeObjectToString = objectProto.toString;

    var objectCtorString = funcToString.call(Object);

    var oldDash = root._;

    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? typeof Symbol === 'function' ? Symbol.isConcatSpreadable : '@@isConcatSpreadable' : undefined,
        symIterator = Symbol ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : undefined,
        symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

    var defineProperty = function () {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }();

    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    var metaMap = WeakMap && new WeakMap();

    var realNames = {};

    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    var baseCreate = function () {
      function object() {}
      return function (proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = undefined;
        return result;
      };
    }();

    function baseLodash() {}

    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    lodash.templateSettings = {
      'escape': reEscape,

      'evaluate': reEvaluate,

      'interpolate': reInterpolate,

      'variable': '',

      'imports': {
        '_': lodash
      }
    };

    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : start - 1,
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || !isRight && arrLength == length && takeCount == length) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer: while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
    }

    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
      return this;
    }

    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash(),
        'map': new (Map || ListCache)(),
        'string': new Hash()
      };
    }

    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }

    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }

    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    function stackGet(key) {
      return this.__data__.get(key);
    }

    function stackHas(key) {
      return this.__data__.has(key);
    }

    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }

    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    function assignMergeValue(object, key, value) {
      if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }

    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }

    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function (value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }

      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function (subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }

        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    function baseConforms(source) {
      var props = keys(source);
      return function (object) {
        return baseConformsTo(object, source, props);
      };
    }

    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if (value === undefined && !(key in object) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function () {
        func.apply(undefined, args);
      }, wait);
    }

    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        } else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    var baseEach = createBaseEach(baseForOwn);

    var baseEachRight = createBaseEach(baseForOwnRight, true);

    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function (value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end === undefined || end > length ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function (value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    var baseFor = createBaseFor();

    var baseForRight = createBaseFor(true);

    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    function baseFunctions(object, props) {
      return arrayFilter(props, function (key) {
        return isFunction(object[key]);
      });
    }

    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : undefined;
    }

    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }

    function baseGt(value, other) {
      return value > other;
    }

    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer: while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = comparator || value !== 0 ? value : 0;
        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function (value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }

    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    function baseIteratee(value) {
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }

    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    function baseLt(value, other) {
      return value < other;
    }

    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function (value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function (object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function (object) {
        var objValue = get(object, path);
        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function (srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack());
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(object[key], srcValue, key + '', object, source, stack) : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || srcIndex && isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function (value, key, collection) {
        var criteria = arrayMap(iteratees, function (iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function (object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    function basePick(object, paths) {
      return basePickBy(object, paths, function (value, path) {
        return hasIn(object, path);
      });
    }

    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    function basePropertyDeep(path) {
      return function (object) {
        return baseGet(object, path);
      };
    }

    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }

      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    function baseSample(collection) {
      return arraySample(values(collection));
    }

    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    var baseSetData = !metaMap ? identity : function (func, data) {
      metaMap.set(func, data);
      return func;
    };

    var baseSetToString = !defineProperty ? identity : function (func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function (value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = low + high >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? computed <= value : computed < value;
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    function baseToString(value) {
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }

    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        } else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

      return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
    }

    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function (result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    var castRest = baseRest;

    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }

    var clearTimeout = ctxClearTimeout || function (id) {
      return root.clearTimeout(id);
    };

    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor());
    }

    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor());
    }

    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }

      return object.index - other.index;
    }

    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    function createAggregator(setter, initializer) {
      return function (collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    function createAssigner(assigner) {
      return baseRest(function (object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    function createBaseEach(eachFunc, fromRight) {
      return function (collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    function createBaseFor(fromRight) {
      return function (object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    function createCaseFirst(methodName) {
      return function (string) {
        string = toString(string);

        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;

        var chr = strSymbols ? strSymbols[0] : string.charAt(0);

        var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    function createCompounder(callback) {
      return function (string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    function createCtor(Ctor) {
      return function () {
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor();
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        return isObject(result) ? result : thisBinding;
      };
    }

    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
        }
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    function createFind(findIndexFunc) {
      return function (collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function predicate(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    function createFlow(fromRight) {
      return flatRest(function (funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }
        return function () {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    function createInverter(setter, toIteratee) {
      return function (object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    function createMathOperation(operator, defaultValue) {
      return function (value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    function createOver(arrayFunc) {
      return flatRest(function (iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function (args) {
          var thisArg = this;
          return arrayFunc(iteratees, function (iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
    }

    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    function createRange(fromRight) {
      return function (start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }

        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    function createRelationalOperation(operator) {
      return function (value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    function createRound(methodName) {
      var func = Math[methodName];
      return function (number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
      return new Set(values);
    };

    function createToPairs(keysFunc) {
      return function (object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
        return srcValue;
      }
      return objValue;
    }

    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }

      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

      stack.set(array, other);
      stack.set(other, array);

      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }

        if (seen) {
          if (!arraySome(other, function (othValue, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          return object == other + '';

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }

          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }

      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }

        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    var getData = !metaMap ? noop : function (func) {
      return metaMap.get(func);
    };

    function getFuncName(func) {
      var result = func.name + '',
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
    }

    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function (symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    var getTag = baseGetTag;

    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }

    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':
            start += size;break;
          case 'dropRight':
            end -= size;break;
          case 'take':
            end = nativeMin(end, start + size);break;
          case 'takeRight':
            start = nativeMax(start, end - size);break;
        }
      }
      return { 'start': start, 'end': end };
    }

    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }

    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    function initCloneObject(object) {
      return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }

    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag:case float64Tag:
        case int8Tag:case int16Tag:case int32Tag:
        case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
    }

    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
        return eq(object[index], value);
      }
      return false;
    }

    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }

    function isKeyable(value) {
      var type = typeof value;
      return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
    }

    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }

    var isMaskable = coreJsData ? isFunction : stubFalse;

    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

      return value === proto;
    }

    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    function matchesStrictComparable(key, srcValue) {
      return function (object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
      };
    }

    function memoizeCapped(func) {
      var result = memoize(func, function (key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

      if (!(isCommon || isCombo)) {
        return data;
      }

      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];

        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }

      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }

      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }

      value = source[7];
      if (value) {
        data[7] = value;
      }

      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }

      if (data[9] == null) {
        data[9] = source[9];
      }

      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? func.length - 1 : start, 0);
      return function () {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    var setData = shortOut(baseSetData);

    var setTimeout = ctxSetTimeout || function (func, wait) {
      return root.setTimeout(func, wait);
    };

    var setToString = shortOut(baseSetToString);

    function setWrapToString(wrapper, reference, bitmask) {
      var source = reference + '';
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function () {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    var stringToPath = memoizeCapped(function (string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function (match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
      });
      return result;
    });

    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }

    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return func + '';
        } catch (e) {}
      }
      return '';
    }

    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function (pair) {
        var value = '_.' + pair[0];
        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__ = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    function chunk(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, index += size);
      }
      return result;
    }

    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    var difference = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
    });

    var differenceBy = baseRest(function (array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
    });

    var differenceWith = baseRest(function (array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
    });

    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    function dropRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
    }

    function dropWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
    }

    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    function head(array) {
      return array && array.length ? array[0] : undefined;
    }

    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    var intersection = baseRest(function (arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
    });

    var intersectionBy = baseRest(function (arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
    });

    var intersectionWith = baseRest(function (arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
    });

    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
    }

    function nth(array, n) {
      return array && array.length ? baseNth(array, toInteger(n)) : undefined;
    }

    var pull = baseRest(pullAll);

    function pullAll(array, values) {
      return array && array.length && values && values.length ? basePullAll(array, values) : array;
    }

    function pullAllBy(array, values, iteratee) {
      return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
    }

    function pullAllWith(array, values, comparator) {
      return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
    }

    var pullAt = flatRest(function (array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function (index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      } else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    function sortedUniq(array) {
      return array && array.length ? baseSortedUniq(array) : [];
    }

    function sortedUniqBy(array, iteratee) {
      return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
    }

    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    function takeRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
    }

    function takeWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
    }

    var union = baseRest(function (arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    var unionBy = baseRest(function (arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    var unionWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }

    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return array && array.length ? baseUniq(array, undefined, comparator) : [];
    }

    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function (group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function (index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function (group) {
        return apply(iteratee, undefined, group);
      });
    }

    var without = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, values) : [];
    });

    var xor = baseRest(function (arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    var xorBy = baseRest(function (arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    var xorWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    var zip = baseRest(unzip);

    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    var zipWith = baseRest(function (arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    function thru(value, interceptor) {
      return interceptor(value);
    }

    var wrapperAt = flatRest(function (paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function interceptor(object) {
        return baseAt(object, paths);
      };

      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function (array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    function wrapperChain() {
      return chain(this);
    }

    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    function wrapperToIterator() {
      return this;
    }

    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    var countBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    var find = createFind(findIndex);

    var findLast = createFind(findLastIndex);

    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    var groupBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }

    var invokeMap = baseRest(function (collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function (value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    var keyBy = createAggregator(function (result, value, key) {
      baseAssignValue(result, key, value);
    });

    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    var partition = createAggregator(function (result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function () {
      return [[], []];
    });

    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    function sampleSize(collection, n, guard) {
      if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    var sortBy = baseRest(function (collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    var now = ctxNow || function () {
      return root.Date.now();
    };

    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function () {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = func && n == null ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function () {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    var bind = baseRest(function (func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    var bindKey = baseRest(function (object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        lastInvokeTime = time;

        timerId = setTimeout(timerExpired, wait);

        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }

        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    var defer = baseRest(function (func, args) {
      return baseDelay(func, 1, args);
    });

    var delay = baseRest(function (func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    function memoize(func, resolver) {
      if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function memoized() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }

    memoize.Cache = MapCache;

    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function () {
        var args = arguments;
        switch (args.length) {
          case 0:
            return !predicate.call(this);
          case 1:
            return !predicate.call(this, args[0]);
          case 2:
            return !predicate.call(this, args[0], args[1]);
          case 3:
            return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    function once(func) {
      return before(2, func);
    }

    var overArgs = castRest(function (func, transforms) {
      transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function (args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    var partial = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    var partialRight = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    var rearg = flatRest(function (func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function (args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    function unary(func) {
      return ary(func, 1);
    }

    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }

    var gt = createRelationalOperation(baseGt);

    var gte = createRelationalOperation(function (value, other) {
      return value >= other;
    });

    var isArguments = baseIsArguments(function () {
      return arguments;
    }()) ? baseIsArguments : function (value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    };

    var isArray = Array.isArray;

    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
    }

    var isBuffer = nativeIsBuffer || stubFalse;

    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
    }

    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }

      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    function isNaN(value) {
      return isNumber(value) && value != +value;
    }

    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    function isNull(value) {
      return value === null;
    }

    function isNil(value) {
      return value == null;
    }

    function isNumber(value) {
      return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
    }

    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }

    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    function isString(value) {
      return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }

    function isSymbol(value) {
      return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }

    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    function isUndefined(value) {
      return value === undefined;
    }

    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    var lt = createRelationalOperation(baseLt);

    var lte = createRelationalOperation(function (value, other) {
      return value <= other;
    });

    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;

      return func(value);
    }

    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? remainder ? result - remainder : result : 0;
    }

    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }

    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    function toSafeInteger(value) {
      return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
    }

    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    var assign = createAssigner(function (object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    var assignIn = createAssigner(function (object, source) {
      copyObject(source, keysIn(source), object);
    });

    var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    var at = flatRest(baseAt);

    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    var defaults = baseRest(function (args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    var defaultsDeep = baseRest(function (args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    function forIn(object, iteratee) {
      return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    function forInRight(object, iteratee) {
      return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    var invert = createInverter(function (result, value, key) {
      result[value] = key;
    }, constant(identity));

    var invertBy = createInverter(function (result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    var invoke = baseRest(baseInvoke);

    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    var merge = createAssigner(function (object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    var omit = flatRest(function (object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function (path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    var pick = flatRest(function (object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function (prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function (value, path) {
        return predicate(value, path[0]);
      });
    }

    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    var toPairs = createToPairs(keys);

    var toPairsIn = createToPairs(keysIn);

    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor() : [];
        } else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        } else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        } else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      } else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
      }
      return baseRandom(lower, upper);
    }

    var camelCase = createCompounder(function (result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined ? length : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    function escape(string) {
      string = toString(string);
      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
    }

    function escapeRegExp(string) {
      string = toString(string);
      return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
    }

    var kebabCase = createCompounder(function (result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    var lowerCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    var lowerFirst = createCaseFirst('toLowerCase');

    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
    }

    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
    }

    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
    }

    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    function repeat(string, n, guard) {
      if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    var snakeCase = createCompounder(function (result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    var startCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    function template(string, options, guard) {
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');

      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';

      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        return match;
      });

      source += "';\n";

      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }

      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');

      source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';

      var result = attempt(function () {
        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
      });

      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    function toLower(value) {
      return toString(value).toLowerCase();
    }

    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += result.length - end;
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while (match = separator.exec(substring)) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    function unescape(string) {
      string = toString(string);
      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
    }

    var upperCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    var upperFirst = createCaseFirst('toUpperCase');

    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    var attempt = baseRest(function (func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    var bindAll = flatRest(function (object, methodNames) {
      arrayEach(methodNames, function (key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function (pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function (args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    function constant(value) {
      return function () {
        return value;
      };
    }

    function defaultTo(value, defaultValue) {
      return value == null || value !== value ? defaultValue : value;
    }

    var flow = createFlow();

    var flowRight = createFlow(true);

    function identity(value) {
      return value;
    }

    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    var method = baseRest(function (path, args) {
      return function (object) {
        return baseInvoke(object, path, args);
      };
    });

    var methodOf = baseRest(function (object, args) {
      return function (path) {
        return baseInvoke(object, path, args);
      };
    });

    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function (methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function () {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    function noop() {}

    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function (args) {
        return baseNth(args, n);
      });
    }

    var over = createOver(arrayMap);

    var overEvery = createOver(arrayEvery);

    var overSome = createOver(arraySome);

    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    function propertyOf(object) {
      return function (path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    var range = createRange();

    var rangeRight = createRange(true);

    function stubArray() {
      return [];
    }

    function stubFalse() {
      return false;
    }

    function stubObject() {
      return {};
    }

    function stubString() {
      return '';
    }

    function stubTrue() {
      return true;
    }

    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    var add = createMathOperation(function (augend, addend) {
      return augend + addend;
    }, 0);

    var ceil = createRound('ceil');

    var divide = createMathOperation(function (dividend, divisor) {
      return dividend / divisor;
    }, 1);

    var floor = createRound('floor');

    function max(array) {
      return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
    }

    function maxBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
    }

    function mean(array) {
      return baseMean(array, identity);
    }

    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    function min(array) {
      return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
    }

    function minBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
    }

    var multiply = createMathOperation(function (multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    var round = createRound('round');

    var subtract = createMathOperation(function (minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    function sum(array) {
      return array && array.length ? baseSum(array, identity) : 0;
    }

    function sumBy(array, iteratee) {
      return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
    }

    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    mixin(lodash, lodash);

    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, function () {
      var source = {};
      baseForOwn(lodash, function (func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }(), { 'chain': false });

    lodash.VERSION = VERSION;

    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
      lodash[methodName].placeholder = lodash;
    });

    arrayEach(['drop', 'take'], function (methodName, index) {
      LazyWrapper.prototype[methodName] = function (n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function (n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function (iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    arrayEach(['head', 'last'], function (methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function () {
        return this[takeName](1).value()[0];
      };
    });

    arrayEach(['initial', 'tail'], function (methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function () {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function () {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function (predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function (predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function (value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function (predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function (start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function (predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function () {
      return this.take(MAX_ARRAY_LENGTH);
    };

    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function () {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function interceptor(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return isTaker && chainAll ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
      };
    });

    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function () {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function (value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '',
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  };

  var _ = runInContext();

  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    root._ = _;

    define(function () {
      return _;
    });
  } else if (freeModule) {
      (freeModule.exports = _)._ = _;

      freeExports._ = _;
    } else {
      root._ = _;
    }
}).call(this);
}, 835, null, "lodash/lodash.js");
__d(/* TalkPresidential/build/reducers/authReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxActions = require(407            ); // 407 = redux-actions

var _authActions = require(473                     ); // 473 = ../actions/authActions

exports.default = (0, _reduxActions.handleActions)(babelHelpers.defineProperty({}, _authActions.setBearerToken, function (state, action) {
    return babelHelpers.extends({}, state, { bearerToken: action.payload });
}), {});
}, 836, null, "TalkPresidential/build/reducers/authReducer.js");
__d(/* TalkPresidential/build/reducers/friendsReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _reduxActions = require(407            ); // 407 = redux-actions

var _friendsActions = require(482                        ); // 482 = ../actions/friendsActions

var initialState = {};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _friendsActions.setNextPage, function (state, action) {
    return babelHelpers.extends({}, state, { nextPage: action.payload });
}), babelHelpers.defineProperty(_handleActions, (0, _reduxActions.combineActions)(_friendsActions.clearFetchFriendsError, _friendsActions.setFetchFriendsError), function (state, action) {
    var fetchFriendsError = action.type === _friendsActions.setFetchFriendsError.toString() ? true : undefined;
    return babelHelpers.extends({}, state, { fetchFriendsError: fetchFriendsError });
}), _handleActions), initialState);
}, 837, null, "TalkPresidential/build/reducers/friendsReducer.js");
__d(/* TalkPresidential/build/reducers/currentGameReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _currentGameActions = require(507                              ); // 507 = ./../actions/currentGameActions

var _reduxActions = require(407            ); // 407 = redux-actions

var initialState = {
    gameId: undefined,
    startGameError: undefined,
    waitingForRandomOpponent: false
};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _currentGameActions.setCurrentGameID, function (state, action) {
    return babelHelpers.extends({}, state, { gameId: action.payload });
}), babelHelpers.defineProperty(_handleActions, _currentGameActions.setStartGameError, function (state, action) {
    return babelHelpers.extends({}, state, { startGameError: action.payload });
}), babelHelpers.defineProperty(_handleActions, _currentGameActions.setWaitingForRandomOpponent, function (state, action) {
    return babelHelpers.extends({}, state, { waitingForRandomOpponent: action.payload });
}), _handleActions), initialState);
}, 838, null, "TalkPresidential/build/reducers/currentGameReducer.js");
__d(/* TalkPresidential/build/reducers/composeTurnReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _reduxActions = require(407            ); // 407 = redux-actions

var _composeTurnActions = require(513                            ); // 513 = ../actions/composeTurnActions

var initialState = {
    text: undefined,
    connectedToInternet: undefined,
    score: undefined,
    submitError: undefined
};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _composeTurnActions.setText, function (state, action) {
    return babelHelpers.extends({}, state, { text: action.payload });
}), babelHelpers.defineProperty(_handleActions, _composeTurnActions.setConnectedToInternet, function (state, action) {
    return babelHelpers.extends({}, state, { connectedToInternet: action.payload });
}), babelHelpers.defineProperty(_handleActions, _composeTurnActions.setScore, function (state, action) {
    return babelHelpers.extends({}, state, { score: action.payload });
}), babelHelpers.defineProperty(_handleActions, _composeTurnActions.setSubmitScoreError, function (state, action) {
    return babelHelpers.extends({}, state, { submitError: action.payload });
}), babelHelpers.defineProperty(_handleActions, _composeTurnActions.resetComposeTurnState, function () {
    return babelHelpers.extends({}, initialState);
}), _handleActions), initialState);
}, 839, null, "TalkPresidential/build/reducers/composeTurnReducer.js");
__d(/* TalkPresidential/build/reducers/gamesListReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _handleActions;

var _gamesListActions = require(505                            ); // 505 = ./../actions/gamesListActions

var _reduxActions = require(407            ); // 407 = redux-actions

var initialState = {
    atEndOfGames: false,
    nextPageParams: undefined,
    getGamesError: undefined,
    fetchingGames: false
};
exports.default = (0, _reduxActions.handleActions)((_handleActions = {}, babelHelpers.defineProperty(_handleActions, _gamesListActions.setAtEndOfGames, function (state, action) {
    return babelHelpers.extends({}, state, { atEndOfGames: action.payload });
}), babelHelpers.defineProperty(_handleActions, _gamesListActions.setNextPageParams, function (state, action) {
    return babelHelpers.extends({}, state, { nextPageParams: action.payload });
}), babelHelpers.defineProperty(_handleActions, _gamesListActions.setGetGamesError, function (state, action) {
    return babelHelpers.extends({}, state, { getGamesError: action.payload });
}), babelHelpers.defineProperty(_handleActions, _gamesListActions.resetState, function () {
    return babelHelpers.extends({}, initialState);
}), babelHelpers.defineProperty(_handleActions, _gamesListActions.setIsFetchingGames, function (state, action) {
    return babelHelpers.extends({}, state, { fetchingGames: action.payload });
}), _handleActions), initialState);
}, 840, null, "TalkPresidential/build/reducers/gamesListReducer.js");
__d(/* TalkPresidential/build/screens/navigation/MainNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNavigation = require(684               ); // 684 = react-navigation

var _navigation = require(681           ); // 681 = ./navigation

var _reactRedux = require(342          ); // 342 = react-redux

var MainNavigation = function (_React$Component) {
    babelHelpers.inherits(MainNavigation, _React$Component);

    function MainNavigation() {
        babelHelpers.classCallCheck(this, MainNavigation);
        return babelHelpers.possibleConstructorReturn(this, (MainNavigation.__proto__ || Object.getPrototypeOf(MainNavigation)).apply(this, arguments));
    }

    babelHelpers.createClass(MainNavigation, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_navigation.MainNavigator, { navigation: (0, _reactNavigation.addNavigationHelpers)({
                    dispatch: this.props.dispatch,
                    state: this.props.nav
                }) });
        }
    }]);
    return MainNavigation;
}(_react2.default.Component);

var mapStateToProps = function mapStateToProps(state) {
    return {
        nav: state.nav
    };
};
exports.default = (0, _reactRedux.connect)(mapStateToProps)(MainNavigation);
}, 841, null, "TalkPresidential/build/screens/navigation/MainNavigation.js");
;require(57);
;require(0);